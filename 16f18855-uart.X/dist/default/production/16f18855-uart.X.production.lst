

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 19:18:31 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  001C                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  008C                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008E                     	;# 
    73  008F                     	;# 
    74  0090                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0093                     	;# 
    78  0094                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0110                     	;# 
    95  0110                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011C                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011E                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  018F                     	;# 
   135  0190                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0196                     	;# 
   139  0197                     	;# 
   140  0198                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  020F                     	;# 
   149  020F                     	;# 
   150  0210                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0218                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021D                     	;# 
   172  021E                     	;# 
   173  021F                     	;# 
   174  028C                     	;# 
   175  028C                     	;# 
   176  028D                     	;# 
   177  028D                     	;# 
   178  028E                     	;# 
   179  028F                     	;# 
   180  0290                     	;# 
   181  0290                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0296                     	;# 
   191  0297                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  030C                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  030E                     	;# 
   205  030F                     	;# 
   206  0310                     	;# 
   207  0310                     	;# 
   208  0311                     	;# 
   209  0312                     	;# 
   210  0313                     	;# 
   211  0314                     	;# 
   212  0314                     	;# 
   213  0315                     	;# 
   214  0316                     	;# 
   215  0317                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  031B                     	;# 
   221  031C                     	;# 
   222  031C                     	;# 
   223  031D                     	;# 
   224  031E                     	;# 
   225  031F                     	;# 
   226  038C                     	;# 
   227  038D                     	;# 
   228  038E                     	;# 
   229  0390                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  040C                     	;# 
   233  040D                     	;# 
   234  040E                     	;# 
   235  040F                     	;# 
   236  0410                     	;# 
   237  0411                     	;# 
   238  0416                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  0418                     	;# 
   242  0418                     	;# 
   243  0419                     	;# 
   244  041A                     	;# 
   245  041A                     	;# 
   246  041B                     	;# 
   247  041C                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  041F                     	;# 
   252  048C                     	;# 
   253  048C                     	;# 
   254  048D                     	;# 
   255  048E                     	;# 
   256  048F                     	;# 
   257  048F                     	;# 
   258  0490                     	;# 
   259  0491                     	;# 
   260  0492                     	;# 
   261  0492                     	;# 
   262  0493                     	;# 
   263  0494                     	;# 
   264  0495                     	;# 
   265  0495                     	;# 
   266  0496                     	;# 
   267  0497                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049C                     	;# 
   273  049D                     	;# 
   274  050C                     	;# 
   275  050C                     	;# 
   276  050D                     	;# 
   277  050E                     	;# 
   278  050F                     	;# 
   279  050F                     	;# 
   280  0510                     	;# 
   281  0511                     	;# 
   282  0512                     	;# 
   283  0512                     	;# 
   284  0513                     	;# 
   285  0514                     	;# 
   286  0515                     	;# 
   287  0515                     	;# 
   288  0516                     	;# 
   289  0517                     	;# 
   290  0518                     	;# 
   291  0519                     	;# 
   292  051A                     	;# 
   293  051B                     	;# 
   294  051C                     	;# 
   295  051D                     	;# 
   296  058C                     	;# 
   297  058C                     	;# 
   298  058D                     	;# 
   299  058E                     	;# 
   300  058F                     	;# 
   301  058F                     	;# 
   302  0590                     	;# 
   303  0591                     	;# 
   304  0592                     	;# 
   305  0593                     	;# 
   306  060C                     	;# 
   307  060D                     	;# 
   308  060E                     	;# 
   309  060F                     	;# 
   310  0610                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0614                     	;# 
   315  0616                     	;# 
   316  0617                     	;# 
   317  0618                     	;# 
   318  0619                     	;# 
   319  061A                     	;# 
   320  061B                     	;# 
   321  061C                     	;# 
   322  061D                     	;# 
   323  061E                     	;# 
   324  068C                     	;# 
   325  068D                     	;# 
   326  068E                     	;# 
   327  068F                     	;# 
   328  0690                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  070C                     	;# 
   334  070D                     	;# 
   335  070E                     	;# 
   336  070F                     	;# 
   337  0710                     	;# 
   338  0711                     	;# 
   339  0712                     	;# 
   340  0713                     	;# 
   341  0714                     	;# 
   342  0716                     	;# 
   343  0717                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  071A                     	;# 
   347  071B                     	;# 
   348  071C                     	;# 
   349  071D                     	;# 
   350  071E                     	;# 
   351  0796                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  079B                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080F                     	;# 
   361  0810                     	;# 
   362  0811                     	;# 
   363  0812                     	;# 
   364  0813                     	;# 
   365  0814                     	;# 
   366  081A                     	;# 
   367  081B                     	;# 
   368  081C                     	;# 
   369  081D                     	;# 
   370  081E                     	;# 
   371  081F                     	;# 
   372  088C                     	;# 
   373  088D                     	;# 
   374  088E                     	;# 
   375  088F                     	;# 
   376  0890                     	;# 
   377  0891                     	;# 
   378  0892                     	;# 
   379  0893                     	;# 
   380  0895                     	;# 
   381  0896                     	;# 
   382  0897                     	;# 
   383  0898                     	;# 
   384  0899                     	;# 
   385  089A                     	;# 
   386  089B                     	;# 
   387  090C                     	;# 
   388  090E                     	;# 
   389  090F                     	;# 
   390  091F                     	;# 
   391  091F                     	;# 
   392  098F                     	;# 
   393  098F                     	;# 
   394  0990                     	;# 
   395  0991                     	;# 
   396  0992                     	;# 
   397  0993                     	;# 
   398  0994                     	;# 
   399  0995                     	;# 
   400  0996                     	;# 
   401  0997                     	;# 
   402  0E0F                     	;# 
   403  0E10                     	;# 
   404  0E11                     	;# 
   405  0E12                     	;# 
   406  0E13                     	;# 
   407  0E14                     	;# 
   408  0E15                     	;# 
   409  0E16                     	;# 
   410  0E17                     	;# 
   411  0E18                     	;# 
   412  0E19                     	;# 
   413  0E1A                     	;# 
   414  0E1B                     	;# 
   415  0E1C                     	;# 
   416  0E1D                     	;# 
   417  0E1E                     	;# 
   418  0E1F                     	;# 
   419  0E20                     	;# 
   420  0E21                     	;# 
   421  0E22                     	;# 
   422  0E23                     	;# 
   423  0E24                     	;# 
   424  0E25                     	;# 
   425  0E26                     	;# 
   426  0E27                     	;# 
   427  0E28                     	;# 
   428  0E29                     	;# 
   429  0E2A                     	;# 
   430  0E2B                     	;# 
   431  0E2C                     	;# 
   432  0E2D                     	;# 
   433  0E2E                     	;# 
   434  0E2F                     	;# 
   435  0E30                     	;# 
   436  0E31                     	;# 
   437  0E32                     	;# 
   438  0E33                     	;# 
   439  0E34                     	;# 
   440  0E35                     	;# 
   441  0E36                     	;# 
   442  0E37                     	;# 
   443  0E8F                     	;# 
   444  0E90                     	;# 
   445  0E91                     	;# 
   446  0E92                     	;# 
   447  0E93                     	;# 
   448  0E94                     	;# 
   449  0E95                     	;# 
   450  0E96                     	;# 
   451  0E97                     	;# 
   452  0E9C                     	;# 
   453  0E9D                     	;# 
   454  0E9E                     	;# 
   455  0EA1                     	;# 
   456  0EA2                     	;# 
   457  0EA3                     	;# 
   458  0EA4                     	;# 
   459  0EA5                     	;# 
   460  0EA9                     	;# 
   461  0EAA                     	;# 
   462  0EAB                     	;# 
   463  0EAC                     	;# 
   464  0EB1                     	;# 
   465  0EB2                     	;# 
   466  0EB3                     	;# 
   467  0EB8                     	;# 
   468  0EB9                     	;# 
   469  0EBA                     	;# 
   470  0EBB                     	;# 
   471  0EBC                     	;# 
   472  0EBD                     	;# 
   473  0EBE                     	;# 
   474  0EC3                     	;# 
   475  0EC5                     	;# 
   476  0EC6                     	;# 
   477  0EC7                     	;# 
   478  0EC8                     	;# 
   479  0EC9                     	;# 
   480  0ECA                     	;# 
   481  0ECB                     	;# 
   482  0ECC                     	;# 
   483  0F10                     	;# 
   484  0F11                     	;# 
   485  0F12                     	;# 
   486  0F13                     	;# 
   487  0F14                     	;# 
   488  0F15                     	;# 
   489  0F16                     	;# 
   490  0F17                     	;# 
   491  0F18                     	;# 
   492  0F19                     	;# 
   493  0F1A                     	;# 
   494  0F1B                     	;# 
   495  0F1C                     	;# 
   496  0F1D                     	;# 
   497  0F1E                     	;# 
   498  0F1F                     	;# 
   499  0F20                     	;# 
   500  0F21                     	;# 
   501  0F22                     	;# 
   502  0F23                     	;# 
   503  0F24                     	;# 
   504  0F25                     	;# 
   505  0F26                     	;# 
   506  0F27                     	;# 
   507  0F38                     	;# 
   508  0F39                     	;# 
   509  0F3A                     	;# 
   510  0F3B                     	;# 
   511  0F3C                     	;# 
   512  0F3D                     	;# 
   513  0F3E                     	;# 
   514  0F3F                     	;# 
   515  0F40                     	;# 
   516  0F41                     	;# 
   517  0F43                     	;# 
   518  0F44                     	;# 
   519  0F45                     	;# 
   520  0F46                     	;# 
   521  0F47                     	;# 
   522  0F48                     	;# 
   523  0F49                     	;# 
   524  0F4A                     	;# 
   525  0F4B                     	;# 
   526  0F4C                     	;# 
   527  0F4E                     	;# 
   528  0F4F                     	;# 
   529  0F50                     	;# 
   530  0F51                     	;# 
   531  0F52                     	;# 
   532  0F53                     	;# 
   533  0F54                     	;# 
   534  0F55                     	;# 
   535  0F56                     	;# 
   536  0F57                     	;# 
   537  0F65                     	;# 
   538  0F68                     	;# 
   539  0F69                     	;# 
   540  0F6A                     	;# 
   541  0F6B                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  001C                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  008E                     	;# 
   586  008F                     	;# 
   587  0090                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  0110                     	;# 
   608  0110                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0112                     	;# 
   612  0113                     	;# 
   613  0114                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0119                     	;# 
   620  0119                     	;# 
   621  0119                     	;# 
   622  011A                     	;# 
   623  011A                     	;# 
   624  011A                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011B                     	;# 
   628  011B                     	;# 
   629  011B                     	;# 
   630  011C                     	;# 
   631  011C                     	;# 
   632  011C                     	;# 
   633  011D                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  011E                     	;# 
   637  011E                     	;# 
   638  011E                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  011F                     	;# 
   642  011F                     	;# 
   643  011F                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  018E                     	;# 
   647  018F                     	;# 
   648  0190                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0196                     	;# 
   652  0197                     	;# 
   653  0198                     	;# 
   654  0199                     	;# 
   655  019A                     	;# 
   656  019B                     	;# 
   657  019C                     	;# 
   658  020C                     	;# 
   659  020D                     	;# 
   660  020E                     	;# 
   661  020F                     	;# 
   662  020F                     	;# 
   663  0210                     	;# 
   664  0210                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0214                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0216                     	;# 
   673  0216                     	;# 
   674  0217                     	;# 
   675  0217                     	;# 
   676  0218                     	;# 
   677  0219                     	;# 
   678  021A                     	;# 
   679  021B                     	;# 
   680  021B                     	;# 
   681  021C                     	;# 
   682  021C                     	;# 
   683  021D                     	;# 
   684  021D                     	;# 
   685  021E                     	;# 
   686  021F                     	;# 
   687  028C                     	;# 
   688  028C                     	;# 
   689  028D                     	;# 
   690  028D                     	;# 
   691  028E                     	;# 
   692  028F                     	;# 
   693  0290                     	;# 
   694  0290                     	;# 
   695  0291                     	;# 
   696  0292                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0293                     	;# 
   700  0294                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0296                     	;# 
   704  0297                     	;# 
   705  0298                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  0299                     	;# 
   709  029A                     	;# 
   710  029B                     	;# 
   711  029C                     	;# 
   712  029C                     	;# 
   713  029D                     	;# 
   714  030C                     	;# 
   715  030C                     	;# 
   716  030D                     	;# 
   717  030E                     	;# 
   718  030F                     	;# 
   719  0310                     	;# 
   720  0310                     	;# 
   721  0311                     	;# 
   722  0312                     	;# 
   723  0313                     	;# 
   724  0314                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0316                     	;# 
   728  0317                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031B                     	;# 
   734  031C                     	;# 
   735  031C                     	;# 
   736  031D                     	;# 
   737  031E                     	;# 
   738  031F                     	;# 
   739  038C                     	;# 
   740  038D                     	;# 
   741  038E                     	;# 
   742  0390                     	;# 
   743  0391                     	;# 
   744  0392                     	;# 
   745  040C                     	;# 
   746  040D                     	;# 
   747  040E                     	;# 
   748  040F                     	;# 
   749  0410                     	;# 
   750  0411                     	;# 
   751  0416                     	;# 
   752  0416                     	;# 
   753  0417                     	;# 
   754  0418                     	;# 
   755  0418                     	;# 
   756  0419                     	;# 
   757  041A                     	;# 
   758  041A                     	;# 
   759  041B                     	;# 
   760  041C                     	;# 
   761  041C                     	;# 
   762  041D                     	;# 
   763  041E                     	;# 
   764  041F                     	;# 
   765  048C                     	;# 
   766  048C                     	;# 
   767  048D                     	;# 
   768  048E                     	;# 
   769  048F                     	;# 
   770  048F                     	;# 
   771  0490                     	;# 
   772  0491                     	;# 
   773  0492                     	;# 
   774  0492                     	;# 
   775  0493                     	;# 
   776  0494                     	;# 
   777  0495                     	;# 
   778  0495                     	;# 
   779  0496                     	;# 
   780  0497                     	;# 
   781  0498                     	;# 
   782  0499                     	;# 
   783  049A                     	;# 
   784  049B                     	;# 
   785  049C                     	;# 
   786  049D                     	;# 
   787  050C                     	;# 
   788  050C                     	;# 
   789  050D                     	;# 
   790  050E                     	;# 
   791  050F                     	;# 
   792  050F                     	;# 
   793  0510                     	;# 
   794  0511                     	;# 
   795  0512                     	;# 
   796  0512                     	;# 
   797  0513                     	;# 
   798  0514                     	;# 
   799  0515                     	;# 
   800  0515                     	;# 
   801  0516                     	;# 
   802  0517                     	;# 
   803  0518                     	;# 
   804  0519                     	;# 
   805  051A                     	;# 
   806  051B                     	;# 
   807  051C                     	;# 
   808  051D                     	;# 
   809  058C                     	;# 
   810  058C                     	;# 
   811  058D                     	;# 
   812  058E                     	;# 
   813  058F                     	;# 
   814  058F                     	;# 
   815  0590                     	;# 
   816  0591                     	;# 
   817  0592                     	;# 
   818  0593                     	;# 
   819  060C                     	;# 
   820  060D                     	;# 
   821  060E                     	;# 
   822  060F                     	;# 
   823  0610                     	;# 
   824  0611                     	;# 
   825  0612                     	;# 
   826  0613                     	;# 
   827  0614                     	;# 
   828  0616                     	;# 
   829  0617                     	;# 
   830  0618                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061D                     	;# 
   836  061E                     	;# 
   837  068C                     	;# 
   838  068D                     	;# 
   839  068E                     	;# 
   840  068F                     	;# 
   841  0690                     	;# 
   842  0691                     	;# 
   843  0692                     	;# 
   844  0693                     	;# 
   845  0694                     	;# 
   846  070C                     	;# 
   847  070D                     	;# 
   848  070E                     	;# 
   849  070F                     	;# 
   850  0710                     	;# 
   851  0711                     	;# 
   852  0712                     	;# 
   853  0713                     	;# 
   854  0714                     	;# 
   855  0716                     	;# 
   856  0717                     	;# 
   857  0718                     	;# 
   858  0719                     	;# 
   859  071A                     	;# 
   860  071B                     	;# 
   861  071C                     	;# 
   862  071D                     	;# 
   863  071E                     	;# 
   864  0796                     	;# 
   865  0797                     	;# 
   866  0798                     	;# 
   867  0799                     	;# 
   868  079A                     	;# 
   869  079B                     	;# 
   870  080C                     	;# 
   871  080D                     	;# 
   872  080E                     	;# 
   873  080F                     	;# 
   874  0810                     	;# 
   875  0811                     	;# 
   876  0812                     	;# 
   877  0813                     	;# 
   878  0814                     	;# 
   879  081A                     	;# 
   880  081B                     	;# 
   881  081C                     	;# 
   882  081D                     	;# 
   883  081E                     	;# 
   884  081F                     	;# 
   885  088C                     	;# 
   886  088D                     	;# 
   887  088E                     	;# 
   888  088F                     	;# 
   889  0890                     	;# 
   890  0891                     	;# 
   891  0892                     	;# 
   892  0893                     	;# 
   893  0895                     	;# 
   894  0896                     	;# 
   895  0897                     	;# 
   896  0898                     	;# 
   897  0899                     	;# 
   898  089A                     	;# 
   899  089B                     	;# 
   900  090C                     	;# 
   901  090E                     	;# 
   902  090F                     	;# 
   903  091F                     	;# 
   904  091F                     	;# 
   905  098F                     	;# 
   906  098F                     	;# 
   907  0990                     	;# 
   908  0991                     	;# 
   909  0992                     	;# 
   910  0993                     	;# 
   911  0994                     	;# 
   912  0995                     	;# 
   913  0996                     	;# 
   914  0997                     	;# 
   915  0E0F                     	;# 
   916  0E10                     	;# 
   917  0E11                     	;# 
   918  0E12                     	;# 
   919  0E13                     	;# 
   920  0E14                     	;# 
   921  0E15                     	;# 
   922  0E16                     	;# 
   923  0E17                     	;# 
   924  0E18                     	;# 
   925  0E19                     	;# 
   926  0E1A                     	;# 
   927  0E1B                     	;# 
   928  0E1C                     	;# 
   929  0E1D                     	;# 
   930  0E1E                     	;# 
   931  0E1F                     	;# 
   932  0E20                     	;# 
   933  0E21                     	;# 
   934  0E22                     	;# 
   935  0E23                     	;# 
   936  0E24                     	;# 
   937  0E25                     	;# 
   938  0E26                     	;# 
   939  0E27                     	;# 
   940  0E28                     	;# 
   941  0E29                     	;# 
   942  0E2A                     	;# 
   943  0E2B                     	;# 
   944  0E2C                     	;# 
   945  0E2D                     	;# 
   946  0E2E                     	;# 
   947  0E2F                     	;# 
   948  0E30                     	;# 
   949  0E31                     	;# 
   950  0E32                     	;# 
   951  0E33                     	;# 
   952  0E34                     	;# 
   953  0E35                     	;# 
   954  0E36                     	;# 
   955  0E37                     	;# 
   956  0E8F                     	;# 
   957  0E90                     	;# 
   958  0E91                     	;# 
   959  0E92                     	;# 
   960  0E93                     	;# 
   961  0E94                     	;# 
   962  0E95                     	;# 
   963  0E96                     	;# 
   964  0E97                     	;# 
   965  0E9C                     	;# 
   966  0E9D                     	;# 
   967  0E9E                     	;# 
   968  0EA1                     	;# 
   969  0EA2                     	;# 
   970  0EA3                     	;# 
   971  0EA4                     	;# 
   972  0EA5                     	;# 
   973  0EA9                     	;# 
   974  0EAA                     	;# 
   975  0EAB                     	;# 
   976  0EAC                     	;# 
   977  0EB1                     	;# 
   978  0EB2                     	;# 
   979  0EB3                     	;# 
   980  0EB8                     	;# 
   981  0EB9                     	;# 
   982  0EBA                     	;# 
   983  0EBB                     	;# 
   984  0EBC                     	;# 
   985  0EBD                     	;# 
   986  0EBE                     	;# 
   987  0EC3                     	;# 
   988  0EC5                     	;# 
   989  0EC6                     	;# 
   990  0EC7                     	;# 
   991  0EC8                     	;# 
   992  0EC9                     	;# 
   993  0ECA                     	;# 
   994  0ECB                     	;# 
   995  0ECC                     	;# 
   996  0F10                     	;# 
   997  0F11                     	;# 
   998  0F12                     	;# 
   999  0F13                     	;# 
  1000  0F14                     	;# 
  1001  0F15                     	;# 
  1002  0F16                     	;# 
  1003  0F17                     	;# 
  1004  0F18                     	;# 
  1005  0F19                     	;# 
  1006  0F1A                     	;# 
  1007  0F1B                     	;# 
  1008  0F1C                     	;# 
  1009  0F1D                     	;# 
  1010  0F1E                     	;# 
  1011  0F1F                     	;# 
  1012  0F20                     	;# 
  1013  0F21                     	;# 
  1014  0F22                     	;# 
  1015  0F23                     	;# 
  1016  0F24                     	;# 
  1017  0F25                     	;# 
  1018  0F26                     	;# 
  1019  0F27                     	;# 
  1020  0F38                     	;# 
  1021  0F39                     	;# 
  1022  0F3A                     	;# 
  1023  0F3B                     	;# 
  1024  0F3C                     	;# 
  1025  0F3D                     	;# 
  1026  0F3E                     	;# 
  1027  0F3F                     	;# 
  1028  0F40                     	;# 
  1029  0F41                     	;# 
  1030  0F43                     	;# 
  1031  0F44                     	;# 
  1032  0F45                     	;# 
  1033  0F46                     	;# 
  1034  0F47                     	;# 
  1035  0F48                     	;# 
  1036  0F49                     	;# 
  1037  0F4A                     	;# 
  1038  0F4B                     	;# 
  1039  0F4C                     	;# 
  1040  0F4E                     	;# 
  1041  0F4F                     	;# 
  1042  0F50                     	;# 
  1043  0F51                     	;# 
  1044  0F52                     	;# 
  1045  0F53                     	;# 
  1046  0F54                     	;# 
  1047  0F55                     	;# 
  1048  0F56                     	;# 
  1049  0F57                     	;# 
  1050  0F65                     	;# 
  1051  0F68                     	;# 
  1052  0F69                     	;# 
  1053  0F6A                     	;# 
  1054  0F6B                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066  0000                     	;# 
  1067  0001                     	;# 
  1068  0002                     	;# 
  1069  0003                     	;# 
  1070  0004                     	;# 
  1071  0005                     	;# 
  1072  0006                     	;# 
  1073  0007                     	;# 
  1074  0008                     	;# 
  1075  0009                     	;# 
  1076  000A                     	;# 
  1077  000B                     	;# 
  1078  000C                     	;# 
  1079  000D                     	;# 
  1080  000E                     	;# 
  1081  0010                     	;# 
  1082  0011                     	;# 
  1083  0012                     	;# 
  1084  0013                     	;# 
  1085  0016                     	;# 
  1086  0017                     	;# 
  1087  0018                     	;# 
  1088  001C                     	;# 
  1089  001C                     	;# 
  1090  001D                     	;# 
  1091  001D                     	;# 
  1092  001E                     	;# 
  1093  001F                     	;# 
  1094  008C                     	;# 
  1095  008C                     	;# 
  1096  008D                     	;# 
  1097  008E                     	;# 
  1098  008E                     	;# 
  1099  008F                     	;# 
  1100  0090                     	;# 
  1101  0090                     	;# 
  1102  0091                     	;# 
  1103  0093                     	;# 
  1104  0094                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  010C                     	;# 
  1116  010D                     	;# 
  1117  010E                     	;# 
  1118  010E                     	;# 
  1119  010F                     	;# 
  1120  0110                     	;# 
  1121  0110                     	;# 
  1122  0111                     	;# 
  1123  0112                     	;# 
  1124  0112                     	;# 
  1125  0113                     	;# 
  1126  0114                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0116                     	;# 
  1131  0117                     	;# 
  1132  0119                     	;# 
  1133  0119                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011A                     	;# 
  1137  011A                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011B                     	;# 
  1143  011C                     	;# 
  1144  011C                     	;# 
  1145  011C                     	;# 
  1146  011D                     	;# 
  1147  011D                     	;# 
  1148  011D                     	;# 
  1149  011E                     	;# 
  1150  011E                     	;# 
  1151  011E                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  011F                     	;# 
  1157  018C                     	;# 
  1158  018D                     	;# 
  1159  018E                     	;# 
  1160  018F                     	;# 
  1161  0190                     	;# 
  1162  0191                     	;# 
  1163  0192                     	;# 
  1164  0196                     	;# 
  1165  0197                     	;# 
  1166  0198                     	;# 
  1167  0199                     	;# 
  1168  019A                     	;# 
  1169  019B                     	;# 
  1170  019C                     	;# 
  1171  020C                     	;# 
  1172  020D                     	;# 
  1173  020E                     	;# 
  1174  020F                     	;# 
  1175  020F                     	;# 
  1176  0210                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0216                     	;# 
  1187  0217                     	;# 
  1188  0217                     	;# 
  1189  0218                     	;# 
  1190  0219                     	;# 
  1191  021A                     	;# 
  1192  021B                     	;# 
  1193  021B                     	;# 
  1194  021C                     	;# 
  1195  021C                     	;# 
  1196  021D                     	;# 
  1197  021D                     	;# 
  1198  021E                     	;# 
  1199  021F                     	;# 
  1200  028C                     	;# 
  1201  028C                     	;# 
  1202  028D                     	;# 
  1203  028D                     	;# 
  1204  028E                     	;# 
  1205  028F                     	;# 
  1206  0290                     	;# 
  1207  0290                     	;# 
  1208  0291                     	;# 
  1209  0292                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0293                     	;# 
  1213  0294                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0296                     	;# 
  1217  0297                     	;# 
  1218  0298                     	;# 
  1219  0298                     	;# 
  1220  0299                     	;# 
  1221  0299                     	;# 
  1222  029A                     	;# 
  1223  029B                     	;# 
  1224  029C                     	;# 
  1225  029C                     	;# 
  1226  029D                     	;# 
  1227  030C                     	;# 
  1228  030C                     	;# 
  1229  030D                     	;# 
  1230  030E                     	;# 
  1231  030F                     	;# 
  1232  0310                     	;# 
  1233  0310                     	;# 
  1234  0311                     	;# 
  1235  0312                     	;# 
  1236  0313                     	;# 
  1237  0314                     	;# 
  1238  0314                     	;# 
  1239  0315                     	;# 
  1240  0316                     	;# 
  1241  0317                     	;# 
  1242  0318                     	;# 
  1243  0318                     	;# 
  1244  0319                     	;# 
  1245  031A                     	;# 
  1246  031B                     	;# 
  1247  031C                     	;# 
  1248  031C                     	;# 
  1249  031D                     	;# 
  1250  031E                     	;# 
  1251  031F                     	;# 
  1252  038C                     	;# 
  1253  038D                     	;# 
  1254  038E                     	;# 
  1255  0390                     	;# 
  1256  0391                     	;# 
  1257  0392                     	;# 
  1258  040C                     	;# 
  1259  040D                     	;# 
  1260  040E                     	;# 
  1261  040F                     	;# 
  1262  0410                     	;# 
  1263  0411                     	;# 
  1264  0416                     	;# 
  1265  0416                     	;# 
  1266  0417                     	;# 
  1267  0418                     	;# 
  1268  0418                     	;# 
  1269  0419                     	;# 
  1270  041A                     	;# 
  1271  041A                     	;# 
  1272  041B                     	;# 
  1273  041C                     	;# 
  1274  041C                     	;# 
  1275  041D                     	;# 
  1276  041E                     	;# 
  1277  041F                     	;# 
  1278  048C                     	;# 
  1279  048C                     	;# 
  1280  048D                     	;# 
  1281  048E                     	;# 
  1282  048F                     	;# 
  1283  048F                     	;# 
  1284  0490                     	;# 
  1285  0491                     	;# 
  1286  0492                     	;# 
  1287  0492                     	;# 
  1288  0493                     	;# 
  1289  0494                     	;# 
  1290  0495                     	;# 
  1291  0495                     	;# 
  1292  0496                     	;# 
  1293  0497                     	;# 
  1294  0498                     	;# 
  1295  0499                     	;# 
  1296  049A                     	;# 
  1297  049B                     	;# 
  1298  049C                     	;# 
  1299  049D                     	;# 
  1300  050C                     	;# 
  1301  050C                     	;# 
  1302  050D                     	;# 
  1303  050E                     	;# 
  1304  050F                     	;# 
  1305  050F                     	;# 
  1306  0510                     	;# 
  1307  0511                     	;# 
  1308  0512                     	;# 
  1309  0512                     	;# 
  1310  0513                     	;# 
  1311  0514                     	;# 
  1312  0515                     	;# 
  1313  0515                     	;# 
  1314  0516                     	;# 
  1315  0517                     	;# 
  1316  0518                     	;# 
  1317  0519                     	;# 
  1318  051A                     	;# 
  1319  051B                     	;# 
  1320  051C                     	;# 
  1321  051D                     	;# 
  1322  058C                     	;# 
  1323  058C                     	;# 
  1324  058D                     	;# 
  1325  058E                     	;# 
  1326  058F                     	;# 
  1327  058F                     	;# 
  1328  0590                     	;# 
  1329  0591                     	;# 
  1330  0592                     	;# 
  1331  0593                     	;# 
  1332  060C                     	;# 
  1333  060D                     	;# 
  1334  060E                     	;# 
  1335  060F                     	;# 
  1336  0610                     	;# 
  1337  0611                     	;# 
  1338  0612                     	;# 
  1339  0613                     	;# 
  1340  0614                     	;# 
  1341  0616                     	;# 
  1342  0617                     	;# 
  1343  0618                     	;# 
  1344  0619                     	;# 
  1345  061A                     	;# 
  1346  061B                     	;# 
  1347  061C                     	;# 
  1348  061D                     	;# 
  1349  061E                     	;# 
  1350  068C                     	;# 
  1351  068D                     	;# 
  1352  068E                     	;# 
  1353  068F                     	;# 
  1354  0690                     	;# 
  1355  0691                     	;# 
  1356  0692                     	;# 
  1357  0693                     	;# 
  1358  0694                     	;# 
  1359  070C                     	;# 
  1360  070D                     	;# 
  1361  070E                     	;# 
  1362  070F                     	;# 
  1363  0710                     	;# 
  1364  0711                     	;# 
  1365  0712                     	;# 
  1366  0713                     	;# 
  1367  0714                     	;# 
  1368  0716                     	;# 
  1369  0717                     	;# 
  1370  0718                     	;# 
  1371  0719                     	;# 
  1372  071A                     	;# 
  1373  071B                     	;# 
  1374  071C                     	;# 
  1375  071D                     	;# 
  1376  071E                     	;# 
  1377  0796                     	;# 
  1378  0797                     	;# 
  1379  0798                     	;# 
  1380  0799                     	;# 
  1381  079A                     	;# 
  1382  079B                     	;# 
  1383  080C                     	;# 
  1384  080D                     	;# 
  1385  080E                     	;# 
  1386  080F                     	;# 
  1387  0810                     	;# 
  1388  0811                     	;# 
  1389  0812                     	;# 
  1390  0813                     	;# 
  1391  0814                     	;# 
  1392  081A                     	;# 
  1393  081B                     	;# 
  1394  081C                     	;# 
  1395  081D                     	;# 
  1396  081E                     	;# 
  1397  081F                     	;# 
  1398  088C                     	;# 
  1399  088D                     	;# 
  1400  088E                     	;# 
  1401  088F                     	;# 
  1402  0890                     	;# 
  1403  0891                     	;# 
  1404  0892                     	;# 
  1405  0893                     	;# 
  1406  0895                     	;# 
  1407  0896                     	;# 
  1408  0897                     	;# 
  1409  0898                     	;# 
  1410  0899                     	;# 
  1411  089A                     	;# 
  1412  089B                     	;# 
  1413  090C                     	;# 
  1414  090E                     	;# 
  1415  090F                     	;# 
  1416  091F                     	;# 
  1417  091F                     	;# 
  1418  098F                     	;# 
  1419  098F                     	;# 
  1420  0990                     	;# 
  1421  0991                     	;# 
  1422  0992                     	;# 
  1423  0993                     	;# 
  1424  0994                     	;# 
  1425  0995                     	;# 
  1426  0996                     	;# 
  1427  0997                     	;# 
  1428  0E0F                     	;# 
  1429  0E10                     	;# 
  1430  0E11                     	;# 
  1431  0E12                     	;# 
  1432  0E13                     	;# 
  1433  0E14                     	;# 
  1434  0E15                     	;# 
  1435  0E16                     	;# 
  1436  0E17                     	;# 
  1437  0E18                     	;# 
  1438  0E19                     	;# 
  1439  0E1A                     	;# 
  1440  0E1B                     	;# 
  1441  0E1C                     	;# 
  1442  0E1D                     	;# 
  1443  0E1E                     	;# 
  1444  0E1F                     	;# 
  1445  0E20                     	;# 
  1446  0E21                     	;# 
  1447  0E22                     	;# 
  1448  0E23                     	;# 
  1449  0E24                     	;# 
  1450  0E25                     	;# 
  1451  0E26                     	;# 
  1452  0E27                     	;# 
  1453  0E28                     	;# 
  1454  0E29                     	;# 
  1455  0E2A                     	;# 
  1456  0E2B                     	;# 
  1457  0E2C                     	;# 
  1458  0E2D                     	;# 
  1459  0E2E                     	;# 
  1460  0E2F                     	;# 
  1461  0E30                     	;# 
  1462  0E31                     	;# 
  1463  0E32                     	;# 
  1464  0E33                     	;# 
  1465  0E34                     	;# 
  1466  0E35                     	;# 
  1467  0E36                     	;# 
  1468  0E37                     	;# 
  1469  0E8F                     	;# 
  1470  0E90                     	;# 
  1471  0E91                     	;# 
  1472  0E92                     	;# 
  1473  0E93                     	;# 
  1474  0E94                     	;# 
  1475  0E95                     	;# 
  1476  0E96                     	;# 
  1477  0E97                     	;# 
  1478  0E9C                     	;# 
  1479  0E9D                     	;# 
  1480  0E9E                     	;# 
  1481  0EA1                     	;# 
  1482  0EA2                     	;# 
  1483  0EA3                     	;# 
  1484  0EA4                     	;# 
  1485  0EA5                     	;# 
  1486  0EA9                     	;# 
  1487  0EAA                     	;# 
  1488  0EAB                     	;# 
  1489  0EAC                     	;# 
  1490  0EB1                     	;# 
  1491  0EB2                     	;# 
  1492  0EB3                     	;# 
  1493  0EB8                     	;# 
  1494  0EB9                     	;# 
  1495  0EBA                     	;# 
  1496  0EBB                     	;# 
  1497  0EBC                     	;# 
  1498  0EBD                     	;# 
  1499  0EBE                     	;# 
  1500  0EC3                     	;# 
  1501  0EC5                     	;# 
  1502  0EC6                     	;# 
  1503  0EC7                     	;# 
  1504  0EC8                     	;# 
  1505  0EC9                     	;# 
  1506  0ECA                     	;# 
  1507  0ECB                     	;# 
  1508  0ECC                     	;# 
  1509  0F10                     	;# 
  1510  0F11                     	;# 
  1511  0F12                     	;# 
  1512  0F13                     	;# 
  1513  0F14                     	;# 
  1514  0F15                     	;# 
  1515  0F16                     	;# 
  1516  0F17                     	;# 
  1517  0F18                     	;# 
  1518  0F19                     	;# 
  1519  0F1A                     	;# 
  1520  0F1B                     	;# 
  1521  0F1C                     	;# 
  1522  0F1D                     	;# 
  1523  0F1E                     	;# 
  1524  0F1F                     	;# 
  1525  0F20                     	;# 
  1526  0F21                     	;# 
  1527  0F22                     	;# 
  1528  0F23                     	;# 
  1529  0F24                     	;# 
  1530  0F25                     	;# 
  1531  0F26                     	;# 
  1532  0F27                     	;# 
  1533  0F38                     	;# 
  1534  0F39                     	;# 
  1535  0F3A                     	;# 
  1536  0F3B                     	;# 
  1537  0F3C                     	;# 
  1538  0F3D                     	;# 
  1539  0F3E                     	;# 
  1540  0F3F                     	;# 
  1541  0F40                     	;# 
  1542  0F41                     	;# 
  1543  0F43                     	;# 
  1544  0F44                     	;# 
  1545  0F45                     	;# 
  1546  0F46                     	;# 
  1547  0F47                     	;# 
  1548  0F48                     	;# 
  1549  0F49                     	;# 
  1550  0F4A                     	;# 
  1551  0F4B                     	;# 
  1552  0F4C                     	;# 
  1553  0F4E                     	;# 
  1554  0F4F                     	;# 
  1555  0F50                     	;# 
  1556  0F51                     	;# 
  1557  0F52                     	;# 
  1558  0F53                     	;# 
  1559  0F54                     	;# 
  1560  0F55                     	;# 
  1561  0F56                     	;# 
  1562  0F57                     	;# 
  1563  0F65                     	;# 
  1564  0F68                     	;# 
  1565  0F69                     	;# 
  1566  0F6A                     	;# 
  1567  0F6B                     	;# 
  1568  0FE4                     	;# 
  1569  0FE5                     	;# 
  1570  0FE6                     	;# 
  1571  0FE7                     	;# 
  1572  0FE8                     	;# 
  1573  0FE9                     	;# 
  1574  0FEA                     	;# 
  1575  0FEB                     	;# 
  1576  0FED                     	;# 
  1577  0FEE                     	;# 
  1578  0FEF                     	;# 
  1579  0000                     	;# 
  1580  0001                     	;# 
  1581  0002                     	;# 
  1582  0003                     	;# 
  1583  0004                     	;# 
  1584  0005                     	;# 
  1585  0006                     	;# 
  1586  0007                     	;# 
  1587  0008                     	;# 
  1588  0009                     	;# 
  1589  000A                     	;# 
  1590  000B                     	;# 
  1591  000C                     	;# 
  1592  000D                     	;# 
  1593  000E                     	;# 
  1594  0010                     	;# 
  1595  0011                     	;# 
  1596  0012                     	;# 
  1597  0013                     	;# 
  1598  0016                     	;# 
  1599  0017                     	;# 
  1600  0018                     	;# 
  1601  001C                     	;# 
  1602  001C                     	;# 
  1603  001D                     	;# 
  1604  001D                     	;# 
  1605  001E                     	;# 
  1606  001F                     	;# 
  1607  008C                     	;# 
  1608  008C                     	;# 
  1609  008D                     	;# 
  1610  008E                     	;# 
  1611  008E                     	;# 
  1612  008F                     	;# 
  1613  0090                     	;# 
  1614  0090                     	;# 
  1615  0091                     	;# 
  1616  0093                     	;# 
  1617  0094                     	;# 
  1618  0095                     	;# 
  1619  0096                     	;# 
  1620  0097                     	;# 
  1621  0098                     	;# 
  1622  0099                     	;# 
  1623  009A                     	;# 
  1624  009B                     	;# 
  1625  009C                     	;# 
  1626  009D                     	;# 
  1627  009E                     	;# 
  1628  010C                     	;# 
  1629  010D                     	;# 
  1630  010E                     	;# 
  1631  010E                     	;# 
  1632  010F                     	;# 
  1633  0110                     	;# 
  1634  0110                     	;# 
  1635  0111                     	;# 
  1636  0112                     	;# 
  1637  0112                     	;# 
  1638  0113                     	;# 
  1639  0114                     	;# 
  1640  0114                     	;# 
  1641  0115                     	;# 
  1642  0116                     	;# 
  1643  0116                     	;# 
  1644  0117                     	;# 
  1645  0119                     	;# 
  1646  0119                     	;# 
  1647  0119                     	;# 
  1648  011A                     	;# 
  1649  011A                     	;# 
  1650  011A                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011B                     	;# 
  1654  011B                     	;# 
  1655  011B                     	;# 
  1656  011C                     	;# 
  1657  011C                     	;# 
  1658  011C                     	;# 
  1659  011D                     	;# 
  1660  011D                     	;# 
  1661  011D                     	;# 
  1662  011E                     	;# 
  1663  011E                     	;# 
  1664  011E                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  011F                     	;# 
  1668  011F                     	;# 
  1669  011F                     	;# 
  1670  018C                     	;# 
  1671  018D                     	;# 
  1672  018E                     	;# 
  1673  018F                     	;# 
  1674  0190                     	;# 
  1675  0191                     	;# 
  1676  0192                     	;# 
  1677  0196                     	;# 
  1678  0197                     	;# 
  1679  0198                     	;# 
  1680  0199                     	;# 
  1681  019A                     	;# 
  1682  019B                     	;# 
  1683  019C                     	;# 
  1684  020C                     	;# 
  1685  020D                     	;# 
  1686  020E                     	;# 
  1687  020F                     	;# 
  1688  020F                     	;# 
  1689  0210                     	;# 
  1690  0210                     	;# 
  1691  0211                     	;# 
  1692  0211                     	;# 
  1693  0212                     	;# 
  1694  0213                     	;# 
  1695  0214                     	;# 
  1696  0215                     	;# 
  1697  0215                     	;# 
  1698  0216                     	;# 
  1699  0216                     	;# 
  1700  0217                     	;# 
  1701  0217                     	;# 
  1702  0218                     	;# 
  1703  0219                     	;# 
  1704  021A                     	;# 
  1705  021B                     	;# 
  1706  021B                     	;# 
  1707  021C                     	;# 
  1708  021C                     	;# 
  1709  021D                     	;# 
  1710  021D                     	;# 
  1711  021E                     	;# 
  1712  021F                     	;# 
  1713  028C                     	;# 
  1714  028C                     	;# 
  1715  028D                     	;# 
  1716  028D                     	;# 
  1717  028E                     	;# 
  1718  028F                     	;# 
  1719  0290                     	;# 
  1720  0290                     	;# 
  1721  0291                     	;# 
  1722  0292                     	;# 
  1723  0292                     	;# 
  1724  0293                     	;# 
  1725  0293                     	;# 
  1726  0294                     	;# 
  1727  0295                     	;# 
  1728  0296                     	;# 
  1729  0296                     	;# 
  1730  0297                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  0299                     	;# 
  1735  029A                     	;# 
  1736  029B                     	;# 
  1737  029C                     	;# 
  1738  029C                     	;# 
  1739  029D                     	;# 
  1740  030C                     	;# 
  1741  030C                     	;# 
  1742  030D                     	;# 
  1743  030E                     	;# 
  1744  030F                     	;# 
  1745  0310                     	;# 
  1746  0310                     	;# 
  1747  0311                     	;# 
  1748  0312                     	;# 
  1749  0313                     	;# 
  1750  0314                     	;# 
  1751  0314                     	;# 
  1752  0315                     	;# 
  1753  0316                     	;# 
  1754  0317                     	;# 
  1755  0318                     	;# 
  1756  0318                     	;# 
  1757  0319                     	;# 
  1758  031A                     	;# 
  1759  031B                     	;# 
  1760  031C                     	;# 
  1761  031C                     	;# 
  1762  031D                     	;# 
  1763  031E                     	;# 
  1764  031F                     	;# 
  1765  038C                     	;# 
  1766  038D                     	;# 
  1767  038E                     	;# 
  1768  0390                     	;# 
  1769  0391                     	;# 
  1770  0392                     	;# 
  1771  040C                     	;# 
  1772  040D                     	;# 
  1773  040E                     	;# 
  1774  040F                     	;# 
  1775  0410                     	;# 
  1776  0411                     	;# 
  1777  0416                     	;# 
  1778  0416                     	;# 
  1779  0417                     	;# 
  1780  0418                     	;# 
  1781  0418                     	;# 
  1782  0419                     	;# 
  1783  041A                     	;# 
  1784  041A                     	;# 
  1785  041B                     	;# 
  1786  041C                     	;# 
  1787  041C                     	;# 
  1788  041D                     	;# 
  1789  041E                     	;# 
  1790  041F                     	;# 
  1791  048C                     	;# 
  1792  048C                     	;# 
  1793  048D                     	;# 
  1794  048E                     	;# 
  1795  048F                     	;# 
  1796  048F                     	;# 
  1797  0490                     	;# 
  1798  0491                     	;# 
  1799  0492                     	;# 
  1800  0492                     	;# 
  1801  0493                     	;# 
  1802  0494                     	;# 
  1803  0495                     	;# 
  1804  0495                     	;# 
  1805  0496                     	;# 
  1806  0497                     	;# 
  1807  0498                     	;# 
  1808  0499                     	;# 
  1809  049A                     	;# 
  1810  049B                     	;# 
  1811  049C                     	;# 
  1812  049D                     	;# 
  1813  050C                     	;# 
  1814  050C                     	;# 
  1815  050D                     	;# 
  1816  050E                     	;# 
  1817  050F                     	;# 
  1818  050F                     	;# 
  1819  0510                     	;# 
  1820  0511                     	;# 
  1821  0512                     	;# 
  1822  0512                     	;# 
  1823  0513                     	;# 
  1824  0514                     	;# 
  1825  0515                     	;# 
  1826  0515                     	;# 
  1827  0516                     	;# 
  1828  0517                     	;# 
  1829  0518                     	;# 
  1830  0519                     	;# 
  1831  051A                     	;# 
  1832  051B                     	;# 
  1833  051C                     	;# 
  1834  051D                     	;# 
  1835  058C                     	;# 
  1836  058C                     	;# 
  1837  058D                     	;# 
  1838  058E                     	;# 
  1839  058F                     	;# 
  1840  058F                     	;# 
  1841  0590                     	;# 
  1842  0591                     	;# 
  1843  0592                     	;# 
  1844  0593                     	;# 
  1845  060C                     	;# 
  1846  060D                     	;# 
  1847  060E                     	;# 
  1848  060F                     	;# 
  1849  0610                     	;# 
  1850  0611                     	;# 
  1851  0612                     	;# 
  1852  0613                     	;# 
  1853  0614                     	;# 
  1854  0616                     	;# 
  1855  0617                     	;# 
  1856  0618                     	;# 
  1857  0619                     	;# 
  1858  061A                     	;# 
  1859  061B                     	;# 
  1860  061C                     	;# 
  1861  061D                     	;# 
  1862  061E                     	;# 
  1863  068C                     	;# 
  1864  068D                     	;# 
  1865  068E                     	;# 
  1866  068F                     	;# 
  1867  0690                     	;# 
  1868  0691                     	;# 
  1869  0692                     	;# 
  1870  0693                     	;# 
  1871  0694                     	;# 
  1872  070C                     	;# 
  1873  070D                     	;# 
  1874  070E                     	;# 
  1875  070F                     	;# 
  1876  0710                     	;# 
  1877  0711                     	;# 
  1878  0712                     	;# 
  1879  0713                     	;# 
  1880  0714                     	;# 
  1881  0716                     	;# 
  1882  0717                     	;# 
  1883  0718                     	;# 
  1884  0719                     	;# 
  1885  071A                     	;# 
  1886  071B                     	;# 
  1887  071C                     	;# 
  1888  071D                     	;# 
  1889  071E                     	;# 
  1890  0796                     	;# 
  1891  0797                     	;# 
  1892  0798                     	;# 
  1893  0799                     	;# 
  1894  079A                     	;# 
  1895  079B                     	;# 
  1896  080C                     	;# 
  1897  080D                     	;# 
  1898  080E                     	;# 
  1899  080F                     	;# 
  1900  0810                     	;# 
  1901  0811                     	;# 
  1902  0812                     	;# 
  1903  0813                     	;# 
  1904  0814                     	;# 
  1905  081A                     	;# 
  1906  081B                     	;# 
  1907  081C                     	;# 
  1908  081D                     	;# 
  1909  081E                     	;# 
  1910  081F                     	;# 
  1911  088C                     	;# 
  1912  088D                     	;# 
  1913  088E                     	;# 
  1914  088F                     	;# 
  1915  0890                     	;# 
  1916  0891                     	;# 
  1917  0892                     	;# 
  1918  0893                     	;# 
  1919  0895                     	;# 
  1920  0896                     	;# 
  1921  0897                     	;# 
  1922  0898                     	;# 
  1923  0899                     	;# 
  1924  089A                     	;# 
  1925  089B                     	;# 
  1926  090C                     	;# 
  1927  090E                     	;# 
  1928  090F                     	;# 
  1929  091F                     	;# 
  1930  091F                     	;# 
  1931  098F                     	;# 
  1932  098F                     	;# 
  1933  0990                     	;# 
  1934  0991                     	;# 
  1935  0992                     	;# 
  1936  0993                     	;# 
  1937  0994                     	;# 
  1938  0995                     	;# 
  1939  0996                     	;# 
  1940  0997                     	;# 
  1941  0E0F                     	;# 
  1942  0E10                     	;# 
  1943  0E11                     	;# 
  1944  0E12                     	;# 
  1945  0E13                     	;# 
  1946  0E14                     	;# 
  1947  0E15                     	;# 
  1948  0E16                     	;# 
  1949  0E17                     	;# 
  1950  0E18                     	;# 
  1951  0E19                     	;# 
  1952  0E1A                     	;# 
  1953  0E1B                     	;# 
  1954  0E1C                     	;# 
  1955  0E1D                     	;# 
  1956  0E1E                     	;# 
  1957  0E1F                     	;# 
  1958  0E20                     	;# 
  1959  0E21                     	;# 
  1960  0E22                     	;# 
  1961  0E23                     	;# 
  1962  0E24                     	;# 
  1963  0E25                     	;# 
  1964  0E26                     	;# 
  1965  0E27                     	;# 
  1966  0E28                     	;# 
  1967  0E29                     	;# 
  1968  0E2A                     	;# 
  1969  0E2B                     	;# 
  1970  0E2C                     	;# 
  1971  0E2D                     	;# 
  1972  0E2E                     	;# 
  1973  0E2F                     	;# 
  1974  0E30                     	;# 
  1975  0E31                     	;# 
  1976  0E32                     	;# 
  1977  0E33                     	;# 
  1978  0E34                     	;# 
  1979  0E35                     	;# 
  1980  0E36                     	;# 
  1981  0E37                     	;# 
  1982  0E8F                     	;# 
  1983  0E90                     	;# 
  1984  0E91                     	;# 
  1985  0E92                     	;# 
  1986  0E93                     	;# 
  1987  0E94                     	;# 
  1988  0E95                     	;# 
  1989  0E96                     	;# 
  1990  0E97                     	;# 
  1991  0E9C                     	;# 
  1992  0E9D                     	;# 
  1993  0E9E                     	;# 
  1994  0EA1                     	;# 
  1995  0EA2                     	;# 
  1996  0EA3                     	;# 
  1997  0EA4                     	;# 
  1998  0EA5                     	;# 
  1999  0EA9                     	;# 
  2000  0EAA                     	;# 
  2001  0EAB                     	;# 
  2002  0EAC                     	;# 
  2003  0EB1                     	;# 
  2004  0EB2                     	;# 
  2005  0EB3                     	;# 
  2006  0EB8                     	;# 
  2007  0EB9                     	;# 
  2008  0EBA                     	;# 
  2009  0EBB                     	;# 
  2010  0EBC                     	;# 
  2011  0EBD                     	;# 
  2012  0EBE                     	;# 
  2013  0EC3                     	;# 
  2014  0EC5                     	;# 
  2015  0EC6                     	;# 
  2016  0EC7                     	;# 
  2017  0EC8                     	;# 
  2018  0EC9                     	;# 
  2019  0ECA                     	;# 
  2020  0ECB                     	;# 
  2021  0ECC                     	;# 
  2022  0F10                     	;# 
  2023  0F11                     	;# 
  2024  0F12                     	;# 
  2025  0F13                     	;# 
  2026  0F14                     	;# 
  2027  0F15                     	;# 
  2028  0F16                     	;# 
  2029  0F17                     	;# 
  2030  0F18                     	;# 
  2031  0F19                     	;# 
  2032  0F1A                     	;# 
  2033  0F1B                     	;# 
  2034  0F1C                     	;# 
  2035  0F1D                     	;# 
  2036  0F1E                     	;# 
  2037  0F1F                     	;# 
  2038  0F20                     	;# 
  2039  0F21                     	;# 
  2040  0F22                     	;# 
  2041  0F23                     	;# 
  2042  0F24                     	;# 
  2043  0F25                     	;# 
  2044  0F26                     	;# 
  2045  0F27                     	;# 
  2046  0F38                     	;# 
  2047  0F39                     	;# 
  2048  0F3A                     	;# 
  2049  0F3B                     	;# 
  2050  0F3C                     	;# 
  2051  0F3D                     	;# 
  2052  0F3E                     	;# 
  2053  0F3F                     	;# 
  2054  0F40                     	;# 
  2055  0F41                     	;# 
  2056  0F43                     	;# 
  2057  0F44                     	;# 
  2058  0F45                     	;# 
  2059  0F46                     	;# 
  2060  0F47                     	;# 
  2061  0F48                     	;# 
  2062  0F49                     	;# 
  2063  0F4A                     	;# 
  2064  0F4B                     	;# 
  2065  0F4C                     	;# 
  2066  0F4E                     	;# 
  2067  0F4F                     	;# 
  2068  0F50                     	;# 
  2069  0F51                     	;# 
  2070  0F52                     	;# 
  2071  0F53                     	;# 
  2072  0F54                     	;# 
  2073  0F55                     	;# 
  2074  0F56                     	;# 
  2075  0F57                     	;# 
  2076  0F65                     	;# 
  2077  0F68                     	;# 
  2078  0F69                     	;# 
  2079  0F6A                     	;# 
  2080  0F6B                     	;# 
  2081  0FE4                     	;# 
  2082  0FE5                     	;# 
  2083  0FE6                     	;# 
  2084  0FE7                     	;# 
  2085  0FE8                     	;# 
  2086  0FE9                     	;# 
  2087  0FEA                     	;# 
  2088  0FEB                     	;# 
  2089  0FED                     	;# 
  2090  0FEE                     	;# 
  2091  0FEF                     	;# 
  2092  0000                     	;# 
  2093  0001                     	;# 
  2094  0002                     	;# 
  2095  0003                     	;# 
  2096  0004                     	;# 
  2097  0005                     	;# 
  2098  0006                     	;# 
  2099  0007                     	;# 
  2100  0008                     	;# 
  2101  0009                     	;# 
  2102  000A                     	;# 
  2103  000B                     	;# 
  2104  000C                     	;# 
  2105  000D                     	;# 
  2106  000E                     	;# 
  2107  0010                     	;# 
  2108  0011                     	;# 
  2109  0012                     	;# 
  2110  0013                     	;# 
  2111  0016                     	;# 
  2112  0017                     	;# 
  2113  0018                     	;# 
  2114  001C                     	;# 
  2115  001C                     	;# 
  2116  001D                     	;# 
  2117  001D                     	;# 
  2118  001E                     	;# 
  2119  001F                     	;# 
  2120  008C                     	;# 
  2121  008C                     	;# 
  2122  008D                     	;# 
  2123  008E                     	;# 
  2124  008E                     	;# 
  2125  008F                     	;# 
  2126  0090                     	;# 
  2127  0090                     	;# 
  2128  0091                     	;# 
  2129  0093                     	;# 
  2130  0094                     	;# 
  2131  0095                     	;# 
  2132  0096                     	;# 
  2133  0097                     	;# 
  2134  0098                     	;# 
  2135  0099                     	;# 
  2136  009A                     	;# 
  2137  009B                     	;# 
  2138  009C                     	;# 
  2139  009D                     	;# 
  2140  009E                     	;# 
  2141  010C                     	;# 
  2142  010D                     	;# 
  2143  010E                     	;# 
  2144  010E                     	;# 
  2145  010F                     	;# 
  2146  0110                     	;# 
  2147  0110                     	;# 
  2148  0111                     	;# 
  2149  0112                     	;# 
  2150  0112                     	;# 
  2151  0113                     	;# 
  2152  0114                     	;# 
  2153  0114                     	;# 
  2154  0115                     	;# 
  2155  0116                     	;# 
  2156  0116                     	;# 
  2157  0117                     	;# 
  2158  0119                     	;# 
  2159  0119                     	;# 
  2160  0119                     	;# 
  2161  011A                     	;# 
  2162  011A                     	;# 
  2163  011A                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011B                     	;# 
  2169  011C                     	;# 
  2170  011C                     	;# 
  2171  011C                     	;# 
  2172  011D                     	;# 
  2173  011D                     	;# 
  2174  011D                     	;# 
  2175  011E                     	;# 
  2176  011E                     	;# 
  2177  011E                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  011F                     	;# 
  2183  018C                     	;# 
  2184  018D                     	;# 
  2185  018E                     	;# 
  2186  018F                     	;# 
  2187  0190                     	;# 
  2188  0191                     	;# 
  2189  0192                     	;# 
  2190  0196                     	;# 
  2191  0197                     	;# 
  2192  0198                     	;# 
  2193  0199                     	;# 
  2194  019A                     	;# 
  2195  019B                     	;# 
  2196  019C                     	;# 
  2197  020C                     	;# 
  2198  020D                     	;# 
  2199  020E                     	;# 
  2200  020F                     	;# 
  2201  020F                     	;# 
  2202  0210                     	;# 
  2203  0210                     	;# 
  2204  0211                     	;# 
  2205  0211                     	;# 
  2206  0212                     	;# 
  2207  0213                     	;# 
  2208  0214                     	;# 
  2209  0215                     	;# 
  2210  0215                     	;# 
  2211  0216                     	;# 
  2212  0216                     	;# 
  2213  0217                     	;# 
  2214  0217                     	;# 
  2215  0218                     	;# 
  2216  0219                     	;# 
  2217  021A                     	;# 
  2218  021B                     	;# 
  2219  021B                     	;# 
  2220  021C                     	;# 
  2221  021C                     	;# 
  2222  021D                     	;# 
  2223  021D                     	;# 
  2224  021E                     	;# 
  2225  021F                     	;# 
  2226  028C                     	;# 
  2227  028C                     	;# 
  2228  028D                     	;# 
  2229  028D                     	;# 
  2230  028E                     	;# 
  2231  028F                     	;# 
  2232  0290                     	;# 
  2233  0290                     	;# 
  2234  0291                     	;# 
  2235  0292                     	;# 
  2236  0292                     	;# 
  2237  0293                     	;# 
  2238  0293                     	;# 
  2239  0294                     	;# 
  2240  0295                     	;# 
  2241  0296                     	;# 
  2242  0296                     	;# 
  2243  0297                     	;# 
  2244  0298                     	;# 
  2245  0298                     	;# 
  2246  0299                     	;# 
  2247  0299                     	;# 
  2248  029A                     	;# 
  2249  029B                     	;# 
  2250  029C                     	;# 
  2251  029C                     	;# 
  2252  029D                     	;# 
  2253  030C                     	;# 
  2254  030C                     	;# 
  2255  030D                     	;# 
  2256  030E                     	;# 
  2257  030F                     	;# 
  2258  0310                     	;# 
  2259  0310                     	;# 
  2260  0311                     	;# 
  2261  0312                     	;# 
  2262  0313                     	;# 
  2263  0314                     	;# 
  2264  0314                     	;# 
  2265  0315                     	;# 
  2266  0316                     	;# 
  2267  0317                     	;# 
  2268  0318                     	;# 
  2269  0318                     	;# 
  2270  0319                     	;# 
  2271  031A                     	;# 
  2272  031B                     	;# 
  2273  031C                     	;# 
  2274  031C                     	;# 
  2275  031D                     	;# 
  2276  031E                     	;# 
  2277  031F                     	;# 
  2278  038C                     	;# 
  2279  038D                     	;# 
  2280  038E                     	;# 
  2281  0390                     	;# 
  2282  0391                     	;# 
  2283  0392                     	;# 
  2284  040C                     	;# 
  2285  040D                     	;# 
  2286  040E                     	;# 
  2287  040F                     	;# 
  2288  0410                     	;# 
  2289  0411                     	;# 
  2290  0416                     	;# 
  2291  0416                     	;# 
  2292  0417                     	;# 
  2293  0418                     	;# 
  2294  0418                     	;# 
  2295  0419                     	;# 
  2296  041A                     	;# 
  2297  041A                     	;# 
  2298  041B                     	;# 
  2299  041C                     	;# 
  2300  041C                     	;# 
  2301  041D                     	;# 
  2302  041E                     	;# 
  2303  041F                     	;# 
  2304  048C                     	;# 
  2305  048C                     	;# 
  2306  048D                     	;# 
  2307  048E                     	;# 
  2308  048F                     	;# 
  2309  048F                     	;# 
  2310  0490                     	;# 
  2311  0491                     	;# 
  2312  0492                     	;# 
  2313  0492                     	;# 
  2314  0493                     	;# 
  2315  0494                     	;# 
  2316  0495                     	;# 
  2317  0495                     	;# 
  2318  0496                     	;# 
  2319  0497                     	;# 
  2320  0498                     	;# 
  2321  0499                     	;# 
  2322  049A                     	;# 
  2323  049B                     	;# 
  2324  049C                     	;# 
  2325  049D                     	;# 
  2326  050C                     	;# 
  2327  050C                     	;# 
  2328  050D                     	;# 
  2329  050E                     	;# 
  2330  050F                     	;# 
  2331  050F                     	;# 
  2332  0510                     	;# 
  2333  0511                     	;# 
  2334  0512                     	;# 
  2335  0512                     	;# 
  2336  0513                     	;# 
  2337  0514                     	;# 
  2338  0515                     	;# 
  2339  0515                     	;# 
  2340  0516                     	;# 
  2341  0517                     	;# 
  2342  0518                     	;# 
  2343  0519                     	;# 
  2344  051A                     	;# 
  2345  051B                     	;# 
  2346  051C                     	;# 
  2347  051D                     	;# 
  2348  058C                     	;# 
  2349  058C                     	;# 
  2350  058D                     	;# 
  2351  058E                     	;# 
  2352  058F                     	;# 
  2353  058F                     	;# 
  2354  0590                     	;# 
  2355  0591                     	;# 
  2356  0592                     	;# 
  2357  0593                     	;# 
  2358  060C                     	;# 
  2359  060D                     	;# 
  2360  060E                     	;# 
  2361  060F                     	;# 
  2362  0610                     	;# 
  2363  0611                     	;# 
  2364  0612                     	;# 
  2365  0613                     	;# 
  2366  0614                     	;# 
  2367  0616                     	;# 
  2368  0617                     	;# 
  2369  0618                     	;# 
  2370  0619                     	;# 
  2371  061A                     	;# 
  2372  061B                     	;# 
  2373  061C                     	;# 
  2374  061D                     	;# 
  2375  061E                     	;# 
  2376  068C                     	;# 
  2377  068D                     	;# 
  2378  068E                     	;# 
  2379  068F                     	;# 
  2380  0690                     	;# 
  2381  0691                     	;# 
  2382  0692                     	;# 
  2383  0693                     	;# 
  2384  0694                     	;# 
  2385  070C                     	;# 
  2386  070D                     	;# 
  2387  070E                     	;# 
  2388  070F                     	;# 
  2389  0710                     	;# 
  2390  0711                     	;# 
  2391  0712                     	;# 
  2392  0713                     	;# 
  2393  0714                     	;# 
  2394  0716                     	;# 
  2395  0717                     	;# 
  2396  0718                     	;# 
  2397  0719                     	;# 
  2398  071A                     	;# 
  2399  071B                     	;# 
  2400  071C                     	;# 
  2401  071D                     	;# 
  2402  071E                     	;# 
  2403  0796                     	;# 
  2404  0797                     	;# 
  2405  0798                     	;# 
  2406  0799                     	;# 
  2407  079A                     	;# 
  2408  079B                     	;# 
  2409  080C                     	;# 
  2410  080D                     	;# 
  2411  080E                     	;# 
  2412  080F                     	;# 
  2413  0810                     	;# 
  2414  0811                     	;# 
  2415  0812                     	;# 
  2416  0813                     	;# 
  2417  0814                     	;# 
  2418  081A                     	;# 
  2419  081B                     	;# 
  2420  081C                     	;# 
  2421  081D                     	;# 
  2422  081E                     	;# 
  2423  081F                     	;# 
  2424  088C                     	;# 
  2425  088D                     	;# 
  2426  088E                     	;# 
  2427  088F                     	;# 
  2428  0890                     	;# 
  2429  0891                     	;# 
  2430  0892                     	;# 
  2431  0893                     	;# 
  2432  0895                     	;# 
  2433  0896                     	;# 
  2434  0897                     	;# 
  2435  0898                     	;# 
  2436  0899                     	;# 
  2437  089A                     	;# 
  2438  089B                     	;# 
  2439  090C                     	;# 
  2440  090E                     	;# 
  2441  090F                     	;# 
  2442  091F                     	;# 
  2443  091F                     	;# 
  2444  098F                     	;# 
  2445  098F                     	;# 
  2446  0990                     	;# 
  2447  0991                     	;# 
  2448  0992                     	;# 
  2449  0993                     	;# 
  2450  0994                     	;# 
  2451  0995                     	;# 
  2452  0996                     	;# 
  2453  0997                     	;# 
  2454  0E0F                     	;# 
  2455  0E10                     	;# 
  2456  0E11                     	;# 
  2457  0E12                     	;# 
  2458  0E13                     	;# 
  2459  0E14                     	;# 
  2460  0E15                     	;# 
  2461  0E16                     	;# 
  2462  0E17                     	;# 
  2463  0E18                     	;# 
  2464  0E19                     	;# 
  2465  0E1A                     	;# 
  2466  0E1B                     	;# 
  2467  0E1C                     	;# 
  2468  0E1D                     	;# 
  2469  0E1E                     	;# 
  2470  0E1F                     	;# 
  2471  0E20                     	;# 
  2472  0E21                     	;# 
  2473  0E22                     	;# 
  2474  0E23                     	;# 
  2475  0E24                     	;# 
  2476  0E25                     	;# 
  2477  0E26                     	;# 
  2478  0E27                     	;# 
  2479  0E28                     	;# 
  2480  0E29                     	;# 
  2481  0E2A                     	;# 
  2482  0E2B                     	;# 
  2483  0E2C                     	;# 
  2484  0E2D                     	;# 
  2485  0E2E                     	;# 
  2486  0E2F                     	;# 
  2487  0E30                     	;# 
  2488  0E31                     	;# 
  2489  0E32                     	;# 
  2490  0E33                     	;# 
  2491  0E34                     	;# 
  2492  0E35                     	;# 
  2493  0E36                     	;# 
  2494  0E37                     	;# 
  2495  0E8F                     	;# 
  2496  0E90                     	;# 
  2497  0E91                     	;# 
  2498  0E92                     	;# 
  2499  0E93                     	;# 
  2500  0E94                     	;# 
  2501  0E95                     	;# 
  2502  0E96                     	;# 
  2503  0E97                     	;# 
  2504  0E9C                     	;# 
  2505  0E9D                     	;# 
  2506  0E9E                     	;# 
  2507  0EA1                     	;# 
  2508  0EA2                     	;# 
  2509  0EA3                     	;# 
  2510  0EA4                     	;# 
  2511  0EA5                     	;# 
  2512  0EA9                     	;# 
  2513  0EAA                     	;# 
  2514  0EAB                     	;# 
  2515  0EAC                     	;# 
  2516  0EB1                     	;# 
  2517  0EB2                     	;# 
  2518  0EB3                     	;# 
  2519  0EB8                     	;# 
  2520  0EB9                     	;# 
  2521  0EBA                     	;# 
  2522  0EBB                     	;# 
  2523  0EBC                     	;# 
  2524  0EBD                     	;# 
  2525  0EBE                     	;# 
  2526  0EC3                     	;# 
  2527  0EC5                     	;# 
  2528  0EC6                     	;# 
  2529  0EC7                     	;# 
  2530  0EC8                     	;# 
  2531  0EC9                     	;# 
  2532  0ECA                     	;# 
  2533  0ECB                     	;# 
  2534  0ECC                     	;# 
  2535  0F10                     	;# 
  2536  0F11                     	;# 
  2537  0F12                     	;# 
  2538  0F13                     	;# 
  2539  0F14                     	;# 
  2540  0F15                     	;# 
  2541  0F16                     	;# 
  2542  0F17                     	;# 
  2543  0F18                     	;# 
  2544  0F19                     	;# 
  2545  0F1A                     	;# 
  2546  0F1B                     	;# 
  2547  0F1C                     	;# 
  2548  0F1D                     	;# 
  2549  0F1E                     	;# 
  2550  0F1F                     	;# 
  2551  0F20                     	;# 
  2552  0F21                     	;# 
  2553  0F22                     	;# 
  2554  0F23                     	;# 
  2555  0F24                     	;# 
  2556  0F25                     	;# 
  2557  0F26                     	;# 
  2558  0F27                     	;# 
  2559  0F38                     	;# 
  2560  0F39                     	;# 
  2561  0F3A                     	;# 
  2562  0F3B                     	;# 
  2563  0F3C                     	;# 
  2564  0F3D                     	;# 
  2565  0F3E                     	;# 
  2566  0F3F                     	;# 
  2567  0F40                     	;# 
  2568  0F41                     	;# 
  2569  0F43                     	;# 
  2570  0F44                     	;# 
  2571  0F45                     	;# 
  2572  0F46                     	;# 
  2573  0F47                     	;# 
  2574  0F48                     	;# 
  2575  0F49                     	;# 
  2576  0F4A                     	;# 
  2577  0F4B                     	;# 
  2578  0F4C                     	;# 
  2579  0F4E                     	;# 
  2580  0F4F                     	;# 
  2581  0F50                     	;# 
  2582  0F51                     	;# 
  2583  0F52                     	;# 
  2584  0F53                     	;# 
  2585  0F54                     	;# 
  2586  0F55                     	;# 
  2587  0F56                     	;# 
  2588  0F57                     	;# 
  2589  0F65                     	;# 
  2590  0F68                     	;# 
  2591  0F69                     	;# 
  2592  0F6A                     	;# 
  2593  0F6B                     	;# 
  2594  0FE4                     	;# 
  2595  0FE5                     	;# 
  2596  0FE6                     	;# 
  2597  0FE7                     	;# 
  2598  0FE8                     	;# 
  2599  0FE9                     	;# 
  2600  0FEA                     	;# 
  2601  0FEB                     	;# 
  2602  0FED                     	;# 
  2603  0FEE                     	;# 
  2604  0FEF                     	;# 
  2605  0000                     	;# 
  2606  0001                     	;# 
  2607  0002                     	;# 
  2608  0003                     	;# 
  2609  0004                     	;# 
  2610  0005                     	;# 
  2611  0006                     	;# 
  2612  0007                     	;# 
  2613  0008                     	;# 
  2614  0009                     	;# 
  2615  000A                     	;# 
  2616  000B                     	;# 
  2617  000C                     	;# 
  2618  000D                     	;# 
  2619  000E                     	;# 
  2620  0010                     	;# 
  2621  0011                     	;# 
  2622  0012                     	;# 
  2623  0013                     	;# 
  2624  0016                     	;# 
  2625  0017                     	;# 
  2626  0018                     	;# 
  2627  001C                     	;# 
  2628  001C                     	;# 
  2629  001D                     	;# 
  2630  001D                     	;# 
  2631  001E                     	;# 
  2632  001F                     	;# 
  2633  008C                     	;# 
  2634  008C                     	;# 
  2635  008D                     	;# 
  2636  008E                     	;# 
  2637  008E                     	;# 
  2638  008F                     	;# 
  2639  0090                     	;# 
  2640  0090                     	;# 
  2641  0091                     	;# 
  2642  0093                     	;# 
  2643  0094                     	;# 
  2644  0095                     	;# 
  2645  0096                     	;# 
  2646  0097                     	;# 
  2647  0098                     	;# 
  2648  0099                     	;# 
  2649  009A                     	;# 
  2650  009B                     	;# 
  2651  009C                     	;# 
  2652  009D                     	;# 
  2653  009E                     	;# 
  2654  010C                     	;# 
  2655  010D                     	;# 
  2656  010E                     	;# 
  2657  010E                     	;# 
  2658  010F                     	;# 
  2659  0110                     	;# 
  2660  0110                     	;# 
  2661  0111                     	;# 
  2662  0112                     	;# 
  2663  0112                     	;# 
  2664  0113                     	;# 
  2665  0114                     	;# 
  2666  0114                     	;# 
  2667  0115                     	;# 
  2668  0116                     	;# 
  2669  0116                     	;# 
  2670  0117                     	;# 
  2671  0119                     	;# 
  2672  0119                     	;# 
  2673  0119                     	;# 
  2674  011A                     	;# 
  2675  011A                     	;# 
  2676  011A                     	;# 
  2677  011B                     	;# 
  2678  011B                     	;# 
  2679  011B                     	;# 
  2680  011B                     	;# 
  2681  011B                     	;# 
  2682  011C                     	;# 
  2683  011C                     	;# 
  2684  011C                     	;# 
  2685  011D                     	;# 
  2686  011D                     	;# 
  2687  011D                     	;# 
  2688  011E                     	;# 
  2689  011E                     	;# 
  2690  011E                     	;# 
  2691  011F                     	;# 
  2692  011F                     	;# 
  2693  011F                     	;# 
  2694  011F                     	;# 
  2695  011F                     	;# 
  2696  018C                     	;# 
  2697  018D                     	;# 
  2698  018E                     	;# 
  2699  018F                     	;# 
  2700  0190                     	;# 
  2701  0191                     	;# 
  2702  0192                     	;# 
  2703  0196                     	;# 
  2704  0197                     	;# 
  2705  0198                     	;# 
  2706  0199                     	;# 
  2707  019A                     	;# 
  2708  019B                     	;# 
  2709  019C                     	;# 
  2710  020C                     	;# 
  2711  020D                     	;# 
  2712  020E                     	;# 
  2713  020F                     	;# 
  2714  020F                     	;# 
  2715  0210                     	;# 
  2716  0210                     	;# 
  2717  0211                     	;# 
  2718  0211                     	;# 
  2719  0212                     	;# 
  2720  0213                     	;# 
  2721  0214                     	;# 
  2722  0215                     	;# 
  2723  0215                     	;# 
  2724  0216                     	;# 
  2725  0216                     	;# 
  2726  0217                     	;# 
  2727  0217                     	;# 
  2728  0218                     	;# 
  2729  0219                     	;# 
  2730  021A                     	;# 
  2731  021B                     	;# 
  2732  021B                     	;# 
  2733  021C                     	;# 
  2734  021C                     	;# 
  2735  021D                     	;# 
  2736  021D                     	;# 
  2737  021E                     	;# 
  2738  021F                     	;# 
  2739  028C                     	;# 
  2740  028C                     	;# 
  2741  028D                     	;# 
  2742  028D                     	;# 
  2743  028E                     	;# 
  2744  028F                     	;# 
  2745  0290                     	;# 
  2746  0290                     	;# 
  2747  0291                     	;# 
  2748  0292                     	;# 
  2749  0292                     	;# 
  2750  0293                     	;# 
  2751  0293                     	;# 
  2752  0294                     	;# 
  2753  0295                     	;# 
  2754  0296                     	;# 
  2755  0296                     	;# 
  2756  0297                     	;# 
  2757  0298                     	;# 
  2758  0298                     	;# 
  2759  0299                     	;# 
  2760  0299                     	;# 
  2761  029A                     	;# 
  2762  029B                     	;# 
  2763  029C                     	;# 
  2764  029C                     	;# 
  2765  029D                     	;# 
  2766  030C                     	;# 
  2767  030C                     	;# 
  2768  030D                     	;# 
  2769  030E                     	;# 
  2770  030F                     	;# 
  2771  0310                     	;# 
  2772  0310                     	;# 
  2773  0311                     	;# 
  2774  0312                     	;# 
  2775  0313                     	;# 
  2776  0314                     	;# 
  2777  0314                     	;# 
  2778  0315                     	;# 
  2779  0316                     	;# 
  2780  0317                     	;# 
  2781  0318                     	;# 
  2782  0318                     	;# 
  2783  0319                     	;# 
  2784  031A                     	;# 
  2785  031B                     	;# 
  2786  031C                     	;# 
  2787  031C                     	;# 
  2788  031D                     	;# 
  2789  031E                     	;# 
  2790  031F                     	;# 
  2791  038C                     	;# 
  2792  038D                     	;# 
  2793  038E                     	;# 
  2794  0390                     	;# 
  2795  0391                     	;# 
  2796  0392                     	;# 
  2797  040C                     	;# 
  2798  040D                     	;# 
  2799  040E                     	;# 
  2800  040F                     	;# 
  2801  0410                     	;# 
  2802  0411                     	;# 
  2803  0416                     	;# 
  2804  0416                     	;# 
  2805  0417                     	;# 
  2806  0418                     	;# 
  2807  0418                     	;# 
  2808  0419                     	;# 
  2809  041A                     	;# 
  2810  041A                     	;# 
  2811  041B                     	;# 
  2812  041C                     	;# 
  2813  041C                     	;# 
  2814  041D                     	;# 
  2815  041E                     	;# 
  2816  041F                     	;# 
  2817  048C                     	;# 
  2818  048C                     	;# 
  2819  048D                     	;# 
  2820  048E                     	;# 
  2821  048F                     	;# 
  2822  048F                     	;# 
  2823  0490                     	;# 
  2824  0491                     	;# 
  2825  0492                     	;# 
  2826  0492                     	;# 
  2827  0493                     	;# 
  2828  0494                     	;# 
  2829  0495                     	;# 
  2830  0495                     	;# 
  2831  0496                     	;# 
  2832  0497                     	;# 
  2833  0498                     	;# 
  2834  0499                     	;# 
  2835  049A                     	;# 
  2836  049B                     	;# 
  2837  049C                     	;# 
  2838  049D                     	;# 
  2839  050C                     	;# 
  2840  050C                     	;# 
  2841  050D                     	;# 
  2842  050E                     	;# 
  2843  050F                     	;# 
  2844  050F                     	;# 
  2845  0510                     	;# 
  2846  0511                     	;# 
  2847  0512                     	;# 
  2848  0512                     	;# 
  2849  0513                     	;# 
  2850  0514                     	;# 
  2851  0515                     	;# 
  2852  0515                     	;# 
  2853  0516                     	;# 
  2854  0517                     	;# 
  2855  0518                     	;# 
  2856  0519                     	;# 
  2857  051A                     	;# 
  2858  051B                     	;# 
  2859  051C                     	;# 
  2860  051D                     	;# 
  2861  058C                     	;# 
  2862  058C                     	;# 
  2863  058D                     	;# 
  2864  058E                     	;# 
  2865  058F                     	;# 
  2866  058F                     	;# 
  2867  0590                     	;# 
  2868  0591                     	;# 
  2869  0592                     	;# 
  2870  0593                     	;# 
  2871  060C                     	;# 
  2872  060D                     	;# 
  2873  060E                     	;# 
  2874  060F                     	;# 
  2875  0610                     	;# 
  2876  0611                     	;# 
  2877  0612                     	;# 
  2878  0613                     	;# 
  2879  0614                     	;# 
  2880  0616                     	;# 
  2881  0617                     	;# 
  2882  0618                     	;# 
  2883  0619                     	;# 
  2884  061A                     	;# 
  2885  061B                     	;# 
  2886  061C                     	;# 
  2887  061D                     	;# 
  2888  061E                     	;# 
  2889  068C                     	;# 
  2890  068D                     	;# 
  2891  068E                     	;# 
  2892  068F                     	;# 
  2893  0690                     	;# 
  2894  0691                     	;# 
  2895  0692                     	;# 
  2896  0693                     	;# 
  2897  0694                     	;# 
  2898  070C                     	;# 
  2899  070D                     	;# 
  2900  070E                     	;# 
  2901  070F                     	;# 
  2902  0710                     	;# 
  2903  0711                     	;# 
  2904  0712                     	;# 
  2905  0713                     	;# 
  2906  0714                     	;# 
  2907  0716                     	;# 
  2908  0717                     	;# 
  2909  0718                     	;# 
  2910  0719                     	;# 
  2911  071A                     	;# 
  2912  071B                     	;# 
  2913  071C                     	;# 
  2914  071D                     	;# 
  2915  071E                     	;# 
  2916  0796                     	;# 
  2917  0797                     	;# 
  2918  0798                     	;# 
  2919  0799                     	;# 
  2920  079A                     	;# 
  2921  079B                     	;# 
  2922  080C                     	;# 
  2923  080D                     	;# 
  2924  080E                     	;# 
  2925  080F                     	;# 
  2926  0810                     	;# 
  2927  0811                     	;# 
  2928  0812                     	;# 
  2929  0813                     	;# 
  2930  0814                     	;# 
  2931  081A                     	;# 
  2932  081B                     	;# 
  2933  081C                     	;# 
  2934  081D                     	;# 
  2935  081E                     	;# 
  2936  081F                     	;# 
  2937  088C                     	;# 
  2938  088D                     	;# 
  2939  088E                     	;# 
  2940  088F                     	;# 
  2941  0890                     	;# 
  2942  0891                     	;# 
  2943  0892                     	;# 
  2944  0893                     	;# 
  2945  0895                     	;# 
  2946  0896                     	;# 
  2947  0897                     	;# 
  2948  0898                     	;# 
  2949  0899                     	;# 
  2950  089A                     	;# 
  2951  089B                     	;# 
  2952  090C                     	;# 
  2953  090E                     	;# 
  2954  090F                     	;# 
  2955  091F                     	;# 
  2956  091F                     	;# 
  2957  098F                     	;# 
  2958  098F                     	;# 
  2959  0990                     	;# 
  2960  0991                     	;# 
  2961  0992                     	;# 
  2962  0993                     	;# 
  2963  0994                     	;# 
  2964  0995                     	;# 
  2965  0996                     	;# 
  2966  0997                     	;# 
  2967  0E0F                     	;# 
  2968  0E10                     	;# 
  2969  0E11                     	;# 
  2970  0E12                     	;# 
  2971  0E13                     	;# 
  2972  0E14                     	;# 
  2973  0E15                     	;# 
  2974  0E16                     	;# 
  2975  0E17                     	;# 
  2976  0E18                     	;# 
  2977  0E19                     	;# 
  2978  0E1A                     	;# 
  2979  0E1B                     	;# 
  2980  0E1C                     	;# 
  2981  0E1D                     	;# 
  2982  0E1E                     	;# 
  2983  0E1F                     	;# 
  2984  0E20                     	;# 
  2985  0E21                     	;# 
  2986  0E22                     	;# 
  2987  0E23                     	;# 
  2988  0E24                     	;# 
  2989  0E25                     	;# 
  2990  0E26                     	;# 
  2991  0E27                     	;# 
  2992  0E28                     	;# 
  2993  0E29                     	;# 
  2994  0E2A                     	;# 
  2995  0E2B                     	;# 
  2996  0E2C                     	;# 
  2997  0E2D                     	;# 
  2998  0E2E                     	;# 
  2999  0E2F                     	;# 
  3000  0E30                     	;# 
  3001  0E31                     	;# 
  3002  0E32                     	;# 
  3003  0E33                     	;# 
  3004  0E34                     	;# 
  3005  0E35                     	;# 
  3006  0E36                     	;# 
  3007  0E37                     	;# 
  3008  0E8F                     	;# 
  3009  0E90                     	;# 
  3010  0E91                     	;# 
  3011  0E92                     	;# 
  3012  0E93                     	;# 
  3013  0E94                     	;# 
  3014  0E95                     	;# 
  3015  0E96                     	;# 
  3016  0E97                     	;# 
  3017  0E9C                     	;# 
  3018  0E9D                     	;# 
  3019  0E9E                     	;# 
  3020  0EA1                     	;# 
  3021  0EA2                     	;# 
  3022  0EA3                     	;# 
  3023  0EA4                     	;# 
  3024  0EA5                     	;# 
  3025  0EA9                     	;# 
  3026  0EAA                     	;# 
  3027  0EAB                     	;# 
  3028  0EAC                     	;# 
  3029  0EB1                     	;# 
  3030  0EB2                     	;# 
  3031  0EB3                     	;# 
  3032  0EB8                     	;# 
  3033  0EB9                     	;# 
  3034  0EBA                     	;# 
  3035  0EBB                     	;# 
  3036  0EBC                     	;# 
  3037  0EBD                     	;# 
  3038  0EBE                     	;# 
  3039  0EC3                     	;# 
  3040  0EC5                     	;# 
  3041  0EC6                     	;# 
  3042  0EC7                     	;# 
  3043  0EC8                     	;# 
  3044  0EC9                     	;# 
  3045  0ECA                     	;# 
  3046  0ECB                     	;# 
  3047  0ECC                     	;# 
  3048  0F10                     	;# 
  3049  0F11                     	;# 
  3050  0F12                     	;# 
  3051  0F13                     	;# 
  3052  0F14                     	;# 
  3053  0F15                     	;# 
  3054  0F16                     	;# 
  3055  0F17                     	;# 
  3056  0F18                     	;# 
  3057  0F19                     	;# 
  3058  0F1A                     	;# 
  3059  0F1B                     	;# 
  3060  0F1C                     	;# 
  3061  0F1D                     	;# 
  3062  0F1E                     	;# 
  3063  0F1F                     	;# 
  3064  0F20                     	;# 
  3065  0F21                     	;# 
  3066  0F22                     	;# 
  3067  0F23                     	;# 
  3068  0F24                     	;# 
  3069  0F25                     	;# 
  3070  0F26                     	;# 
  3071  0F27                     	;# 
  3072  0F38                     	;# 
  3073  0F39                     	;# 
  3074  0F3A                     	;# 
  3075  0F3B                     	;# 
  3076  0F3C                     	;# 
  3077  0F3D                     	;# 
  3078  0F3E                     	;# 
  3079  0F3F                     	;# 
  3080  0F40                     	;# 
  3081  0F41                     	;# 
  3082  0F43                     	;# 
  3083  0F44                     	;# 
  3084  0F45                     	;# 
  3085  0F46                     	;# 
  3086  0F47                     	;# 
  3087  0F48                     	;# 
  3088  0F49                     	;# 
  3089  0F4A                     	;# 
  3090  0F4B                     	;# 
  3091  0F4C                     	;# 
  3092  0F4E                     	;# 
  3093  0F4F                     	;# 
  3094  0F50                     	;# 
  3095  0F51                     	;# 
  3096  0F52                     	;# 
  3097  0F53                     	;# 
  3098  0F54                     	;# 
  3099  0F55                     	;# 
  3100  0F56                     	;# 
  3101  0F57                     	;# 
  3102  0F65                     	;# 
  3103  0F68                     	;# 
  3104  0F69                     	;# 
  3105  0F6A                     	;# 
  3106  0F6B                     	;# 
  3107  0FE4                     	;# 
  3108  0FE5                     	;# 
  3109  0FE6                     	;# 
  3110  0FE7                     	;# 
  3111  0FE8                     	;# 
  3112  0FE9                     	;# 
  3113  0FEA                     	;# 
  3114  0FEB                     	;# 
  3115  0FED                     	;# 
  3116  0FEE                     	;# 
  3117  0FEF                     	;# 
  3118  0000                     	;# 
  3119  0001                     	;# 
  3120  0002                     	;# 
  3121  0003                     	;# 
  3122  0004                     	;# 
  3123  0005                     	;# 
  3124  0006                     	;# 
  3125  0007                     	;# 
  3126  0008                     	;# 
  3127  0009                     	;# 
  3128  000A                     	;# 
  3129  000B                     	;# 
  3130  000C                     	;# 
  3131  000D                     	;# 
  3132  000E                     	;# 
  3133  0010                     	;# 
  3134  0011                     	;# 
  3135  0012                     	;# 
  3136  0013                     	;# 
  3137  0016                     	;# 
  3138  0017                     	;# 
  3139  0018                     	;# 
  3140  001C                     	;# 
  3141  001C                     	;# 
  3142  001D                     	;# 
  3143  001D                     	;# 
  3144  001E                     	;# 
  3145  001F                     	;# 
  3146  008C                     	;# 
  3147  008C                     	;# 
  3148  008D                     	;# 
  3149  008E                     	;# 
  3150  008E                     	;# 
  3151  008F                     	;# 
  3152  0090                     	;# 
  3153  0090                     	;# 
  3154  0091                     	;# 
  3155  0093                     	;# 
  3156  0094                     	;# 
  3157  0095                     	;# 
  3158  0096                     	;# 
  3159  0097                     	;# 
  3160  0098                     	;# 
  3161  0099                     	;# 
  3162  009A                     	;# 
  3163  009B                     	;# 
  3164  009C                     	;# 
  3165  009D                     	;# 
  3166  009E                     	;# 
  3167  010C                     	;# 
  3168  010D                     	;# 
  3169  010E                     	;# 
  3170  010E                     	;# 
  3171  010F                     	;# 
  3172  0110                     	;# 
  3173  0110                     	;# 
  3174  0111                     	;# 
  3175  0112                     	;# 
  3176  0112                     	;# 
  3177  0113                     	;# 
  3178  0114                     	;# 
  3179  0114                     	;# 
  3180  0115                     	;# 
  3181  0116                     	;# 
  3182  0116                     	;# 
  3183  0117                     	;# 
  3184  0119                     	;# 
  3185  0119                     	;# 
  3186  0119                     	;# 
  3187  011A                     	;# 
  3188  011A                     	;# 
  3189  011A                     	;# 
  3190  011B                     	;# 
  3191  011B                     	;# 
  3192  011B                     	;# 
  3193  011B                     	;# 
  3194  011B                     	;# 
  3195  011C                     	;# 
  3196  011C                     	;# 
  3197  011C                     	;# 
  3198  011D                     	;# 
  3199  011D                     	;# 
  3200  011D                     	;# 
  3201  011E                     	;# 
  3202  011E                     	;# 
  3203  011E                     	;# 
  3204  011F                     	;# 
  3205  011F                     	;# 
  3206  011F                     	;# 
  3207  011F                     	;# 
  3208  011F                     	;# 
  3209  018C                     	;# 
  3210  018D                     	;# 
  3211  018E                     	;# 
  3212  018F                     	;# 
  3213  0190                     	;# 
  3214  0191                     	;# 
  3215  0192                     	;# 
  3216  0196                     	;# 
  3217  0197                     	;# 
  3218  0198                     	;# 
  3219  0199                     	;# 
  3220  019A                     	;# 
  3221  019B                     	;# 
  3222  019C                     	;# 
  3223  020C                     	;# 
  3224  020D                     	;# 
  3225  020E                     	;# 
  3226  020F                     	;# 
  3227  020F                     	;# 
  3228  0210                     	;# 
  3229  0210                     	;# 
  3230  0211                     	;# 
  3231  0211                     	;# 
  3232  0212                     	;# 
  3233  0213                     	;# 
  3234  0214                     	;# 
  3235  0215                     	;# 
  3236  0215                     	;# 
  3237  0216                     	;# 
  3238  0216                     	;# 
  3239  0217                     	;# 
  3240  0217                     	;# 
  3241  0218                     	;# 
  3242  0219                     	;# 
  3243  021A                     	;# 
  3244  021B                     	;# 
  3245  021B                     	;# 
  3246  021C                     	;# 
  3247  021C                     	;# 
  3248  021D                     	;# 
  3249  021D                     	;# 
  3250  021E                     	;# 
  3251  021F                     	;# 
  3252  028C                     	;# 
  3253  028C                     	;# 
  3254  028D                     	;# 
  3255  028D                     	;# 
  3256  028E                     	;# 
  3257  028F                     	;# 
  3258  0290                     	;# 
  3259  0290                     	;# 
  3260  0291                     	;# 
  3261  0292                     	;# 
  3262  0292                     	;# 
  3263  0293                     	;# 
  3264  0293                     	;# 
  3265  0294                     	;# 
  3266  0295                     	;# 
  3267  0296                     	;# 
  3268  0296                     	;# 
  3269  0297                     	;# 
  3270  0298                     	;# 
  3271  0298                     	;# 
  3272  0299                     	;# 
  3273  0299                     	;# 
  3274  029A                     	;# 
  3275  029B                     	;# 
  3276  029C                     	;# 
  3277  029C                     	;# 
  3278  029D                     	;# 
  3279  030C                     	;# 
  3280  030C                     	;# 
  3281  030D                     	;# 
  3282  030E                     	;# 
  3283  030F                     	;# 
  3284  0310                     	;# 
  3285  0310                     	;# 
  3286  0311                     	;# 
  3287  0312                     	;# 
  3288  0313                     	;# 
  3289  0314                     	;# 
  3290  0314                     	;# 
  3291  0315                     	;# 
  3292  0316                     	;# 
  3293  0317                     	;# 
  3294  0318                     	;# 
  3295  0318                     	;# 
  3296  0319                     	;# 
  3297  031A                     	;# 
  3298  031B                     	;# 
  3299  031C                     	;# 
  3300  031C                     	;# 
  3301  031D                     	;# 
  3302  031E                     	;# 
  3303  031F                     	;# 
  3304  038C                     	;# 
  3305  038D                     	;# 
  3306  038E                     	;# 
  3307  0390                     	;# 
  3308  0391                     	;# 
  3309  0392                     	;# 
  3310  040C                     	;# 
  3311  040D                     	;# 
  3312  040E                     	;# 
  3313  040F                     	;# 
  3314  0410                     	;# 
  3315  0411                     	;# 
  3316  0416                     	;# 
  3317  0416                     	;# 
  3318  0417                     	;# 
  3319  0418                     	;# 
  3320  0418                     	;# 
  3321  0419                     	;# 
  3322  041A                     	;# 
  3323  041A                     	;# 
  3324  041B                     	;# 
  3325  041C                     	;# 
  3326  041C                     	;# 
  3327  041D                     	;# 
  3328  041E                     	;# 
  3329  041F                     	;# 
  3330  048C                     	;# 
  3331  048C                     	;# 
  3332  048D                     	;# 
  3333  048E                     	;# 
  3334  048F                     	;# 
  3335  048F                     	;# 
  3336  0490                     	;# 
  3337  0491                     	;# 
  3338  0492                     	;# 
  3339  0492                     	;# 
  3340  0493                     	;# 
  3341  0494                     	;# 
  3342  0495                     	;# 
  3343  0495                     	;# 
  3344  0496                     	;# 
  3345  0497                     	;# 
  3346  0498                     	;# 
  3347  0499                     	;# 
  3348  049A                     	;# 
  3349  049B                     	;# 
  3350  049C                     	;# 
  3351  049D                     	;# 
  3352  050C                     	;# 
  3353  050C                     	;# 
  3354  050D                     	;# 
  3355  050E                     	;# 
  3356  050F                     	;# 
  3357  050F                     	;# 
  3358  0510                     	;# 
  3359  0511                     	;# 
  3360  0512                     	;# 
  3361  0512                     	;# 
  3362  0513                     	;# 
  3363  0514                     	;# 
  3364  0515                     	;# 
  3365  0515                     	;# 
  3366  0516                     	;# 
  3367  0517                     	;# 
  3368  0518                     	;# 
  3369  0519                     	;# 
  3370  051A                     	;# 
  3371  051B                     	;# 
  3372  051C                     	;# 
  3373  051D                     	;# 
  3374  058C                     	;# 
  3375  058C                     	;# 
  3376  058D                     	;# 
  3377  058E                     	;# 
  3378  058F                     	;# 
  3379  058F                     	;# 
  3380  0590                     	;# 
  3381  0591                     	;# 
  3382  0592                     	;# 
  3383  0593                     	;# 
  3384  060C                     	;# 
  3385  060D                     	;# 
  3386  060E                     	;# 
  3387  060F                     	;# 
  3388  0610                     	;# 
  3389  0611                     	;# 
  3390  0612                     	;# 
  3391  0613                     	;# 
  3392  0614                     	;# 
  3393  0616                     	;# 
  3394  0617                     	;# 
  3395  0618                     	;# 
  3396  0619                     	;# 
  3397  061A                     	;# 
  3398  061B                     	;# 
  3399  061C                     	;# 
  3400  061D                     	;# 
  3401  061E                     	;# 
  3402  068C                     	;# 
  3403  068D                     	;# 
  3404  068E                     	;# 
  3405  068F                     	;# 
  3406  0690                     	;# 
  3407  0691                     	;# 
  3408  0692                     	;# 
  3409  0693                     	;# 
  3410  0694                     	;# 
  3411  070C                     	;# 
  3412  070D                     	;# 
  3413  070E                     	;# 
  3414  070F                     	;# 
  3415  0710                     	;# 
  3416  0711                     	;# 
  3417  0712                     	;# 
  3418  0713                     	;# 
  3419  0714                     	;# 
  3420  0716                     	;# 
  3421  0717                     	;# 
  3422  0718                     	;# 
  3423  0719                     	;# 
  3424  071A                     	;# 
  3425  071B                     	;# 
  3426  071C                     	;# 
  3427  071D                     	;# 
  3428  071E                     	;# 
  3429  0796                     	;# 
  3430  0797                     	;# 
  3431  0798                     	;# 
  3432  0799                     	;# 
  3433  079A                     	;# 
  3434  079B                     	;# 
  3435  080C                     	;# 
  3436  080D                     	;# 
  3437  080E                     	;# 
  3438  080F                     	;# 
  3439  0810                     	;# 
  3440  0811                     	;# 
  3441  0812                     	;# 
  3442  0813                     	;# 
  3443  0814                     	;# 
  3444  081A                     	;# 
  3445  081B                     	;# 
  3446  081C                     	;# 
  3447  081D                     	;# 
  3448  081E                     	;# 
  3449  081F                     	;# 
  3450  088C                     	;# 
  3451  088D                     	;# 
  3452  088E                     	;# 
  3453  088F                     	;# 
  3454  0890                     	;# 
  3455  0891                     	;# 
  3456  0892                     	;# 
  3457  0893                     	;# 
  3458  0895                     	;# 
  3459  0896                     	;# 
  3460  0897                     	;# 
  3461  0898                     	;# 
  3462  0899                     	;# 
  3463  089A                     	;# 
  3464  089B                     	;# 
  3465  090C                     	;# 
  3466  090E                     	;# 
  3467  090F                     	;# 
  3468  091F                     	;# 
  3469  091F                     	;# 
  3470  098F                     	;# 
  3471  098F                     	;# 
  3472  0990                     	;# 
  3473  0991                     	;# 
  3474  0992                     	;# 
  3475  0993                     	;# 
  3476  0994                     	;# 
  3477  0995                     	;# 
  3478  0996                     	;# 
  3479  0997                     	;# 
  3480  0E0F                     	;# 
  3481  0E10                     	;# 
  3482  0E11                     	;# 
  3483  0E12                     	;# 
  3484  0E13                     	;# 
  3485  0E14                     	;# 
  3486  0E15                     	;# 
  3487  0E16                     	;# 
  3488  0E17                     	;# 
  3489  0E18                     	;# 
  3490  0E19                     	;# 
  3491  0E1A                     	;# 
  3492  0E1B                     	;# 
  3493  0E1C                     	;# 
  3494  0E1D                     	;# 
  3495  0E1E                     	;# 
  3496  0E1F                     	;# 
  3497  0E20                     	;# 
  3498  0E21                     	;# 
  3499  0E22                     	;# 
  3500  0E23                     	;# 
  3501  0E24                     	;# 
  3502  0E25                     	;# 
  3503  0E26                     	;# 
  3504  0E27                     	;# 
  3505  0E28                     	;# 
  3506  0E29                     	;# 
  3507  0E2A                     	;# 
  3508  0E2B                     	;# 
  3509  0E2C                     	;# 
  3510  0E2D                     	;# 
  3511  0E2E                     	;# 
  3512  0E2F                     	;# 
  3513  0E30                     	;# 
  3514  0E31                     	;# 
  3515  0E32                     	;# 
  3516  0E33                     	;# 
  3517  0E34                     	;# 
  3518  0E35                     	;# 
  3519  0E36                     	;# 
  3520  0E37                     	;# 
  3521  0E8F                     	;# 
  3522  0E90                     	;# 
  3523  0E91                     	;# 
  3524  0E92                     	;# 
  3525  0E93                     	;# 
  3526  0E94                     	;# 
  3527  0E95                     	;# 
  3528  0E96                     	;# 
  3529  0E97                     	;# 
  3530  0E9C                     	;# 
  3531  0E9D                     	;# 
  3532  0E9E                     	;# 
  3533  0EA1                     	;# 
  3534  0EA2                     	;# 
  3535  0EA3                     	;# 
  3536  0EA4                     	;# 
  3537  0EA5                     	;# 
  3538  0EA9                     	;# 
  3539  0EAA                     	;# 
  3540  0EAB                     	;# 
  3541  0EAC                     	;# 
  3542  0EB1                     	;# 
  3543  0EB2                     	;# 
  3544  0EB3                     	;# 
  3545  0EB8                     	;# 
  3546  0EB9                     	;# 
  3547  0EBA                     	;# 
  3548  0EBB                     	;# 
  3549  0EBC                     	;# 
  3550  0EBD                     	;# 
  3551  0EBE                     	;# 
  3552  0EC3                     	;# 
  3553  0EC5                     	;# 
  3554  0EC6                     	;# 
  3555  0EC7                     	;# 
  3556  0EC8                     	;# 
  3557  0EC9                     	;# 
  3558  0ECA                     	;# 
  3559  0ECB                     	;# 
  3560  0ECC                     	;# 
  3561  0F10                     	;# 
  3562  0F11                     	;# 
  3563  0F12                     	;# 
  3564  0F13                     	;# 
  3565  0F14                     	;# 
  3566  0F15                     	;# 
  3567  0F16                     	;# 
  3568  0F17                     	;# 
  3569  0F18                     	;# 
  3570  0F19                     	;# 
  3571  0F1A                     	;# 
  3572  0F1B                     	;# 
  3573  0F1C                     	;# 
  3574  0F1D                     	;# 
  3575  0F1E                     	;# 
  3576  0F1F                     	;# 
  3577  0F20                     	;# 
  3578  0F21                     	;# 
  3579  0F22                     	;# 
  3580  0F23                     	;# 
  3581  0F24                     	;# 
  3582  0F25                     	;# 
  3583  0F26                     	;# 
  3584  0F27                     	;# 
  3585  0F38                     	;# 
  3586  0F39                     	;# 
  3587  0F3A                     	;# 
  3588  0F3B                     	;# 
  3589  0F3C                     	;# 
  3590  0F3D                     	;# 
  3591  0F3E                     	;# 
  3592  0F3F                     	;# 
  3593  0F40                     	;# 
  3594  0F41                     	;# 
  3595  0F43                     	;# 
  3596  0F44                     	;# 
  3597  0F45                     	;# 
  3598  0F46                     	;# 
  3599  0F47                     	;# 
  3600  0F48                     	;# 
  3601  0F49                     	;# 
  3602  0F4A                     	;# 
  3603  0F4B                     	;# 
  3604  0F4C                     	;# 
  3605  0F4E                     	;# 
  3606  0F4F                     	;# 
  3607  0F50                     	;# 
  3608  0F51                     	;# 
  3609  0F52                     	;# 
  3610  0F53                     	;# 
  3611  0F54                     	;# 
  3612  0F55                     	;# 
  3613  0F56                     	;# 
  3614  0F57                     	;# 
  3615  0F65                     	;# 
  3616  0F68                     	;# 
  3617  0F69                     	;# 
  3618  0F6A                     	;# 
  3619  0F6B                     	;# 
  3620  0FE4                     	;# 
  3621  0FE5                     	;# 
  3622  0FE6                     	;# 
  3623  0FE7                     	;# 
  3624  0FE8                     	;# 
  3625  0FE9                     	;# 
  3626  0FEA                     	;# 
  3627  0FEB                     	;# 
  3628  0FED                     	;# 
  3629  0FEE                     	;# 
  3630  0FEF                     	;# 
  3631                           
  3632                           	psect	stringtext
  3633  0508                     __pstringtext:	
  3634  0508                     _dpowers:	
  3635  0508  3401               	retlw	1
  3636  0509  3400               	retlw	0
  3637  050A  340A               	retlw	10
  3638  050B  3400               	retlw	0
  3639  050C  3464               	retlw	100
  3640  050D  3400               	retlw	0
  3641  050E  34E8               	retlw	232
  3642  050F  3403               	retlw	3
  3643  0510  3410               	retlw	16
  3644  0511  3427               	retlw	39
  3645  0512                     __end_of_dpowers:	
  3646  0512                     STR_2:	
  3647  0512  3425               	retlw	37	;'%'
  3648  0513  3464               	retlw	100	;'d'
  3649  0514  342E               	retlw	46	;'.'
  3650  0515  3425               	retlw	37	;'%'
  3651  0516  3464               	retlw	100	;'d'
  3652  0517  3400               	retlw	0
  3653  0518                     STR_1:	
  3654  0518  340A               	retlw	10
  3655  0519  3400               	retlw	0
  3656                           
  3657                           ; #config settings
  3658  0000                     
  3659                           	psect	nvBANK0
  3660  006B                     __pnvBANK0:	
  3661  006B                     _eusartTxBufferRemaining:	
  3662  006B                     	ds	1
  3663  000B                     _INTCONbits	set	11
  3664  0016                     _LATA	set	22
  3665  0016                     _LATAbits	set	22
  3666  0017                     _LATB	set	23
  3667  0018                     _LATC	set	24
  3668  000C                     _PORTAbits	set	12
  3669  0011                     _TRISA	set	17
  3670  0012                     _TRISB	set	18
  3671  0013                     _TRISC	set	19
  3672  005F                     _GIE	set	95
  3673  011F                     _BAUD1CON	set	287
  3674  0119                     _RC1REG	set	281
  3675  011D                     _RC1STA	set	285
  3676  011D                     _RC1STAbits	set	285
  3677  011C                     _SP1BRGH	set	284
  3678  011B                     _SP1BRGL	set	283
  3679  011A                     _TX1REG	set	282
  3680  011E                     _TX1STA	set	286
  3681  0197                     _SSP2ADD	set	407
  3682  0196                     _SSP2BUF	set	406
  3683  019A                     _SSP2CON1	set	410
  3684  019A                     _SSP2CON1bits	set	410
  3685  019B                     _SSP2CON2bits	set	411
  3686  019C                     _SSP2CON3	set	412
  3687  0199                     _SSP2STAT	set	409
  3688  0299                     _PR6	set	665
  3689  029C                     _T6CLKCON	set	668
  3690  029A                     _T6CON	set	666
  3691  029A                     _T6CONbits	set	666
  3692  029B                     _T6HLT	set	667
  3693  029B                     _T6HLTbits	set	667
  3694  0299                     _T6PR	set	665
  3695  029D                     _T6RST	set	669
  3696  029D                     _T6RSTbits	set	669
  3697  0298                     _T6TMR	set	664
  3698  0298                     _TMR6	set	664
  3699  0719                     _PIE3bits	set	1817
  3700  070F                     _PIR3bits	set	1807
  3701  0710                     _PIR4bits	set	1808
  3702  088D                     _OSCCON1	set	2189
  3703  088F                     _OSCCON3	set	2191
  3704  0891                     _OSCEN	set	2193
  3705  0893                     _OSCFRQ	set	2195
  3706  0892                     _OSCTUNE	set	2194
  3707  0E8F                     _PPSLOCK	set	3727
  3708  0E8F                     _PPSLOCKbits	set	3727
  3709  0ECB                     _RXPPSbits	set	3787
  3710  0EC8                     _SSP2CLKPPSbits	set	3784
  3711  0EC9                     _SSP2DATPPSbits	set	3785
  3712  0E9E                     _T6AINPPSbits	set	3742
  3713  0F38                     _ANSELA	set	3896
  3714  0F43                     _ANSELB	set	3907
  3715  0F4E                     _ANSELC	set	3918
  3716  0F3A                     _ODCONA	set	3898
  3717  0F45                     _ODCONB	set	3909
  3718  0F50                     _ODCONC	set	3920
  3719  0F20                     _RC0PPS	set	3872
  3720  0F23                     _RC3PPS	set	3875
  3721  0F24                     _RC4PPS	set	3876
  3722  0F26                     _RC6PPS	set	3878
  3723  0F39                     _WPUA	set	3897
  3724  0F44                     _WPUB	set	3908
  3725  0F4F                     _WPUC	set	3919
  3726  0F65                     _WPUE	set	3941
  3727                           
  3728                           	psect	cinit
  3729  0036                     start_initialization:	
  3730  0036                     __initialization:	
  3731                           
  3732                           ; Clear objects allocated to COMMON
  3733  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  3734  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3735  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3736  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3737  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3738  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3739  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3740                           
  3741                           ; Clear objects allocated to BANK0
  3742  003D  3020               	movlw	low __pbssBANK0
  3743  003E  0084               	movwf	4
  3744  003F  3000               	movlw	high __pbssBANK0
  3745  0040  0085               	movwf	5
  3746  0041  3029               	movlw	41
  3747  0042  3185  2552  3180   	fcall	clear_ram0
  3748                           
  3749                           ; Clear objects allocated to BANK1
  3750  0045  30A0               	movlw	low __pbssBANK1
  3751  0046  0084               	movwf	4
  3752  0047  3000               	movlw	high __pbssBANK1
  3753  0048  0085               	movwf	5
  3754  0049  3008               	movlw	8
  3755  004A  3185  2552         	fcall	clear_ram0
  3756  004C                     end_of_initialization:	
  3757                           ;End of C runtime variable initialization code
  3758                           
  3759  004C                     __end_of__initialization:	
  3760  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3761  004D  0020               	movlb	0
  3762  004E  3182  2A48         	ljmp	_main	;jump to C main() function
  3763                           
  3764                           	psect	bssCOMMON
  3765  0070                     __pbssCOMMON:	
  3766  0070                     _eusartRxHead:	
  3767  0070                     	ds	1
  3768  0071                     _eusartTxHead:	
  3769  0071                     	ds	1
  3770  0072                     _eusartTxTail:	
  3771  0072                     	ds	1
  3772  0073                     _p_i2c2_current:	
  3773  0073                     	ds	1
  3774  0074                     _p_i2c2_trb_current:	
  3775  0074                     	ds	1
  3776  0075                     I2C2_ISR@i2c_address:	
  3777  0075                     	ds	2
  3778                           
  3779                           	psect	bssBANK0
  3780  0020                     __pbssBANK0:	
  3781  0020                     _eusartTxBuffer:	
  3782  0020                     	ds	8
  3783  0028                     _i2c2_object:	
  3784  0028                     	ds	5
  3785  002D                     _TMR6_InterruptHandler:	
  3786  002D                     	ds	2
  3787  002F                     I2C2_ISR@i2c_10bit_address_restart:	
  3788  002F                     	ds	1
  3789  0030                     I2C2_ISR@i2c_bytes_left:	
  3790  0030                     	ds	1
  3791  0031                     I2C2_ISR@pi2c_buf_ptr:	
  3792  0031                     	ds	1
  3793  0032                     _eusartRxCount:	
  3794  0032                     	ds	1
  3795  0033                     _eusartRxTail:	
  3796  0033                     	ds	1
  3797  0034                     _i2c2_state:	
  3798  0034                     	ds	1
  3799  0035                     _i2c2_trb_count:	
  3800  0035                     	ds	1
  3801  0036                     EMC1001_Read@trb:	
  3802  0036                     	ds	8
  3803  003E                     I2C2_MasterRead@trBlock:	
  3804  003E                     	ds	4
  3805  0042                     I2C2_MasterWrite@trBlock:	
  3806  0042                     	ds	4
  3807  0046                     _i2c2_tr_queue:	
  3808  0046                     	ds	3
  3809                           
  3810                           	psect	bssBANK1
  3811  00A0                     __pbssBANK1:	
  3812  00A0                     _eusartRxBuffer:	
  3813  00A0                     	ds	8
  3814                           
  3815                           	psect	clrtext
  3816  0552                     clear_ram0:	
  3817                           ;	Called with FSR0 containing the base address, and
  3818                           ;	WREG with the size to clear
  3819                           
  3820  0552  0064               	clrwdt	;clear the watchdog before getting into this loop
  3821  0553                     clrloop0:	
  3822  0553  0180               	clrf	0	;clear RAM location pointed to by FSR
  3823  0554  3101               	addfsr 0,1
  3824  0555  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3825  0556  2D53               	goto	clrloop0	;have we reached the end yet?
  3826  0557  3400               	retlw	0	;all done for this memory range, return
  3827                           
  3828                           	psect	cstackCOMMON
  3829  0077                     __pcstackCOMMON:	
  3830  0077                     ?_TMR6_Start:	
  3831  0077                     ?_PIN_MANAGER_Initialize:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0077                     ?_OSCILLATOR_Initialize:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0077                     ?_I2C2_Initialize:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0077                     ?_I2C2_BusCollisionISR:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0077                     ??_I2C2_BusCollisionISR:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0077                     ?_I2C2_ISR:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0077                     ?_I2C2_Stop:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0077                     ??_I2C2_Stop:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0077                     ?_I2C2_FunctionComplete:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0077                     ??_I2C2_FunctionComplete:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0077                     ?_EUSART_Initialize:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0077                     ?_EUSART_Write:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0077                     ?_putch:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0077                     ?_EUSART_Transmit_ISR:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0077                     ??_EUSART_Transmit_ISR:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0077                     ?_EUSART_Receive_ISR:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0077                     ??_EUSART_Receive_ISR:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0077                     ?_TMR6_Initialize:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0077                     ?_SYSTEM_Initialize:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0077                     ?_INTERRUPT_InterruptManager:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0077                     ?_main:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894                           
  3895                           ; 1 bytes @ 0x0
  3896  0077                     	ds	1
  3897  0078                     I2C2_Stop@completion_code:	
  3898                           
  3899                           ; 1 bytes @ 0x1
  3900  0078                     	ds	1
  3901  0079                     ??_I2C2_ISR:	
  3902                           
  3903                           ; 1 bytes @ 0x2
  3904  0079                     	ds	4
  3905  007D                     ??_INTERRUPT_InterruptManager:	
  3906                           
  3907                           ; 1 bytes @ 0x6
  3908  007D                     	ds	1
  3909                           
  3910                           	psect	cstackBANK0
  3911  0049                     __pcstackBANK0:	
  3912  0049                     ??_TMR6_Start:	
  3913  0049                     ??_PIN_MANAGER_Initialize:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0049                     ??_OSCILLATOR_Initialize:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0049                     ??_I2C2_Initialize:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0049                     ?_I2C2_MasterWriteTRBBuild:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0049                     ?_I2C2_MasterTRBInsert:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0049                     ?_I2C2_MasterReadTRBBuild:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0049                     ??_EUSART_Initialize:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0049                     ??_EUSART_Write:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0049                     ??_TMR6_Initialize:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0049                     ?___wmul:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0049                     ?___lwdiv:	
  3944                           ; 2 bytes @ 0x0
  3945                           
  3946  0049                     PIN_MANAGER_Initialize@state:	
  3947                           ; 2 bytes @ 0x0
  3948                           
  3949  0049                     I2C2_MasterTRBInsert@ptrb_list:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0049                     I2C2_MasterReadTRBBuild@pdata:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0049                     I2C2_MasterWriteTRBBuild@pdata:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958  0049                     ___wmul@multiplier:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  0049                     ___lwdiv@divisor:	
  3962                           ; 2 bytes @ 0x0
  3963                           
  3964                           
  3965                           ; 2 bytes @ 0x0
  3966  0049                     	ds	1
  3967  004A                     ??_SYSTEM_Initialize:	
  3968  004A                     EUSART_Write@txData:	
  3969                           ; 1 bytes @ 0x1
  3970                           
  3971  004A                     I2C2_MasterTRBInsert@pflag:	
  3972                           ; 1 bytes @ 0x1
  3973                           
  3974  004A                     I2C2_MasterReadTRBBuild@length:	
  3975                           ; 1 bytes @ 0x1
  3976                           
  3977  004A                     I2C2_MasterWriteTRBBuild@length:	
  3978                           ; 1 bytes @ 0x1
  3979                           
  3980                           
  3981                           ; 1 bytes @ 0x1
  3982  004A                     	ds	1
  3983  004B                     ??_I2C2_MasterTRBInsert:	
  3984  004B                     ??_putch:	
  3985                           ; 1 bytes @ 0x2
  3986                           
  3987  004B                     putch@txData:	
  3988                           ; 1 bytes @ 0x2
  3989                           
  3990  004B                     I2C2_MasterReadTRBBuild@address:	
  3991                           ; 1 bytes @ 0x2
  3992                           
  3993  004B                     I2C2_MasterWriteTRBBuild@address:	
  3994                           ; 2 bytes @ 0x2
  3995                           
  3996  004B                     ___wmul@multiplicand:	
  3997                           ; 2 bytes @ 0x2
  3998                           
  3999  004B                     ___lwdiv@dividend:	
  4000                           ; 2 bytes @ 0x2
  4001                           
  4002                           
  4003                           ; 2 bytes @ 0x2
  4004  004B                     	ds	1
  4005  004C                     I2C2_MasterTRBInsert@count:	
  4006                           
  4007                           ; 1 bytes @ 0x3
  4008  004C                     	ds	1
  4009  004D                     ??_I2C2_MasterWriteTRBBuild:	
  4010  004D                     ??_I2C2_MasterReadTRBBuild:	
  4011                           ; 1 bytes @ 0x4
  4012                           
  4013  004D                     ??___wmul:	
  4014                           ; 1 bytes @ 0x4
  4015                           
  4016  004D                     ??___lwdiv:	
  4017                           ; 1 bytes @ 0x4
  4018                           
  4019  004D                     ___wmul@product:	
  4020                           ; 1 bytes @ 0x4
  4021                           
  4022                           
  4023                           ; 2 bytes @ 0x4
  4024  004D                     	ds	1
  4025  004E                     ___lwdiv@quotient:	
  4026                           
  4027                           ; 2 bytes @ 0x5
  4028  004E                     	ds	1
  4029  004F                     I2C2_MasterReadTRBBuild@ptrb:	
  4030  004F                     I2C2_MasterWriteTRBBuild@ptrb:	
  4031                           ; 1 bytes @ 0x6
  4032                           
  4033                           
  4034                           ; 1 bytes @ 0x6
  4035  004F                     	ds	1
  4036  0050                     ?_EMC1001_Read:	
  4037  0050                     EMC1001_Read@pData:	
  4038                           ; 1 bytes @ 0x7
  4039                           
  4040  0050                     ___lwdiv@counter:	
  4041                           ; 1 bytes @ 0x7
  4042                           
  4043                           
  4044                           ; 1 bytes @ 0x7
  4045  0050                     	ds	1
  4046  0051                     ??_EMC1001_Read:	
  4047  0051                     ?___lwmod:	
  4048                           ; 1 bytes @ 0x8
  4049                           
  4050  0051                     ___lwmod@divisor:	
  4051                           ; 2 bytes @ 0x8
  4052                           
  4053                           
  4054                           ; 2 bytes @ 0x8
  4055  0051                     	ds	2
  4056  0053                     EMC1001_Read@reg:	
  4057  0053                     ___lwmod@dividend:	
  4058                           ; 1 bytes @ 0xA
  4059                           
  4060                           
  4061                           ; 2 bytes @ 0xA
  4062  0053                     	ds	1
  4063  0054                     EMC1001_Read@status:	
  4064                           
  4065                           ; 1 bytes @ 0xB
  4066  0054                     	ds	1
  4067  0055                     ??___lwmod:	
  4068                           
  4069                           ; 1 bytes @ 0xC
  4070  0055                     	ds	1
  4071  0056                     ___lwmod@counter:	
  4072                           
  4073                           ; 1 bytes @ 0xD
  4074  0056                     	ds	1
  4075  0057                     ?_printf:	
  4076  0057                     printf@f:	
  4077                           ; 2 bytes @ 0xE
  4078                           
  4079                           
  4080                           ; 2 bytes @ 0xE
  4081  0057                     	ds	6
  4082  005D                     ??_printf:	
  4083                           
  4084                           ; 1 bytes @ 0x14
  4085  005D                     	ds	4
  4086  0061                     printf@ap:	
  4087                           
  4088                           ; 1 bytes @ 0x18
  4089  0061                     	ds	1
  4090  0062                     printf@flag:	
  4091                           
  4092                           ; 1 bytes @ 0x19
  4093  0062                     	ds	1
  4094  0063                     printf@prec:	
  4095                           
  4096                           ; 1 bytes @ 0x1A
  4097  0063                     	ds	1
  4098  0064                     printf@val:	
  4099                           
  4100                           ; 2 bytes @ 0x1B
  4101  0064                     	ds	2
  4102  0066                     printf@c:	
  4103                           
  4104                           ; 1 bytes @ 0x1D
  4105  0066                     	ds	1
  4106  0067                     ??_main:	
  4107                           
  4108                           ; 1 bytes @ 0x1E
  4109  0067                     	ds	2
  4110  0069                     main@temp:	
  4111                           
  4112                           ; 1 bytes @ 0x20
  4113  0069                     	ds	1
  4114  006A                     main@templo:	
  4115                           
  4116                           ; 1 bytes @ 0x21
  4117  006A                     	ds	1
  4118                           
  4119                           	psect	maintext
  4120  0248                     __pmaintext:	
  4121 ;;
  4122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4123 ;;
  4124 ;; *************** function _main *****************
  4125 ;; Defined at:
  4126 ;;		line 22 in file "main.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  templo          1   33[BANK0 ] unsigned char 
  4131 ;;  temp            1   32[BANK0 ] char 
  4132 ;;  data            1    0        unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : B1F/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;Total ram usage:        4 bytes
  4147 ;; Hardware stack levels required when called:    6
  4148 ;; This function calls:
  4149 ;;		_EMC1001_Read
  4150 ;;		_EUSART_Write
  4151 ;;		_SYSTEM_Initialize
  4152 ;;		_TMR6_Start
  4153 ;;		___wmul
  4154 ;;		_printf
  4155 ;; This function is called by:
  4156 ;;		Startup code after reset
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _main
  4162  0248                     _main:	
  4163                           
  4164                           ;main.c: 24: uint8_t data;
  4165                           ;main.c: 25: int8_t temp;
  4166                           ;main.c: 26: uint8_t templo;
  4167                           ;main.c: 27: SYSTEM_Initialize();
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4171  0248  3185  252B  3182   	fcall	_SYSTEM_Initialize
  4172                           
  4173                           ;main.c: 28: (INTCONbits.GIE = 1);
  4174  024B  178B               	bsf	11,7	;volatile
  4175                           
  4176                           ;main.c: 29: (INTCONbits.PEIE = 1);
  4177  024C  170B               	bsf	11,6	;volatile
  4178  024D                     l2252:	
  4179                           ;main.c: 31: while (1)
  4180                           
  4181                           
  4182                           ;main.c: 32: {
  4183                           ;main.c: 33: if (!PORTAbits.RA5 && T6TMR == 0x00)
  4184  024D  0020               	movlb	0	; select bank0
  4185  024E  1A8C               	btfsc	12,5	;volatile
  4186  024F  2A4D               	goto	l2252
  4187  0250  0025               	movlb	5	; select bank5
  4188  0251  0818               	movf	24,w	;volatile
  4189  0252  1D03               	btfss	3,2
  4190  0253  2A4D               	goto	l2252
  4191                           
  4192                           ;main.c: 34: {
  4193                           ;main.c: 35: TMR6_Start();
  4194  0254  3185  255E  3182   	fcall	_TMR6_Start
  4195                           
  4196                           ;main.c: 36: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4197  0257  1003               	clrc
  4198  0258  0020               	movlb	0	; select bank0
  4199  0259  1C16               	btfss	22,0	;volatile
  4200  025A  1403               	setc
  4201  025B  1C03               	btfss	3,0
  4202  025C  2A60               	goto	u1840
  4203  025D  0020               	movlb	0	; select bank0
  4204  025E  1416               	bsf	22,0	;volatile
  4205  025F  2A62               	goto	l2260
  4206  0260                     u1840:	
  4207  0260  0020               	movlb	0	; select bank0
  4208  0261  1016               	bcf	22,0	;volatile
  4209  0262                     l2260:	
  4210                           
  4211                           ;main.c: 37: printf("\n");
  4212  0262  3018               	movlw	low (STR_1| (0+32768))
  4213  0263  00D7               	movwf	printf@f
  4214  0264  3085               	movlw	high (STR_1| (0+32768))
  4215  0265  00D8               	movwf	printf@f+1
  4216  0266  3181  2190  3182   	fcall	_printf
  4217                           
  4218                           ;main.c: 38: EUSART_Write(0x0D);
  4219  0269  300D               	movlw	13
  4220  026A  3184  240D  3182   	fcall	_EUSART_Write
  4221                           
  4222                           ;main.c: 40: if (EMC1001_Read(0, (uint8_t*)&temp))
  4223  026D  3069               	movlw	(low (main@temp| 0))& (0+255)
  4224  026E  0020               	movlb	0	; select bank0
  4225  026F  00E7               	movwf	??_main
  4226  0270  0867               	movf	??_main,w
  4227  0271  00D0               	movwf	EMC1001_Read@pData
  4228  0272  3000               	movlw	0
  4229  0273  3183  2347  3182   	fcall	_EMC1001_Read
  4230  0276  3A00               	xorlw	0
  4231  0277  1903               	skipnz
  4232  0278  2A4D               	goto	l2252
  4233                           
  4234                           ;main.c: 41: {
  4235                           ;main.c: 42: EMC1001_Read(2, &templo);
  4236  0279  306A               	movlw	(low (main@templo| 0))& (0+255)
  4237  027A  0020               	movlb	0	; select bank0
  4238  027B  00E7               	movwf	??_main
  4239  027C  0867               	movf	??_main,w
  4240  027D  00D0               	movwf	EMC1001_Read@pData
  4241  027E  3002               	movlw	2
  4242  027F  3183  2347  3182   	fcall	_EMC1001_Read
  4243                           
  4244                           ;main.c: 43: templo = templo >> 6;
  4245  0282  0020               	movlb	0	; select bank0
  4246  0283  086A               	movf	main@templo,w
  4247  0284  00E7               	movwf	??_main
  4248  0285  3006               	movlw	6
  4249  0286                     u1875:	
  4250  0286  36E7               	lsrf	??_main,f
  4251  0287  0B89               	decfsz	9,f
  4252  0288  2A86               	goto	u1875
  4253  0289  0867               	movf	??_main,w
  4254  028A  00E8               	movwf	??_main+1
  4255  028B  0868               	movf	??_main+1,w
  4256  028C  00EA               	movwf	main@templo
  4257                           
  4258                           ;main.c: 44: if (temp < 0) templo = 3-templo;
  4259  028D  1FE9               	btfss	main@temp,7
  4260  028E  2A95               	goto	l2274
  4261  028F  036A               	decf	main@templo,w
  4262  0290  3AFF               	xorlw	255
  4263  0291  3E03               	addlw	3
  4264  0292  00E7               	movwf	??_main
  4265  0293  0867               	movf	??_main,w
  4266  0294  00EA               	movwf	main@templo
  4267  0295                     l2274:	
  4268                           
  4269                           ;main.c: 45: printf("%d.%d", temp, templo*25);
  4270  0295  3012               	movlw	low (STR_2| (0+32768))
  4271  0296  00D7               	movwf	printf@f
  4272  0297  3085               	movlw	high (STR_2| (0+32768))
  4273  0298  00D8               	movwf	printf@f+1
  4274  0299  0869               	movf	main@temp,w
  4275  029A  00D9               	movwf	?_printf+2
  4276  029B  01DA               	clrf	?_printf+3
  4277  029C  1BD9               	btfsc	?_printf+2,7
  4278  029D  03DA               	decf	?_printf+3,f
  4279  029E  086A               	movf	main@templo,w
  4280  029F  00E7               	movwf	??_main
  4281  02A0  01E8               	clrf	??_main+1
  4282  02A1  0867               	movf	??_main,w
  4283  02A2  00C9               	movwf	___wmul@multiplier
  4284  02A3  0868               	movf	??_main+1,w
  4285  02A4  00CA               	movwf	___wmul@multiplier+1
  4286  02A5  3019               	movlw	25
  4287  02A6  00CB               	movwf	___wmul@multiplicand
  4288  02A7  3000               	movlw	0
  4289  02A8  00CC               	movwf	___wmul@multiplicand+1
  4290  02A9  3184  246E  3182   	fcall	___wmul
  4291  02AC  0020               	movlb	0	; select bank0
  4292  02AD  084A               	movf	?___wmul+1,w
  4293  02AE  00DC               	movwf	?_printf+5
  4294  02AF  0849               	movf	?___wmul,w
  4295  02B0  00DB               	movwf	?_printf+4
  4296  02B1  3181  2190  3182   	fcall	_printf
  4297  02B4  2A4D               	goto	l2252
  4298  02B5                     __end_of_main:	
  4299                           
  4300                           	psect	text1
  4301  0190                     __ptext1:	
  4302 ;; *************** function _printf *****************
  4303 ;; Defined at:
  4304 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4307 ;;		 -> STR_2(6), STR_1(2), 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  tmpval          4    0        struct .
  4310 ;;  val             2   27[BANK0 ] unsigned int 
  4311 ;;  cp              2    0        PTR const unsigned char 
  4312 ;;  len             2    0        unsigned int 
  4313 ;;  c               1   29[BANK0 ] char 
  4314 ;;  prec            1   26[BANK0 ] char 
  4315 ;;  flag            1   25[BANK0 ] unsigned char 
  4316 ;;  ap              1   24[BANK0 ] PTR void [1]
  4317 ;;		 -> ?_printf(2), 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   14[BANK0 ] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4327 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;Total ram usage:       16 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    5
  4334 ;; This function calls:
  4335 ;;		___lwdiv
  4336 ;;		___lwmod
  4337 ;;		_putch
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _printf
  4345  0190                     _printf:	
  4346                           
  4347                           ;doprnt.c: 466: va_list ap;
  4348                           ;doprnt.c: 499: signed char c;
  4349                           ;doprnt.c: 506: signed char prec;
  4350                           ;doprnt.c: 508: unsigned char flag;
  4351                           ;doprnt.c: 523: union {
  4352                           ;doprnt.c: 524: unsigned long vd;
  4353                           ;doprnt.c: 525: double integ;
  4354                           ;doprnt.c: 526: } tmpval;
  4355                           ;doprnt.c: 528: unsigned int val;
  4356                           ;doprnt.c: 529: unsigned len;
  4357                           ;doprnt.c: 530: const char * cp;
  4358                           ;doprnt.c: 533: *ap = __va_start();
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4362  0190  3059               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4363  0191  0020               	movlb	0	; select bank0
  4364  0192  00DD               	movwf	??_printf
  4365  0193  085D               	movf	??_printf,w
  4366  0194  00E1               	movwf	printf@ap
  4367  0195                     l2228:	
  4368                           ;doprnt.c: 536: while(c = *f++) {
  4369                           
  4370  0195  0020               	movlb	0	; select bank0
  4371  0196  0858               	movf	printf@f+1,w
  4372  0197  00DE               	movwf	??_printf+1
  4373  0198  0857               	movf	printf@f,w
  4374  0199  00DD               	movwf	??_printf
  4375  019A  0AD7               	incf	printf@f,f
  4376  019B  1903               	skipnz
  4377  019C  0AD8               	incf	printf@f+1,f
  4378  019D  085D               	movf	??_printf,w
  4379  019E  0084               	movwf	4
  4380  019F  085E               	movf	??_printf+1,w
  4381  01A0  0085               	movwf	5
  4382  01A1  0800               	movf	0,w	;code access
  4383  01A2  00DF               	movwf	??_printf+2
  4384  01A3  085F               	movf	??_printf+2,w
  4385  01A4  00E6               	movwf	printf@c
  4386  01A5  0866               	movf	printf@c,w
  4387  01A6  1903               	btfsc	3,2
  4388  01A7  0008               	return
  4389                           
  4390                           ;doprnt.c: 538: if(c != '%')
  4391  01A8  3025               	movlw	37
  4392  01A9  0666               	xorwf	printf@c,w
  4393  01AA  1903               	btfsc	3,2
  4394  01AB  29B1               	goto	l2188
  4395                           
  4396                           ;doprnt.c: 540: {
  4397                           ;doprnt.c: 541: (putch(c) );
  4398  01AC  0866               	movf	printf@c,w
  4399  01AD  3185  2558  3181   	fcall	_putch
  4400                           
  4401                           ;doprnt.c: 542: continue;
  4402  01B0  2995               	goto	l2228
  4403  01B1                     l2188:	
  4404                           
  4405                           ;doprnt.c: 543: }
  4406                           ;doprnt.c: 548: flag = 0;
  4407  01B1  0020               	movlb	0	; select bank0
  4408  01B2  01E2               	clrf	printf@flag
  4409                           
  4410                           ;doprnt.c: 822: }
  4411                           
  4412                           ;doprnt.c: 813: continue;
  4413                           
  4414                           ;doprnt.c: 802: default:
  4415                           
  4416                           ;doprnt.c: 698: case 'i':
  4417                           ;doprnt.c: 699: break;
  4418                           
  4419                           ;doprnt.c: 697: case 'd':
  4420                           
  4421                           ;doprnt.c: 638: goto alldone;
  4422                           
  4423                           ;doprnt.c: 637: case 0:
  4424                           
  4425                           ;doprnt.c: 635: switch(c = *f++) {
  4426  01B3  0858               	movf	printf@f+1,w
  4427  01B4  00DE               	movwf	??_printf+1
  4428  01B5  0857               	movf	printf@f,w
  4429  01B6  00DD               	movwf	??_printf
  4430  01B7  0AD7               	incf	printf@f,f
  4431  01B8  1903               	skipnz
  4432  01B9  0AD8               	incf	printf@f+1,f
  4433  01BA  085D               	movf	??_printf,w
  4434  01BB  0084               	movwf	4
  4435  01BC  085E               	movf	??_printf+1,w
  4436  01BD  0085               	movwf	5
  4437  01BE  0800               	movf	0,w	;code access
  4438  01BF  00E6               	movwf	printf@c
  4439                           
  4440                           ; Switch size 1, requested type "space"
  4441                           ; Number of cases is 3, Range of values is 0 to 105
  4442                           ; switch strategies available:
  4443                           ; Name         Instructions Cycles
  4444                           ; simple_byte           10     6 (average)
  4445                           ; direct_byte          218     6 (fixed)
  4446                           ; jumptable            260     6 (fixed)
  4447                           ;	Chosen strategy is simple_byte
  4448  01C0  3A00               	xorlw	0	; case 0
  4449  01C1  1903               	skipnz
  4450  01C2  2A47               	goto	l470
  4451  01C3  3A64               	xorlw	100	; case 100
  4452  01C4  1903               	skipnz
  4453  01C5  29CA               	goto	l2194
  4454  01C6  3A0D               	xorlw	13	; case 105
  4455  01C7  1903               	skipnz
  4456  01C8  29CA               	goto	l2194
  4457  01C9  2995               	goto	l2228
  4458  01CA                     l2194:	
  4459                           
  4460                           ;doprnt.c: 1253: {
  4461                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4462  01CA  0861               	movf	printf@ap,w
  4463  01CB  0086               	movwf	6
  4464  01CC  0187               	clrf	7
  4465  01CD  3F40               	moviw [0]fsr1
  4466  01CE  00E4               	movwf	printf@val
  4467  01CF  3F41               	moviw [1]fsr1
  4468  01D0  00E5               	movwf	printf@val+1
  4469  01D1  3002               	movlw	2
  4470  01D2  00DD               	movwf	??_printf
  4471  01D3  085D               	movf	??_printf,w
  4472  01D4  07E1               	addwf	printf@ap,f
  4473                           
  4474                           ;doprnt.c: 1261: if((int)val < 0) {
  4475  01D5  1FE5               	btfss	printf@val+1,7
  4476  01D6  29E0               	goto	l2204
  4477                           
  4478                           ;doprnt.c: 1262: flag |= 0x03;
  4479  01D7  3003               	movlw	3
  4480  01D8  00DD               	movwf	??_printf
  4481  01D9  085D               	movf	??_printf,w
  4482  01DA  04E2               	iorwf	printf@flag,f
  4483                           
  4484                           ;doprnt.c: 1263: val = -val;
  4485  01DB  09E4               	comf	printf@val,f
  4486  01DC  09E5               	comf	printf@val+1,f
  4487  01DD  0AE4               	incf	printf@val,f
  4488  01DE  1903               	skipnz
  4489  01DF  0AE5               	incf	printf@val+1,f
  4490  01E0                     l2204:	
  4491                           
  4492                           ;doprnt.c: 1264: }
  4493                           ;doprnt.c: 1266: }
  4494                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4495  01E0  01E6               	clrf	printf@c
  4496  01E1  0AE6               	incf	printf@c,f
  4497  01E2  3005               	movlw	5
  4498  01E3  0666               	xorwf	printf@c,w
  4499  01E4  1903               	btfsc	3,2
  4500  01E5  2A05               	goto	l2216
  4501  01E6                     l2210:	
  4502                           
  4503                           ;doprnt.c: 1306: if(val < dpowers[c])
  4504  01E6  0866               	movf	printf@c,w
  4505  01E7  00DD               	movwf	??_printf
  4506  01E8  01DE               	clrf	??_printf+1
  4507  01E9  35DD               	lslf	??_printf,f
  4508  01EA  0DDE               	rlf	??_printf+1,f
  4509  01EB  3008               	movlw	low (_dpowers| (0+32768))
  4510  01EC  075D               	addwf	??_printf,w
  4511  01ED  0084               	movwf	4
  4512  01EE  3085               	movlw	high (_dpowers| (0+32768))
  4513  01EF  3D5E               	addwfc	??_printf+1,w
  4514  01F0  0085               	movwf	5
  4515  01F1  3F00               	moviw [0]fsr0
  4516  01F2  00DF               	movwf	??_printf+2
  4517  01F3  3F01               	moviw [1]fsr0
  4518  01F4  00E0               	movwf	??_printf+3
  4519  01F5  0860               	movf	??_printf+3,w
  4520  01F6  0265               	subwf	printf@val+1,w
  4521  01F7  1D03               	skipz
  4522  01F8  29FB               	goto	u1735
  4523  01F9  085F               	movf	??_printf+2,w
  4524  01FA  0264               	subwf	printf@val,w
  4525  01FB                     u1735:	
  4526  01FB  1C03               	btfss	3,0
  4527  01FC  2A05               	goto	l2216
  4528                           
  4529                           ;doprnt.c: 1307: break;
  4530  01FD  3001               	movlw	1
  4531  01FE  00DD               	movwf	??_printf
  4532  01FF  085D               	movf	??_printf,w
  4533  0200  07E6               	addwf	printf@c,f
  4534  0201  3005               	movlw	5
  4535  0202  0666               	xorwf	printf@c,w
  4536  0203  1D03               	btfss	3,2
  4537  0204  29E6               	goto	l2210
  4538  0205                     l2216:	
  4539                           
  4540                           ;doprnt.c: 1422: {
  4541                           ;doprnt.c: 1438: if(flag & 0x03)
  4542  0205  0862               	movf	printf@flag,w
  4543  0206  3903               	andlw	3
  4544  0207  1903               	btfsc	3,2
  4545  0208  2A0D               	goto	l2220
  4546                           
  4547                           ;doprnt.c: 1439: (putch('-') );
  4548  0209  302D               	movlw	45
  4549  020A  3185  2558  3181   	fcall	_putch
  4550  020D                     l2220:	
  4551                           
  4552                           ;doprnt.c: 1469: }
  4553                           ;doprnt.c: 1472: prec = c;
  4554  020D  0020               	movlb	0	; select bank0
  4555  020E  0866               	movf	printf@c,w
  4556  020F  00DD               	movwf	??_printf
  4557  0210  085D               	movf	??_printf,w
  4558  0211  00E3               	movwf	printf@prec
  4559  0212                     l2226:	
  4560                           ;doprnt.c: 1474: while(prec--) {
  4561                           
  4562  0212  30FF               	movlw	255
  4563  0213  0020               	movlb	0	; select bank0
  4564  0214  00DD               	movwf	??_printf
  4565  0215  085D               	movf	??_printf,w
  4566  0216  07E3               	addwf	printf@prec,f
  4567  0217  0A63               	incf	printf@prec,w
  4568  0218  1903               	btfsc	3,2
  4569  0219  2995               	goto	l2228
  4570                           
  4571                           ;doprnt.c: 1478: {
  4572                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4573  021A  300A               	movlw	10
  4574  021B  00D1               	movwf	___lwmod@divisor
  4575  021C  3000               	movlw	0
  4576  021D  00D2               	movwf	___lwmod@divisor+1
  4577  021E  0863               	movf	printf@prec,w
  4578  021F  00DD               	movwf	??_printf
  4579  0220  01DE               	clrf	??_printf+1
  4580  0221  35DD               	lslf	??_printf,f
  4581  0222  0DDE               	rlf	??_printf+1,f
  4582  0223  3008               	movlw	low (_dpowers| (0+32768))
  4583  0224  075D               	addwf	??_printf,w
  4584  0225  0084               	movwf	4
  4585  0226  3085               	movlw	high (_dpowers| (0+32768))
  4586  0227  3D5E               	addwfc	??_printf+1,w
  4587  0228  0085               	movwf	5
  4588  0229  3F00               	moviw [0]fsr0
  4589  022A  00C9               	movwf	___lwdiv@divisor
  4590  022B  3F01               	moviw [1]fsr0
  4591  022C  00CA               	movwf	___lwdiv@divisor+1
  4592  022D  0865               	movf	printf@val+1,w
  4593  022E  00CC               	movwf	___lwdiv@dividend+1
  4594  022F  0864               	movf	printf@val,w
  4595  0230  00CB               	movwf	___lwdiv@dividend
  4596  0231  3183  2383  3181   	fcall	___lwdiv
  4597  0234  0020               	movlb	0	; select bank0
  4598  0235  084A               	movf	?___lwdiv+1,w
  4599  0236  00D4               	movwf	___lwmod@dividend+1
  4600  0237  0849               	movf	?___lwdiv,w
  4601  0238  00D3               	movwf	___lwmod@dividend
  4602  0239  3183  23B8  3181   	fcall	___lwmod
  4603  023C  0020               	movlb	0	; select bank0
  4604  023D  0851               	movf	?___lwmod,w
  4605  023E  3E30               	addlw	48
  4606  023F  00DF               	movwf	??_printf+2
  4607  0240  085F               	movf	??_printf+2,w
  4608  0241  00E6               	movwf	printf@c
  4609                           
  4610                           ;doprnt.c: 1523: }
  4611                           ;doprnt.c: 1524: (putch(c) );
  4612  0242  0866               	movf	printf@c,w
  4613  0243  3185  2558  3181   	fcall	_putch
  4614  0246  2A12               	goto	l2226
  4615  0247                     l470:	
  4616                           ;doprnt.c: 1540: return 0;
  4617                           ;	Return value of _printf is never used
  4618                           
  4619                           ;doprnt.c: 1525: }
  4620                           ;doprnt.c: 1533: }
  4621                           ;doprnt.c: 1535: alldone:
  4622                           
  4623  0247  0008               	return
  4624  0248                     __end_of_printf:	
  4625                           
  4626                           	psect	text2
  4627  0558                     __ptext2:	
  4628 ;; *************** function _putch *****************
  4629 ;; Defined at:
  4630 ;;		line 160 in file "mcc_generated_files/eusart.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  txData          1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  txData          1    2[BANK0 ] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;Total ram usage:        1 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    4
  4651 ;; This function calls:
  4652 ;;		_EUSART_Write
  4653 ;; This function is called by:
  4654 ;;		_printf
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _putch
  4660  0558                     _putch:	
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4664                           ;putch@txData stored from wreg
  4665  0558  0020               	movlb	0	; select bank0
  4666  0559  00CB               	movwf	putch@txData
  4667                           
  4668                           ;eusart.c: 162: EUSART_Write(txData);
  4669  055A  084B               	movf	putch@txData,w
  4670  055B  3184  240D         	fcall	_EUSART_Write
  4671  055D  0008               	return
  4672  055E                     __end_of_putch:	
  4673                           
  4674                           	psect	text3
  4675  040D                     __ptext3:	
  4676 ;; *************** function _EUSART_Write *****************
  4677 ;; Defined at:
  4678 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  txData          1    wreg     unsigned char 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  txData          1    1[BANK0 ] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;Total ram usage:        2 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    3
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_putch
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _EUSART_Write
  4709  040D                     _EUSART_Write:	
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4713                           ;EUSART_Write@txData stored from wreg
  4714  040D  0020               	movlb	0	; select bank0
  4715  040E  00CA               	movwf	EUSART_Write@txData
  4716  040F                     l1550:	
  4717                           ;eusart.c: 135: {
  4718                           
  4719                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
  4720                           
  4721  040F  086B               	movf	_eusartTxBufferRemaining,w	;volatile
  4722  0410  1903               	btfsc	3,2
  4723  0411  2C0F               	goto	l1550
  4724                           
  4725                           ;eusart.c: 136: }
  4726                           ;eusart.c: 138: if(0 == PIE3bits.TXIE)
  4727  0412  002E               	movlb	14	; select bank14
  4728  0413  1A19               	btfsc	25,4	;volatile
  4729  0414  2C1A               	goto	l50
  4730                           
  4731                           ;eusart.c: 139: {
  4732                           ;eusart.c: 140: TX1REG = txData;
  4733  0415  0020               	movlb	0	; select bank0
  4734  0416  084A               	movf	EUSART_Write@txData,w
  4735  0417  0022               	movlb	2	; select bank2
  4736  0418  009A               	movwf	26	;volatile
  4737                           
  4738                           ;eusart.c: 141: }
  4739  0419  2C2E               	goto	l1564
  4740  041A                     l50:	
  4741                           
  4742                           ;eusart.c: 142: else
  4743                           ;eusart.c: 143: {
  4744                           ;eusart.c: 144: PIE3bits.TXIE = 0;
  4745  041A  1219               	bcf	25,4	;volatile
  4746                           
  4747                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
  4748  041B  0020               	movlb	0	; select bank0
  4749  041C  084A               	movf	EUSART_Write@txData,w
  4750  041D  00C9               	movwf	??_EUSART_Write
  4751  041E  0871               	movf	_eusartTxHead,w
  4752  041F  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4753  0420  0086               	movwf	6
  4754  0421  0187               	clrf	7
  4755  0422  0849               	movf	??_EUSART_Write,w
  4756  0423  0081               	movwf	1
  4757  0424  3001               	movlw	1
  4758  0425  00C9               	movwf	??_EUSART_Write
  4759  0426  0849               	movf	??_EUSART_Write,w
  4760  0427  07F1               	addwf	_eusartTxHead,f
  4761                           
  4762                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4763  0428  3008               	movlw	8
  4764  0429  0271               	subwf	_eusartTxHead,w
  4765  042A  1803               	btfsc	3,0
  4766                           
  4767                           ;eusart.c: 147: {
  4768                           ;eusart.c: 148: eusartTxHead = 0;
  4769  042B  01F1               	clrf	_eusartTxHead
  4770                           
  4771                           ;eusart.c: 149: }
  4772                           ;eusart.c: 150: eusartTxBufferRemaining--;
  4773  042C  3001               	movlw	1
  4774  042D  02EB               	subwf	_eusartTxBufferRemaining,f	;volatile
  4775  042E                     l1564:	
  4776                           
  4777                           ;eusart.c: 151: }
  4778                           ;eusart.c: 152: PIE3bits.TXIE = 1;
  4779  042E  002E               	movlb	14	; select bank14
  4780  042F  1619               	bsf	25,4	;volatile
  4781  0430  0008               	return
  4782  0431                     __end_of_EUSART_Write:	
  4783                           
  4784                           	psect	text4
  4785  03B8                     __ptext4:	
  4786 ;; *************** function ___lwmod *****************
  4787 ;; Defined at:
  4788 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  divisor         2    8[BANK0 ] unsigned int 
  4791 ;;  dividend        2   10[BANK0 ] unsigned int 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  counter         1   13[BANK0 ] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2    8[BANK0 ] unsigned int 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;Total ram usage:        6 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    3
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_printf
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function ___lwmod
  4819  03B8                     ___lwmod:	
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4823  03B8  0020               	movlb	0	; select bank0
  4824  03B9  0851               	movf	___lwmod@divisor,w
  4825  03BA  0452               	iorwf	___lwmod@divisor+1,w
  4826  03BB  1903               	btfsc	3,2
  4827  03BC  2BE0               	goto	l1748
  4828  03BD  01D6               	clrf	___lwmod@counter
  4829  03BE  0AD6               	incf	___lwmod@counter,f
  4830  03BF                     l1738:	
  4831  03BF  1BD2               	btfsc	___lwmod@divisor+1,7
  4832  03C0  2BCB               	goto	l1740
  4833  03C1  3001               	movlw	1
  4834  03C2                     u1055:	
  4835  03C2  35D1               	lslf	___lwmod@divisor,f
  4836  03C3  0DD2               	rlf	___lwmod@divisor+1,f
  4837  03C4  0B89               	decfsz	9,f
  4838  03C5  2BC2               	goto	u1055
  4839  03C6  3001               	movlw	1
  4840  03C7  00D5               	movwf	??___lwmod
  4841  03C8  0855               	movf	??___lwmod,w
  4842  03C9  07D6               	addwf	___lwmod@counter,f
  4843  03CA  2BBF               	goto	l1738
  4844  03CB                     l1740:	
  4845  03CB  0852               	movf	___lwmod@divisor+1,w
  4846  03CC  0254               	subwf	___lwmod@dividend+1,w
  4847  03CD  1D03               	skipz
  4848  03CE  2BD1               	goto	u1075
  4849  03CF  0851               	movf	___lwmod@divisor,w
  4850  03D0  0253               	subwf	___lwmod@dividend,w
  4851  03D1                     u1075:	
  4852  03D1  1C03               	skipc
  4853  03D2  2BD7               	goto	l1744
  4854  03D3  0851               	movf	___lwmod@divisor,w
  4855  03D4  02D3               	subwf	___lwmod@dividend,f
  4856  03D5  0852               	movf	___lwmod@divisor+1,w
  4857  03D6  3BD4               	subwfb	___lwmod@dividend+1,f
  4858  03D7                     l1744:	
  4859  03D7  3001               	movlw	1
  4860  03D8                     u1085:	
  4861  03D8  36D2               	lsrf	___lwmod@divisor+1,f
  4862  03D9  0CD1               	rrf	___lwmod@divisor,f
  4863  03DA  0B89               	decfsz	9,f
  4864  03DB  2BD8               	goto	u1085
  4865  03DC  3001               	movlw	1
  4866  03DD  02D6               	subwf	___lwmod@counter,f
  4867  03DE  1D03               	btfss	3,2
  4868  03DF  2BCB               	goto	l1740
  4869  03E0                     l1748:	
  4870  03E0  0854               	movf	___lwmod@dividend+1,w
  4871  03E1  00D2               	movwf	?___lwmod+1
  4872  03E2  0853               	movf	___lwmod@dividend,w
  4873  03E3  00D1               	movwf	?___lwmod
  4874  03E4  0008               	return
  4875  03E5                     __end_of___lwmod:	
  4876                           
  4877                           	psect	text5
  4878  0383                     __ptext5:	
  4879 ;; *************** function ___lwdiv *****************
  4880 ;; Defined at:
  4881 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  divisor         2    0[BANK0 ] unsigned int 
  4884 ;;  dividend        2    2[BANK0 ] unsigned int 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  quotient        2    5[BANK0 ] unsigned int 
  4887 ;;  counter         1    7[BANK0 ] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  2    0[BANK0 ] unsigned int 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:        8 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_printf
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function ___lwdiv
  4913  0383                     ___lwdiv:	
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4917  0383  0020               	movlb	0	; select bank0
  4918  0384  01CE               	clrf	___lwdiv@quotient
  4919  0385  01CF               	clrf	___lwdiv@quotient+1
  4920  0386  0849               	movf	___lwdiv@divisor,w
  4921  0387  044A               	iorwf	___lwdiv@divisor+1,w
  4922  0388  1903               	btfsc	3,2
  4923  0389  2BB3               	goto	l1726
  4924  038A  01D0               	clrf	___lwdiv@counter
  4925  038B  0AD0               	incf	___lwdiv@counter,f
  4926  038C                     l1714:	
  4927  038C  1BCA               	btfsc	___lwdiv@divisor+1,7
  4928  038D  2B98               	goto	l1716
  4929  038E  3001               	movlw	1
  4930  038F                     u985:	
  4931  038F  35C9               	lslf	___lwdiv@divisor,f
  4932  0390  0DCA               	rlf	___lwdiv@divisor+1,f
  4933  0391  0B89               	decfsz	9,f
  4934  0392  2B8F               	goto	u985
  4935  0393  3001               	movlw	1
  4936  0394  00CD               	movwf	??___lwdiv
  4937  0395  084D               	movf	??___lwdiv,w
  4938  0396  07D0               	addwf	___lwdiv@counter,f
  4939  0397  2B8C               	goto	l1714
  4940  0398                     l1716:	
  4941  0398  3001               	movlw	1
  4942  0399                     u1005:	
  4943  0399  35CE               	lslf	___lwdiv@quotient,f
  4944  039A  0DCF               	rlf	___lwdiv@quotient+1,f
  4945  039B  0B89               	decfsz	9,f
  4946  039C  2B99               	goto	u1005
  4947  039D  084A               	movf	___lwdiv@divisor+1,w
  4948  039E  024C               	subwf	___lwdiv@dividend+1,w
  4949  039F  1D03               	skipz
  4950  03A0  2BA3               	goto	u1015
  4951  03A1  0849               	movf	___lwdiv@divisor,w
  4952  03A2  024B               	subwf	___lwdiv@dividend,w
  4953  03A3                     u1015:	
  4954  03A3  1C03               	skipc
  4955  03A4  2BAA               	goto	l1722
  4956  03A5  0849               	movf	___lwdiv@divisor,w
  4957  03A6  02CB               	subwf	___lwdiv@dividend,f
  4958  03A7  084A               	movf	___lwdiv@divisor+1,w
  4959  03A8  3BCC               	subwfb	___lwdiv@dividend+1,f
  4960  03A9  144E               	bsf	___lwdiv@quotient,0
  4961  03AA                     l1722:	
  4962  03AA  3001               	movlw	1
  4963  03AB                     u1025:	
  4964  03AB  36CA               	lsrf	___lwdiv@divisor+1,f
  4965  03AC  0CC9               	rrf	___lwdiv@divisor,f
  4966  03AD  0B89               	decfsz	9,f
  4967  03AE  2BAB               	goto	u1025
  4968  03AF  3001               	movlw	1
  4969  03B0  02D0               	subwf	___lwdiv@counter,f
  4970  03B1  1D03               	btfss	3,2
  4971  03B2  2B98               	goto	l1716
  4972  03B3                     l1726:	
  4973  03B3  084F               	movf	___lwdiv@quotient+1,w
  4974  03B4  00CA               	movwf	?___lwdiv+1
  4975  03B5  084E               	movf	___lwdiv@quotient,w
  4976  03B6  00C9               	movwf	?___lwdiv
  4977  03B7  0008               	return
  4978  03B8                     __end_of___lwdiv:	
  4979                           
  4980                           	psect	text6
  4981  046E                     __ptext6:	
  4982 ;; *************** function ___wmul *****************
  4983 ;; Defined at:
  4984 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4987 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  product         2    4[BANK0 ] unsigned int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    0[BANK0 ] unsigned int 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        6 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    3
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function ___wmul
  5015  046E                     ___wmul:	
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5019  046E  0020               	movlb	0	; select bank0
  5020  046F  01CD               	clrf	___wmul@product
  5021  0470  01CE               	clrf	___wmul@product+1
  5022  0471                     l2232:	
  5023  0471  1C49               	btfss	___wmul@multiplier,0
  5024  0472  2C77               	goto	l552
  5025  0473  084B               	movf	___wmul@multiplicand,w
  5026  0474  07CD               	addwf	___wmul@product,f
  5027  0475  084C               	movf	___wmul@multiplicand+1,w
  5028  0476  3DCE               	addwfc	___wmul@product+1,f
  5029  0477                     l552:	
  5030  0477  3001               	movlw	1
  5031  0478                     u1795:	
  5032  0478  35CB               	lslf	___wmul@multiplicand,f
  5033  0479  0DCC               	rlf	___wmul@multiplicand+1,f
  5034  047A  0B89               	decfsz	9,f
  5035  047B  2C78               	goto	u1795
  5036  047C  3001               	movlw	1
  5037  047D                     u1805:	
  5038  047D  36CA               	lsrf	___wmul@multiplier+1,f
  5039  047E  0CC9               	rrf	___wmul@multiplier,f
  5040  047F  0B89               	decfsz	9,f
  5041  0480  2C7D               	goto	u1805
  5042  0481  0849               	movf	___wmul@multiplier,w
  5043  0482  044A               	iorwf	___wmul@multiplier+1,w
  5044  0483  1D03               	btfss	3,2
  5045  0484  2C71               	goto	l2232
  5046  0485  084E               	movf	___wmul@product+1,w
  5047  0486  00CA               	movwf	?___wmul+1
  5048  0487  084D               	movf	___wmul@product,w
  5049  0488  00C9               	movwf	?___wmul
  5050  0489  0008               	return
  5051  048A                     __end_of___wmul:	
  5052                           
  5053                           	psect	text7
  5054  052B                     __ptext7:	
  5055 ;; *************** function _SYSTEM_Initialize *****************
  5056 ;; Defined at:
  5057 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0, pclath, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    5
  5078 ;; This function calls:
  5079 ;;		_EUSART_Initialize
  5080 ;;		_I2C2_Initialize
  5081 ;;		_OSCILLATOR_Initialize
  5082 ;;		_PIN_MANAGER_Initialize
  5083 ;;		_TMR6_Initialize
  5084 ;; This function is called by:
  5085 ;;		_main
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _SYSTEM_Initialize
  5091  052B                     _SYSTEM_Initialize:	
  5092                           
  5093                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5097  052B  3182  22B5  3185   	fcall	_PIN_MANAGER_Initialize
  5098                           
  5099                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5100  052E  3185  2549  3185   	fcall	_OSCILLATOR_Initialize
  5101                           
  5102                           ;mcc.c: 87: I2C2_Initialize();
  5103  0531  3184  24C0  3185   	fcall	_I2C2_Initialize
  5104                           
  5105                           ;mcc.c: 88: TMR6_Initialize();
  5106  0534  3185  253A  3185   	fcall	_TMR6_Initialize
  5107                           
  5108                           ;mcc.c: 89: EUSART_Initialize();
  5109  0537  3184  248A         	fcall	_EUSART_Initialize
  5110  0539  0008               	return
  5111  053A                     __end_of_SYSTEM_Initialize:	
  5112                           
  5113                           	psect	text8
  5114  053A                     __ptext8:	
  5115 ;; *************** function _TMR6_Initialize *****************
  5116 ;; Defined at:
  5117 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;Total ram usage:        0 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    4
  5138 ;; This function calls:
  5139 ;;		_TMR6_Start
  5140 ;; This function is called by:
  5141 ;;		_SYSTEM_Initialize
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _TMR6_Initialize
  5147  053A                     _TMR6_Initialize:	
  5148                           
  5149                           ;tmr6.c: 68: T6CON = 0x79;
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5153  053A  3079               	movlw	121
  5154  053B  0025               	movlb	5	; select bank5
  5155  053C  009A               	movwf	26	;volatile
  5156                           
  5157                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5158  053D  3004               	movlw	4
  5159  053E  009C               	movwf	28	;volatile
  5160                           
  5161                           ;tmr6.c: 74: T6HLT = 0x00;
  5162  053F  019B               	clrf	27	;volatile
  5163                           
  5164                           ;tmr6.c: 77: T6RST = 0x00;
  5165  0540  019D               	clrf	29	;volatile
  5166                           
  5167                           ;tmr6.c: 80: T6PR = 0x2F;
  5168  0541  302F               	movlw	47
  5169  0542  0099               	movwf	25	;volatile
  5170                           
  5171                           ;tmr6.c: 83: T6TMR = 0x00;
  5172  0543  0198               	clrf	24	;volatile
  5173                           
  5174                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5175  0544  002E               	movlb	14	; select bank14
  5176  0545  1290               	bcf	16,5	;volatile
  5177                           
  5178                           ;tmr6.c: 89: TMR6_Start();
  5179  0546  3185  255E         	fcall	_TMR6_Start
  5180  0548  0008               	return
  5181  0549                     __end_of_TMR6_Initialize:	
  5182                           
  5183                           	psect	text9
  5184  055E                     __ptext9:	
  5185 ;; *************** function _TMR6_Start *****************
  5186 ;; Defined at:
  5187 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		None
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    3
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_TMR6_Initialize
  5212 ;;		_main
  5213 ;;		_TMR6_StartTimer
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _TMR6_Start
  5219  055E                     _TMR6_Start:	
  5220                           
  5221                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _TMR6_Start: []
  5225  055E  0025               	movlb	5	; select bank5
  5226  055F  179A               	bsf	26,7	;volatile
  5227  0560  0008               	return
  5228  0561                     __end_of_TMR6_Start:	
  5229                           
  5230                           	psect	text10
  5231  02B5                     __ptext10:	
  5232 ;; *************** function _PIN_MANAGER_Initialize *****************
  5233 ;; Defined at:
  5234 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  state           1    0[BANK0 ] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;Total ram usage:        1 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    3
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_SYSTEM_Initialize
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _PIN_MANAGER_Initialize
  5264  02B5                     _PIN_MANAGER_Initialize:	
  5265                           
  5266                           ;pin_manager.c: 56: LATA = 0x00;
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5270  02B5  0020               	movlb	0	; select bank0
  5271  02B6  0196               	clrf	22	;volatile
  5272                           
  5273                           ;pin_manager.c: 57: LATB = 0x00;
  5274  02B7  0197               	clrf	23	;volatile
  5275                           
  5276                           ;pin_manager.c: 58: LATC = 0x00;
  5277  02B8  0198               	clrf	24	;volatile
  5278                           
  5279                           ;pin_manager.c: 63: TRISA = 0xFC;
  5280  02B9  30FC               	movlw	252
  5281  02BA  0091               	movwf	17	;volatile
  5282                           
  5283                           ;pin_manager.c: 64: TRISB = 0xFF;
  5284  02BB  30FF               	movlw	255
  5285  02BC  0092               	movwf	18	;volatile
  5286                           
  5287                           ;pin_manager.c: 65: TRISC = 0xBE;
  5288  02BD  30BE               	movlw	190
  5289  02BE  0093               	movwf	19	;volatile
  5290                           
  5291                           ;pin_manager.c: 70: ANSELC = 0xE5;
  5292  02BF  30E5               	movlw	229
  5293  02C0  003E               	movlb	30	; select bank30
  5294  02C1  00CE               	movwf	78	;volatile
  5295                           
  5296                           ;pin_manager.c: 71: ANSELB = 0x7F;
  5297  02C2  307F               	movlw	127
  5298  02C3  00C3               	movwf	67	;volatile
  5299                           
  5300                           ;pin_manager.c: 72: ANSELA = 0xDC;
  5301  02C4  30DC               	movlw	220
  5302  02C5  00B8               	movwf	56	;volatile
  5303                           
  5304                           ;pin_manager.c: 77: WPUE = 0x00;
  5305  02C6  01E5               	clrf	101	;volatile
  5306                           
  5307                           ;pin_manager.c: 78: WPUB = 0x00;
  5308  02C7  01C4               	clrf	68	;volatile
  5309                           
  5310                           ;pin_manager.c: 79: WPUA = 0x00;
  5311  02C8  01B9               	clrf	57	;volatile
  5312                           
  5313                           ;pin_manager.c: 80: WPUC = 0x00;
  5314  02C9  01CF               	clrf	79	;volatile
  5315                           
  5316                           ;pin_manager.c: 85: ODCONA = 0x00;
  5317  02CA  01BA               	clrf	58	;volatile
  5318                           
  5319                           ;pin_manager.c: 86: ODCONB = 0x00;
  5320  02CB  01C5               	clrf	69	;volatile
  5321                           
  5322                           ;pin_manager.c: 87: ODCONC = 0x00;
  5323  02CC  01D0               	clrf	80	;volatile
  5324                           
  5325                           ;pin_manager.c: 94: bool state = GIE;
  5326  02CD  3000               	movlw	0
  5327  02CE  1B8B               	btfsc	11,7	;volatile
  5328  02CF  3001               	movlw	1
  5329  02D0  0020               	movlb	0	; select bank0
  5330  02D1  00C9               	movwf	PIN_MANAGER_Initialize@state
  5331                           
  5332                           ;pin_manager.c: 95: GIE = 0;
  5333  02D2  138B               	bcf	11,7	;volatile
  5334                           
  5335                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  5336  02D3  3055               	movlw	85
  5337  02D4  003D               	movlb	29	; select bank29
  5338  02D5  008F               	movwf	15	;volatile
  5339                           
  5340                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  5341  02D6  30AA               	movlw	170
  5342  02D7  008F               	movwf	15	;volatile
  5343                           
  5344                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  5345  02D8  100F               	bcf	15,0	;volatile
  5346                           
  5347                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  5348  02D9  081E               	movf	30,w	;volatile
  5349  02DA  39E0               	andlw	-32
  5350  02DB  380F               	iorlw	15
  5351  02DC  009E               	movwf	30	;volatile
  5352                           
  5353                           ;pin_manager.c: 101: RC0PPS = 0x10;
  5354  02DD  3010               	movlw	16
  5355  02DE  003E               	movlb	30	; select bank30
  5356  02DF  00A0               	movwf	32	;volatile
  5357                           
  5358                           ;pin_manager.c: 102: RXPPSbits.RXPPS = 0x11;
  5359  02E0  003D               	movlb	29	; select bank29
  5360  02E1  084B               	movf	75,w	;volatile
  5361  02E2  39E0               	andlw	-32
  5362  02E3  3811               	iorlw	17
  5363  02E4  00CB               	movwf	75	;volatile
  5364                           
  5365                           ;pin_manager.c: 103: RC3PPS = 0x17;
  5366  02E5  3017               	movlw	23
  5367  02E6  003E               	movlb	30	; select bank30
  5368  02E7  00A3               	movwf	35	;volatile
  5369                           
  5370                           ;pin_manager.c: 104: RC4PPS = 0x16;
  5371  02E8  3016               	movlw	22
  5372  02E9  00A4               	movwf	36	;volatile
  5373                           
  5374                           ;pin_manager.c: 105: RC6PPS = 0x10;
  5375  02EA  3010               	movlw	16
  5376  02EB  00A6               	movwf	38	;volatile
  5377                           
  5378                           ;pin_manager.c: 106: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5379  02EC  003D               	movlb	29	; select bank29
  5380  02ED  0849               	movf	73,w	;volatile
  5381  02EE  39E0               	andlw	-32
  5382  02EF  3813               	iorlw	19
  5383  02F0  00C9               	movwf	73	;volatile
  5384                           
  5385                           ;pin_manager.c: 107: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5386  02F1  0848               	movf	72,w	;volatile
  5387  02F2  39E0               	andlw	-32
  5388  02F3  3814               	iorlw	20
  5389  02F4  00C8               	movwf	72	;volatile
  5390                           
  5391                           ;pin_manager.c: 109: PPSLOCK = 0x55;
  5392  02F5  3055               	movlw	85
  5393  02F6  008F               	movwf	15	;volatile
  5394                           
  5395                           ;pin_manager.c: 110: PPSLOCK = 0xAA;
  5396  02F7  30AA               	movlw	170
  5397  02F8  008F               	movwf	15	;volatile
  5398                           
  5399                           ;pin_manager.c: 111: PPSLOCKbits.PPSLOCKED = 0x01;
  5400  02F9  140F               	bsf	15,0	;volatile
  5401                           
  5402                           ;pin_manager.c: 113: GIE = state;
  5403  02FA  0020               	movlb	0	; select bank0
  5404  02FB  1C49               	btfss	PIN_MANAGER_Initialize@state,0
  5405  02FC  2AFF               	goto	u1680
  5406  02FD  178B               	bsf	11,7	;volatile
  5407  02FE  0008               	return
  5408  02FF                     u1680:	
  5409  02FF  138B               	bcf	11,7	;volatile
  5410  0300  0008               	return
  5411  0301                     __end_of_PIN_MANAGER_Initialize:	
  5412                           
  5413                           	psect	text11
  5414  0549                     __ptext11:	
  5415 ;; *************** function _OSCILLATOR_Initialize *****************
  5416 ;; Defined at:
  5417 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    3
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_SYSTEM_Initialize
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           
  5446                           ;psect for function _OSCILLATOR_Initialize
  5447  0549                     _OSCILLATOR_Initialize:	
  5448                           
  5449                           ;mcc.c: 95: OSCCON1 = 0x10;
  5450                           
  5451                           ;incstack = 0
  5452                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5453  0549  3010               	movlw	16
  5454  054A  0031               	movlb	17	; select bank17
  5455  054B  008D               	movwf	13	;volatile
  5456                           
  5457                           ;mcc.c: 97: OSCCON3 = 0x00;
  5458  054C  018F               	clrf	15	;volatile
  5459                           
  5460                           ;mcc.c: 99: OSCEN = 0x00;
  5461  054D  0191               	clrf	17	;volatile
  5462                           
  5463                           ;mcc.c: 101: OSCFRQ = 0x05;
  5464  054E  3005               	movlw	5
  5465  054F  0093               	movwf	19	;volatile
  5466                           
  5467                           ;mcc.c: 103: OSCTUNE = 0x00;
  5468  0550  0192               	clrf	18	;volatile
  5469  0551  0008               	return
  5470  0552                     __end_of_OSCILLATOR_Initialize:	
  5471                           
  5472                           	psect	text12
  5473  04C0                     __ptext12:	
  5474 ;; *************** function _I2C2_Initialize *****************
  5475 ;; Defined at:
  5476 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:        1 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    3
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_SYSTEM_Initialize
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function _I2C2_Initialize
  5506  04C0                     _I2C2_Initialize:	
  5507                           
  5508                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5512  04C0  3046               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5513  04C1  0020               	movlb	0	; select bank0
  5514  04C2  00C9               	movwf	??_I2C2_Initialize
  5515  04C3  0849               	movf	??_I2C2_Initialize,w
  5516  04C4  00A9               	movwf	low ((_i2c2_object| 0+1))
  5517                           
  5518                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5519  04C5  3046               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5520  04C6  00C9               	movwf	??_I2C2_Initialize
  5521  04C7  0849               	movf	??_I2C2_Initialize,w
  5522  04C8  00A8               	movwf	_i2c2_object
  5523                           
  5524                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5525  04C9  14AA               	bsf	_i2c2_object+2,1
  5526                           
  5527                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5528  04CA  102A               	bcf	_i2c2_object+2,0
  5529                           
  5530                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5531  04CB  01AC               	clrf	_i2c2_object+4
  5532                           
  5533                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5534  04CC  3080               	movlw	128
  5535  04CD  0023               	movlb	3	; select bank3
  5536  04CE  0099               	movwf	25	;volatile
  5537                           
  5538                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5539  04CF  3028               	movlw	40
  5540  04D0  009A               	movwf	26	;volatile
  5541                           
  5542                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5543  04D1  019C               	clrf	28	;volatile
  5544                           
  5545                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  5546  04D2  309F               	movlw	159
  5547  04D3  0097               	movwf	23	;volatile
  5548                           
  5549                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5550  04D4  002E               	movlb	14	; select bank14
  5551  04D5  110F               	bcf	15,2	;volatile
  5552                           
  5553                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5554  04D6  1519               	bsf	25,2	;volatile
  5555  04D7  0008               	return
  5556  04D8                     __end_of_I2C2_Initialize:	
  5557                           
  5558                           	psect	text13
  5559  048A                     __ptext13:	
  5560 ;; *************** function _EUSART_Initialize *****************
  5561 ;; Defined at:
  5562 ;;		line 75 in file "mcc_generated_files/eusart.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    3
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_SYSTEM_Initialize
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function _EUSART_Initialize
  5592  048A                     _EUSART_Initialize:	
  5593                           
  5594                           ;eusart.c: 78: PIE3bits.RCIE = 0;
  5595                           
  5596                           ;incstack = 0
  5597                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5598  048A  002E               	movlb	14	; select bank14
  5599  048B  1299               	bcf	25,5	;volatile
  5600                           
  5601                           ;eusart.c: 79: PIE3bits.TXIE = 0;
  5602  048C  1219               	bcf	25,4	;volatile
  5603                           
  5604                           ;eusart.c: 84: BAUD1CON = 0x08;
  5605  048D  3008               	movlw	8
  5606  048E  0022               	movlb	2	; select bank2
  5607  048F  009F               	movwf	31	;volatile
  5608                           
  5609                           ;eusart.c: 87: RC1STA = 0x90;
  5610  0490  3090               	movlw	144
  5611  0491  009D               	movwf	29	;volatile
  5612                           
  5613                           ;eusart.c: 90: TX1STA = 0x24;
  5614  0492  3024               	movlw	36
  5615  0493  009E               	movwf	30	;volatile
  5616                           
  5617                           ;eusart.c: 93: SP1BRGL = 0x40;
  5618  0494  3040               	movlw	64
  5619  0495  009B               	movwf	27	;volatile
  5620                           
  5621                           ;eusart.c: 96: SP1BRGH = 0x03;
  5622  0496  3003               	movlw	3
  5623  0497  009C               	movwf	28	;volatile
  5624                           
  5625                           ;eusart.c: 100: eusartTxHead = 0;
  5626  0498  01F1               	clrf	_eusartTxHead
  5627                           
  5628                           ;eusart.c: 101: eusartTxTail = 0;
  5629  0499  01F2               	clrf	_eusartTxTail
  5630                           
  5631                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  5632  049A  3008               	movlw	8
  5633  049B  0020               	movlb	0	; select bank0
  5634  049C  00C9               	movwf	??_EUSART_Initialize
  5635  049D  0849               	movf	??_EUSART_Initialize,w
  5636  049E  00EB               	movwf	_eusartTxBufferRemaining	;volatile
  5637                           
  5638                           ;eusart.c: 104: eusartRxHead = 0;
  5639  049F  01F0               	clrf	_eusartRxHead
  5640                           
  5641                           ;eusart.c: 105: eusartRxTail = 0;
  5642  04A0  01B3               	clrf	_eusartRxTail
  5643                           
  5644                           ;eusart.c: 106: eusartRxCount = 0;
  5645  04A1  01B2               	clrf	_eusartRxCount	;volatile
  5646                           
  5647                           ;eusart.c: 109: PIE3bits.RCIE = 1;
  5648  04A2  002E               	movlb	14	; select bank14
  5649  04A3  1699               	bsf	25,5	;volatile
  5650  04A4  0008               	return
  5651  04A5                     __end_of_EUSART_Initialize:	
  5652                           
  5653                           	psect	text14
  5654  0347                     __ptext14:	
  5655 ;; *************** function _EMC1001_Read *****************
  5656 ;; Defined at:
  5657 ;;		line 8 in file "main.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  reg             1    wreg     unsigned char 
  5660 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5661 ;;		 -> main@templo(1), main@temp(1), 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  reg             1   10[BANK0 ] unsigned char 
  5664 ;;  status          1   11[BANK0 ] enum E13640
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      unsigned char 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        5 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    4
  5681 ;; This function calls:
  5682 ;;		_I2C2_MasterReadTRBBuild
  5683 ;;		_I2C2_MasterTRBInsert
  5684 ;;		_I2C2_MasterWriteTRBBuild
  5685 ;; This function is called by:
  5686 ;;		_main
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _EMC1001_Read
  5692  0347                     _EMC1001_Read:	
  5693                           
  5694                           ;incstack = 0
  5695                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5696                           ;EMC1001_Read@reg stored from wreg
  5697  0347  0020               	movlb	0	; select bank0
  5698  0348  00D3               	movwf	EMC1001_Read@reg
  5699                           
  5700                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5701  0349  3002               	movlw	2
  5702  034A  00D1               	movwf	??_EMC1001_Read
  5703  034B  0851               	movf	??_EMC1001_Read,w
  5704  034C  00D4               	movwf	EMC1001_Read@status
  5705                           
  5706                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5707                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5708  034D  3053               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5709  034E  00D1               	movwf	??_EMC1001_Read
  5710  034F  0851               	movf	??_EMC1001_Read,w
  5711  0350  00C9               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5712  0351  01CA               	clrf	I2C2_MasterWriteTRBBuild@length
  5713  0352  0ACA               	incf	I2C2_MasterWriteTRBBuild@length,f
  5714  0353  3038               	movlw	56
  5715  0354  00CB               	movwf	I2C2_MasterWriteTRBBuild@address
  5716  0355  3000               	movlw	0
  5717  0356  00CC               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5718  0357  3036               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5719  0358  3184  2431  3183   	fcall	_I2C2_MasterWriteTRBBuild
  5720                           
  5721                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5722  035B  0020               	movlb	0	; select bank0
  5723  035C  0850               	movf	EMC1001_Read@pData,w
  5724  035D  00D1               	movwf	??_EMC1001_Read
  5725  035E  0851               	movf	??_EMC1001_Read,w
  5726  035F  00C9               	movwf	I2C2_MasterReadTRBBuild@pdata
  5727  0360  01CA               	clrf	I2C2_MasterReadTRBBuild@length
  5728  0361  0ACA               	incf	I2C2_MasterReadTRBBuild@length,f
  5729  0362  3038               	movlw	56
  5730  0363  00CB               	movwf	I2C2_MasterReadTRBBuild@address
  5731  0364  3000               	movlw	0
  5732  0365  00CC               	movwf	I2C2_MasterReadTRBBuild@address+1
  5733  0366  303A               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5734  0367  3183  23E5  3183   	fcall	_I2C2_MasterReadTRBBuild
  5735                           
  5736                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5737  036A  3036               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5738  036B  0020               	movlb	0	; select bank0
  5739  036C  00D1               	movwf	??_EMC1001_Read
  5740  036D  0851               	movf	??_EMC1001_Read,w
  5741  036E  00C9               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5742  036F  3054               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5743  0370  00D2               	movwf	??_EMC1001_Read+1
  5744  0371  0852               	movf	??_EMC1001_Read+1,w
  5745  0372  00CA               	movwf	I2C2_MasterTRBInsert@pflag
  5746  0373  3002               	movlw	2
  5747  0374  3183  2301  3183   	fcall	_I2C2_MasterTRBInsert
  5748  0377                     l1952:	
  5749                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  5750                           
  5751  0377  3002               	movlw	2
  5752  0378  0020               	movlb	0	; select bank0
  5753  0379  0654               	xorwf	EMC1001_Read@status,w
  5754  037A  1903               	btfsc	3,2
  5755  037B  2B77               	goto	l1952
  5756                           
  5757                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  5758  037C  0854               	movf	EMC1001_Read@status,w
  5759  037D  1D03               	btfss	3,2
  5760  037E  2B81               	goto	u1330
  5761  037F  3001               	movlw	1
  5762  0380  0008               	return
  5763  0381                     u1330:	
  5764  0381  3000               	movlw	0
  5765  0382  0008               	return
  5766  0383                     __end_of_EMC1001_Read:	
  5767                           
  5768                           	psect	text15
  5769  0431                     __ptext15:	
  5770 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5771 ;; Defined at:
  5772 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  ptrb            1    wreg     PTR struct .
  5775 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5776 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5777 ;;		 -> EMC1001_Read@reg(1), 
  5778 ;;  length          1    1[BANK0 ] unsigned char 
  5779 ;;  address         2    2[BANK0 ] unsigned int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5782 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;Total ram usage:        7 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    3
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_EMC1001_Read
  5803 ;;		_I2C2_MasterWrite
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _I2C2_MasterWriteTRBBuild
  5809  0431                     _I2C2_MasterWriteTRBBuild:	
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5813                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5814  0431  0020               	movlb	0	; select bank0
  5815  0432  00CF               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5816                           
  5817                           ;i2c2.c: 713: ptrb->address = address << 1;
  5818  0433  084C               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5819  0434  00CE               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5820  0435  084B               	movf	I2C2_MasterWriteTRBBuild@address,w
  5821  0436  00CD               	movwf	??_I2C2_MasterWriteTRBBuild
  5822  0437  35CD               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5823  0438  0DCE               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5824  0439  084F               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5825  043A  0086               	movwf	6
  5826  043B  0187               	clrf	7
  5827  043C  084D               	movf	??_I2C2_MasterWriteTRBBuild,w
  5828  043D  3FC0               	movwi [0]fsr1
  5829  043E  084E               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5830  043F  3FC1               	movwi [1]fsr1
  5831                           
  5832                           ;i2c2.c: 714: ptrb->length = length;
  5833  0440  084A               	movf	I2C2_MasterWriteTRBBuild@length,w
  5834  0441  00CD               	movwf	??_I2C2_MasterWriteTRBBuild
  5835  0442  084F               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5836  0443  3E02               	addlw	2
  5837  0444  0086               	movwf	6
  5838  0445  0187               	clrf	7
  5839  0446  084D               	movf	??_I2C2_MasterWriteTRBBuild,w
  5840  0447  0081               	movwf	1
  5841                           
  5842                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5843  0448  0849               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5844  0449  00CD               	movwf	??_I2C2_MasterWriteTRBBuild
  5845  044A  084F               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5846  044B  3E03               	addlw	3
  5847  044C  0086               	movwf	6
  5848  044D  0187               	clrf	7
  5849  044E  084D               	movf	??_I2C2_MasterWriteTRBBuild,w
  5850  044F  0081               	movwf	1
  5851  0450  0008               	return
  5852  0451                     __end_of_I2C2_MasterWriteTRBBuild:	
  5853                           
  5854                           	psect	text16
  5855  0301                     __ptext16:	
  5856 ;; *************** function _I2C2_MasterTRBInsert *****************
  5857 ;; Defined at:
  5858 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  count           1    wreg     unsigned char 
  5861 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5862 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  5863 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  5864 ;;		 -> EMC1001_Read@status(1), 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  count           1    3[BANK0 ] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        4 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    3
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_EMC1001_Read
  5887 ;;		_I2C2_MasterWrite
  5888 ;;		_I2C2_MasterRead
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           
  5893                           ;psect for function _I2C2_MasterTRBInsert
  5894  0301                     _I2C2_MasterTRBInsert:	
  5895                           
  5896                           ;incstack = 0
  5897                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5898                           ;I2C2_MasterTRBInsert@count stored from wreg
  5899  0301  0020               	movlb	0	; select bank0
  5900  0302  00CC               	movwf	I2C2_MasterTRBInsert@count
  5901                           
  5902                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5903  0303  182A               	btfsc	_i2c2_object+2,0
  5904  0304  2B35               	goto	l1694
  5905                           
  5906                           ;i2c2.c: 649: {
  5907                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5908  0305  3002               	movlw	2
  5909  0306  00CB               	movwf	??_I2C2_MasterTRBInsert
  5910  0307  084A               	movf	I2C2_MasterTRBInsert@pflag,w
  5911  0308  0086               	movwf	6
  5912  0309  0187               	clrf	7
  5913  030A  084B               	movf	??_I2C2_MasterTRBInsert,w
  5914  030B  0081               	movwf	1
  5915                           
  5916                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5917  030C  0849               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5918  030D  00CB               	movwf	??_I2C2_MasterTRBInsert
  5919  030E  0A28               	incf	_i2c2_object,w
  5920  030F  0086               	movwf	6
  5921  0310  0187               	clrf	7
  5922  0311  084B               	movf	??_I2C2_MasterTRBInsert,w
  5923  0312  0081               	movwf	1
  5924                           
  5925                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5926  0313  084C               	movf	I2C2_MasterTRBInsert@count,w
  5927  0314  00CB               	movwf	??_I2C2_MasterTRBInsert
  5928  0315  0828               	movf	_i2c2_object,w
  5929  0316  0086               	movwf	6
  5930  0317  0187               	clrf	7
  5931  0318  084B               	movf	??_I2C2_MasterTRBInsert,w
  5932  0319  0081               	movwf	1
  5933                           
  5934                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  5935  031A  084A               	movf	I2C2_MasterTRBInsert@pflag,w
  5936  031B  00CB               	movwf	??_I2C2_MasterTRBInsert
  5937  031C  0828               	movf	_i2c2_object,w
  5938  031D  3E02               	addlw	2
  5939  031E  0086               	movwf	6
  5940  031F  0187               	clrf	7
  5941  0320  084B               	movf	??_I2C2_MasterTRBInsert,w
  5942  0321  0081               	movwf	1
  5943                           
  5944                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  5945  0322  3003               	movlw	3
  5946  0323  00CB               	movwf	??_I2C2_MasterTRBInsert
  5947  0324  084B               	movf	??_I2C2_MasterTRBInsert,w
  5948  0325  07A8               	addwf	_i2c2_object,f
  5949                           
  5950                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  5951  0326  0828               	movf	_i2c2_object,w
  5952  0327  3A49               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  5953  0328  1D03               	skipz
  5954  0329  2B2E               	goto	l1690
  5955                           
  5956                           ;i2c2.c: 659: {
  5957                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  5958  032A  3046               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5959  032B  00CB               	movwf	??_I2C2_MasterTRBInsert
  5960  032C  084B               	movf	??_I2C2_MasterTRBInsert,w
  5961  032D  00A8               	movwf	_i2c2_object
  5962  032E                     l1690:	
  5963                           
  5964                           ;i2c2.c: 662: }
  5965                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  5966  032E  10AA               	bcf	_i2c2_object+2,1
  5967                           
  5968                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  5969  032F  0829               	movf	low ((_i2c2_object| 0+1)),w
  5970  0330  0628               	xorwf	_i2c2_object,w
  5971  0331  1D03               	skipz
  5972  0332  2B3A               	goto	l1696
  5973                           
  5974                           ;i2c2.c: 670: {
  5975                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  5976  0333  142A               	bsf	_i2c2_object+2,0
  5977                           
  5978                           ;i2c2.c: 673: }
  5979                           ;i2c2.c: 675: }
  5980  0334  2B3A               	goto	l1696
  5981  0335                     l1694:	
  5982                           
  5983                           ;i2c2.c: 676: else
  5984                           ;i2c2.c: 677: {
  5985                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  5986  0335  084A               	movf	I2C2_MasterTRBInsert@pflag,w
  5987  0336  0086               	movwf	6
  5988  0337  0187               	clrf	7
  5989  0338  0181               	clrf	1
  5990  0339  0A81               	incf	1,f
  5991  033A                     l1696:	
  5992                           
  5993                           ;i2c2.c: 679: }
  5994                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  5995  033A  084A               	movf	I2C2_MasterTRBInsert@pflag,w
  5996  033B  0086               	movwf	6
  5997  033C  0187               	clrf	7
  5998  033D  3002               	movlw	2
  5999  033E  0601               	xorwf	1,w
  6000  033F  1D03               	btfss	3,2
  6001  0340  0008               	return
  6002  0341                     l1700:	
  6003                           ;i2c2.c: 683: {
  6004                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6005                           
  6006  0341  0834               	movf	_i2c2_state,w
  6007  0342  1D03               	btfss	3,2
  6008  0343  2B41               	goto	l1700
  6009                           
  6010                           ;i2c2.c: 685: {
  6011                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6012  0344  002E               	movlb	14	; select bank14
  6013  0345  150F               	bsf	15,2	;volatile
  6014  0346  0008               	return
  6015  0347                     __end_of_I2C2_MasterTRBInsert:	
  6016                           
  6017                           	psect	text17
  6018  03E5                     __ptext17:	
  6019 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6020 ;; Defined at:
  6021 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  ptrb            1    wreg     PTR struct .
  6024 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6025 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6026 ;;		 -> main@templo(1), main@temp(1), 
  6027 ;;  length          1    1[BANK0 ] unsigned char 
  6028 ;;  address         2    2[BANK0 ] unsigned int 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6031 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6041 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;Total ram usage:        7 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    3
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_EMC1001_Read
  6052 ;;		_I2C2_MasterRead
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _I2C2_MasterReadTRBBuild
  6058  03E5                     _I2C2_MasterReadTRBBuild:	
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6062                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6063  03E5  0020               	movlb	0	; select bank0
  6064  03E6  00CF               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6065                           
  6066                           ;i2c2.c: 700: ptrb->address = address << 1;
  6067  03E7  084C               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6068  03E8  00CE               	movwf	??_I2C2_MasterReadTRBBuild+1
  6069  03E9  084B               	movf	I2C2_MasterReadTRBBuild@address,w
  6070  03EA  00CD               	movwf	??_I2C2_MasterReadTRBBuild
  6071  03EB  35CD               	lslf	??_I2C2_MasterReadTRBBuild,f
  6072  03EC  0DCE               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6073  03ED  084F               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6074  03EE  0086               	movwf	6
  6075  03EF  0187               	clrf	7
  6076  03F0  084D               	movf	??_I2C2_MasterReadTRBBuild,w
  6077  03F1  3FC0               	movwi [0]fsr1
  6078  03F2  084E               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6079  03F3  3FC1               	movwi [1]fsr1
  6080                           
  6081                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6082  03F4  084F               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6083  03F5  0086               	movwf	6
  6084  03F6  0187               	clrf	7
  6085  03F7  3001               	movlw	1
  6086  03F8  0481               	iorwf	1,f
  6087  03F9  3141               	addfsr 1,1
  6088  03FA  3000               	movlw	0
  6089  03FB  0481               	iorwf	1,f
  6090                           
  6091                           ;i2c2.c: 703: ptrb->length = length;
  6092  03FC  084A               	movf	I2C2_MasterReadTRBBuild@length,w
  6093  03FD  00CD               	movwf	??_I2C2_MasterReadTRBBuild
  6094  03FE  084F               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6095  03FF  3E02               	addlw	2
  6096  0400  0086               	movwf	6
  6097  0401  0187               	clrf	7
  6098  0402  084D               	movf	??_I2C2_MasterReadTRBBuild,w
  6099  0403  0081               	movwf	1
  6100                           
  6101                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6102  0404  0849               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6103  0405  00CD               	movwf	??_I2C2_MasterReadTRBBuild
  6104  0406  084F               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6105  0407  3E03               	addlw	3
  6106  0408  0086               	movwf	6
  6107  0409  0187               	clrf	7
  6108  040A  084D               	movf	??_I2C2_MasterReadTRBBuild,w
  6109  040B  0081               	movwf	1
  6110  040C  0008               	return
  6111  040D                     __end_of_I2C2_MasterReadTRBBuild:	
  6112                           
  6113                           	psect	intentry
  6114  0004                     __pintentry:	
  6115 ;; *************** function _INTERRUPT_InterruptManager *****************
  6116 ;; Defined at:
  6117 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;Total ram usage:        1 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    2
  6138 ;; This function calls:
  6139 ;;		_EUSART_Receive_ISR
  6140 ;;		_EUSART_Transmit_ISR
  6141 ;;		_I2C2_BusCollisionISR
  6142 ;;		_I2C2_ISR
  6143 ;; This function is called by:
  6144 ;;		Interrupt level 1
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148  0004                     _INTERRUPT_InterruptManager:	
  6149                           
  6150                           ;incstack = 0
  6151  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6152                           
  6153                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6154  0005  3180               	pagesel	$
  6155  0006  0020               	movlb	0	; select bank0
  6156  0007  087F               	movf	127,w
  6157  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  6158                           
  6159                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.TXIE == 1 && PIR3bits.TXIF
      +                           == 1)
  6160  0009  1F0B               	btfss	11,6	;volatile
  6161  000A  2813               	goto	i1l244
  6162  000B  002E               	movlb	14	; select bank14
  6163  000C  1A19               	btfsc	25,4	;volatile
  6164  000D  1E0F               	btfss	15,4	;volatile
  6165  000E  2813               	goto	i1l244
  6166                           
  6167                           ;interrupt_manager.c: 55: {
  6168                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  6169  000F  3184  2451  3180   	fcall	_EUSART_Transmit_ISR
  6170                           
  6171                           ;interrupt_manager.c: 57: }
  6172  0012  282F               	goto	i1l252
  6173  0013                     i1l244:	
  6174                           
  6175                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.RCIE == 1 && PIR3bits
      +                          .RCIF == 1)
  6176  0013  1F0B               	btfss	11,6	;volatile
  6177  0014  281D               	goto	i1l246
  6178  0015  002E               	movlb	14	; select bank14
  6179  0016  1A99               	btfsc	25,5	;volatile
  6180  0017  1E8F               	btfss	15,5	;volatile
  6181  0018  281D               	goto	i1l246
  6182                           
  6183                           ;interrupt_manager.c: 59: {
  6184                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  6185  0019  3184  24A5  3180   	fcall	_EUSART_Receive_ISR
  6186                           
  6187                           ;interrupt_manager.c: 61: }
  6188  001C  282F               	goto	i1l252
  6189  001D                     i1l246:	
  6190                           
  6191                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bi
      +                          ts.BCL2IF == 1)
  6192  001D  1F0B               	btfss	11,6	;volatile
  6193  001E  2827               	goto	i1l248
  6194  001F  002E               	movlb	14	; select bank14
  6195  0020  1999               	btfsc	25,3	;volatile
  6196  0021  1D8F               	btfss	15,3	;volatile
  6197  0022  2827               	goto	i1l248
  6198                           
  6199                           ;interrupt_manager.c: 63: {
  6200                           ;interrupt_manager.c: 64: I2C2_BusCollisionISR();
  6201  0023  3185  2561  3180   	fcall	_I2C2_BusCollisionISR
  6202                           
  6203                           ;interrupt_manager.c: 65: }
  6204  0026  282F               	goto	i1l252
  6205  0027                     i1l248:	
  6206                           
  6207                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  6208  0027  1F0B               	btfss	11,6	;volatile
  6209  0028  282F               	goto	i1l252
  6210  0029  002E               	movlb	14	; select bank14
  6211  002A  1919               	btfsc	25,2	;volatile
  6212  002B  1D0F               	btfss	15,2	;volatile
  6213  002C  282F               	goto	i1l252
  6214                           
  6215                           ;interrupt_manager.c: 67: {
  6216                           ;interrupt_manager.c: 68: I2C2_ISR();
  6217  002D  3180  2050         	fcall	_I2C2_ISR
  6218  002F                     i1l252:	
  6219                           ;interrupt_manager.c: 70: else
  6220                           ;interrupt_manager.c: 71: {
  6221                           
  6222                           ;interrupt_manager.c: 69: }
  6223                           
  6224  002F  087D               	movf	??_INTERRUPT_InterruptManager,w
  6225  0030  0020               	movlb	0	; select bank0
  6226  0031  00FF               	movwf	127
  6227  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6228  0033  0009               	retfie
  6229  0034                     __end_of_INTERRUPT_InterruptManager:	
  6230                           
  6231                           	psect	text19
  6232  0050                     __ptext19:	
  6233 ;; *************** function _I2C2_ISR *****************
  6234 ;; Defined at:
  6235 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;Total ram usage:        4 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    1
  6256 ;; This function calls:
  6257 ;;		_I2C2_FunctionComplete
  6258 ;;		_I2C2_Stop
  6259 ;; This function is called by:
  6260 ;;		_INTERRUPT_InterruptManager
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function _I2C2_ISR
  6266  0050                     _I2C2_ISR:	
  6267                           
  6268                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6269                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6270                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6271                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6272                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6276  0050  002E               	movlb	14	; select bank14
  6277  0051  110F               	bcf	15,2	;volatile
  6278                           
  6279                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6280  0052  0023               	movlb	3	; select bank3
  6281  0053  1F9A               	btfss	26,7	;volatile
  6282  0054  2984               	goto	i1l1938
  6283                           
  6284                           ;i2c2.c: 246: {
  6285                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6286  0055  139A               	bcf	26,7	;volatile
  6287                           
  6288                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6289  0056  0020               	movlb	0	; select bank0
  6290  0057  01B4               	clrf	_i2c2_state
  6291                           
  6292                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6293  0058  0873               	movf	_p_i2c2_current,w
  6294  0059  3E02               	addlw	2
  6295  005A  0086               	movwf	6
  6296  005B  0187               	clrf	7
  6297  005C  0801               	movf	1,w
  6298  005D  0086               	movwf	6
  6299  005E  0187               	clrf	7
  6300  005F  0181               	clrf	1
  6301  0060  0A81               	incf	1,f
  6302                           
  6303                           ;i2c2.c: 253: p_i2c2_current = (0);
  6304  0061  01F3               	clrf	_p_i2c2_current
  6305                           
  6306                           ;i2c2.c: 255: return;
  6307  0062  0008               	return
  6308  0063                     i1l312:	
  6309                           ;i2c2.c: 260: {
  6310                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6311                           
  6312                           ;i2c2.c: 256: }
  6313                           ;i2c2.c: 259: switch(i2c2_state)
  6314                           
  6315                           
  6316                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6317  0063  18AA               	btfsc	_i2c2_object+2,1
  6318  0064  0008               	return
  6319                           
  6320                           ;i2c2.c: 264: {
  6321                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6322  0065  0829               	movf	low ((_i2c2_object| 0+1)),w
  6323  0066  00F9               	movwf	??_I2C2_ISR
  6324  0067  0879               	movf	??_I2C2_ISR,w
  6325  0068  00F3               	movwf	_p_i2c2_current
  6326                           
  6327                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6328  0069  0829               	movf	low ((_i2c2_object| 0+1)),w
  6329  006A  0086               	movwf	6
  6330  006B  0187               	clrf	7
  6331  006C  0801               	movf	1,w
  6332  006D  00F9               	movwf	??_I2C2_ISR
  6333  006E  0879               	movf	??_I2C2_ISR,w
  6334  006F  00B5               	movwf	_i2c2_trb_count
  6335                           
  6336                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6337  0070  0829               	movf	low ((_i2c2_object| 0+1)),w
  6338  0071  0086               	movwf	6
  6339  0072  0187               	clrf	7
  6340  0073  3F41               	moviw [1]fsr1
  6341  0074  00F4               	movwf	_p_i2c2_trb_current
  6342                           
  6343                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6344  0075  3003               	movlw	3
  6345  0076  00F9               	movwf	??_I2C2_ISR
  6346  0077  0879               	movf	??_I2C2_ISR,w
  6347  0078  07A9               	addwf	low ((_i2c2_object| 0+1)),f
  6348                           
  6349                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6350  0079  0829               	movf	low ((_i2c2_object| 0+1)),w
  6351  007A  3A49               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6352  007B  1D03               	skipz
  6353  007C  2881               	goto	i1l1826
  6354                           
  6355                           ;i2c2.c: 274: {
  6356                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6357  007D  3046               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6358  007E  00F9               	movwf	??_I2C2_ISR
  6359  007F  0879               	movf	??_I2C2_ISR,w
  6360  0080  00A9               	movwf	low ((_i2c2_object| 0+1))
  6361  0081                     i1l1826:	
  6362                           
  6363                           ;i2c2.c: 277: }
  6364                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6365  0081  102A               	bcf	_i2c2_object+2,0
  6366                           
  6367                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6368  0082  0829               	movf	low ((_i2c2_object| 0+1)),w
  6369  0083  0628               	xorwf	_i2c2_object,w
  6370  0084  1903               	btfsc	3,2
  6371                           
  6372                           ;i2c2.c: 285: {
  6373                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6374  0085  14AA               	bsf	_i2c2_object+2,1
  6375                           
  6376                           ;i2c2.c: 288: }
  6377                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6378  0086  0023               	movlb	3	; select bank3
  6379  0087  141B               	bsf	27,0	;volatile
  6380                           
  6381                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6382  0088  3002               	movlw	2
  6383  0089  00F9               	movwf	??_I2C2_ISR
  6384  008A  0879               	movf	??_I2C2_ISR,w
  6385  008B  0020               	movlb	0	; select bank0
  6386  008C  00B4               	movwf	_i2c2_state
  6387                           
  6388                           ;i2c2.c: 295: }
  6389                           ;i2c2.c: 297: break;
  6390  008D  0008               	return
  6391  008E                     i1l317:	
  6392                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6393                           
  6394                           
  6395                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6396  008E  0023               	movlb	3	; select bank3
  6397  008F  149B               	bsf	27,1	;volatile
  6398                           
  6399                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6400  0090  3002               	movlw	2
  6401  0091  00F9               	movwf	??_I2C2_ISR
  6402  0092  0879               	movf	??_I2C2_ISR,w
  6403  0093  0020               	movlb	0	; select bank0
  6404  0094  00B4               	movwf	_i2c2_state
  6405                           
  6406                           ;i2c2.c: 309: break;
  6407  0095  0008               	return
  6408  0096                     i1l318:	
  6409                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6410                           
  6411                           
  6412                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6413  0096  0023               	movlb	3	; select bank3
  6414  0097  1F1B               	btfss	27,6	;volatile
  6415  0098  28A2               	goto	i1l1838
  6416                           
  6417                           ;i2c2.c: 314: {
  6418                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6419  0099  3001               	movlw	1
  6420  009A  00F9               	movwf	??_I2C2_ISR
  6421  009B  0879               	movf	??_I2C2_ISR,w
  6422  009C  0020               	movlb	0	; select bank0
  6423  009D  07AC               	addwf	_i2c2_object+4,f
  6424                           
  6425                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6426  009E  3004               	movlw	4
  6427  009F  3184  24F0         	fcall	_I2C2_Stop
  6428                           
  6429                           ;i2c2.c: 317: }
  6430  00A1  0008               	return
  6431  00A2                     i1l1838:	
  6432                           
  6433                           ;i2c2.c: 318: else
  6434                           ;i2c2.c: 319: {
  6435                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6436  00A2  0876               	movf	I2C2_ISR@i2c_address+1,w
  6437  00A3  00FA               	movwf	??_I2C2_ISR+1
  6438  00A4  0875               	movf	I2C2_ISR@i2c_address,w
  6439  00A5  00F9               	movwf	??_I2C2_ISR
  6440  00A6  36FA               	lsrf	??_I2C2_ISR+1,f
  6441  00A7  0CF9               	rrf	??_I2C2_ISR,f
  6442  00A8  0879               	movf	??_I2C2_ISR,w
  6443  00A9  0023               	movlb	3	; select bank3
  6444  00AA  0096               	movwf	22	;volatile
  6445                           
  6446                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6447  00AB  1C75               	btfss	I2C2_ISR@i2c_address,0
  6448  00AC  28B3               	goto	i1l1844
  6449                           
  6450                           ;i2c2.c: 325: {
  6451                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6452  00AD  300B               	movlw	11
  6453  00AE  00F9               	movwf	??_I2C2_ISR
  6454  00AF  0879               	movf	??_I2C2_ISR,w
  6455  00B0  0020               	movlb	0	; select bank0
  6456  00B1  00B4               	movwf	_i2c2_state
  6457                           
  6458                           ;i2c2.c: 329: }
  6459  00B2  0008               	return
  6460  00B3                     i1l1844:	
  6461                           
  6462                           ;i2c2.c: 330: else
  6463                           ;i2c2.c: 331: {
  6464                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6465  00B3  3003               	movlw	3
  6466  00B4  00F9               	movwf	??_I2C2_ISR
  6467  00B5  0879               	movf	??_I2C2_ISR,w
  6468  00B6  0020               	movlb	0	; select bank0
  6469  00B7  00B4               	movwf	_i2c2_state
  6470                           
  6471                           ;i2c2.c: 334: }
  6472                           ;i2c2.c: 335: }
  6473                           ;i2c2.c: 337: break;
  6474  00B8  0008               	return
  6475  00B9                     i1l323:	
  6476                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6477                           
  6478                           
  6479                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6480  00B9  0023               	movlb	3	; select bank3
  6481  00BA  1F1B               	btfss	27,6	;volatile
  6482  00BB  28C5               	goto	i1l324
  6483                           
  6484                           ;i2c2.c: 342: {
  6485                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6486  00BC  3001               	movlw	1
  6487  00BD  00F9               	movwf	??_I2C2_ISR
  6488  00BE  0879               	movf	??_I2C2_ISR,w
  6489  00BF  0020               	movlb	0	; select bank0
  6490  00C0  07AC               	addwf	_i2c2_object+4,f
  6491                           
  6492                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6493  00C1  3004               	movlw	4
  6494  00C2  3184  24F0         	fcall	_I2C2_Stop
  6495                           
  6496                           ;i2c2.c: 345: }
  6497  00C4  0008               	return
  6498  00C5                     i1l324:	
  6499                           
  6500                           ;i2c2.c: 346: else
  6501                           ;i2c2.c: 347: {
  6502                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6503  00C5  149B               	bsf	27,1	;volatile
  6504                           
  6505                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6506  00C6  0876               	movf	I2C2_ISR@i2c_address+1,w
  6507  00C7  00FA               	movwf	??_I2C2_ISR+1
  6508  00C8  0875               	movf	I2C2_ISR@i2c_address,w
  6509  00C9  00F9               	movwf	??_I2C2_ISR
  6510  00CA  087A               	movf	??_I2C2_ISR+1,w
  6511  00CB  00F9               	movwf	??_I2C2_ISR
  6512  00CC  01FA               	clrf	??_I2C2_ISR+1
  6513  00CD  3006               	movlw	6
  6514  00CE  0579               	andwf	??_I2C2_ISR,w
  6515  00CF  00FB               	movwf	??_I2C2_ISR+2
  6516  00D0  3000               	movlw	0
  6517  00D1  057A               	andwf	??_I2C2_ISR+1,w
  6518  00D2  00FC               	movwf	??_I2C2_ISR+3
  6519  00D3  30F0               	movlw	240
  6520  00D4  047B               	iorwf	??_I2C2_ISR+2,w
  6521  00D5  00F5               	movwf	I2C2_ISR@i2c_address
  6522  00D6  3000               	movlw	0
  6523  00D7  047C               	iorwf	??_I2C2_ISR+3,w
  6524  00D8  00F6               	movwf	I2C2_ISR@i2c_address+1
  6525                           
  6526                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6527  00D9  1475               	bsf	I2C2_ISR@i2c_address,0
  6528                           
  6529                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6530  00DA  0020               	movlb	0	; select bank0
  6531  00DB  01AF               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6532  00DC  0AAF               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6533                           
  6534                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6535  00DD  3002               	movlw	2
  6536  00DE  00F9               	movwf	??_I2C2_ISR
  6537  00DF  0879               	movf	??_I2C2_ISR,w
  6538  00E0  00B4               	movwf	_i2c2_state
  6539                           
  6540                           ;i2c2.c: 364: }
  6541                           ;i2c2.c: 366: break;
  6542  00E1  0008               	return
  6543  00E2                     i1l1858:	
  6544                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6545                           
  6546                           
  6547                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6548  00E2  032F               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6549  00E3  1903               	btfsc	3,2
  6550  00E4  28F6               	goto	i1l1878
  6551                           
  6552                           ;i2c2.c: 382: {
  6553                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6554  00E5  0874               	movf	_p_i2c2_trb_current,w
  6555  00E6  0086               	movwf	6
  6556  00E7  0187               	clrf	7
  6557  00E8  3F40               	moviw [0]fsr1
  6558  00E9  00F5               	movwf	I2C2_ISR@i2c_address
  6559  00EA  3F41               	moviw [1]fsr1
  6560  00EB  00F6               	movwf	I2C2_ISR@i2c_address+1
  6561                           
  6562                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6563  00EC  0874               	movf	_p_i2c2_trb_current,w
  6564  00ED  0086               	movwf	6
  6565  00EE  0187               	clrf	7
  6566  00EF  3F43               	moviw [3]fsr1
  6567  00F0  00B1               	movwf	I2C2_ISR@pi2c_buf_ptr
  6568                           
  6569                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6570  00F1  0874               	movf	_p_i2c2_trb_current,w
  6571  00F2  0086               	movwf	6
  6572  00F3  0187               	clrf	7
  6573  00F4  3F42               	moviw [2]fsr1
  6574  00F5  00B0               	movwf	I2C2_ISR@i2c_bytes_left
  6575  00F6                     i1l1878:	
  6576                           ;i2c2.c: 407: }
  6577                           ;i2c2.c: 408: }
  6578                           
  6579                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6580                           
  6581                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6582                           
  6583                           ;i2c2.c: 400: else
  6584                           ;i2c2.c: 401: {
  6585                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6586                           
  6587                           ;i2c2.c: 399: }
  6588                           
  6589                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6590                           
  6591                           ;i2c2.c: 393: {
  6592                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6593                           
  6594                           ;i2c2.c: 391: {
  6595                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6596                           
  6597                           ;i2c2.c: 387: }
  6598                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6599                           
  6600                           
  6601                           ;i2c2.c: 409: else
  6602                           ;i2c2.c: 410: {
  6603                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6604  00F6  0875               	movf	I2C2_ISR@i2c_address,w
  6605  00F7  0023               	movlb	3	; select bank3
  6606  00F8  0096               	movwf	22	;volatile
  6607                           
  6608                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6609  00F9  1C75               	btfss	I2C2_ISR@i2c_address,0
  6610  00FA  2901               	goto	i1l1884
  6611                           
  6612                           ;i2c2.c: 414: {
  6613                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6614  00FB  3005               	movlw	5
  6615  00FC  00F9               	movwf	??_I2C2_ISR
  6616  00FD  0879               	movf	??_I2C2_ISR,w
  6617  00FE  0020               	movlb	0	; select bank0
  6618  00FF  00B4               	movwf	_i2c2_state
  6619                           
  6620                           ;i2c2.c: 417: }
  6621  0100  0008               	return
  6622  0101                     i1l1884:	
  6623                           
  6624                           ;i2c2.c: 418: else
  6625                           ;i2c2.c: 419: {
  6626                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6627  0101  3003               	movlw	3
  6628  0102  00F9               	movwf	??_I2C2_ISR
  6629  0103  0879               	movf	??_I2C2_ISR,w
  6630  0104  0020               	movlb	0	; select bank0
  6631  0105  00B4               	movwf	_i2c2_state
  6632                           
  6633                           ;i2c2.c: 422: }
  6634                           ;i2c2.c: 423: }
  6635                           ;i2c2.c: 424: break;
  6636  0106  0008               	return
  6637  0107                     i1l334:	
  6638                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6639                           
  6640                           
  6641                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6642  0107  0023               	movlb	3	; select bank3
  6643  0108  1F1B               	btfss	27,6	;volatile
  6644  0109  2915               	goto	i1l1892
  6645                           
  6646                           ;i2c2.c: 430: {
  6647                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6648  010A  3001               	movlw	1
  6649  010B  00F9               	movwf	??_I2C2_ISR
  6650  010C  0879               	movf	??_I2C2_ISR,w
  6651  010D  0020               	movlb	0	; select bank0
  6652  010E  07AC               	addwf	_i2c2_object+4,f
  6653                           
  6654                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6655  010F  0023               	movlb	3	; select bank3
  6656  0110  131B               	bcf	27,6	;volatile
  6657                           
  6658                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6659  0111  3005               	movlw	5
  6660  0112  3184  24F0         	fcall	_I2C2_Stop
  6661                           
  6662                           ;i2c2.c: 440: }
  6663  0114  0008               	return
  6664  0115                     i1l1892:	
  6665                           
  6666                           ;i2c2.c: 441: else
  6667                           ;i2c2.c: 442: {
  6668                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6669  0115  3001               	movlw	1
  6670  0116  0020               	movlb	0	; select bank0
  6671  0117  02B0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6672  0118  0A30               	incf	I2C2_ISR@i2c_bytes_left,w
  6673  0119  1D03               	btfss	3,2
  6674  011A  292F               	goto	i1l1900
  6675                           
  6676                           ;i2c2.c: 445: {
  6677                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6678  011B  3004               	movlw	4
  6679  011C  00F9               	movwf	??_I2C2_ISR
  6680  011D  0879               	movf	??_I2C2_ISR,w
  6681  011E  07F4               	addwf	_p_i2c2_trb_current,f
  6682                           
  6683                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6684  011F  3001               	movlw	1
  6685  0120  02B5               	subwf	_i2c2_trb_count,f
  6686  0121  1D03               	btfss	3,2
  6687  0122  2927               	goto	i1l338
  6688                           
  6689                           ;i2c2.c: 453: {
  6690                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6691  0123  3000               	movlw	0
  6692  0124  3184  24F0         	fcall	_I2C2_Stop
  6693                           
  6694                           ;i2c2.c: 455: }
  6695  0126  0008               	return
  6696  0127                     i1l338:	
  6697                           
  6698                           ;i2c2.c: 456: else
  6699                           ;i2c2.c: 457: {
  6700                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6701  0127  0023               	movlb	3	; select bank3
  6702  0128  149B               	bsf	27,1	;volatile
  6703                           
  6704                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6705  0129  3002               	movlw	2
  6706  012A  00F9               	movwf	??_I2C2_ISR
  6707  012B  0879               	movf	??_I2C2_ISR,w
  6708  012C  0020               	movlb	0	; select bank0
  6709  012D  00B4               	movwf	_i2c2_state
  6710                           
  6711                           ;i2c2.c: 469: }
  6712                           ;i2c2.c: 470: }
  6713  012E  0008               	return
  6714  012F                     i1l1900:	
  6715                           
  6716                           ;i2c2.c: 471: else
  6717                           ;i2c2.c: 472: {
  6718                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6719  012F  0831               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6720  0130  0086               	movwf	6
  6721  0131  0187               	clrf	7
  6722  0132  0801               	movf	1,w
  6723  0133  0023               	movlb	3	; select bank3
  6724  0134  0096               	movwf	22	;volatile
  6725  0135  3001               	movlw	1
  6726  0136  00F9               	movwf	??_I2C2_ISR
  6727  0137  0879               	movf	??_I2C2_ISR,w
  6728  0138  0020               	movlb	0	; select bank0
  6729  0139  07B1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6730                           
  6731                           ;i2c2.c: 475: }
  6732                           ;i2c2.c: 476: }
  6733                           ;i2c2.c: 477: break;
  6734  013A  0008               	return
  6735  013B                     i1l341:	
  6736                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6737                           
  6738                           
  6739                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6740  013B  0023               	movlb	3	; select bank3
  6741  013C  1F1B               	btfss	27,6	;volatile
  6742  013D  2949               	goto	i1l342
  6743                           
  6744                           ;i2c2.c: 483: {
  6745                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6746  013E  3001               	movlw	1
  6747  013F  00F9               	movwf	??_I2C2_ISR
  6748  0140  0879               	movf	??_I2C2_ISR,w
  6749  0141  0020               	movlb	0	; select bank0
  6750  0142  07AC               	addwf	_i2c2_object+4,f
  6751                           
  6752                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6753  0143  3004               	movlw	4
  6754  0144  3184  24F0         	fcall	_I2C2_Stop
  6755                           
  6756                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6757  0146  0023               	movlb	3	; select bank3
  6758  0147  131B               	bcf	27,6	;volatile
  6759                           
  6760                           ;i2c2.c: 493: }
  6761  0148  0008               	return
  6762  0149                     i1l342:	
  6763                           
  6764                           ;i2c2.c: 494: else
  6765                           ;i2c2.c: 495: {
  6766                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6767  0149  159B               	bsf	27,3	;volatile
  6768                           
  6769                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6770  014A  3008               	movlw	8
  6771  014B  00F9               	movwf	??_I2C2_ISR
  6772  014C  0879               	movf	??_I2C2_ISR,w
  6773  014D  0020               	movlb	0	; select bank0
  6774  014E  00B4               	movwf	_i2c2_state
  6775                           
  6776                           ;i2c2.c: 498: }
  6777                           ;i2c2.c: 499: break;
  6778  014F  0008               	return
  6779  0150                     i1l1912:	
  6780                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6781                           
  6782                           
  6783                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6784  0150  3008               	movlw	8
  6785  0151  00F9               	movwf	??_I2C2_ISR
  6786  0152  0879               	movf	??_I2C2_ISR,w
  6787  0153  00B4               	movwf	_i2c2_state
  6788                           
  6789                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6790  0154  0023               	movlb	3	; select bank3
  6791  0155  159B               	bsf	27,3	;volatile
  6792                           
  6793                           ;i2c2.c: 511: break;
  6794  0156  0008               	return
  6795  0157                     i1l1916:	
  6796                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6797                           
  6798                           
  6799                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6800  0157  0023               	movlb	3	; select bank3
  6801  0158  0816               	movf	22,w	;volatile
  6802  0159  00F9               	movwf	??_I2C2_ISR
  6803  015A  0020               	movlb	0	; select bank0
  6804  015B  0831               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6805  015C  0086               	movwf	6
  6806  015D  0187               	clrf	7
  6807  015E  0879               	movf	??_I2C2_ISR,w
  6808  015F  0081               	movwf	1
  6809  0160  3001               	movlw	1
  6810  0161  00F9               	movwf	??_I2C2_ISR
  6811  0162  0879               	movf	??_I2C2_ISR,w
  6812  0163  07B1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6813                           
  6814                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6815  0164  3001               	movlw	1
  6816  0165  02B0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6817  0166  1903               	btfsc	3,2
  6818  0167  2970               	goto	i1l346
  6819                           
  6820                           ;i2c2.c: 520: {
  6821                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6822  0168  0023               	movlb	3	; select bank3
  6823  0169  129B               	bcf	27,5	;volatile
  6824                           
  6825                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6826  016A  3006               	movlw	6
  6827  016B  00F9               	movwf	??_I2C2_ISR
  6828  016C  0879               	movf	??_I2C2_ISR,w
  6829  016D  0020               	movlb	0	; select bank0
  6830  016E  00B4               	movwf	_i2c2_state
  6831                           
  6832                           ;i2c2.c: 530: }
  6833  016F  2974               	goto	i1l1928
  6834  0170                     i1l346:	
  6835                           
  6836                           ;i2c2.c: 531: else
  6837                           ;i2c2.c: 532: {
  6838                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6839  0170  0023               	movlb	3	; select bank3
  6840  0171  169B               	bsf	27,5	;volatile
  6841                           
  6842                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6843  0172  3185  251A         	fcall	_I2C2_FunctionComplete
  6844  0174                     i1l1928:	
  6845                           
  6846                           ;i2c2.c: 539: }
  6847                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6848  0174  0023               	movlb	3	; select bank3
  6849  0175  161B               	bsf	27,4	;volatile
  6850                           
  6851                           ;i2c2.c: 543: break;
  6852  0176  0008               	return
  6853  0177                     i1l1930:	
  6854                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6855                           
  6856                           
  6857                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6858                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6859  0177  3000               	movlw	0
  6860  0178  3184  24F0         	fcall	_I2C2_Stop
  6861                           
  6862                           ;i2c2.c: 550: break;
  6863  017A  0008               	return
  6864  017B                     i1l1932:	
  6865                           ;i2c2.c: 552: default:
  6866                           
  6867                           
  6868                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6869  017B  3001               	movlw	1
  6870  017C  00F9               	movwf	??_I2C2_ISR
  6871  017D  0879               	movf	??_I2C2_ISR,w
  6872  017E  0020               	movlb	0	; select bank0
  6873  017F  07AC               	addwf	_i2c2_object+4,f
  6874                           
  6875                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6876  0180  3006               	movlw	6
  6877  0181  3184  24F0         	fcall	_I2C2_Stop
  6878                           
  6879                           ;i2c2.c: 560: }
  6880                           
  6881                           ;i2c2.c: 558: break;
  6882  0183  0008               	return
  6883  0184                     i1l1938:	
  6884  0184  0020               	movlb	0	; select bank0
  6885  0185  0834               	movf	_i2c2_state,w
  6886                           
  6887                           ; Switch size 1, requested type "space"
  6888                           ; Number of cases is 11, Range of values is 0 to 11
  6889                           ; switch strategies available:
  6890                           ; Name         Instructions Cycles
  6891                           ; direct_byte           30     6 (fixed)
  6892                           ; simple_byte           34    18 (average)
  6893                           ; jumptable            260     6 (fixed)
  6894                           ;	Chosen strategy is direct_byte
  6895  0186  0084               	movwf	4
  6896  0187  300C               	movlw	12
  6897  0188  0204               	subwf	4,w
  6898  0189  1803               	skipnc
  6899  018A  297B               	goto	i1l1932
  6900  018B  3184               	movlp	high i1S2296
  6901  018C  3504               	lslf	4,w
  6902  018D  3ED8               	addlw	low i1S2296
  6903  018E  0082               	movwf	2
  6904  018F  0008               	return
  6905  0190                     __end_of_I2C2_ISR:	
  6906                           
  6907                           	psect	swtext1
  6908  04D8                     __pswtext1:	
  6909  04D8                     i1S2296:	
  6910  04D8  3180  2863         	ljmp	i1l312
  6911  04DA  3180  288E         	ljmp	i1l317
  6912  04DC  3180  28E2         	ljmp	i1l1858
  6913  04DE  3181  2907         	ljmp	i1l334
  6914  04E0  3181  2977         	ljmp	i1l1930
  6915  04E2  3181  293B         	ljmp	i1l341
  6916  04E4  3181  2950         	ljmp	i1l1912
  6917  04E6  3181  2977         	ljmp	i1l1930
  6918  04E8  3181  2957         	ljmp	i1l1916
  6919  04EA  3181  297B         	ljmp	i1l1932
  6920  04EC  3180  2896         	ljmp	i1l318
  6921  04EE  3180  28B9         	ljmp	i1l323
  6922                           
  6923                           	psect	text20
  6924  04F0                     __ptext20:	
  6925 ;; *************** function _I2C2_Stop *****************
  6926 ;; Defined at:
  6927 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  completion_c    1    wreg     enum E13560
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  completion_c    1    1[COMMON] enum E13560
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;Total ram usage:        2 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_I2C2_ISR
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function _I2C2_Stop
  6956  04F0                     _I2C2_Stop:	
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6960                           ;I2C2_Stop@completion_code stored from wreg
  6961  04F0  00F8               	movwf	I2C2_Stop@completion_code
  6962                           
  6963                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6964  04F1  0023               	movlb	3	; select bank3
  6965  04F2  151B               	bsf	27,2	;volatile
  6966                           
  6967                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6968  04F3  0873               	movf	_p_i2c2_current,w
  6969  04F4  3E02               	addlw	2
  6970  04F5  0086               	movwf	6
  6971  04F6  0187               	clrf	7
  6972  04F7  0801               	movf	1,w
  6973  04F8  1903               	btfsc	3,2
  6974  04F9  2D05               	goto	i1l1672
  6975                           
  6976                           ;i2c2.c: 588: {
  6977                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  6978  04FA  0878               	movf	I2C2_Stop@completion_code,w
  6979  04FB  00F7               	movwf	??_I2C2_Stop
  6980  04FC  0873               	movf	_p_i2c2_current,w
  6981  04FD  3E02               	addlw	2
  6982  04FE  0086               	movwf	6
  6983  04FF  0187               	clrf	7
  6984  0500  0801               	movf	1,w
  6985  0501  0086               	movwf	6
  6986  0502  0187               	clrf	7
  6987  0503  0877               	movf	??_I2C2_Stop,w
  6988  0504  0081               	movwf	1
  6989  0505                     i1l1672:	
  6990                           
  6991                           ;i2c2.c: 591: }
  6992                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  6993  0505  0020               	movlb	0	; select bank0
  6994  0506  01B4               	clrf	_i2c2_state
  6995  0507  0008               	return
  6996  0508                     __end_of_I2C2_Stop:	
  6997                           
  6998                           	psect	text21
  6999  051A                     __ptext21:	
  7000 ;; *************** function _I2C2_FunctionComplete *****************
  7001 ;; Defined at:
  7002 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;Total ram usage:        1 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_I2C2_ISR
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _I2C2_FunctionComplete
  7031  051A                     _I2C2_FunctionComplete:	
  7032                           
  7033                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7037  051A  3004               	movlw	4
  7038  051B  00F7               	movwf	??_I2C2_FunctionComplete
  7039  051C  0877               	movf	??_I2C2_FunctionComplete,w
  7040  051D  07F4               	addwf	_p_i2c2_trb_current,f
  7041                           
  7042                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7043  051E  3001               	movlw	1
  7044  051F  0020               	movlb	0	; select bank0
  7045  0520  02B5               	subwf	_i2c2_trb_count,f
  7046  0521  1D03               	btfss	3,2
  7047  0522  2D28               	goto	i1l353
  7048                           
  7049                           ;i2c2.c: 571: {
  7050                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7051  0523  3004               	movlw	4
  7052  0524  00F7               	movwf	??_I2C2_FunctionComplete
  7053  0525  0877               	movf	??_I2C2_FunctionComplete,w
  7054  0526  00B4               	movwf	_i2c2_state
  7055                           
  7056                           ;i2c2.c: 573: }
  7057  0527  0008               	return
  7058  0528                     i1l353:	
  7059                           
  7060                           ;i2c2.c: 574: else
  7061                           ;i2c2.c: 575: {
  7062                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7063  0528  01B4               	clrf	_i2c2_state
  7064  0529  0AB4               	incf	_i2c2_state,f
  7065  052A  0008               	return
  7066  052B                     __end_of_I2C2_FunctionComplete:	
  7067                           
  7068                           	psect	text22
  7069  0561                     __ptext22:	
  7070 ;; *************** function _I2C2_BusCollisionISR *****************
  7071 ;; Defined at:
  7072 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;		None
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		None
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;Total ram usage:        0 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_INTERRUPT_InterruptManager
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _I2C2_BusCollisionISR
  7101  0561                     _I2C2_BusCollisionISR:	
  7102                           
  7103                           ;incstack = 0
  7104                           ; Regs used in _I2C2_BusCollisionISR: []
  7105  0561  0008               	return
  7106  0562                     __end_of_I2C2_BusCollisionISR:	
  7107                           
  7108                           	psect	text23
  7109  0451                     __ptext23:	
  7110 ;; *************** function _EUSART_Transmit_ISR *****************
  7111 ;; Defined at:
  7112 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:        1 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_INTERRUPT_InterruptManager
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _EUSART_Transmit_ISR
  7141  0451                     _EUSART_Transmit_ISR:	
  7142                           
  7143                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  7144                           
  7145                           ;incstack = 0
  7146                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7147  0451  3008               	movlw	8
  7148  0452  0020               	movlb	0	; select bank0
  7149  0453  026B               	subwf	_eusartTxBufferRemaining,w	;volatile
  7150  0454  1803               	skipnc
  7151  0455  2C6B               	goto	i1l62
  7152                           
  7153                           ;eusart.c: 170: {
  7154                           ;eusart.c: 171: TX1REG = eusartTxBuffer[eusartTxTail++];
  7155  0456  0872               	movf	_eusartTxTail,w
  7156  0457  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7157  0458  0086               	movwf	6
  7158  0459  0187               	clrf	7
  7159  045A  0801               	movf	1,w
  7160  045B  0022               	movlb	2	; select bank2
  7161  045C  009A               	movwf	26	;volatile
  7162  045D  3001               	movlw	1
  7163  045E  00F7               	movwf	??_EUSART_Transmit_ISR
  7164  045F  0877               	movf	??_EUSART_Transmit_ISR,w
  7165  0460  07F2               	addwf	_eusartTxTail,f
  7166                           
  7167                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7168  0461  3008               	movlw	8
  7169  0462  0272               	subwf	_eusartTxTail,w
  7170  0463  1803               	btfsc	3,0
  7171                           
  7172                           ;eusart.c: 173: {
  7173                           ;eusart.c: 174: eusartTxTail = 0;
  7174  0464  01F2               	clrf	_eusartTxTail
  7175                           
  7176                           ;eusart.c: 175: }
  7177                           ;eusart.c: 176: eusartTxBufferRemaining++;
  7178  0465  3001               	movlw	1
  7179  0466  00F7               	movwf	??_EUSART_Transmit_ISR
  7180  0467  0877               	movf	??_EUSART_Transmit_ISR,w
  7181  0468  0020               	movlb	0	; select bank0
  7182  0469  07EB               	addwf	_eusartTxBufferRemaining,f	;volatile
  7183                           
  7184                           ;eusart.c: 177: }
  7185  046A  0008               	return
  7186  046B                     i1l62:	
  7187                           
  7188                           ;eusart.c: 178: else
  7189                           ;eusart.c: 179: {
  7190                           ;eusart.c: 180: PIE3bits.TXIE = 0;
  7191  046B  002E               	movlb	14	; select bank14
  7192  046C  1219               	bcf	25,4	;volatile
  7193  046D  0008               	return
  7194  046E                     __end_of_EUSART_Transmit_ISR:	
  7195                           
  7196                           	psect	text24
  7197  04A5                     __ptext24:	
  7198 ;; *************** function _EUSART_Receive_ISR *****************
  7199 ;; Defined at:
  7200 ;;		line 184 in file "mcc_generated_files/eusart.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;		None
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      void 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;Total ram usage:        1 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_INTERRUPT_InterruptManager
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _EUSART_Receive_ISR
  7229  04A5                     _EUSART_Receive_ISR:	
  7230                           
  7231                           ;eusart.c: 187: if(1 == RC1STAbits.OERR)
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7235  04A5  0022               	movlb	2	; select bank2
  7236  04A6  1C9D               	btfss	29,1	;volatile
  7237  04A7  2CAA               	goto	i1l1790
  7238                           
  7239                           ;eusart.c: 188: {
  7240                           ;eusart.c: 191: RC1STAbits.CREN = 0;
  7241  04A8  121D               	bcf	29,4	;volatile
  7242                           
  7243                           ;eusart.c: 192: RC1STAbits.CREN = 1;
  7244  04A9  161D               	bsf	29,4	;volatile
  7245  04AA                     i1l1790:	
  7246                           
  7247                           ;eusart.c: 193: }
  7248                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RC1REG;
  7249  04AA  0819               	movf	25,w	;volatile
  7250  04AB  00F7               	movwf	??_EUSART_Receive_ISR
  7251  04AC  0870               	movf	_eusartRxHead,w
  7252  04AD  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7253  04AE  0086               	movwf	6
  7254  04AF  0187               	clrf	7
  7255  04B0  0877               	movf	??_EUSART_Receive_ISR,w
  7256  04B1  0081               	movwf	1
  7257  04B2  3001               	movlw	1
  7258  04B3  00F7               	movwf	??_EUSART_Receive_ISR
  7259  04B4  0877               	movf	??_EUSART_Receive_ISR,w
  7260  04B5  07F0               	addwf	_eusartRxHead,f
  7261                           
  7262                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7263  04B6  3008               	movlw	8
  7264  04B7  0270               	subwf	_eusartRxHead,w
  7265  04B8  1803               	btfsc	3,0
  7266                           
  7267                           ;eusart.c: 198: {
  7268                           ;eusart.c: 199: eusartRxHead = 0;
  7269  04B9  01F0               	clrf	_eusartRxHead
  7270                           
  7271                           ;eusart.c: 200: }
  7272                           ;eusart.c: 201: eusartRxCount++;
  7273  04BA  3001               	movlw	1
  7274  04BB  00F7               	movwf	??_EUSART_Receive_ISR
  7275  04BC  0877               	movf	??_EUSART_Receive_ISR,w
  7276  04BD  0020               	movlb	0	; select bank0
  7277  04BE  07B2               	addwf	_eusartRxCount,f	;volatile
  7278  04BF  0008               	return
  7279  04C0                     __end_of_EUSART_Receive_ISR:	
  7280  007E                     btemp	set	126	;btemp
  7281  007E                     int$flags	set	126
  7282  007E                     wtemp	set	126
  7283  007E                     wtemp0	set	126
  7284  0080                     wtemp1	set	128
  7285  0082                     wtemp2	set	130
  7286  0084                     wtemp3	set	132
  7287  0086                     wtemp4	set	134
  7288  0088                     wtemp5	set	136
  7289  007F                     wtemp6	set	127
  7290  007E                     ttemp	set	126
  7291  007E                     ttemp0	set	126
  7292  0081                     ttemp1	set	129
  7293  0084                     ttemp2	set	132
  7294  0087                     ttemp3	set	135
  7295  007F                     ttemp4	set	127
  7296  007E                     ltemp	set	126
  7297  007E                     ltemp0	set	126
  7298  0082                     ltemp1	set	130
  7299  0086                     ltemp2	set	134
  7300  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         56
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     34      76
    BANK1            80      0       8
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(COMMON[2]), 
		 -> NULL(NULL[0]), 

    S563$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S575$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S575$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S586$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S586$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3919
                                             30 BANK0      4     4      0
                       _EMC1001_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
                         _TMR6_Start
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1369
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      75
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (1) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_Start
   _TMR6_Start
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       8       7       10.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      62      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      62      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 19:18:31 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0049                                   l50 041A  
                ___wmul@multiplicand 004B       I2C2_MasterReadTRBBuild@address 004B  
                                l470 0247                                  l552 0477  
                                _GIE 005F                         __CFG_CPD$OFF 0000  
                                _PR6 0299                    EMC1001_Read@pData 0050  
                                u985 038F                __size_of_EMC1001_Read 003C  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_LVP$OFF 0000                         __CFG_ZCD$OFF 0000  
                   __end_of_I2C2_ISR 0190                                 l2210 01E6  
                               l2220 020D                                 l2204 01E0  
                               l2232 0471                                 l2216 0205  
                               l2226 0212                                 l1700 0341  
                               l2228 0195                                 l2260 0262  
                               l2252 024D                                 l1550 040F  
                               l1722 03AA                                 l1714 038C  
                               l2194 01CA                                 l2274 0295  
                               l1716 0398                                 l1740 03CB  
                               l1564 042E                                 l2188 01B1  
                               l1726 03B3                                 l1744 03D7  
                               l1690 032E                                 l1738 03BF  
                               l1748 03E0                                 l1694 0335  
                               l1696 033A                                 l1952 0377  
                               STR_1 0518                                 STR_2 0512  
                               u1005 0399                                 u1015 03A3  
                               u1025 03AB                                 u1055 03C2  
                               u1330 0381                                 u1075 03D1  
                               u1085 03D8                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u1805 047D                                 u1735 01FB  
                               u1680 02FF                                 u1840 0260  
                               _T6PR 0299                                 u1795 0478  
                               u1875 0286                                 i1l62 046B  
                               _TMR6 0298                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0248  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E          I2C2_MasterReadTRBBuild@ptrb 004F  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0034                                 ttemp 007E  
                               wtemp 007E                   EMC1001_Read@status 0054  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 0347                           _i2c2_state 0034  
                      ?_EUSART_Write 0077       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 0552              _I2C2_MasterReadTRBBuild 03E5  
                              ?_main 0077                        __CFG_WDTE$OFF 0000  
                  __end_of_I2C2_Stop 0508                                _T6CON 029A  
                    __end_of___lwdiv 03B8                                _T6HLT 029B  
     __size_of_I2C2_FunctionComplete 0011                                i1l312 0063  
                              i1l323 00B9                                i1l324 00C5  
                              i1l252 002F                                i1l244 0013  
                              i1l341 013B                                i1l317 008E  
                              i1l342 0149                                i1l334 0107  
                              i1l318 0096                                i1l246 001D  
                              i1l248 0027                                i1l353 0528  
                    __end_of___lwmod 03E5                                i1l346 0170  
                              i1l338 0127                                _T6TMR 0298  
                              _T6RST 029D        __end_of_I2C2_FunctionComplete 052B  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    __end_of_dpowers 0512                                _putch 0558  
                        ?_TMR6_Start 0077         I2C2_MasterReadTRBBuild@pdata 0049  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                    ??_I2C2_Initialize 0049  
                    __initialization 0036                         __end_of_main 02B5  
             ??_I2C2_MasterTRBInsert 004B                       ??_EUSART_Write 0049  
        ?_INTERRUPT_InterruptManager 0077     __end_of_I2C2_MasterWriteTRBBuild 0451  
                             ??_main 0067                          _i2c2_object 0028  
                    _TMR6_Initialize 053A                               i1S2296 04D8  
                             _ANSELA 0F38                               ?_putch 0077  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 0562  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _RC6PPS 0F26                               _ODCONC 0F50  
                             i1l1900 012F                               i1l1672 0505  
                             i1l1912 0150                               i1l1930 0177  
                             i1l1826 0081                               i1l1932 017B  
                             i1l1916 0157                               i1l1844 00B3  
                             i1l1790 04AA                               i1l1838 00A2  
                             i1l1928 0174                               i1l1858 00E2  
                             i1l1938 0184                               i1l1892 0115  
                             i1l1884 0101                               i1l1878 00F6  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
                     __CFG_PWRTE$OFF 0000                               ___wmul 046E  
                     _p_i2c2_current 0073                       __CFG_STVREN$ON 0000  
          ??_I2C2_MasterReadTRBBuild 004D                            ??___lwdiv 004D  
                          ??___lwmod 0055                  _EUSART_Transmit_ISR 0451  
                          ?_I2C2_ISR 0077                  __size_of_TMR6_Start 0003  
           I2C2_Stop@completion_code 0078                               _printf 0190  
      I2C2_MasterReadTRBBuild@length 004A                 ?_EUSART_Transmit_ISR 0077  
                  _SYSTEM_Initialize 052B              __end_of__initialization 004C  
                 ?_SYSTEM_Initialize 0077                      EMC1001_Read@reg 0053  
                    EMC1001_Read@trb 0036                       __pcstackCOMMON 0077  
                ??_SYSTEM_Initialize 004A                       _i2c2_trb_count 0035  
                      __end_of_putch 055E                           ??_I2C2_ISR 0079  
            __end_of_TMR6_Initialize 0549             _I2C2_MasterWriteTRBBuild 0431  
       I2C2_MasterWriteTRBBuild@ptrb 004F            __end_of_SYSTEM_Initialize 053A  
              ??_EUSART_Transmit_ISR 0077                              ??_putch 004B  
                         __pbssBANK0 0020                           __pbssBANK1 00A0  
               __end_of_EUSART_Write 0431          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 0248                              ?___wmul 0049  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                     _SSP2DATPPSbits 0EC9                 _I2C2_BusCollisionISR 0561  
                            ?_printf 0057                        _eusartRxCount 0032  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 002F                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 04F0  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                         ??_TMR6_Start 0049  
                    _I2C2_Initialize 04C0               I2C2_MasterRead@trBlock 003E  
                       _T6AINPPSbits 0E9E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 0383  
                            ___lwmod 03B8                ?_I2C2_BusCollisionISR 0077  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 0561  
          I2C2_MasterTRBInsert@count 004C                              __ptext1 0190  
                            __ptext2 0558                              __ptext3 040D  
                            __ptext4 03B8                              __ptext5 0383  
                            __ptext6 046E                              __ptext7 052B  
                            __ptext8 053A                              __ptext9 055E  
          I2C2_MasterTRBInsert@pflag 004A                      __size_of_printf 00B8  
                            _dpowers 0508                _OSCILLATOR_Initialize 0549  
           ??_PIN_MANAGER_Initialize 0049                           ?_I2C2_Stop 0077  
              _I2C2_FunctionComplete 051A                            _T6CONbits 029A  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 000F  
                            clrloop0 0553                 end_of_initialization 004C  
                          _T6RSTbits 029D                    _EUSART_Initialize 048A  
                 ?_EUSART_Initialize 0077                   _p_i2c2_trb_current 0074  
                            printf@c 0066                              printf@f 0057  
             I2C2_ISR@i2c_bytes_left 0030                         __pstringtext 0508  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0049                            _PORTAbits 000C  
                  __size_of_I2C2_ISR 0140              __end_of_I2C2_Initialize 04D8  
              __size_of_EUSART_Write 0024                     __CFG_FEXTOSC$OFF 0000  
                          _RXPPSbits 0ECB            __end_of_EUSART_Initialize 04A5  
                         main@templo 006A               ??_I2C2_BusCollisionISR 0077  
         ??_I2C2_MasterWriteTRBBuild 004D                       __end_of___wmul 048A  
                       _EUSART_Write 040D               ?_OSCILLATOR_Initialize 0077  
                     __end_of_printf 0248               ?_I2C2_FunctionComplete 0077  
                start_initialization 0036                          ??_I2C2_Stop 0077  
    __size_of_PIN_MANAGER_Initialize 004C                          putch@txData 004B  
    I2C2_MasterWriteTRBBuild@address 004B             ?_I2C2_MasterReadTRBBuild 0049  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0050  
                           ??___wmul 004D        I2C2_MasterWriteTRBBuild@pdata 0049  
               I2C2_ISR@pi2c_buf_ptr 0031                             ??_printf 005D  
        __end_of_EUSART_Transmit_ISR 046E                          __pbssCOMMON 0070  
                   ?_I2C2_Initialize 0077                            ___latbits 0002  
                      __pcstackBANK0 0049                        _i2c2_tr_queue 0046  
         __end_of_EUSART_Receive_ISR 04C0           __size_of_EUSART_Initialize 001B  
              _TMR6_InterruptHandler 002D                            __pnvBANK0 006B  
                   ___lwdiv@dividend 004B               _PIN_MANAGER_Initialize 02B5  
                     ??_EMC1001_Read 0051                             ?___lwdiv 0049  
                           ?___lwmod 0051                         _eusartRxHead 0070  
                       _eusartTxHead 0071                         _eusartRxTail 0033  
                       _eusartTxTail 0072                             _I2C2_ISR 0050  
       ??_INTERRUPT_InterruptManager 007D                            __pswtext1 04D8  
            _eusartTxBufferRemaining 006B                             _BAUD1CON 011F  
                   ___lwdiv@quotient 004E                 __CFG_RSTOSC$HFINTPLL 0000  
                     __size_of_putch 0006                             _T6CLKCON 029C  
                     _eusartRxBuffer 00A0      __end_of_I2C2_MasterReadTRBBuild 040D  
                     _eusartTxBuffer 0020                       ___wmul@product 004D  
                           _LATAbits 0016                            clear_ram0 0552  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0030  
                           _PIR3bits 070F                             _PIR4bits 0710  
                           _SSP2CON1 019A                             _SSP2CON3 019C  
                           _SSP2STAT 0199        I2C2_MasterTRBInsert@ptrb_list 0049  
                  ___wmul@multiplier 0049                           printf@flag 0062  
                         printf@prec 0063             __size_of_TMR6_Initialize 000F  
       __end_of_I2C2_MasterTRBInsert 0347       I2C2_MasterWriteTRBBuild@length 004A  
            ??_OSCILLATOR_Initialize 0049                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D              ??_I2C2_FunctionComplete 0077  
                    ___lwdiv@divisor 0049                      ___lwdiv@counter 0050  
                           __ptext10 02B5                             __ptext11 0549  
                           __ptext20 04F0                             __ptext12 04C0  
                           __ptext21 051A                             __ptext13 048A  
                           __ptext22 0561                             __ptext14 0347  
                           __ptext23 0451                             __ptext15 0431  
                           __ptext24 04A5                             __ptext16 0301  
                           __ptext17 03E5                             __ptext19 0050  
               __end_of_EMC1001_Read 0383                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B                        __size_of_main 006D  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0034  
         _INTERRUPT_InterruptManager 0004                            printf@val 0064  
            I2C2_MasterWrite@trBlock 0042                             main@temp 0069  
      __size_of_I2C2_BusCollisionISR 0001          PIN_MANAGER_Initialize@state 0049  
   __size_of_I2C2_MasterReadTRBBuild 0028                           _INTCONbits 000B  
  __size_of_I2C2_MasterWriteTRBBuild 0020            ?_I2C2_MasterWriteTRBBuild 0049  
                           intlevel1 0000                     ___lwmod@dividend 0053  
                I2C2_ISR@i2c_address 0075              ?_PIN_MANAGER_Initialize 0077  
                  ??_TMR6_Initialize 0049                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                             printf@ap 0061  
                 _EUSART_Receive_ISR 04A5                 _I2C2_MasterTRBInsert 0301  
                ?_EUSART_Receive_ISR 0077                      ___lwmod@divisor 0051  
                    ___lwmod@counter 0056                           _TMR6_Start 055E  
                 EUSART_Write@txData 004A         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 0301             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018                 ??_EUSART_Receive_ISR 0077  
