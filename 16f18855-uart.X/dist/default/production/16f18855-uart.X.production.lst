

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 18:33:26 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  001C                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  008E                     	;# 
    70  008F                     	;# 
    71  0090                     	;# 
    72  0090                     	;# 
    73  0091                     	;# 
    74  0093                     	;# 
    75  0094                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0110                     	;# 
    92  0110                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0119                     	;# 
   104  0119                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011A                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011B                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011C                     	;# 
   115  011C                     	;# 
   116  011C                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011E                     	;# 
   122  011E                     	;# 
   123  011F                     	;# 
   124  011F                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018E                     	;# 
   131  018F                     	;# 
   132  0190                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0198                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  020E                     	;# 
   145  020F                     	;# 
   146  020F                     	;# 
   147  0210                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0218                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  028C                     	;# 
   172  028C                     	;# 
   173  028D                     	;# 
   174  028D                     	;# 
   175  028E                     	;# 
   176  028F                     	;# 
   177  0290                     	;# 
   178  0290                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0293                     	;# 
   184  0294                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0296                     	;# 
   188  0297                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  030C                     	;# 
   199  030C                     	;# 
   200  030D                     	;# 
   201  030E                     	;# 
   202  030F                     	;# 
   203  0310                     	;# 
   204  0310                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0314                     	;# 
   209  0314                     	;# 
   210  0315                     	;# 
   211  0316                     	;# 
   212  0317                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  031B                     	;# 
   218  031C                     	;# 
   219  031C                     	;# 
   220  031D                     	;# 
   221  031E                     	;# 
   222  031F                     	;# 
   223  038C                     	;# 
   224  038D                     	;# 
   225  038E                     	;# 
   226  0390                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  040C                     	;# 
   230  040D                     	;# 
   231  040E                     	;# 
   232  040F                     	;# 
   233  0410                     	;# 
   234  0411                     	;# 
   235  0416                     	;# 
   236  0416                     	;# 
   237  0417                     	;# 
   238  0418                     	;# 
   239  0418                     	;# 
   240  0419                     	;# 
   241  041A                     	;# 
   242  041A                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041C                     	;# 
   246  041D                     	;# 
   247  041E                     	;# 
   248  041F                     	;# 
   249  048C                     	;# 
   250  048C                     	;# 
   251  048D                     	;# 
   252  048E                     	;# 
   253  048F                     	;# 
   254  048F                     	;# 
   255  0490                     	;# 
   256  0491                     	;# 
   257  0492                     	;# 
   258  0492                     	;# 
   259  0493                     	;# 
   260  0494                     	;# 
   261  0495                     	;# 
   262  0495                     	;# 
   263  0496                     	;# 
   264  0497                     	;# 
   265  0498                     	;# 
   266  0499                     	;# 
   267  049A                     	;# 
   268  049B                     	;# 
   269  049C                     	;# 
   270  049D                     	;# 
   271  050C                     	;# 
   272  050C                     	;# 
   273  050D                     	;# 
   274  050E                     	;# 
   275  050F                     	;# 
   276  050F                     	;# 
   277  0510                     	;# 
   278  0511                     	;# 
   279  0512                     	;# 
   280  0512                     	;# 
   281  0513                     	;# 
   282  0514                     	;# 
   283  0515                     	;# 
   284  0515                     	;# 
   285  0516                     	;# 
   286  0517                     	;# 
   287  0518                     	;# 
   288  0519                     	;# 
   289  051A                     	;# 
   290  051B                     	;# 
   291  051C                     	;# 
   292  051D                     	;# 
   293  058C                     	;# 
   294  058C                     	;# 
   295  058D                     	;# 
   296  058E                     	;# 
   297  058F                     	;# 
   298  058F                     	;# 
   299  0590                     	;# 
   300  0591                     	;# 
   301  0592                     	;# 
   302  0593                     	;# 
   303  060C                     	;# 
   304  060D                     	;# 
   305  060E                     	;# 
   306  060F                     	;# 
   307  0610                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0614                     	;# 
   312  0616                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061B                     	;# 
   318  061C                     	;# 
   319  061D                     	;# 
   320  061E                     	;# 
   321  068C                     	;# 
   322  068D                     	;# 
   323  068E                     	;# 
   324  068F                     	;# 
   325  0690                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  070C                     	;# 
   331  070D                     	;# 
   332  070E                     	;# 
   333  070F                     	;# 
   334  0710                     	;# 
   335  0711                     	;# 
   336  0712                     	;# 
   337  0713                     	;# 
   338  0714                     	;# 
   339  0716                     	;# 
   340  0717                     	;# 
   341  0718                     	;# 
   342  0719                     	;# 
   343  071A                     	;# 
   344  071B                     	;# 
   345  071C                     	;# 
   346  071D                     	;# 
   347  071E                     	;# 
   348  0796                     	;# 
   349  0797                     	;# 
   350  0798                     	;# 
   351  0799                     	;# 
   352  079A                     	;# 
   353  079B                     	;# 
   354  080C                     	;# 
   355  080D                     	;# 
   356  080E                     	;# 
   357  080F                     	;# 
   358  0810                     	;# 
   359  0811                     	;# 
   360  0812                     	;# 
   361  0813                     	;# 
   362  0814                     	;# 
   363  081A                     	;# 
   364  081B                     	;# 
   365  081C                     	;# 
   366  081D                     	;# 
   367  081E                     	;# 
   368  081F                     	;# 
   369  088C                     	;# 
   370  088D                     	;# 
   371  088E                     	;# 
   372  088F                     	;# 
   373  0890                     	;# 
   374  0891                     	;# 
   375  0892                     	;# 
   376  0893                     	;# 
   377  0895                     	;# 
   378  0896                     	;# 
   379  0897                     	;# 
   380  0898                     	;# 
   381  0899                     	;# 
   382  089A                     	;# 
   383  089B                     	;# 
   384  090C                     	;# 
   385  090E                     	;# 
   386  090F                     	;# 
   387  091F                     	;# 
   388  091F                     	;# 
   389  098F                     	;# 
   390  098F                     	;# 
   391  0990                     	;# 
   392  0991                     	;# 
   393  0992                     	;# 
   394  0993                     	;# 
   395  0994                     	;# 
   396  0995                     	;# 
   397  0996                     	;# 
   398  0997                     	;# 
   399  0E0F                     	;# 
   400  0E10                     	;# 
   401  0E11                     	;# 
   402  0E12                     	;# 
   403  0E13                     	;# 
   404  0E14                     	;# 
   405  0E15                     	;# 
   406  0E16                     	;# 
   407  0E17                     	;# 
   408  0E18                     	;# 
   409  0E19                     	;# 
   410  0E1A                     	;# 
   411  0E1B                     	;# 
   412  0E1C                     	;# 
   413  0E1D                     	;# 
   414  0E1E                     	;# 
   415  0E1F                     	;# 
   416  0E20                     	;# 
   417  0E21                     	;# 
   418  0E22                     	;# 
   419  0E23                     	;# 
   420  0E24                     	;# 
   421  0E25                     	;# 
   422  0E26                     	;# 
   423  0E27                     	;# 
   424  0E28                     	;# 
   425  0E29                     	;# 
   426  0E2A                     	;# 
   427  0E2B                     	;# 
   428  0E2C                     	;# 
   429  0E2D                     	;# 
   430  0E2E                     	;# 
   431  0E2F                     	;# 
   432  0E30                     	;# 
   433  0E31                     	;# 
   434  0E32                     	;# 
   435  0E33                     	;# 
   436  0E34                     	;# 
   437  0E35                     	;# 
   438  0E36                     	;# 
   439  0E37                     	;# 
   440  0E8F                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E93                     	;# 
   445  0E94                     	;# 
   446  0E95                     	;# 
   447  0E96                     	;# 
   448  0E97                     	;# 
   449  0E9C                     	;# 
   450  0E9D                     	;# 
   451  0E9E                     	;# 
   452  0EA1                     	;# 
   453  0EA2                     	;# 
   454  0EA3                     	;# 
   455  0EA4                     	;# 
   456  0EA5                     	;# 
   457  0EA9                     	;# 
   458  0EAA                     	;# 
   459  0EAB                     	;# 
   460  0EAC                     	;# 
   461  0EB1                     	;# 
   462  0EB2                     	;# 
   463  0EB3                     	;# 
   464  0EB8                     	;# 
   465  0EB9                     	;# 
   466  0EBA                     	;# 
   467  0EBB                     	;# 
   468  0EBC                     	;# 
   469  0EBD                     	;# 
   470  0EBE                     	;# 
   471  0EC3                     	;# 
   472  0EC5                     	;# 
   473  0EC6                     	;# 
   474  0EC7                     	;# 
   475  0EC8                     	;# 
   476  0EC9                     	;# 
   477  0ECA                     	;# 
   478  0ECB                     	;# 
   479  0ECC                     	;# 
   480  0F10                     	;# 
   481  0F11                     	;# 
   482  0F12                     	;# 
   483  0F13                     	;# 
   484  0F14                     	;# 
   485  0F15                     	;# 
   486  0F16                     	;# 
   487  0F17                     	;# 
   488  0F18                     	;# 
   489  0F19                     	;# 
   490  0F1A                     	;# 
   491  0F1B                     	;# 
   492  0F1C                     	;# 
   493  0F1D                     	;# 
   494  0F1E                     	;# 
   495  0F1F                     	;# 
   496  0F20                     	;# 
   497  0F21                     	;# 
   498  0F22                     	;# 
   499  0F23                     	;# 
   500  0F24                     	;# 
   501  0F25                     	;# 
   502  0F26                     	;# 
   503  0F27                     	;# 
   504  0F38                     	;# 
   505  0F39                     	;# 
   506  0F3A                     	;# 
   507  0F3B                     	;# 
   508  0F3C                     	;# 
   509  0F3D                     	;# 
   510  0F3E                     	;# 
   511  0F3F                     	;# 
   512  0F40                     	;# 
   513  0F41                     	;# 
   514  0F43                     	;# 
   515  0F44                     	;# 
   516  0F45                     	;# 
   517  0F46                     	;# 
   518  0F47                     	;# 
   519  0F48                     	;# 
   520  0F49                     	;# 
   521  0F4A                     	;# 
   522  0F4B                     	;# 
   523  0F4C                     	;# 
   524  0F4E                     	;# 
   525  0F4F                     	;# 
   526  0F50                     	;# 
   527  0F51                     	;# 
   528  0F52                     	;# 
   529  0F53                     	;# 
   530  0F54                     	;# 
   531  0F55                     	;# 
   532  0F56                     	;# 
   533  0F57                     	;# 
   534  0F65                     	;# 
   535  0F68                     	;# 
   536  0F69                     	;# 
   537  0F6A                     	;# 
   538  0F6B                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  000E                     	;# 
   565  0010                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  001C                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  008E                     	;# 
   582  008E                     	;# 
   583  008F                     	;# 
   584  0090                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  0110                     	;# 
   605  0110                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0119                     	;# 
   617  0119                     	;# 
   618  0119                     	;# 
   619  011A                     	;# 
   620  011A                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011B                     	;# 
   624  011B                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011C                     	;# 
   628  011C                     	;# 
   629  011C                     	;# 
   630  011D                     	;# 
   631  011D                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  011E                     	;# 
   635  011E                     	;# 
   636  011F                     	;# 
   637  011F                     	;# 
   638  011F                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  018E                     	;# 
   644  018F                     	;# 
   645  0190                     	;# 
   646  0191                     	;# 
   647  0192                     	;# 
   648  0196                     	;# 
   649  0197                     	;# 
   650  0198                     	;# 
   651  0199                     	;# 
   652  019A                     	;# 
   653  019B                     	;# 
   654  019C                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  020E                     	;# 
   658  020F                     	;# 
   659  020F                     	;# 
   660  0210                     	;# 
   661  0210                     	;# 
   662  0211                     	;# 
   663  0211                     	;# 
   664  0212                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0218                     	;# 
   674  0219                     	;# 
   675  021A                     	;# 
   676  021B                     	;# 
   677  021B                     	;# 
   678  021C                     	;# 
   679  021C                     	;# 
   680  021D                     	;# 
   681  021D                     	;# 
   682  021E                     	;# 
   683  021F                     	;# 
   684  028C                     	;# 
   685  028C                     	;# 
   686  028D                     	;# 
   687  028D                     	;# 
   688  028E                     	;# 
   689  028F                     	;# 
   690  0290                     	;# 
   691  0290                     	;# 
   692  0291                     	;# 
   693  0292                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0293                     	;# 
   697  0294                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0296                     	;# 
   701  0297                     	;# 
   702  0298                     	;# 
   703  0298                     	;# 
   704  0299                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  030C                     	;# 
   712  030C                     	;# 
   713  030D                     	;# 
   714  030E                     	;# 
   715  030F                     	;# 
   716  0310                     	;# 
   717  0310                     	;# 
   718  0311                     	;# 
   719  0312                     	;# 
   720  0313                     	;# 
   721  0314                     	;# 
   722  0314                     	;# 
   723  0315                     	;# 
   724  0316                     	;# 
   725  0317                     	;# 
   726  0318                     	;# 
   727  0318                     	;# 
   728  0319                     	;# 
   729  031A                     	;# 
   730  031B                     	;# 
   731  031C                     	;# 
   732  031C                     	;# 
   733  031D                     	;# 
   734  031E                     	;# 
   735  031F                     	;# 
   736  038C                     	;# 
   737  038D                     	;# 
   738  038E                     	;# 
   739  0390                     	;# 
   740  0391                     	;# 
   741  0392                     	;# 
   742  040C                     	;# 
   743  040D                     	;# 
   744  040E                     	;# 
   745  040F                     	;# 
   746  0410                     	;# 
   747  0411                     	;# 
   748  0416                     	;# 
   749  0416                     	;# 
   750  0417                     	;# 
   751  0418                     	;# 
   752  0418                     	;# 
   753  0419                     	;# 
   754  041A                     	;# 
   755  041A                     	;# 
   756  041B                     	;# 
   757  041C                     	;# 
   758  041C                     	;# 
   759  041D                     	;# 
   760  041E                     	;# 
   761  041F                     	;# 
   762  048C                     	;# 
   763  048C                     	;# 
   764  048D                     	;# 
   765  048E                     	;# 
   766  048F                     	;# 
   767  048F                     	;# 
   768  0490                     	;# 
   769  0491                     	;# 
   770  0492                     	;# 
   771  0492                     	;# 
   772  0493                     	;# 
   773  0494                     	;# 
   774  0495                     	;# 
   775  0495                     	;# 
   776  0496                     	;# 
   777  0497                     	;# 
   778  0498                     	;# 
   779  0499                     	;# 
   780  049A                     	;# 
   781  049B                     	;# 
   782  049C                     	;# 
   783  049D                     	;# 
   784  050C                     	;# 
   785  050C                     	;# 
   786  050D                     	;# 
   787  050E                     	;# 
   788  050F                     	;# 
   789  050F                     	;# 
   790  0510                     	;# 
   791  0511                     	;# 
   792  0512                     	;# 
   793  0512                     	;# 
   794  0513                     	;# 
   795  0514                     	;# 
   796  0515                     	;# 
   797  0515                     	;# 
   798  0516                     	;# 
   799  0517                     	;# 
   800  0518                     	;# 
   801  0519                     	;# 
   802  051A                     	;# 
   803  051B                     	;# 
   804  051C                     	;# 
   805  051D                     	;# 
   806  058C                     	;# 
   807  058C                     	;# 
   808  058D                     	;# 
   809  058E                     	;# 
   810  058F                     	;# 
   811  058F                     	;# 
   812  0590                     	;# 
   813  0591                     	;# 
   814  0592                     	;# 
   815  0593                     	;# 
   816  060C                     	;# 
   817  060D                     	;# 
   818  060E                     	;# 
   819  060F                     	;# 
   820  0610                     	;# 
   821  0611                     	;# 
   822  0612                     	;# 
   823  0613                     	;# 
   824  0614                     	;# 
   825  0616                     	;# 
   826  0617                     	;# 
   827  0618                     	;# 
   828  0619                     	;# 
   829  061A                     	;# 
   830  061B                     	;# 
   831  061C                     	;# 
   832  061D                     	;# 
   833  061E                     	;# 
   834  068C                     	;# 
   835  068D                     	;# 
   836  068E                     	;# 
   837  068F                     	;# 
   838  0690                     	;# 
   839  0691                     	;# 
   840  0692                     	;# 
   841  0693                     	;# 
   842  0694                     	;# 
   843  070C                     	;# 
   844  070D                     	;# 
   845  070E                     	;# 
   846  070F                     	;# 
   847  0710                     	;# 
   848  0711                     	;# 
   849  0712                     	;# 
   850  0713                     	;# 
   851  0714                     	;# 
   852  0716                     	;# 
   853  0717                     	;# 
   854  0718                     	;# 
   855  0719                     	;# 
   856  071A                     	;# 
   857  071B                     	;# 
   858  071C                     	;# 
   859  071D                     	;# 
   860  071E                     	;# 
   861  0796                     	;# 
   862  0797                     	;# 
   863  0798                     	;# 
   864  0799                     	;# 
   865  079A                     	;# 
   866  079B                     	;# 
   867  080C                     	;# 
   868  080D                     	;# 
   869  080E                     	;# 
   870  080F                     	;# 
   871  0810                     	;# 
   872  0811                     	;# 
   873  0812                     	;# 
   874  0813                     	;# 
   875  0814                     	;# 
   876  081A                     	;# 
   877  081B                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  0897                     	;# 
   893  0898                     	;# 
   894  0899                     	;# 
   895  089A                     	;# 
   896  089B                     	;# 
   897  090C                     	;# 
   898  090E                     	;# 
   899  090F                     	;# 
   900  091F                     	;# 
   901  091F                     	;# 
   902  098F                     	;# 
   903  098F                     	;# 
   904  0990                     	;# 
   905  0991                     	;# 
   906  0992                     	;# 
   907  0993                     	;# 
   908  0994                     	;# 
   909  0995                     	;# 
   910  0996                     	;# 
   911  0997                     	;# 
   912  0E0F                     	;# 
   913  0E10                     	;# 
   914  0E11                     	;# 
   915  0E12                     	;# 
   916  0E13                     	;# 
   917  0E14                     	;# 
   918  0E15                     	;# 
   919  0E16                     	;# 
   920  0E17                     	;# 
   921  0E18                     	;# 
   922  0E19                     	;# 
   923  0E1A                     	;# 
   924  0E1B                     	;# 
   925  0E1C                     	;# 
   926  0E1D                     	;# 
   927  0E1E                     	;# 
   928  0E1F                     	;# 
   929  0E20                     	;# 
   930  0E21                     	;# 
   931  0E22                     	;# 
   932  0E23                     	;# 
   933  0E24                     	;# 
   934  0E25                     	;# 
   935  0E26                     	;# 
   936  0E27                     	;# 
   937  0E28                     	;# 
   938  0E29                     	;# 
   939  0E2A                     	;# 
   940  0E2B                     	;# 
   941  0E2C                     	;# 
   942  0E2D                     	;# 
   943  0E2E                     	;# 
   944  0E2F                     	;# 
   945  0E30                     	;# 
   946  0E31                     	;# 
   947  0E32                     	;# 
   948  0E33                     	;# 
   949  0E34                     	;# 
   950  0E35                     	;# 
   951  0E36                     	;# 
   952  0E37                     	;# 
   953  0E8F                     	;# 
   954  0E90                     	;# 
   955  0E91                     	;# 
   956  0E92                     	;# 
   957  0E93                     	;# 
   958  0E94                     	;# 
   959  0E95                     	;# 
   960  0E96                     	;# 
   961  0E97                     	;# 
   962  0E9C                     	;# 
   963  0E9D                     	;# 
   964  0E9E                     	;# 
   965  0EA1                     	;# 
   966  0EA2                     	;# 
   967  0EA3                     	;# 
   968  0EA4                     	;# 
   969  0EA5                     	;# 
   970  0EA9                     	;# 
   971  0EAA                     	;# 
   972  0EAB                     	;# 
   973  0EAC                     	;# 
   974  0EB1                     	;# 
   975  0EB2                     	;# 
   976  0EB3                     	;# 
   977  0EB8                     	;# 
   978  0EB9                     	;# 
   979  0EBA                     	;# 
   980  0EBB                     	;# 
   981  0EBC                     	;# 
   982  0EBD                     	;# 
   983  0EBE                     	;# 
   984  0EC3                     	;# 
   985  0EC5                     	;# 
   986  0EC6                     	;# 
   987  0EC7                     	;# 
   988  0EC8                     	;# 
   989  0EC9                     	;# 
   990  0ECA                     	;# 
   991  0ECB                     	;# 
   992  0ECC                     	;# 
   993  0F10                     	;# 
   994  0F11                     	;# 
   995  0F12                     	;# 
   996  0F13                     	;# 
   997  0F14                     	;# 
   998  0F15                     	;# 
   999  0F16                     	;# 
  1000  0F17                     	;# 
  1001  0F18                     	;# 
  1002  0F19                     	;# 
  1003  0F1A                     	;# 
  1004  0F1B                     	;# 
  1005  0F1C                     	;# 
  1006  0F1D                     	;# 
  1007  0F1E                     	;# 
  1008  0F1F                     	;# 
  1009  0F20                     	;# 
  1010  0F21                     	;# 
  1011  0F22                     	;# 
  1012  0F23                     	;# 
  1013  0F24                     	;# 
  1014  0F25                     	;# 
  1015  0F26                     	;# 
  1016  0F27                     	;# 
  1017  0F38                     	;# 
  1018  0F39                     	;# 
  1019  0F3A                     	;# 
  1020  0F3B                     	;# 
  1021  0F3C                     	;# 
  1022  0F3D                     	;# 
  1023  0F3E                     	;# 
  1024  0F3F                     	;# 
  1025  0F40                     	;# 
  1026  0F41                     	;# 
  1027  0F43                     	;# 
  1028  0F44                     	;# 
  1029  0F45                     	;# 
  1030  0F46                     	;# 
  1031  0F47                     	;# 
  1032  0F48                     	;# 
  1033  0F49                     	;# 
  1034  0F4A                     	;# 
  1035  0F4B                     	;# 
  1036  0F4C                     	;# 
  1037  0F4E                     	;# 
  1038  0F4F                     	;# 
  1039  0F50                     	;# 
  1040  0F51                     	;# 
  1041  0F52                     	;# 
  1042  0F53                     	;# 
  1043  0F54                     	;# 
  1044  0F55                     	;# 
  1045  0F56                     	;# 
  1046  0F57                     	;# 
  1047  0F65                     	;# 
  1048  0F68                     	;# 
  1049  0F69                     	;# 
  1050  0F6A                     	;# 
  1051  0F6B                     	;# 
  1052  0FE4                     	;# 
  1053  0FE5                     	;# 
  1054  0FE6                     	;# 
  1055  0FE7                     	;# 
  1056  0FE8                     	;# 
  1057  0FE9                     	;# 
  1058  0FEA                     	;# 
  1059  0FEB                     	;# 
  1060  0FED                     	;# 
  1061  0FEE                     	;# 
  1062  0FEF                     	;# 
  1063  0000                     	;# 
  1064  0001                     	;# 
  1065  0002                     	;# 
  1066  0003                     	;# 
  1067  0004                     	;# 
  1068  0005                     	;# 
  1069  0006                     	;# 
  1070  0007                     	;# 
  1071  0008                     	;# 
  1072  0009                     	;# 
  1073  000A                     	;# 
  1074  000B                     	;# 
  1075  000C                     	;# 
  1076  000D                     	;# 
  1077  000E                     	;# 
  1078  0010                     	;# 
  1079  0011                     	;# 
  1080  0012                     	;# 
  1081  0013                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  001C                     	;# 
  1086  001C                     	;# 
  1087  001D                     	;# 
  1088  001D                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008C                     	;# 
  1093  008D                     	;# 
  1094  008E                     	;# 
  1095  008E                     	;# 
  1096  008F                     	;# 
  1097  0090                     	;# 
  1098  0090                     	;# 
  1099  0091                     	;# 
  1100  0093                     	;# 
  1101  0094                     	;# 
  1102  0095                     	;# 
  1103  0096                     	;# 
  1104  0097                     	;# 
  1105  0098                     	;# 
  1106  0099                     	;# 
  1107  009A                     	;# 
  1108  009B                     	;# 
  1109  009C                     	;# 
  1110  009D                     	;# 
  1111  009E                     	;# 
  1112  010C                     	;# 
  1113  010D                     	;# 
  1114  010E                     	;# 
  1115  010E                     	;# 
  1116  010F                     	;# 
  1117  0110                     	;# 
  1118  0110                     	;# 
  1119  0111                     	;# 
  1120  0112                     	;# 
  1121  0112                     	;# 
  1122  0113                     	;# 
  1123  0114                     	;# 
  1124  0114                     	;# 
  1125  0115                     	;# 
  1126  0116                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0119                     	;# 
  1130  0119                     	;# 
  1131  0119                     	;# 
  1132  011A                     	;# 
  1133  011A                     	;# 
  1134  011A                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011C                     	;# 
  1141  011C                     	;# 
  1142  011C                     	;# 
  1143  011D                     	;# 
  1144  011D                     	;# 
  1145  011D                     	;# 
  1146  011E                     	;# 
  1147  011E                     	;# 
  1148  011E                     	;# 
  1149  011F                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  018C                     	;# 
  1155  018D                     	;# 
  1156  018E                     	;# 
  1157  018F                     	;# 
  1158  0190                     	;# 
  1159  0191                     	;# 
  1160  0192                     	;# 
  1161  0196                     	;# 
  1162  0197                     	;# 
  1163  0198                     	;# 
  1164  0199                     	;# 
  1165  019A                     	;# 
  1166  019B                     	;# 
  1167  019C                     	;# 
  1168  020C                     	;# 
  1169  020D                     	;# 
  1170  020E                     	;# 
  1171  020F                     	;# 
  1172  020F                     	;# 
  1173  0210                     	;# 
  1174  0210                     	;# 
  1175  0211                     	;# 
  1176  0211                     	;# 
  1177  0212                     	;# 
  1178  0213                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0216                     	;# 
  1183  0216                     	;# 
  1184  0217                     	;# 
  1185  0217                     	;# 
  1186  0218                     	;# 
  1187  0219                     	;# 
  1188  021A                     	;# 
  1189  021B                     	;# 
  1190  021B                     	;# 
  1191  021C                     	;# 
  1192  021C                     	;# 
  1193  021D                     	;# 
  1194  021D                     	;# 
  1195  021E                     	;# 
  1196  021F                     	;# 
  1197  028C                     	;# 
  1198  028C                     	;# 
  1199  028D                     	;# 
  1200  028D                     	;# 
  1201  028E                     	;# 
  1202  028F                     	;# 
  1203  0290                     	;# 
  1204  0290                     	;# 
  1205  0291                     	;# 
  1206  0292                     	;# 
  1207  0292                     	;# 
  1208  0293                     	;# 
  1209  0293                     	;# 
  1210  0294                     	;# 
  1211  0295                     	;# 
  1212  0296                     	;# 
  1213  0296                     	;# 
  1214  0297                     	;# 
  1215  0298                     	;# 
  1216  0298                     	;# 
  1217  0299                     	;# 
  1218  0299                     	;# 
  1219  029A                     	;# 
  1220  029B                     	;# 
  1221  029C                     	;# 
  1222  029C                     	;# 
  1223  029D                     	;# 
  1224  030C                     	;# 
  1225  030C                     	;# 
  1226  030D                     	;# 
  1227  030E                     	;# 
  1228  030F                     	;# 
  1229  0310                     	;# 
  1230  0310                     	;# 
  1231  0311                     	;# 
  1232  0312                     	;# 
  1233  0313                     	;# 
  1234  0314                     	;# 
  1235  0314                     	;# 
  1236  0315                     	;# 
  1237  0316                     	;# 
  1238  0317                     	;# 
  1239  0318                     	;# 
  1240  0318                     	;# 
  1241  0319                     	;# 
  1242  031A                     	;# 
  1243  031B                     	;# 
  1244  031C                     	;# 
  1245  031C                     	;# 
  1246  031D                     	;# 
  1247  031E                     	;# 
  1248  031F                     	;# 
  1249  038C                     	;# 
  1250  038D                     	;# 
  1251  038E                     	;# 
  1252  0390                     	;# 
  1253  0391                     	;# 
  1254  0392                     	;# 
  1255  040C                     	;# 
  1256  040D                     	;# 
  1257  040E                     	;# 
  1258  040F                     	;# 
  1259  0410                     	;# 
  1260  0411                     	;# 
  1261  0416                     	;# 
  1262  0416                     	;# 
  1263  0417                     	;# 
  1264  0418                     	;# 
  1265  0418                     	;# 
  1266  0419                     	;# 
  1267  041A                     	;# 
  1268  041A                     	;# 
  1269  041B                     	;# 
  1270  041C                     	;# 
  1271  041C                     	;# 
  1272  041D                     	;# 
  1273  041E                     	;# 
  1274  041F                     	;# 
  1275  048C                     	;# 
  1276  048C                     	;# 
  1277  048D                     	;# 
  1278  048E                     	;# 
  1279  048F                     	;# 
  1280  048F                     	;# 
  1281  0490                     	;# 
  1282  0491                     	;# 
  1283  0492                     	;# 
  1284  0492                     	;# 
  1285  0493                     	;# 
  1286  0494                     	;# 
  1287  0495                     	;# 
  1288  0495                     	;# 
  1289  0496                     	;# 
  1290  0497                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  050C                     	;# 
  1298  050C                     	;# 
  1299  050D                     	;# 
  1300  050E                     	;# 
  1301  050F                     	;# 
  1302  050F                     	;# 
  1303  0510                     	;# 
  1304  0511                     	;# 
  1305  0512                     	;# 
  1306  0512                     	;# 
  1307  0513                     	;# 
  1308  0514                     	;# 
  1309  0515                     	;# 
  1310  0515                     	;# 
  1311  0516                     	;# 
  1312  0517                     	;# 
  1313  0518                     	;# 
  1314  0519                     	;# 
  1315  051A                     	;# 
  1316  051B                     	;# 
  1317  051C                     	;# 
  1318  051D                     	;# 
  1319  058C                     	;# 
  1320  058C                     	;# 
  1321  058D                     	;# 
  1322  058E                     	;# 
  1323  058F                     	;# 
  1324  058F                     	;# 
  1325  0590                     	;# 
  1326  0591                     	;# 
  1327  0592                     	;# 
  1328  0593                     	;# 
  1329  060C                     	;# 
  1330  060D                     	;# 
  1331  060E                     	;# 
  1332  060F                     	;# 
  1333  0610                     	;# 
  1334  0611                     	;# 
  1335  0612                     	;# 
  1336  0613                     	;# 
  1337  0614                     	;# 
  1338  0616                     	;# 
  1339  0617                     	;# 
  1340  0618                     	;# 
  1341  0619                     	;# 
  1342  061A                     	;# 
  1343  061B                     	;# 
  1344  061C                     	;# 
  1345  061D                     	;# 
  1346  061E                     	;# 
  1347  068C                     	;# 
  1348  068D                     	;# 
  1349  068E                     	;# 
  1350  068F                     	;# 
  1351  0690                     	;# 
  1352  0691                     	;# 
  1353  0692                     	;# 
  1354  0693                     	;# 
  1355  0694                     	;# 
  1356  070C                     	;# 
  1357  070D                     	;# 
  1358  070E                     	;# 
  1359  070F                     	;# 
  1360  0710                     	;# 
  1361  0711                     	;# 
  1362  0712                     	;# 
  1363  0713                     	;# 
  1364  0714                     	;# 
  1365  0716                     	;# 
  1366  0717                     	;# 
  1367  0718                     	;# 
  1368  0719                     	;# 
  1369  071A                     	;# 
  1370  071B                     	;# 
  1371  071C                     	;# 
  1372  071D                     	;# 
  1373  071E                     	;# 
  1374  0796                     	;# 
  1375  0797                     	;# 
  1376  0798                     	;# 
  1377  0799                     	;# 
  1378  079A                     	;# 
  1379  079B                     	;# 
  1380  080C                     	;# 
  1381  080D                     	;# 
  1382  080E                     	;# 
  1383  080F                     	;# 
  1384  0810                     	;# 
  1385  0811                     	;# 
  1386  0812                     	;# 
  1387  0813                     	;# 
  1388  0814                     	;# 
  1389  081A                     	;# 
  1390  081B                     	;# 
  1391  081C                     	;# 
  1392  081D                     	;# 
  1393  081E                     	;# 
  1394  081F                     	;# 
  1395  088C                     	;# 
  1396  088D                     	;# 
  1397  088E                     	;# 
  1398  088F                     	;# 
  1399  0890                     	;# 
  1400  0891                     	;# 
  1401  0892                     	;# 
  1402  0893                     	;# 
  1403  0895                     	;# 
  1404  0896                     	;# 
  1405  0897                     	;# 
  1406  0898                     	;# 
  1407  0899                     	;# 
  1408  089A                     	;# 
  1409  089B                     	;# 
  1410  090C                     	;# 
  1411  090E                     	;# 
  1412  090F                     	;# 
  1413  091F                     	;# 
  1414  091F                     	;# 
  1415  098F                     	;# 
  1416  098F                     	;# 
  1417  0990                     	;# 
  1418  0991                     	;# 
  1419  0992                     	;# 
  1420  0993                     	;# 
  1421  0994                     	;# 
  1422  0995                     	;# 
  1423  0996                     	;# 
  1424  0997                     	;# 
  1425  0E0F                     	;# 
  1426  0E10                     	;# 
  1427  0E11                     	;# 
  1428  0E12                     	;# 
  1429  0E13                     	;# 
  1430  0E14                     	;# 
  1431  0E15                     	;# 
  1432  0E16                     	;# 
  1433  0E17                     	;# 
  1434  0E18                     	;# 
  1435  0E19                     	;# 
  1436  0E1A                     	;# 
  1437  0E1B                     	;# 
  1438  0E1C                     	;# 
  1439  0E1D                     	;# 
  1440  0E1E                     	;# 
  1441  0E1F                     	;# 
  1442  0E20                     	;# 
  1443  0E21                     	;# 
  1444  0E22                     	;# 
  1445  0E23                     	;# 
  1446  0E24                     	;# 
  1447  0E25                     	;# 
  1448  0E26                     	;# 
  1449  0E27                     	;# 
  1450  0E28                     	;# 
  1451  0E29                     	;# 
  1452  0E2A                     	;# 
  1453  0E2B                     	;# 
  1454  0E2C                     	;# 
  1455  0E2D                     	;# 
  1456  0E2E                     	;# 
  1457  0E2F                     	;# 
  1458  0E30                     	;# 
  1459  0E31                     	;# 
  1460  0E32                     	;# 
  1461  0E33                     	;# 
  1462  0E34                     	;# 
  1463  0E35                     	;# 
  1464  0E36                     	;# 
  1465  0E37                     	;# 
  1466  0E8F                     	;# 
  1467  0E90                     	;# 
  1468  0E91                     	;# 
  1469  0E92                     	;# 
  1470  0E93                     	;# 
  1471  0E94                     	;# 
  1472  0E95                     	;# 
  1473  0E96                     	;# 
  1474  0E97                     	;# 
  1475  0E9C                     	;# 
  1476  0E9D                     	;# 
  1477  0E9E                     	;# 
  1478  0EA1                     	;# 
  1479  0EA2                     	;# 
  1480  0EA3                     	;# 
  1481  0EA4                     	;# 
  1482  0EA5                     	;# 
  1483  0EA9                     	;# 
  1484  0EAA                     	;# 
  1485  0EAB                     	;# 
  1486  0EAC                     	;# 
  1487  0EB1                     	;# 
  1488  0EB2                     	;# 
  1489  0EB3                     	;# 
  1490  0EB8                     	;# 
  1491  0EB9                     	;# 
  1492  0EBA                     	;# 
  1493  0EBB                     	;# 
  1494  0EBC                     	;# 
  1495  0EBD                     	;# 
  1496  0EBE                     	;# 
  1497  0EC3                     	;# 
  1498  0EC5                     	;# 
  1499  0EC6                     	;# 
  1500  0EC7                     	;# 
  1501  0EC8                     	;# 
  1502  0EC9                     	;# 
  1503  0ECA                     	;# 
  1504  0ECB                     	;# 
  1505  0ECC                     	;# 
  1506  0F10                     	;# 
  1507  0F11                     	;# 
  1508  0F12                     	;# 
  1509  0F13                     	;# 
  1510  0F14                     	;# 
  1511  0F15                     	;# 
  1512  0F16                     	;# 
  1513  0F17                     	;# 
  1514  0F18                     	;# 
  1515  0F19                     	;# 
  1516  0F1A                     	;# 
  1517  0F1B                     	;# 
  1518  0F1C                     	;# 
  1519  0F1D                     	;# 
  1520  0F1E                     	;# 
  1521  0F1F                     	;# 
  1522  0F20                     	;# 
  1523  0F21                     	;# 
  1524  0F22                     	;# 
  1525  0F23                     	;# 
  1526  0F24                     	;# 
  1527  0F25                     	;# 
  1528  0F26                     	;# 
  1529  0F27                     	;# 
  1530  0F38                     	;# 
  1531  0F39                     	;# 
  1532  0F3A                     	;# 
  1533  0F3B                     	;# 
  1534  0F3C                     	;# 
  1535  0F3D                     	;# 
  1536  0F3E                     	;# 
  1537  0F3F                     	;# 
  1538  0F40                     	;# 
  1539  0F41                     	;# 
  1540  0F43                     	;# 
  1541  0F44                     	;# 
  1542  0F45                     	;# 
  1543  0F46                     	;# 
  1544  0F47                     	;# 
  1545  0F48                     	;# 
  1546  0F49                     	;# 
  1547  0F4A                     	;# 
  1548  0F4B                     	;# 
  1549  0F4C                     	;# 
  1550  0F4E                     	;# 
  1551  0F4F                     	;# 
  1552  0F50                     	;# 
  1553  0F51                     	;# 
  1554  0F52                     	;# 
  1555  0F53                     	;# 
  1556  0F54                     	;# 
  1557  0F55                     	;# 
  1558  0F56                     	;# 
  1559  0F57                     	;# 
  1560  0F65                     	;# 
  1561  0F68                     	;# 
  1562  0F69                     	;# 
  1563  0F6A                     	;# 
  1564  0F6B                     	;# 
  1565  0FE4                     	;# 
  1566  0FE5                     	;# 
  1567  0FE6                     	;# 
  1568  0FE7                     	;# 
  1569  0FE8                     	;# 
  1570  0FE9                     	;# 
  1571  0FEA                     	;# 
  1572  0FEB                     	;# 
  1573  0FED                     	;# 
  1574  0FEE                     	;# 
  1575  0FEF                     	;# 
  1576  0000                     	;# 
  1577  0001                     	;# 
  1578  0002                     	;# 
  1579  0003                     	;# 
  1580  0004                     	;# 
  1581  0005                     	;# 
  1582  0006                     	;# 
  1583  0007                     	;# 
  1584  0008                     	;# 
  1585  0009                     	;# 
  1586  000A                     	;# 
  1587  000B                     	;# 
  1588  000C                     	;# 
  1589  000D                     	;# 
  1590  000E                     	;# 
  1591  0010                     	;# 
  1592  0011                     	;# 
  1593  0012                     	;# 
  1594  0013                     	;# 
  1595  0016                     	;# 
  1596  0017                     	;# 
  1597  0018                     	;# 
  1598  001C                     	;# 
  1599  001C                     	;# 
  1600  001D                     	;# 
  1601  001D                     	;# 
  1602  001E                     	;# 
  1603  001F                     	;# 
  1604  008C                     	;# 
  1605  008C                     	;# 
  1606  008D                     	;# 
  1607  008E                     	;# 
  1608  008E                     	;# 
  1609  008F                     	;# 
  1610  0090                     	;# 
  1611  0090                     	;# 
  1612  0091                     	;# 
  1613  0093                     	;# 
  1614  0094                     	;# 
  1615  0095                     	;# 
  1616  0096                     	;# 
  1617  0097                     	;# 
  1618  0098                     	;# 
  1619  0099                     	;# 
  1620  009A                     	;# 
  1621  009B                     	;# 
  1622  009C                     	;# 
  1623  009D                     	;# 
  1624  009E                     	;# 
  1625  010C                     	;# 
  1626  010D                     	;# 
  1627  010E                     	;# 
  1628  010E                     	;# 
  1629  010F                     	;# 
  1630  0110                     	;# 
  1631  0110                     	;# 
  1632  0111                     	;# 
  1633  0112                     	;# 
  1634  0112                     	;# 
  1635  0113                     	;# 
  1636  0114                     	;# 
  1637  0114                     	;# 
  1638  0115                     	;# 
  1639  0116                     	;# 
  1640  0116                     	;# 
  1641  0117                     	;# 
  1642  0119                     	;# 
  1643  0119                     	;# 
  1644  0119                     	;# 
  1645  011A                     	;# 
  1646  011A                     	;# 
  1647  011A                     	;# 
  1648  011B                     	;# 
  1649  011B                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011C                     	;# 
  1654  011C                     	;# 
  1655  011C                     	;# 
  1656  011D                     	;# 
  1657  011D                     	;# 
  1658  011D                     	;# 
  1659  011E                     	;# 
  1660  011E                     	;# 
  1661  011E                     	;# 
  1662  011F                     	;# 
  1663  011F                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  018C                     	;# 
  1668  018D                     	;# 
  1669  018E                     	;# 
  1670  018F                     	;# 
  1671  0190                     	;# 
  1672  0191                     	;# 
  1673  0192                     	;# 
  1674  0196                     	;# 
  1675  0197                     	;# 
  1676  0198                     	;# 
  1677  0199                     	;# 
  1678  019A                     	;# 
  1679  019B                     	;# 
  1680  019C                     	;# 
  1681  020C                     	;# 
  1682  020D                     	;# 
  1683  020E                     	;# 
  1684  020F                     	;# 
  1685  020F                     	;# 
  1686  0210                     	;# 
  1687  0210                     	;# 
  1688  0211                     	;# 
  1689  0211                     	;# 
  1690  0212                     	;# 
  1691  0213                     	;# 
  1692  0214                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0216                     	;# 
  1696  0216                     	;# 
  1697  0217                     	;# 
  1698  0217                     	;# 
  1699  0218                     	;# 
  1700  0219                     	;# 
  1701  021A                     	;# 
  1702  021B                     	;# 
  1703  021B                     	;# 
  1704  021C                     	;# 
  1705  021C                     	;# 
  1706  021D                     	;# 
  1707  021D                     	;# 
  1708  021E                     	;# 
  1709  021F                     	;# 
  1710  028C                     	;# 
  1711  028C                     	;# 
  1712  028D                     	;# 
  1713  028D                     	;# 
  1714  028E                     	;# 
  1715  028F                     	;# 
  1716  0290                     	;# 
  1717  0290                     	;# 
  1718  0291                     	;# 
  1719  0292                     	;# 
  1720  0292                     	;# 
  1721  0293                     	;# 
  1722  0293                     	;# 
  1723  0294                     	;# 
  1724  0295                     	;# 
  1725  0296                     	;# 
  1726  0296                     	;# 
  1727  0297                     	;# 
  1728  0298                     	;# 
  1729  0298                     	;# 
  1730  0299                     	;# 
  1731  0299                     	;# 
  1732  029A                     	;# 
  1733  029B                     	;# 
  1734  029C                     	;# 
  1735  029C                     	;# 
  1736  029D                     	;# 
  1737  030C                     	;# 
  1738  030C                     	;# 
  1739  030D                     	;# 
  1740  030E                     	;# 
  1741  030F                     	;# 
  1742  0310                     	;# 
  1743  0310                     	;# 
  1744  0311                     	;# 
  1745  0312                     	;# 
  1746  0313                     	;# 
  1747  0314                     	;# 
  1748  0314                     	;# 
  1749  0315                     	;# 
  1750  0316                     	;# 
  1751  0317                     	;# 
  1752  0318                     	;# 
  1753  0318                     	;# 
  1754  0319                     	;# 
  1755  031A                     	;# 
  1756  031B                     	;# 
  1757  031C                     	;# 
  1758  031C                     	;# 
  1759  031D                     	;# 
  1760  031E                     	;# 
  1761  031F                     	;# 
  1762  038C                     	;# 
  1763  038D                     	;# 
  1764  038E                     	;# 
  1765  0390                     	;# 
  1766  0391                     	;# 
  1767  0392                     	;# 
  1768  040C                     	;# 
  1769  040D                     	;# 
  1770  040E                     	;# 
  1771  040F                     	;# 
  1772  0410                     	;# 
  1773  0411                     	;# 
  1774  0416                     	;# 
  1775  0416                     	;# 
  1776  0417                     	;# 
  1777  0418                     	;# 
  1778  0418                     	;# 
  1779  0419                     	;# 
  1780  041A                     	;# 
  1781  041A                     	;# 
  1782  041B                     	;# 
  1783  041C                     	;# 
  1784  041C                     	;# 
  1785  041D                     	;# 
  1786  041E                     	;# 
  1787  041F                     	;# 
  1788  048C                     	;# 
  1789  048C                     	;# 
  1790  048D                     	;# 
  1791  048E                     	;# 
  1792  048F                     	;# 
  1793  048F                     	;# 
  1794  0490                     	;# 
  1795  0491                     	;# 
  1796  0492                     	;# 
  1797  0492                     	;# 
  1798  0493                     	;# 
  1799  0494                     	;# 
  1800  0495                     	;# 
  1801  0495                     	;# 
  1802  0496                     	;# 
  1803  0497                     	;# 
  1804  0498                     	;# 
  1805  0499                     	;# 
  1806  049A                     	;# 
  1807  049B                     	;# 
  1808  049C                     	;# 
  1809  049D                     	;# 
  1810  050C                     	;# 
  1811  050C                     	;# 
  1812  050D                     	;# 
  1813  050E                     	;# 
  1814  050F                     	;# 
  1815  050F                     	;# 
  1816  0510                     	;# 
  1817  0511                     	;# 
  1818  0512                     	;# 
  1819  0512                     	;# 
  1820  0513                     	;# 
  1821  0514                     	;# 
  1822  0515                     	;# 
  1823  0515                     	;# 
  1824  0516                     	;# 
  1825  0517                     	;# 
  1826  0518                     	;# 
  1827  0519                     	;# 
  1828  051A                     	;# 
  1829  051B                     	;# 
  1830  051C                     	;# 
  1831  051D                     	;# 
  1832  058C                     	;# 
  1833  058C                     	;# 
  1834  058D                     	;# 
  1835  058E                     	;# 
  1836  058F                     	;# 
  1837  058F                     	;# 
  1838  0590                     	;# 
  1839  0591                     	;# 
  1840  0592                     	;# 
  1841  0593                     	;# 
  1842  060C                     	;# 
  1843  060D                     	;# 
  1844  060E                     	;# 
  1845  060F                     	;# 
  1846  0610                     	;# 
  1847  0611                     	;# 
  1848  0612                     	;# 
  1849  0613                     	;# 
  1850  0614                     	;# 
  1851  0616                     	;# 
  1852  0617                     	;# 
  1853  0618                     	;# 
  1854  0619                     	;# 
  1855  061A                     	;# 
  1856  061B                     	;# 
  1857  061C                     	;# 
  1858  061D                     	;# 
  1859  061E                     	;# 
  1860  068C                     	;# 
  1861  068D                     	;# 
  1862  068E                     	;# 
  1863  068F                     	;# 
  1864  0690                     	;# 
  1865  0691                     	;# 
  1866  0692                     	;# 
  1867  0693                     	;# 
  1868  0694                     	;# 
  1869  070C                     	;# 
  1870  070D                     	;# 
  1871  070E                     	;# 
  1872  070F                     	;# 
  1873  0710                     	;# 
  1874  0711                     	;# 
  1875  0712                     	;# 
  1876  0713                     	;# 
  1877  0714                     	;# 
  1878  0716                     	;# 
  1879  0717                     	;# 
  1880  0718                     	;# 
  1881  0719                     	;# 
  1882  071A                     	;# 
  1883  071B                     	;# 
  1884  071C                     	;# 
  1885  071D                     	;# 
  1886  071E                     	;# 
  1887  0796                     	;# 
  1888  0797                     	;# 
  1889  0798                     	;# 
  1890  0799                     	;# 
  1891  079A                     	;# 
  1892  079B                     	;# 
  1893  080C                     	;# 
  1894  080D                     	;# 
  1895  080E                     	;# 
  1896  080F                     	;# 
  1897  0810                     	;# 
  1898  0811                     	;# 
  1899  0812                     	;# 
  1900  0813                     	;# 
  1901  0814                     	;# 
  1902  081A                     	;# 
  1903  081B                     	;# 
  1904  081C                     	;# 
  1905  081D                     	;# 
  1906  081E                     	;# 
  1907  081F                     	;# 
  1908  088C                     	;# 
  1909  088D                     	;# 
  1910  088E                     	;# 
  1911  088F                     	;# 
  1912  0890                     	;# 
  1913  0891                     	;# 
  1914  0892                     	;# 
  1915  0893                     	;# 
  1916  0895                     	;# 
  1917  0896                     	;# 
  1918  0897                     	;# 
  1919  0898                     	;# 
  1920  0899                     	;# 
  1921  089A                     	;# 
  1922  089B                     	;# 
  1923  090C                     	;# 
  1924  090E                     	;# 
  1925  090F                     	;# 
  1926  091F                     	;# 
  1927  091F                     	;# 
  1928  098F                     	;# 
  1929  098F                     	;# 
  1930  0990                     	;# 
  1931  0991                     	;# 
  1932  0992                     	;# 
  1933  0993                     	;# 
  1934  0994                     	;# 
  1935  0995                     	;# 
  1936  0996                     	;# 
  1937  0997                     	;# 
  1938  0E0F                     	;# 
  1939  0E10                     	;# 
  1940  0E11                     	;# 
  1941  0E12                     	;# 
  1942  0E13                     	;# 
  1943  0E14                     	;# 
  1944  0E15                     	;# 
  1945  0E16                     	;# 
  1946  0E17                     	;# 
  1947  0E18                     	;# 
  1948  0E19                     	;# 
  1949  0E1A                     	;# 
  1950  0E1B                     	;# 
  1951  0E1C                     	;# 
  1952  0E1D                     	;# 
  1953  0E1E                     	;# 
  1954  0E1F                     	;# 
  1955  0E20                     	;# 
  1956  0E21                     	;# 
  1957  0E22                     	;# 
  1958  0E23                     	;# 
  1959  0E24                     	;# 
  1960  0E25                     	;# 
  1961  0E26                     	;# 
  1962  0E27                     	;# 
  1963  0E28                     	;# 
  1964  0E29                     	;# 
  1965  0E2A                     	;# 
  1966  0E2B                     	;# 
  1967  0E2C                     	;# 
  1968  0E2D                     	;# 
  1969  0E2E                     	;# 
  1970  0E2F                     	;# 
  1971  0E30                     	;# 
  1972  0E31                     	;# 
  1973  0E32                     	;# 
  1974  0E33                     	;# 
  1975  0E34                     	;# 
  1976  0E35                     	;# 
  1977  0E36                     	;# 
  1978  0E37                     	;# 
  1979  0E8F                     	;# 
  1980  0E90                     	;# 
  1981  0E91                     	;# 
  1982  0E92                     	;# 
  1983  0E93                     	;# 
  1984  0E94                     	;# 
  1985  0E95                     	;# 
  1986  0E96                     	;# 
  1987  0E97                     	;# 
  1988  0E9C                     	;# 
  1989  0E9D                     	;# 
  1990  0E9E                     	;# 
  1991  0EA1                     	;# 
  1992  0EA2                     	;# 
  1993  0EA3                     	;# 
  1994  0EA4                     	;# 
  1995  0EA5                     	;# 
  1996  0EA9                     	;# 
  1997  0EAA                     	;# 
  1998  0EAB                     	;# 
  1999  0EAC                     	;# 
  2000  0EB1                     	;# 
  2001  0EB2                     	;# 
  2002  0EB3                     	;# 
  2003  0EB8                     	;# 
  2004  0EB9                     	;# 
  2005  0EBA                     	;# 
  2006  0EBB                     	;# 
  2007  0EBC                     	;# 
  2008  0EBD                     	;# 
  2009  0EBE                     	;# 
  2010  0EC3                     	;# 
  2011  0EC5                     	;# 
  2012  0EC6                     	;# 
  2013  0EC7                     	;# 
  2014  0EC8                     	;# 
  2015  0EC9                     	;# 
  2016  0ECA                     	;# 
  2017  0ECB                     	;# 
  2018  0ECC                     	;# 
  2019  0F10                     	;# 
  2020  0F11                     	;# 
  2021  0F12                     	;# 
  2022  0F13                     	;# 
  2023  0F14                     	;# 
  2024  0F15                     	;# 
  2025  0F16                     	;# 
  2026  0F17                     	;# 
  2027  0F18                     	;# 
  2028  0F19                     	;# 
  2029  0F1A                     	;# 
  2030  0F1B                     	;# 
  2031  0F1C                     	;# 
  2032  0F1D                     	;# 
  2033  0F1E                     	;# 
  2034  0F1F                     	;# 
  2035  0F20                     	;# 
  2036  0F21                     	;# 
  2037  0F22                     	;# 
  2038  0F23                     	;# 
  2039  0F24                     	;# 
  2040  0F25                     	;# 
  2041  0F26                     	;# 
  2042  0F27                     	;# 
  2043  0F38                     	;# 
  2044  0F39                     	;# 
  2045  0F3A                     	;# 
  2046  0F3B                     	;# 
  2047  0F3C                     	;# 
  2048  0F3D                     	;# 
  2049  0F3E                     	;# 
  2050  0F3F                     	;# 
  2051  0F40                     	;# 
  2052  0F41                     	;# 
  2053  0F43                     	;# 
  2054  0F44                     	;# 
  2055  0F45                     	;# 
  2056  0F46                     	;# 
  2057  0F47                     	;# 
  2058  0F48                     	;# 
  2059  0F49                     	;# 
  2060  0F4A                     	;# 
  2061  0F4B                     	;# 
  2062  0F4C                     	;# 
  2063  0F4E                     	;# 
  2064  0F4F                     	;# 
  2065  0F50                     	;# 
  2066  0F51                     	;# 
  2067  0F52                     	;# 
  2068  0F53                     	;# 
  2069  0F54                     	;# 
  2070  0F55                     	;# 
  2071  0F56                     	;# 
  2072  0F57                     	;# 
  2073  0F65                     	;# 
  2074  0F68                     	;# 
  2075  0F69                     	;# 
  2076  0F6A                     	;# 
  2077  0F6B                     	;# 
  2078  0FE4                     	;# 
  2079  0FE5                     	;# 
  2080  0FE6                     	;# 
  2081  0FE7                     	;# 
  2082  0FE8                     	;# 
  2083  0FE9                     	;# 
  2084  0FEA                     	;# 
  2085  0FEB                     	;# 
  2086  0FED                     	;# 
  2087  0FEE                     	;# 
  2088  0FEF                     	;# 
  2089  0000                     	;# 
  2090  0001                     	;# 
  2091  0002                     	;# 
  2092  0003                     	;# 
  2093  0004                     	;# 
  2094  0005                     	;# 
  2095  0006                     	;# 
  2096  0007                     	;# 
  2097  0008                     	;# 
  2098  0009                     	;# 
  2099  000A                     	;# 
  2100  000B                     	;# 
  2101  000C                     	;# 
  2102  000D                     	;# 
  2103  000E                     	;# 
  2104  0010                     	;# 
  2105  0011                     	;# 
  2106  0012                     	;# 
  2107  0013                     	;# 
  2108  0016                     	;# 
  2109  0017                     	;# 
  2110  0018                     	;# 
  2111  001C                     	;# 
  2112  001C                     	;# 
  2113  001D                     	;# 
  2114  001D                     	;# 
  2115  001E                     	;# 
  2116  001F                     	;# 
  2117  008C                     	;# 
  2118  008C                     	;# 
  2119  008D                     	;# 
  2120  008E                     	;# 
  2121  008E                     	;# 
  2122  008F                     	;# 
  2123  0090                     	;# 
  2124  0090                     	;# 
  2125  0091                     	;# 
  2126  0093                     	;# 
  2127  0094                     	;# 
  2128  0095                     	;# 
  2129  0096                     	;# 
  2130  0097                     	;# 
  2131  0098                     	;# 
  2132  0099                     	;# 
  2133  009A                     	;# 
  2134  009B                     	;# 
  2135  009C                     	;# 
  2136  009D                     	;# 
  2137  009E                     	;# 
  2138  010C                     	;# 
  2139  010D                     	;# 
  2140  010E                     	;# 
  2141  010E                     	;# 
  2142  010F                     	;# 
  2143  0110                     	;# 
  2144  0110                     	;# 
  2145  0111                     	;# 
  2146  0112                     	;# 
  2147  0112                     	;# 
  2148  0113                     	;# 
  2149  0114                     	;# 
  2150  0114                     	;# 
  2151  0115                     	;# 
  2152  0116                     	;# 
  2153  0116                     	;# 
  2154  0117                     	;# 
  2155  0119                     	;# 
  2156  0119                     	;# 
  2157  0119                     	;# 
  2158  011A                     	;# 
  2159  011A                     	;# 
  2160  011A                     	;# 
  2161  011B                     	;# 
  2162  011B                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011C                     	;# 
  2167  011C                     	;# 
  2168  011C                     	;# 
  2169  011D                     	;# 
  2170  011D                     	;# 
  2171  011D                     	;# 
  2172  011E                     	;# 
  2173  011E                     	;# 
  2174  011E                     	;# 
  2175  011F                     	;# 
  2176  011F                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  018C                     	;# 
  2181  018D                     	;# 
  2182  018E                     	;# 
  2183  018F                     	;# 
  2184  0190                     	;# 
  2185  0191                     	;# 
  2186  0192                     	;# 
  2187  0196                     	;# 
  2188  0197                     	;# 
  2189  0198                     	;# 
  2190  0199                     	;# 
  2191  019A                     	;# 
  2192  019B                     	;# 
  2193  019C                     	;# 
  2194  020C                     	;# 
  2195  020D                     	;# 
  2196  020E                     	;# 
  2197  020F                     	;# 
  2198  020F                     	;# 
  2199  0210                     	;# 
  2200  0210                     	;# 
  2201  0211                     	;# 
  2202  0211                     	;# 
  2203  0212                     	;# 
  2204  0213                     	;# 
  2205  0214                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  0218                     	;# 
  2213  0219                     	;# 
  2214  021A                     	;# 
  2215  021B                     	;# 
  2216  021B                     	;# 
  2217  021C                     	;# 
  2218  021C                     	;# 
  2219  021D                     	;# 
  2220  021D                     	;# 
  2221  021E                     	;# 
  2222  021F                     	;# 
  2223  028C                     	;# 
  2224  028C                     	;# 
  2225  028D                     	;# 
  2226  028D                     	;# 
  2227  028E                     	;# 
  2228  028F                     	;# 
  2229  0290                     	;# 
  2230  0290                     	;# 
  2231  0291                     	;# 
  2232  0292                     	;# 
  2233  0292                     	;# 
  2234  0293                     	;# 
  2235  0293                     	;# 
  2236  0294                     	;# 
  2237  0295                     	;# 
  2238  0296                     	;# 
  2239  0296                     	;# 
  2240  0297                     	;# 
  2241  0298                     	;# 
  2242  0298                     	;# 
  2243  0299                     	;# 
  2244  0299                     	;# 
  2245  029A                     	;# 
  2246  029B                     	;# 
  2247  029C                     	;# 
  2248  029C                     	;# 
  2249  029D                     	;# 
  2250  030C                     	;# 
  2251  030C                     	;# 
  2252  030D                     	;# 
  2253  030E                     	;# 
  2254  030F                     	;# 
  2255  0310                     	;# 
  2256  0310                     	;# 
  2257  0311                     	;# 
  2258  0312                     	;# 
  2259  0313                     	;# 
  2260  0314                     	;# 
  2261  0314                     	;# 
  2262  0315                     	;# 
  2263  0316                     	;# 
  2264  0317                     	;# 
  2265  0318                     	;# 
  2266  0318                     	;# 
  2267  0319                     	;# 
  2268  031A                     	;# 
  2269  031B                     	;# 
  2270  031C                     	;# 
  2271  031C                     	;# 
  2272  031D                     	;# 
  2273  031E                     	;# 
  2274  031F                     	;# 
  2275  038C                     	;# 
  2276  038D                     	;# 
  2277  038E                     	;# 
  2278  0390                     	;# 
  2279  0391                     	;# 
  2280  0392                     	;# 
  2281  040C                     	;# 
  2282  040D                     	;# 
  2283  040E                     	;# 
  2284  040F                     	;# 
  2285  0410                     	;# 
  2286  0411                     	;# 
  2287  0416                     	;# 
  2288  0416                     	;# 
  2289  0417                     	;# 
  2290  0418                     	;# 
  2291  0418                     	;# 
  2292  0419                     	;# 
  2293  041A                     	;# 
  2294  041A                     	;# 
  2295  041B                     	;# 
  2296  041C                     	;# 
  2297  041C                     	;# 
  2298  041D                     	;# 
  2299  041E                     	;# 
  2300  041F                     	;# 
  2301  048C                     	;# 
  2302  048C                     	;# 
  2303  048D                     	;# 
  2304  048E                     	;# 
  2305  048F                     	;# 
  2306  048F                     	;# 
  2307  0490                     	;# 
  2308  0491                     	;# 
  2309  0492                     	;# 
  2310  0492                     	;# 
  2311  0493                     	;# 
  2312  0494                     	;# 
  2313  0495                     	;# 
  2314  0495                     	;# 
  2315  0496                     	;# 
  2316  0497                     	;# 
  2317  0498                     	;# 
  2318  0499                     	;# 
  2319  049A                     	;# 
  2320  049B                     	;# 
  2321  049C                     	;# 
  2322  049D                     	;# 
  2323  050C                     	;# 
  2324  050C                     	;# 
  2325  050D                     	;# 
  2326  050E                     	;# 
  2327  050F                     	;# 
  2328  050F                     	;# 
  2329  0510                     	;# 
  2330  0511                     	;# 
  2331  0512                     	;# 
  2332  0512                     	;# 
  2333  0513                     	;# 
  2334  0514                     	;# 
  2335  0515                     	;# 
  2336  0515                     	;# 
  2337  0516                     	;# 
  2338  0517                     	;# 
  2339  0518                     	;# 
  2340  0519                     	;# 
  2341  051A                     	;# 
  2342  051B                     	;# 
  2343  051C                     	;# 
  2344  051D                     	;# 
  2345  058C                     	;# 
  2346  058C                     	;# 
  2347  058D                     	;# 
  2348  058E                     	;# 
  2349  058F                     	;# 
  2350  058F                     	;# 
  2351  0590                     	;# 
  2352  0591                     	;# 
  2353  0592                     	;# 
  2354  0593                     	;# 
  2355  060C                     	;# 
  2356  060D                     	;# 
  2357  060E                     	;# 
  2358  060F                     	;# 
  2359  0610                     	;# 
  2360  0611                     	;# 
  2361  0612                     	;# 
  2362  0613                     	;# 
  2363  0614                     	;# 
  2364  0616                     	;# 
  2365  0617                     	;# 
  2366  0618                     	;# 
  2367  0619                     	;# 
  2368  061A                     	;# 
  2369  061B                     	;# 
  2370  061C                     	;# 
  2371  061D                     	;# 
  2372  061E                     	;# 
  2373  068C                     	;# 
  2374  068D                     	;# 
  2375  068E                     	;# 
  2376  068F                     	;# 
  2377  0690                     	;# 
  2378  0691                     	;# 
  2379  0692                     	;# 
  2380  0693                     	;# 
  2381  0694                     	;# 
  2382  070C                     	;# 
  2383  070D                     	;# 
  2384  070E                     	;# 
  2385  070F                     	;# 
  2386  0710                     	;# 
  2387  0711                     	;# 
  2388  0712                     	;# 
  2389  0713                     	;# 
  2390  0714                     	;# 
  2391  0716                     	;# 
  2392  0717                     	;# 
  2393  0718                     	;# 
  2394  0719                     	;# 
  2395  071A                     	;# 
  2396  071B                     	;# 
  2397  071C                     	;# 
  2398  071D                     	;# 
  2399  071E                     	;# 
  2400  0796                     	;# 
  2401  0797                     	;# 
  2402  0798                     	;# 
  2403  0799                     	;# 
  2404  079A                     	;# 
  2405  079B                     	;# 
  2406  080C                     	;# 
  2407  080D                     	;# 
  2408  080E                     	;# 
  2409  080F                     	;# 
  2410  0810                     	;# 
  2411  0811                     	;# 
  2412  0812                     	;# 
  2413  0813                     	;# 
  2414  0814                     	;# 
  2415  081A                     	;# 
  2416  081B                     	;# 
  2417  081C                     	;# 
  2418  081D                     	;# 
  2419  081E                     	;# 
  2420  081F                     	;# 
  2421  088C                     	;# 
  2422  088D                     	;# 
  2423  088E                     	;# 
  2424  088F                     	;# 
  2425  0890                     	;# 
  2426  0891                     	;# 
  2427  0892                     	;# 
  2428  0893                     	;# 
  2429  0895                     	;# 
  2430  0896                     	;# 
  2431  0897                     	;# 
  2432  0898                     	;# 
  2433  0899                     	;# 
  2434  089A                     	;# 
  2435  089B                     	;# 
  2436  090C                     	;# 
  2437  090E                     	;# 
  2438  090F                     	;# 
  2439  091F                     	;# 
  2440  091F                     	;# 
  2441  098F                     	;# 
  2442  098F                     	;# 
  2443  0990                     	;# 
  2444  0991                     	;# 
  2445  0992                     	;# 
  2446  0993                     	;# 
  2447  0994                     	;# 
  2448  0995                     	;# 
  2449  0996                     	;# 
  2450  0997                     	;# 
  2451  0E0F                     	;# 
  2452  0E10                     	;# 
  2453  0E11                     	;# 
  2454  0E12                     	;# 
  2455  0E13                     	;# 
  2456  0E14                     	;# 
  2457  0E15                     	;# 
  2458  0E16                     	;# 
  2459  0E17                     	;# 
  2460  0E18                     	;# 
  2461  0E19                     	;# 
  2462  0E1A                     	;# 
  2463  0E1B                     	;# 
  2464  0E1C                     	;# 
  2465  0E1D                     	;# 
  2466  0E1E                     	;# 
  2467  0E1F                     	;# 
  2468  0E20                     	;# 
  2469  0E21                     	;# 
  2470  0E22                     	;# 
  2471  0E23                     	;# 
  2472  0E24                     	;# 
  2473  0E25                     	;# 
  2474  0E26                     	;# 
  2475  0E27                     	;# 
  2476  0E28                     	;# 
  2477  0E29                     	;# 
  2478  0E2A                     	;# 
  2479  0E2B                     	;# 
  2480  0E2C                     	;# 
  2481  0E2D                     	;# 
  2482  0E2E                     	;# 
  2483  0E2F                     	;# 
  2484  0E30                     	;# 
  2485  0E31                     	;# 
  2486  0E32                     	;# 
  2487  0E33                     	;# 
  2488  0E34                     	;# 
  2489  0E35                     	;# 
  2490  0E36                     	;# 
  2491  0E37                     	;# 
  2492  0E8F                     	;# 
  2493  0E90                     	;# 
  2494  0E91                     	;# 
  2495  0E92                     	;# 
  2496  0E93                     	;# 
  2497  0E94                     	;# 
  2498  0E95                     	;# 
  2499  0E96                     	;# 
  2500  0E97                     	;# 
  2501  0E9C                     	;# 
  2502  0E9D                     	;# 
  2503  0E9E                     	;# 
  2504  0EA1                     	;# 
  2505  0EA2                     	;# 
  2506  0EA3                     	;# 
  2507  0EA4                     	;# 
  2508  0EA5                     	;# 
  2509  0EA9                     	;# 
  2510  0EAA                     	;# 
  2511  0EAB                     	;# 
  2512  0EAC                     	;# 
  2513  0EB1                     	;# 
  2514  0EB2                     	;# 
  2515  0EB3                     	;# 
  2516  0EB8                     	;# 
  2517  0EB9                     	;# 
  2518  0EBA                     	;# 
  2519  0EBB                     	;# 
  2520  0EBC                     	;# 
  2521  0EBD                     	;# 
  2522  0EBE                     	;# 
  2523  0EC3                     	;# 
  2524  0EC5                     	;# 
  2525  0EC6                     	;# 
  2526  0EC7                     	;# 
  2527  0EC8                     	;# 
  2528  0EC9                     	;# 
  2529  0ECA                     	;# 
  2530  0ECB                     	;# 
  2531  0ECC                     	;# 
  2532  0F10                     	;# 
  2533  0F11                     	;# 
  2534  0F12                     	;# 
  2535  0F13                     	;# 
  2536  0F14                     	;# 
  2537  0F15                     	;# 
  2538  0F16                     	;# 
  2539  0F17                     	;# 
  2540  0F18                     	;# 
  2541  0F19                     	;# 
  2542  0F1A                     	;# 
  2543  0F1B                     	;# 
  2544  0F1C                     	;# 
  2545  0F1D                     	;# 
  2546  0F1E                     	;# 
  2547  0F1F                     	;# 
  2548  0F20                     	;# 
  2549  0F21                     	;# 
  2550  0F22                     	;# 
  2551  0F23                     	;# 
  2552  0F24                     	;# 
  2553  0F25                     	;# 
  2554  0F26                     	;# 
  2555  0F27                     	;# 
  2556  0F38                     	;# 
  2557  0F39                     	;# 
  2558  0F3A                     	;# 
  2559  0F3B                     	;# 
  2560  0F3C                     	;# 
  2561  0F3D                     	;# 
  2562  0F3E                     	;# 
  2563  0F3F                     	;# 
  2564  0F40                     	;# 
  2565  0F41                     	;# 
  2566  0F43                     	;# 
  2567  0F44                     	;# 
  2568  0F45                     	;# 
  2569  0F46                     	;# 
  2570  0F47                     	;# 
  2571  0F48                     	;# 
  2572  0F49                     	;# 
  2573  0F4A                     	;# 
  2574  0F4B                     	;# 
  2575  0F4C                     	;# 
  2576  0F4E                     	;# 
  2577  0F4F                     	;# 
  2578  0F50                     	;# 
  2579  0F51                     	;# 
  2580  0F52                     	;# 
  2581  0F53                     	;# 
  2582  0F54                     	;# 
  2583  0F55                     	;# 
  2584  0F56                     	;# 
  2585  0F57                     	;# 
  2586  0F65                     	;# 
  2587  0F68                     	;# 
  2588  0F69                     	;# 
  2589  0F6A                     	;# 
  2590  0F6B                     	;# 
  2591  0FE4                     	;# 
  2592  0FE5                     	;# 
  2593  0FE6                     	;# 
  2594  0FE7                     	;# 
  2595  0FE8                     	;# 
  2596  0FE9                     	;# 
  2597  0FEA                     	;# 
  2598  0FEB                     	;# 
  2599  0FED                     	;# 
  2600  0FEE                     	;# 
  2601  0FEF                     	;# 
  2602  0000                     	;# 
  2603  0001                     	;# 
  2604  0002                     	;# 
  2605  0003                     	;# 
  2606  0004                     	;# 
  2607  0005                     	;# 
  2608  0006                     	;# 
  2609  0007                     	;# 
  2610  0008                     	;# 
  2611  0009                     	;# 
  2612  000A                     	;# 
  2613  000B                     	;# 
  2614  000C                     	;# 
  2615  000D                     	;# 
  2616  000E                     	;# 
  2617  0010                     	;# 
  2618  0011                     	;# 
  2619  0012                     	;# 
  2620  0013                     	;# 
  2621  0016                     	;# 
  2622  0017                     	;# 
  2623  0018                     	;# 
  2624  001C                     	;# 
  2625  001C                     	;# 
  2626  001D                     	;# 
  2627  001D                     	;# 
  2628  001E                     	;# 
  2629  001F                     	;# 
  2630  008C                     	;# 
  2631  008C                     	;# 
  2632  008D                     	;# 
  2633  008E                     	;# 
  2634  008E                     	;# 
  2635  008F                     	;# 
  2636  0090                     	;# 
  2637  0090                     	;# 
  2638  0091                     	;# 
  2639  0093                     	;# 
  2640  0094                     	;# 
  2641  0095                     	;# 
  2642  0096                     	;# 
  2643  0097                     	;# 
  2644  0098                     	;# 
  2645  0099                     	;# 
  2646  009A                     	;# 
  2647  009B                     	;# 
  2648  009C                     	;# 
  2649  009D                     	;# 
  2650  009E                     	;# 
  2651  010C                     	;# 
  2652  010D                     	;# 
  2653  010E                     	;# 
  2654  010E                     	;# 
  2655  010F                     	;# 
  2656  0110                     	;# 
  2657  0110                     	;# 
  2658  0111                     	;# 
  2659  0112                     	;# 
  2660  0112                     	;# 
  2661  0113                     	;# 
  2662  0114                     	;# 
  2663  0114                     	;# 
  2664  0115                     	;# 
  2665  0116                     	;# 
  2666  0116                     	;# 
  2667  0117                     	;# 
  2668  0119                     	;# 
  2669  0119                     	;# 
  2670  0119                     	;# 
  2671  011A                     	;# 
  2672  011A                     	;# 
  2673  011A                     	;# 
  2674  011B                     	;# 
  2675  011B                     	;# 
  2676  011B                     	;# 
  2677  011B                     	;# 
  2678  011B                     	;# 
  2679  011C                     	;# 
  2680  011C                     	;# 
  2681  011C                     	;# 
  2682  011D                     	;# 
  2683  011D                     	;# 
  2684  011D                     	;# 
  2685  011E                     	;# 
  2686  011E                     	;# 
  2687  011E                     	;# 
  2688  011F                     	;# 
  2689  011F                     	;# 
  2690  011F                     	;# 
  2691  011F                     	;# 
  2692  011F                     	;# 
  2693  018C                     	;# 
  2694  018D                     	;# 
  2695  018E                     	;# 
  2696  018F                     	;# 
  2697  0190                     	;# 
  2698  0191                     	;# 
  2699  0192                     	;# 
  2700  0196                     	;# 
  2701  0197                     	;# 
  2702  0198                     	;# 
  2703  0199                     	;# 
  2704  019A                     	;# 
  2705  019B                     	;# 
  2706  019C                     	;# 
  2707  020C                     	;# 
  2708  020D                     	;# 
  2709  020E                     	;# 
  2710  020F                     	;# 
  2711  020F                     	;# 
  2712  0210                     	;# 
  2713  0210                     	;# 
  2714  0211                     	;# 
  2715  0211                     	;# 
  2716  0212                     	;# 
  2717  0213                     	;# 
  2718  0214                     	;# 
  2719  0215                     	;# 
  2720  0215                     	;# 
  2721  0216                     	;# 
  2722  0216                     	;# 
  2723  0217                     	;# 
  2724  0217                     	;# 
  2725  0218                     	;# 
  2726  0219                     	;# 
  2727  021A                     	;# 
  2728  021B                     	;# 
  2729  021B                     	;# 
  2730  021C                     	;# 
  2731  021C                     	;# 
  2732  021D                     	;# 
  2733  021D                     	;# 
  2734  021E                     	;# 
  2735  021F                     	;# 
  2736  028C                     	;# 
  2737  028C                     	;# 
  2738  028D                     	;# 
  2739  028D                     	;# 
  2740  028E                     	;# 
  2741  028F                     	;# 
  2742  0290                     	;# 
  2743  0290                     	;# 
  2744  0291                     	;# 
  2745  0292                     	;# 
  2746  0292                     	;# 
  2747  0293                     	;# 
  2748  0293                     	;# 
  2749  0294                     	;# 
  2750  0295                     	;# 
  2751  0296                     	;# 
  2752  0296                     	;# 
  2753  0297                     	;# 
  2754  0298                     	;# 
  2755  0298                     	;# 
  2756  0299                     	;# 
  2757  0299                     	;# 
  2758  029A                     	;# 
  2759  029B                     	;# 
  2760  029C                     	;# 
  2761  029C                     	;# 
  2762  029D                     	;# 
  2763  030C                     	;# 
  2764  030C                     	;# 
  2765  030D                     	;# 
  2766  030E                     	;# 
  2767  030F                     	;# 
  2768  0310                     	;# 
  2769  0310                     	;# 
  2770  0311                     	;# 
  2771  0312                     	;# 
  2772  0313                     	;# 
  2773  0314                     	;# 
  2774  0314                     	;# 
  2775  0315                     	;# 
  2776  0316                     	;# 
  2777  0317                     	;# 
  2778  0318                     	;# 
  2779  0318                     	;# 
  2780  0319                     	;# 
  2781  031A                     	;# 
  2782  031B                     	;# 
  2783  031C                     	;# 
  2784  031C                     	;# 
  2785  031D                     	;# 
  2786  031E                     	;# 
  2787  031F                     	;# 
  2788  038C                     	;# 
  2789  038D                     	;# 
  2790  038E                     	;# 
  2791  0390                     	;# 
  2792  0391                     	;# 
  2793  0392                     	;# 
  2794  040C                     	;# 
  2795  040D                     	;# 
  2796  040E                     	;# 
  2797  040F                     	;# 
  2798  0410                     	;# 
  2799  0411                     	;# 
  2800  0416                     	;# 
  2801  0416                     	;# 
  2802  0417                     	;# 
  2803  0418                     	;# 
  2804  0418                     	;# 
  2805  0419                     	;# 
  2806  041A                     	;# 
  2807  041A                     	;# 
  2808  041B                     	;# 
  2809  041C                     	;# 
  2810  041C                     	;# 
  2811  041D                     	;# 
  2812  041E                     	;# 
  2813  041F                     	;# 
  2814  048C                     	;# 
  2815  048C                     	;# 
  2816  048D                     	;# 
  2817  048E                     	;# 
  2818  048F                     	;# 
  2819  048F                     	;# 
  2820  0490                     	;# 
  2821  0491                     	;# 
  2822  0492                     	;# 
  2823  0492                     	;# 
  2824  0493                     	;# 
  2825  0494                     	;# 
  2826  0495                     	;# 
  2827  0495                     	;# 
  2828  0496                     	;# 
  2829  0497                     	;# 
  2830  0498                     	;# 
  2831  0499                     	;# 
  2832  049A                     	;# 
  2833  049B                     	;# 
  2834  049C                     	;# 
  2835  049D                     	;# 
  2836  050C                     	;# 
  2837  050C                     	;# 
  2838  050D                     	;# 
  2839  050E                     	;# 
  2840  050F                     	;# 
  2841  050F                     	;# 
  2842  0510                     	;# 
  2843  0511                     	;# 
  2844  0512                     	;# 
  2845  0512                     	;# 
  2846  0513                     	;# 
  2847  0514                     	;# 
  2848  0515                     	;# 
  2849  0515                     	;# 
  2850  0516                     	;# 
  2851  0517                     	;# 
  2852  0518                     	;# 
  2853  0519                     	;# 
  2854  051A                     	;# 
  2855  051B                     	;# 
  2856  051C                     	;# 
  2857  051D                     	;# 
  2858  058C                     	;# 
  2859  058C                     	;# 
  2860  058D                     	;# 
  2861  058E                     	;# 
  2862  058F                     	;# 
  2863  058F                     	;# 
  2864  0590                     	;# 
  2865  0591                     	;# 
  2866  0592                     	;# 
  2867  0593                     	;# 
  2868  060C                     	;# 
  2869  060D                     	;# 
  2870  060E                     	;# 
  2871  060F                     	;# 
  2872  0610                     	;# 
  2873  0611                     	;# 
  2874  0612                     	;# 
  2875  0613                     	;# 
  2876  0614                     	;# 
  2877  0616                     	;# 
  2878  0617                     	;# 
  2879  0618                     	;# 
  2880  0619                     	;# 
  2881  061A                     	;# 
  2882  061B                     	;# 
  2883  061C                     	;# 
  2884  061D                     	;# 
  2885  061E                     	;# 
  2886  068C                     	;# 
  2887  068D                     	;# 
  2888  068E                     	;# 
  2889  068F                     	;# 
  2890  0690                     	;# 
  2891  0691                     	;# 
  2892  0692                     	;# 
  2893  0693                     	;# 
  2894  0694                     	;# 
  2895  070C                     	;# 
  2896  070D                     	;# 
  2897  070E                     	;# 
  2898  070F                     	;# 
  2899  0710                     	;# 
  2900  0711                     	;# 
  2901  0712                     	;# 
  2902  0713                     	;# 
  2903  0714                     	;# 
  2904  0716                     	;# 
  2905  0717                     	;# 
  2906  0718                     	;# 
  2907  0719                     	;# 
  2908  071A                     	;# 
  2909  071B                     	;# 
  2910  071C                     	;# 
  2911  071D                     	;# 
  2912  071E                     	;# 
  2913  0796                     	;# 
  2914  0797                     	;# 
  2915  0798                     	;# 
  2916  0799                     	;# 
  2917  079A                     	;# 
  2918  079B                     	;# 
  2919  080C                     	;# 
  2920  080D                     	;# 
  2921  080E                     	;# 
  2922  080F                     	;# 
  2923  0810                     	;# 
  2924  0811                     	;# 
  2925  0812                     	;# 
  2926  0813                     	;# 
  2927  0814                     	;# 
  2928  081A                     	;# 
  2929  081B                     	;# 
  2930  081C                     	;# 
  2931  081D                     	;# 
  2932  081E                     	;# 
  2933  081F                     	;# 
  2934  088C                     	;# 
  2935  088D                     	;# 
  2936  088E                     	;# 
  2937  088F                     	;# 
  2938  0890                     	;# 
  2939  0891                     	;# 
  2940  0892                     	;# 
  2941  0893                     	;# 
  2942  0895                     	;# 
  2943  0896                     	;# 
  2944  0897                     	;# 
  2945  0898                     	;# 
  2946  0899                     	;# 
  2947  089A                     	;# 
  2948  089B                     	;# 
  2949  090C                     	;# 
  2950  090E                     	;# 
  2951  090F                     	;# 
  2952  091F                     	;# 
  2953  091F                     	;# 
  2954  098F                     	;# 
  2955  098F                     	;# 
  2956  0990                     	;# 
  2957  0991                     	;# 
  2958  0992                     	;# 
  2959  0993                     	;# 
  2960  0994                     	;# 
  2961  0995                     	;# 
  2962  0996                     	;# 
  2963  0997                     	;# 
  2964  0E0F                     	;# 
  2965  0E10                     	;# 
  2966  0E11                     	;# 
  2967  0E12                     	;# 
  2968  0E13                     	;# 
  2969  0E14                     	;# 
  2970  0E15                     	;# 
  2971  0E16                     	;# 
  2972  0E17                     	;# 
  2973  0E18                     	;# 
  2974  0E19                     	;# 
  2975  0E1A                     	;# 
  2976  0E1B                     	;# 
  2977  0E1C                     	;# 
  2978  0E1D                     	;# 
  2979  0E1E                     	;# 
  2980  0E1F                     	;# 
  2981  0E20                     	;# 
  2982  0E21                     	;# 
  2983  0E22                     	;# 
  2984  0E23                     	;# 
  2985  0E24                     	;# 
  2986  0E25                     	;# 
  2987  0E26                     	;# 
  2988  0E27                     	;# 
  2989  0E28                     	;# 
  2990  0E29                     	;# 
  2991  0E2A                     	;# 
  2992  0E2B                     	;# 
  2993  0E2C                     	;# 
  2994  0E2D                     	;# 
  2995  0E2E                     	;# 
  2996  0E2F                     	;# 
  2997  0E30                     	;# 
  2998  0E31                     	;# 
  2999  0E32                     	;# 
  3000  0E33                     	;# 
  3001  0E34                     	;# 
  3002  0E35                     	;# 
  3003  0E36                     	;# 
  3004  0E37                     	;# 
  3005  0E8F                     	;# 
  3006  0E90                     	;# 
  3007  0E91                     	;# 
  3008  0E92                     	;# 
  3009  0E93                     	;# 
  3010  0E94                     	;# 
  3011  0E95                     	;# 
  3012  0E96                     	;# 
  3013  0E97                     	;# 
  3014  0E9C                     	;# 
  3015  0E9D                     	;# 
  3016  0E9E                     	;# 
  3017  0EA1                     	;# 
  3018  0EA2                     	;# 
  3019  0EA3                     	;# 
  3020  0EA4                     	;# 
  3021  0EA5                     	;# 
  3022  0EA9                     	;# 
  3023  0EAA                     	;# 
  3024  0EAB                     	;# 
  3025  0EAC                     	;# 
  3026  0EB1                     	;# 
  3027  0EB2                     	;# 
  3028  0EB3                     	;# 
  3029  0EB8                     	;# 
  3030  0EB9                     	;# 
  3031  0EBA                     	;# 
  3032  0EBB                     	;# 
  3033  0EBC                     	;# 
  3034  0EBD                     	;# 
  3035  0EBE                     	;# 
  3036  0EC3                     	;# 
  3037  0EC5                     	;# 
  3038  0EC6                     	;# 
  3039  0EC7                     	;# 
  3040  0EC8                     	;# 
  3041  0EC9                     	;# 
  3042  0ECA                     	;# 
  3043  0ECB                     	;# 
  3044  0ECC                     	;# 
  3045  0F10                     	;# 
  3046  0F11                     	;# 
  3047  0F12                     	;# 
  3048  0F13                     	;# 
  3049  0F14                     	;# 
  3050  0F15                     	;# 
  3051  0F16                     	;# 
  3052  0F17                     	;# 
  3053  0F18                     	;# 
  3054  0F19                     	;# 
  3055  0F1A                     	;# 
  3056  0F1B                     	;# 
  3057  0F1C                     	;# 
  3058  0F1D                     	;# 
  3059  0F1E                     	;# 
  3060  0F1F                     	;# 
  3061  0F20                     	;# 
  3062  0F21                     	;# 
  3063  0F22                     	;# 
  3064  0F23                     	;# 
  3065  0F24                     	;# 
  3066  0F25                     	;# 
  3067  0F26                     	;# 
  3068  0F27                     	;# 
  3069  0F38                     	;# 
  3070  0F39                     	;# 
  3071  0F3A                     	;# 
  3072  0F3B                     	;# 
  3073  0F3C                     	;# 
  3074  0F3D                     	;# 
  3075  0F3E                     	;# 
  3076  0F3F                     	;# 
  3077  0F40                     	;# 
  3078  0F41                     	;# 
  3079  0F43                     	;# 
  3080  0F44                     	;# 
  3081  0F45                     	;# 
  3082  0F46                     	;# 
  3083  0F47                     	;# 
  3084  0F48                     	;# 
  3085  0F49                     	;# 
  3086  0F4A                     	;# 
  3087  0F4B                     	;# 
  3088  0F4C                     	;# 
  3089  0F4E                     	;# 
  3090  0F4F                     	;# 
  3091  0F50                     	;# 
  3092  0F51                     	;# 
  3093  0F52                     	;# 
  3094  0F53                     	;# 
  3095  0F54                     	;# 
  3096  0F55                     	;# 
  3097  0F56                     	;# 
  3098  0F57                     	;# 
  3099  0F65                     	;# 
  3100  0F68                     	;# 
  3101  0F69                     	;# 
  3102  0F6A                     	;# 
  3103  0F6B                     	;# 
  3104  0FE4                     	;# 
  3105  0FE5                     	;# 
  3106  0FE6                     	;# 
  3107  0FE7                     	;# 
  3108  0FE8                     	;# 
  3109  0FE9                     	;# 
  3110  0FEA                     	;# 
  3111  0FEB                     	;# 
  3112  0FED                     	;# 
  3113  0FEE                     	;# 
  3114  0FEF                     	;# 
  3115  0000                     	;# 
  3116  0001                     	;# 
  3117  0002                     	;# 
  3118  0003                     	;# 
  3119  0004                     	;# 
  3120  0005                     	;# 
  3121  0006                     	;# 
  3122  0007                     	;# 
  3123  0008                     	;# 
  3124  0009                     	;# 
  3125  000A                     	;# 
  3126  000B                     	;# 
  3127  000C                     	;# 
  3128  000D                     	;# 
  3129  000E                     	;# 
  3130  0010                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0016                     	;# 
  3135  0017                     	;# 
  3136  0018                     	;# 
  3137  001C                     	;# 
  3138  001C                     	;# 
  3139  001D                     	;# 
  3140  001D                     	;# 
  3141  001E                     	;# 
  3142  001F                     	;# 
  3143  008C                     	;# 
  3144  008C                     	;# 
  3145  008D                     	;# 
  3146  008E                     	;# 
  3147  008E                     	;# 
  3148  008F                     	;# 
  3149  0090                     	;# 
  3150  0090                     	;# 
  3151  0091                     	;# 
  3152  0093                     	;# 
  3153  0094                     	;# 
  3154  0095                     	;# 
  3155  0096                     	;# 
  3156  0097                     	;# 
  3157  0098                     	;# 
  3158  0099                     	;# 
  3159  009A                     	;# 
  3160  009B                     	;# 
  3161  009C                     	;# 
  3162  009D                     	;# 
  3163  009E                     	;# 
  3164  010C                     	;# 
  3165  010D                     	;# 
  3166  010E                     	;# 
  3167  010E                     	;# 
  3168  010F                     	;# 
  3169  0110                     	;# 
  3170  0110                     	;# 
  3171  0111                     	;# 
  3172  0112                     	;# 
  3173  0112                     	;# 
  3174  0113                     	;# 
  3175  0114                     	;# 
  3176  0114                     	;# 
  3177  0115                     	;# 
  3178  0116                     	;# 
  3179  0116                     	;# 
  3180  0117                     	;# 
  3181  0119                     	;# 
  3182  0119                     	;# 
  3183  0119                     	;# 
  3184  011A                     	;# 
  3185  011A                     	;# 
  3186  011A                     	;# 
  3187  011B                     	;# 
  3188  011B                     	;# 
  3189  011B                     	;# 
  3190  011B                     	;# 
  3191  011B                     	;# 
  3192  011C                     	;# 
  3193  011C                     	;# 
  3194  011C                     	;# 
  3195  011D                     	;# 
  3196  011D                     	;# 
  3197  011D                     	;# 
  3198  011E                     	;# 
  3199  011E                     	;# 
  3200  011E                     	;# 
  3201  011F                     	;# 
  3202  011F                     	;# 
  3203  011F                     	;# 
  3204  011F                     	;# 
  3205  011F                     	;# 
  3206  018C                     	;# 
  3207  018D                     	;# 
  3208  018E                     	;# 
  3209  018F                     	;# 
  3210  0190                     	;# 
  3211  0191                     	;# 
  3212  0192                     	;# 
  3213  0196                     	;# 
  3214  0197                     	;# 
  3215  0198                     	;# 
  3216  0199                     	;# 
  3217  019A                     	;# 
  3218  019B                     	;# 
  3219  019C                     	;# 
  3220  020C                     	;# 
  3221  020D                     	;# 
  3222  020E                     	;# 
  3223  020F                     	;# 
  3224  020F                     	;# 
  3225  0210                     	;# 
  3226  0210                     	;# 
  3227  0211                     	;# 
  3228  0211                     	;# 
  3229  0212                     	;# 
  3230  0213                     	;# 
  3231  0214                     	;# 
  3232  0215                     	;# 
  3233  0215                     	;# 
  3234  0216                     	;# 
  3235  0216                     	;# 
  3236  0217                     	;# 
  3237  0217                     	;# 
  3238  0218                     	;# 
  3239  0219                     	;# 
  3240  021A                     	;# 
  3241  021B                     	;# 
  3242  021B                     	;# 
  3243  021C                     	;# 
  3244  021C                     	;# 
  3245  021D                     	;# 
  3246  021D                     	;# 
  3247  021E                     	;# 
  3248  021F                     	;# 
  3249  028C                     	;# 
  3250  028C                     	;# 
  3251  028D                     	;# 
  3252  028D                     	;# 
  3253  028E                     	;# 
  3254  028F                     	;# 
  3255  0290                     	;# 
  3256  0290                     	;# 
  3257  0291                     	;# 
  3258  0292                     	;# 
  3259  0292                     	;# 
  3260  0293                     	;# 
  3261  0293                     	;# 
  3262  0294                     	;# 
  3263  0295                     	;# 
  3264  0296                     	;# 
  3265  0296                     	;# 
  3266  0297                     	;# 
  3267  0298                     	;# 
  3268  0298                     	;# 
  3269  0299                     	;# 
  3270  0299                     	;# 
  3271  029A                     	;# 
  3272  029B                     	;# 
  3273  029C                     	;# 
  3274  029C                     	;# 
  3275  029D                     	;# 
  3276  030C                     	;# 
  3277  030C                     	;# 
  3278  030D                     	;# 
  3279  030E                     	;# 
  3280  030F                     	;# 
  3281  0310                     	;# 
  3282  0310                     	;# 
  3283  0311                     	;# 
  3284  0312                     	;# 
  3285  0313                     	;# 
  3286  0314                     	;# 
  3287  0314                     	;# 
  3288  0315                     	;# 
  3289  0316                     	;# 
  3290  0317                     	;# 
  3291  0318                     	;# 
  3292  0318                     	;# 
  3293  0319                     	;# 
  3294  031A                     	;# 
  3295  031B                     	;# 
  3296  031C                     	;# 
  3297  031C                     	;# 
  3298  031D                     	;# 
  3299  031E                     	;# 
  3300  031F                     	;# 
  3301  038C                     	;# 
  3302  038D                     	;# 
  3303  038E                     	;# 
  3304  0390                     	;# 
  3305  0391                     	;# 
  3306  0392                     	;# 
  3307  040C                     	;# 
  3308  040D                     	;# 
  3309  040E                     	;# 
  3310  040F                     	;# 
  3311  0410                     	;# 
  3312  0411                     	;# 
  3313  0416                     	;# 
  3314  0416                     	;# 
  3315  0417                     	;# 
  3316  0418                     	;# 
  3317  0418                     	;# 
  3318  0419                     	;# 
  3319  041A                     	;# 
  3320  041A                     	;# 
  3321  041B                     	;# 
  3322  041C                     	;# 
  3323  041C                     	;# 
  3324  041D                     	;# 
  3325  041E                     	;# 
  3326  041F                     	;# 
  3327  048C                     	;# 
  3328  048C                     	;# 
  3329  048D                     	;# 
  3330  048E                     	;# 
  3331  048F                     	;# 
  3332  048F                     	;# 
  3333  0490                     	;# 
  3334  0491                     	;# 
  3335  0492                     	;# 
  3336  0492                     	;# 
  3337  0493                     	;# 
  3338  0494                     	;# 
  3339  0495                     	;# 
  3340  0495                     	;# 
  3341  0496                     	;# 
  3342  0497                     	;# 
  3343  0498                     	;# 
  3344  0499                     	;# 
  3345  049A                     	;# 
  3346  049B                     	;# 
  3347  049C                     	;# 
  3348  049D                     	;# 
  3349  050C                     	;# 
  3350  050C                     	;# 
  3351  050D                     	;# 
  3352  050E                     	;# 
  3353  050F                     	;# 
  3354  050F                     	;# 
  3355  0510                     	;# 
  3356  0511                     	;# 
  3357  0512                     	;# 
  3358  0512                     	;# 
  3359  0513                     	;# 
  3360  0514                     	;# 
  3361  0515                     	;# 
  3362  0515                     	;# 
  3363  0516                     	;# 
  3364  0517                     	;# 
  3365  0518                     	;# 
  3366  0519                     	;# 
  3367  051A                     	;# 
  3368  051B                     	;# 
  3369  051C                     	;# 
  3370  051D                     	;# 
  3371  058C                     	;# 
  3372  058C                     	;# 
  3373  058D                     	;# 
  3374  058E                     	;# 
  3375  058F                     	;# 
  3376  058F                     	;# 
  3377  0590                     	;# 
  3378  0591                     	;# 
  3379  0592                     	;# 
  3380  0593                     	;# 
  3381  060C                     	;# 
  3382  060D                     	;# 
  3383  060E                     	;# 
  3384  060F                     	;# 
  3385  0610                     	;# 
  3386  0611                     	;# 
  3387  0612                     	;# 
  3388  0613                     	;# 
  3389  0614                     	;# 
  3390  0616                     	;# 
  3391  0617                     	;# 
  3392  0618                     	;# 
  3393  0619                     	;# 
  3394  061A                     	;# 
  3395  061B                     	;# 
  3396  061C                     	;# 
  3397  061D                     	;# 
  3398  061E                     	;# 
  3399  068C                     	;# 
  3400  068D                     	;# 
  3401  068E                     	;# 
  3402  068F                     	;# 
  3403  0690                     	;# 
  3404  0691                     	;# 
  3405  0692                     	;# 
  3406  0693                     	;# 
  3407  0694                     	;# 
  3408  070C                     	;# 
  3409  070D                     	;# 
  3410  070E                     	;# 
  3411  070F                     	;# 
  3412  0710                     	;# 
  3413  0711                     	;# 
  3414  0712                     	;# 
  3415  0713                     	;# 
  3416  0714                     	;# 
  3417  0716                     	;# 
  3418  0717                     	;# 
  3419  0718                     	;# 
  3420  0719                     	;# 
  3421  071A                     	;# 
  3422  071B                     	;# 
  3423  071C                     	;# 
  3424  071D                     	;# 
  3425  071E                     	;# 
  3426  0796                     	;# 
  3427  0797                     	;# 
  3428  0798                     	;# 
  3429  0799                     	;# 
  3430  079A                     	;# 
  3431  079B                     	;# 
  3432  080C                     	;# 
  3433  080D                     	;# 
  3434  080E                     	;# 
  3435  080F                     	;# 
  3436  0810                     	;# 
  3437  0811                     	;# 
  3438  0812                     	;# 
  3439  0813                     	;# 
  3440  0814                     	;# 
  3441  081A                     	;# 
  3442  081B                     	;# 
  3443  081C                     	;# 
  3444  081D                     	;# 
  3445  081E                     	;# 
  3446  081F                     	;# 
  3447  088C                     	;# 
  3448  088D                     	;# 
  3449  088E                     	;# 
  3450  088F                     	;# 
  3451  0890                     	;# 
  3452  0891                     	;# 
  3453  0892                     	;# 
  3454  0893                     	;# 
  3455  0895                     	;# 
  3456  0896                     	;# 
  3457  0897                     	;# 
  3458  0898                     	;# 
  3459  0899                     	;# 
  3460  089A                     	;# 
  3461  089B                     	;# 
  3462  090C                     	;# 
  3463  090E                     	;# 
  3464  090F                     	;# 
  3465  091F                     	;# 
  3466  091F                     	;# 
  3467  098F                     	;# 
  3468  098F                     	;# 
  3469  0990                     	;# 
  3470  0991                     	;# 
  3471  0992                     	;# 
  3472  0993                     	;# 
  3473  0994                     	;# 
  3474  0995                     	;# 
  3475  0996                     	;# 
  3476  0997                     	;# 
  3477  0E0F                     	;# 
  3478  0E10                     	;# 
  3479  0E11                     	;# 
  3480  0E12                     	;# 
  3481  0E13                     	;# 
  3482  0E14                     	;# 
  3483  0E15                     	;# 
  3484  0E16                     	;# 
  3485  0E17                     	;# 
  3486  0E18                     	;# 
  3487  0E19                     	;# 
  3488  0E1A                     	;# 
  3489  0E1B                     	;# 
  3490  0E1C                     	;# 
  3491  0E1D                     	;# 
  3492  0E1E                     	;# 
  3493  0E1F                     	;# 
  3494  0E20                     	;# 
  3495  0E21                     	;# 
  3496  0E22                     	;# 
  3497  0E23                     	;# 
  3498  0E24                     	;# 
  3499  0E25                     	;# 
  3500  0E26                     	;# 
  3501  0E27                     	;# 
  3502  0E28                     	;# 
  3503  0E29                     	;# 
  3504  0E2A                     	;# 
  3505  0E2B                     	;# 
  3506  0E2C                     	;# 
  3507  0E2D                     	;# 
  3508  0E2E                     	;# 
  3509  0E2F                     	;# 
  3510  0E30                     	;# 
  3511  0E31                     	;# 
  3512  0E32                     	;# 
  3513  0E33                     	;# 
  3514  0E34                     	;# 
  3515  0E35                     	;# 
  3516  0E36                     	;# 
  3517  0E37                     	;# 
  3518  0E8F                     	;# 
  3519  0E90                     	;# 
  3520  0E91                     	;# 
  3521  0E92                     	;# 
  3522  0E93                     	;# 
  3523  0E94                     	;# 
  3524  0E95                     	;# 
  3525  0E96                     	;# 
  3526  0E97                     	;# 
  3527  0E9C                     	;# 
  3528  0E9D                     	;# 
  3529  0E9E                     	;# 
  3530  0EA1                     	;# 
  3531  0EA2                     	;# 
  3532  0EA3                     	;# 
  3533  0EA4                     	;# 
  3534  0EA5                     	;# 
  3535  0EA9                     	;# 
  3536  0EAA                     	;# 
  3537  0EAB                     	;# 
  3538  0EAC                     	;# 
  3539  0EB1                     	;# 
  3540  0EB2                     	;# 
  3541  0EB3                     	;# 
  3542  0EB8                     	;# 
  3543  0EB9                     	;# 
  3544  0EBA                     	;# 
  3545  0EBB                     	;# 
  3546  0EBC                     	;# 
  3547  0EBD                     	;# 
  3548  0EBE                     	;# 
  3549  0EC3                     	;# 
  3550  0EC5                     	;# 
  3551  0EC6                     	;# 
  3552  0EC7                     	;# 
  3553  0EC8                     	;# 
  3554  0EC9                     	;# 
  3555  0ECA                     	;# 
  3556  0ECB                     	;# 
  3557  0ECC                     	;# 
  3558  0F10                     	;# 
  3559  0F11                     	;# 
  3560  0F12                     	;# 
  3561  0F13                     	;# 
  3562  0F14                     	;# 
  3563  0F15                     	;# 
  3564  0F16                     	;# 
  3565  0F17                     	;# 
  3566  0F18                     	;# 
  3567  0F19                     	;# 
  3568  0F1A                     	;# 
  3569  0F1B                     	;# 
  3570  0F1C                     	;# 
  3571  0F1D                     	;# 
  3572  0F1E                     	;# 
  3573  0F1F                     	;# 
  3574  0F20                     	;# 
  3575  0F21                     	;# 
  3576  0F22                     	;# 
  3577  0F23                     	;# 
  3578  0F24                     	;# 
  3579  0F25                     	;# 
  3580  0F26                     	;# 
  3581  0F27                     	;# 
  3582  0F38                     	;# 
  3583  0F39                     	;# 
  3584  0F3A                     	;# 
  3585  0F3B                     	;# 
  3586  0F3C                     	;# 
  3587  0F3D                     	;# 
  3588  0F3E                     	;# 
  3589  0F3F                     	;# 
  3590  0F40                     	;# 
  3591  0F41                     	;# 
  3592  0F43                     	;# 
  3593  0F44                     	;# 
  3594  0F45                     	;# 
  3595  0F46                     	;# 
  3596  0F47                     	;# 
  3597  0F48                     	;# 
  3598  0F49                     	;# 
  3599  0F4A                     	;# 
  3600  0F4B                     	;# 
  3601  0F4C                     	;# 
  3602  0F4E                     	;# 
  3603  0F4F                     	;# 
  3604  0F50                     	;# 
  3605  0F51                     	;# 
  3606  0F52                     	;# 
  3607  0F53                     	;# 
  3608  0F54                     	;# 
  3609  0F55                     	;# 
  3610  0F56                     	;# 
  3611  0F57                     	;# 
  3612  0F65                     	;# 
  3613  0F68                     	;# 
  3614  0F69                     	;# 
  3615  0F6A                     	;# 
  3616  0F6B                     	;# 
  3617  0FE4                     	;# 
  3618  0FE5                     	;# 
  3619  0FE6                     	;# 
  3620  0FE7                     	;# 
  3621  0FE8                     	;# 
  3622  0FE9                     	;# 
  3623  0FEA                     	;# 
  3624  0FEB                     	;# 
  3625  0FED                     	;# 
  3626  0FEE                     	;# 
  3627  0FEF                     	;# 
  3628                           
  3629                           	psect	stringtext
  3630  0466                     __pstringtext:	
  3631  0466                     _dpowers:	
  3632  0466  3401               	retlw	1
  3633  0467  3400               	retlw	0
  3634  0468  340A               	retlw	10
  3635  0469  3400               	retlw	0
  3636  046A  3464               	retlw	100
  3637  046B  3400               	retlw	0
  3638  046C  34E8               	retlw	232
  3639  046D  3403               	retlw	3
  3640  046E  3410               	retlw	16
  3641  046F  3427               	retlw	39
  3642  0470                     __end_of_dpowers:	
  3643  000B                     _INTCONbits	set	11
  3644  0016                     _LATA	set	22
  3645  0016                     _LATAbits	set	22
  3646  0017                     _LATB	set	23
  3647  0018                     _LATC	set	24
  3648  0011                     _TRISA	set	17
  3649  0012                     _TRISB	set	18
  3650  0013                     _TRISC	set	19
  3651  005F                     _GIE	set	95
  3652  011F                     _BAUD1CON	set	287
  3653  0119                     _RC1REG	set	281
  3654  011D                     _RC1STA	set	285
  3655  011D                     _RC1STAbits	set	285
  3656  011C                     _SP1BRGH	set	284
  3657  011B                     _SP1BRGL	set	283
  3658  011A                     _TX1REG	set	282
  3659  011E                     _TX1STA	set	286
  3660  0197                     _SSP2ADD	set	407
  3661  0196                     _SSP2BUF	set	406
  3662  019A                     _SSP2CON1	set	410
  3663  019A                     _SSP2CON1bits	set	410
  3664  019B                     _SSP2CON2bits	set	411
  3665  019C                     _SSP2CON3	set	412
  3666  0199                     _SSP2STAT	set	409
  3667  0299                     _PR6	set	665
  3668  029C                     _T6CLKCON	set	668
  3669  029A                     _T6CON	set	666
  3670  029A                     _T6CONbits	set	666
  3671  029B                     _T6HLT	set	667
  3672  029B                     _T6HLTbits	set	667
  3673  0299                     _T6PR	set	665
  3674  029D                     _T6RST	set	669
  3675  029D                     _T6RSTbits	set	669
  3676  0298                     _T6TMR	set	664
  3677  0298                     _TMR6	set	664
  3678  0719                     _PIE3bits	set	1817
  3679  070F                     _PIR3bits	set	1807
  3680  0710                     _PIR4bits	set	1808
  3681  088D                     _OSCCON1	set	2189
  3682  088F                     _OSCCON3	set	2191
  3683  0891                     _OSCEN	set	2193
  3684  0893                     _OSCFRQ	set	2195
  3685  0892                     _OSCTUNE	set	2194
  3686  0E8F                     _PPSLOCK	set	3727
  3687  0E8F                     _PPSLOCKbits	set	3727
  3688  0EC8                     _SSP2CLKPPSbits	set	3784
  3689  0EC9                     _SSP2DATPPSbits	set	3785
  3690  0E9E                     _T6AINPPSbits	set	3742
  3691  0F38                     _ANSELA	set	3896
  3692  0F43                     _ANSELB	set	3907
  3693  0F4E                     _ANSELC	set	3918
  3694  0F3A                     _ODCONA	set	3898
  3695  0F45                     _ODCONB	set	3909
  3696  0F50                     _ODCONC	set	3920
  3697  0F20                     _RC0PPS	set	3872
  3698  0F23                     _RC3PPS	set	3875
  3699  0F24                     _RC4PPS	set	3876
  3700  0F26                     _RC6PPS	set	3878
  3701  0F39                     _WPUA	set	3897
  3702  0F44                     _WPUB	set	3908
  3703  0F4F                     _WPUC	set	3919
  3704  0F65                     _WPUE	set	3941
  3705  0470                     STR_2:	
  3706  0470  3425               	retlw	37	;'%'
  3707  0471  3464               	retlw	100	;'d'
  3708  0472  342E               	retlw	46	;'.'
  3709  0473  3425               	retlw	37	;'%'
  3710  0474  3464               	retlw	100	;'d'
  3711  0475  3400               	retlw	0
  3712  0476                     STR_1:	
  3713  0476  340A               	retlw	10
  3714  0477  3400               	retlw	0
  3715                           
  3716                           ; #config settings
  3717  0000                     
  3718                           	psect	cinit
  3719  0022                     start_initialization:	
  3720  0022                     __initialization:	
  3721                           
  3722                           ; Clear objects allocated to COMMON
  3723  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  3724  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3725  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3726  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3727  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3728  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3729  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3730                           
  3731                           ; Clear objects allocated to BANK0
  3732  0029  3042               	movlw	low __pbssBANK0
  3733  002A  0084               	movwf	4
  3734  002B  3000               	movlw	high __pbssBANK0
  3735  002C  0085               	movwf	5
  3736  002D  301C               	movlw	28
  3737  002E  3184  24D5         	fcall	clear_ram0
  3738  0030                     end_of_initialization:	
  3739                           ;End of C runtime variable initialization code
  3740                           
  3741  0030                     __end_of__initialization:	
  3742  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3743  0031  0020               	movlb	0
  3744  0032  3182  2A27         	ljmp	_main	;jump to C main() function
  3745                           
  3746                           	psect	bssCOMMON
  3747  0070                     __pbssCOMMON:	
  3748  0070                     I2C2_ISR@i2c_bytes_left:	
  3749  0070                     	ds	1
  3750  0071                     I2C2_ISR@pi2c_buf_ptr:	
  3751  0071                     	ds	1
  3752  0072                     _i2c2_trb_count:	
  3753  0072                     	ds	1
  3754  0073                     _p_i2c2_current:	
  3755  0073                     	ds	1
  3756  0074                     _p_i2c2_trb_current:	
  3757  0074                     	ds	1
  3758  0075                     I2C2_ISR@i2c_address:	
  3759  0075                     	ds	2
  3760                           
  3761                           	psect	bssBANK0
  3762  0042                     __pbssBANK0:	
  3763  0042                     _i2c2_object:	
  3764  0042                     	ds	5
  3765  0047                     _TMR6_InterruptHandler:	
  3766  0047                     	ds	2
  3767  0049                     I2C2_ISR@i2c_10bit_address_restart:	
  3768  0049                     	ds	1
  3769  004A                     _i2c2_state:	
  3770  004A                     	ds	1
  3771  004B                     EMC1001_Read@trb:	
  3772  004B                     	ds	8
  3773  0053                     I2C2_MasterRead@trBlock:	
  3774  0053                     	ds	4
  3775  0057                     I2C2_MasterWrite@trBlock:	
  3776  0057                     	ds	4
  3777  005B                     _i2c2_tr_queue:	
  3778  005B                     	ds	3
  3779                           
  3780                           	psect	clrtext
  3781  04D5                     clear_ram0:	
  3782                           ;	Called with FSR0 containing the base address, and
  3783                           ;	WREG with the size to clear
  3784                           
  3785  04D5  0064               	clrwdt	;clear the watchdog before getting into this loop
  3786  04D6                     clrloop0:	
  3787  04D6  0180               	clrf	0	;clear RAM location pointed to by FSR
  3788  04D7  3101               	addfsr 0,1
  3789  04D8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3790  04D9  2CD6               	goto	clrloop0	;have we reached the end yet?
  3791  04DA  3400               	retlw	0	;all done for this memory range, return
  3792                           
  3793                           	psect	cstackCOMMON
  3794  0077                     __pcstackCOMMON:	
  3795  0077                     ?_TMR6_Start:	
  3796  0077                     ?_PIN_MANAGER_Initialize:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0077                     ?_OSCILLATOR_Initialize:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0077                     ?_I2C2_Initialize:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0077                     ?_I2C2_BusCollisionISR:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0077                     ??_I2C2_BusCollisionISR:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811  0077                     ?_I2C2_ISR:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0077                     ?_I2C2_Stop:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0077                     ??_I2C2_Stop:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0077                     ?_I2C2_FunctionComplete:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0077                     ??_I2C2_FunctionComplete:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0077                     ?_EUSART_Initialize:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0077                     ?_EUSART_Write:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0077                     ?_putch:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0077                     ?_TMR6_Initialize:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0077                     ?_TMR6_HasOverflowOccured:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0077                     ?_SYSTEM_Initialize:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0077                     ?_main:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0077                     ?_INTERRUPT_InterruptManager:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850                           
  3851                           ; 1 bytes @ 0x0
  3852  0077                     	ds	1
  3853  0078                     I2C2_Stop@completion_code:	
  3854                           
  3855                           ; 1 bytes @ 0x1
  3856  0078                     	ds	1
  3857  0079                     ??_I2C2_ISR:	
  3858                           
  3859                           ; 1 bytes @ 0x2
  3860  0079                     	ds	4
  3861  007D                     ??_INTERRUPT_InterruptManager:	
  3862                           
  3863                           ; 1 bytes @ 0x6
  3864  007D                     	ds	1
  3865                           
  3866                           	psect	cstackBANK0
  3867  0020                     __pcstackBANK0:	
  3868  0020                     ??_TMR6_Start:	
  3869  0020                     ??_PIN_MANAGER_Initialize:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0020                     ??_OSCILLATOR_Initialize:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0020                     ??_I2C2_Initialize:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0020                     ?_I2C2_MasterReadTRBBuild:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0020                     ?_I2C2_MasterTRBInsert:	
  3885                           ; 1 bytes @ 0x0
  3886                           
  3887  0020                     ??_EUSART_Initialize:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0020                     ??_EUSART_Write:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0020                     ??_TMR6_Initialize:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0020                     ??_TMR6_HasOverflowOccured:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0020                     ?___wmul:	
  3900                           ; 1 bytes @ 0x0
  3901                           
  3902  0020                     ?___lwdiv:	
  3903                           ; 2 bytes @ 0x0
  3904                           
  3905  0020                     EUSART_Write@txData:	
  3906                           ; 2 bytes @ 0x0
  3907                           
  3908  0020                     TMR6_HasOverflowOccured@status:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0020                     PIN_MANAGER_Initialize@state:	
  3912                           ; 1 bytes @ 0x0
  3913                           
  3914  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0020                     ___wmul@multiplier:	
  3924                           ; 1 bytes @ 0x0
  3925                           
  3926  0020                     ___lwdiv@divisor:	
  3927                           ; 2 bytes @ 0x0
  3928                           
  3929                           
  3930                           ; 2 bytes @ 0x0
  3931  0020                     	ds	1
  3932  0021                     ??_putch:	
  3933  0021                     ??_SYSTEM_Initialize:	
  3934                           ; 1 bytes @ 0x1
  3935                           
  3936  0021                     putch@txData:	
  3937                           ; 1 bytes @ 0x1
  3938                           
  3939  0021                     I2C2_MasterTRBInsert@pflag:	
  3940                           ; 1 bytes @ 0x1
  3941                           
  3942  0021                     I2C2_MasterReadTRBBuild@length:	
  3943                           ; 1 bytes @ 0x1
  3944                           
  3945  0021                     I2C2_MasterWriteTRBBuild@length:	
  3946                           ; 1 bytes @ 0x1
  3947                           
  3948                           
  3949                           ; 1 bytes @ 0x1
  3950  0021                     	ds	1
  3951  0022                     ??_I2C2_MasterTRBInsert:	
  3952  0022                     I2C2_MasterReadTRBBuild@address:	
  3953                           ; 1 bytes @ 0x2
  3954                           
  3955  0022                     I2C2_MasterWriteTRBBuild@address:	
  3956                           ; 2 bytes @ 0x2
  3957                           
  3958  0022                     ___wmul@multiplicand:	
  3959                           ; 2 bytes @ 0x2
  3960                           
  3961  0022                     ___lwdiv@dividend:	
  3962                           ; 2 bytes @ 0x2
  3963                           
  3964                           
  3965                           ; 2 bytes @ 0x2
  3966  0022                     	ds	1
  3967  0023                     I2C2_MasterTRBInsert@count:	
  3968                           
  3969                           ; 1 bytes @ 0x3
  3970  0023                     	ds	1
  3971  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3972  0024                     ??_I2C2_MasterReadTRBBuild:	
  3973                           ; 1 bytes @ 0x4
  3974                           
  3975  0024                     ??___wmul:	
  3976                           ; 1 bytes @ 0x4
  3977                           
  3978  0024                     ??___lwdiv:	
  3979                           ; 1 bytes @ 0x4
  3980                           
  3981  0024                     ___wmul@product:	
  3982                           ; 1 bytes @ 0x4
  3983                           
  3984                           
  3985                           ; 2 bytes @ 0x4
  3986  0024                     	ds	1
  3987  0025                     ___lwdiv@quotient:	
  3988                           
  3989                           ; 2 bytes @ 0x5
  3990  0025                     	ds	1
  3991  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3992  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3993                           ; 1 bytes @ 0x6
  3994                           
  3995                           
  3996                           ; 1 bytes @ 0x6
  3997  0026                     	ds	1
  3998  0027                     ?_EMC1001_Read:	
  3999  0027                     EMC1001_Read@pData:	
  4000                           ; 1 bytes @ 0x7
  4001                           
  4002  0027                     ___lwdiv@counter:	
  4003                           ; 1 bytes @ 0x7
  4004                           
  4005                           
  4006                           ; 1 bytes @ 0x7
  4007  0027                     	ds	1
  4008  0028                     ??_EMC1001_Read:	
  4009  0028                     ?___lwmod:	
  4010                           ; 1 bytes @ 0x8
  4011                           
  4012  0028                     ___lwmod@divisor:	
  4013                           ; 2 bytes @ 0x8
  4014                           
  4015                           
  4016                           ; 2 bytes @ 0x8
  4017  0028                     	ds	2
  4018  002A                     EMC1001_Read@reg:	
  4019  002A                     ___lwmod@dividend:	
  4020                           ; 1 bytes @ 0xA
  4021                           
  4022                           
  4023                           ; 2 bytes @ 0xA
  4024  002A                     	ds	1
  4025  002B                     EMC1001_Read@status:	
  4026                           
  4027                           ; 1 bytes @ 0xB
  4028  002B                     	ds	1
  4029  002C                     ??___lwmod:	
  4030                           
  4031                           ; 1 bytes @ 0xC
  4032  002C                     	ds	1
  4033  002D                     ___lwmod@counter:	
  4034                           
  4035                           ; 1 bytes @ 0xD
  4036  002D                     	ds	1
  4037  002E                     ?_printf:	
  4038  002E                     printf@f:	
  4039                           ; 2 bytes @ 0xE
  4040                           
  4041                           
  4042                           ; 2 bytes @ 0xE
  4043  002E                     	ds	6
  4044  0034                     ??_printf:	
  4045                           
  4046                           ; 1 bytes @ 0x14
  4047  0034                     	ds	4
  4048  0038                     printf@ap:	
  4049                           
  4050                           ; 1 bytes @ 0x18
  4051  0038                     	ds	1
  4052  0039                     printf@flag:	
  4053                           
  4054                           ; 1 bytes @ 0x19
  4055  0039                     	ds	1
  4056  003A                     printf@prec:	
  4057                           
  4058                           ; 1 bytes @ 0x1A
  4059  003A                     	ds	1
  4060  003B                     printf@val:	
  4061                           
  4062                           ; 2 bytes @ 0x1B
  4063  003B                     	ds	2
  4064  003D                     printf@c:	
  4065                           
  4066                           ; 1 bytes @ 0x1D
  4067  003D                     	ds	1
  4068  003E                     ??_main:	
  4069                           
  4070                           ; 1 bytes @ 0x1E
  4071  003E                     	ds	2
  4072  0040                     main@temp:	
  4073                           
  4074                           ; 1 bytes @ 0x20
  4075  0040                     	ds	1
  4076  0041                     main@templo:	
  4077                           
  4078                           ; 1 bytes @ 0x21
  4079  0041                     	ds	1
  4080                           
  4081                           	psect	maintext
  4082  0227                     __pmaintext:	
  4083 ;;
  4084 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4085 ;;
  4086 ;; *************** function _main *****************
  4087 ;; Defined at:
  4088 ;;		line 22 in file "main.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  templo          1   33[BANK0 ] unsigned char 
  4093 ;;  temp            1   32[BANK0 ] char 
  4094 ;;  data            1    0        unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : B1F/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;Total ram usage:        4 bytes
  4109 ;; Hardware stack levels required when called:    6
  4110 ;; This function calls:
  4111 ;;		_EMC1001_Read
  4112 ;;		_EUSART_Write
  4113 ;;		_SYSTEM_Initialize
  4114 ;;		_TMR6_HasOverflowOccured
  4115 ;;		___wmul
  4116 ;;		_printf
  4117 ;; This function is called by:
  4118 ;;		Startup code after reset
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _main
  4124  0227                     _main:	
  4125                           
  4126                           ;main.c: 24: uint8_t data;
  4127                           ;main.c: 25: int8_t temp;
  4128                           ;main.c: 26: uint8_t templo;
  4129                           ;main.c: 27: SYSTEM_Initialize();
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4133  0227  3184  248A  3182   	fcall	_SYSTEM_Initialize
  4134                           
  4135                           ;main.c: 28: (INTCONbits.GIE = 1);
  4136  022A  178B               	bsf	11,7	;volatile
  4137                           
  4138                           ;main.c: 29: (INTCONbits.PEIE = 1);
  4139  022B  170B               	bsf	11,6	;volatile
  4140  022C                     l224:	
  4141                           ;main.c: 31: while (1)
  4142                           
  4143                           
  4144                           ;main.c: 32: {
  4145                           ;main.c: 33: if (TMR6_HasOverflowOccured())
  4146  022C  3184  24A8  3182   	fcall	_TMR6_HasOverflowOccured
  4147  022F  3A00               	xorlw	0
  4148  0230  1903               	skipnz
  4149  0231  2A2C               	goto	l224
  4150                           
  4151                           ;main.c: 34: {
  4152                           ;main.c: 35: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4153  0232  1003               	clrc
  4154  0233  0020               	movlb	0	; select bank0
  4155  0234  1C16               	btfss	22,0	;volatile
  4156  0235  1403               	setc
  4157  0236  1C03               	btfss	3,0
  4158  0237  2A3B               	goto	u1580
  4159  0238  0020               	movlb	0	; select bank0
  4160  0239  1416               	bsf	22,0	;volatile
  4161  023A  2A3D               	goto	l2052
  4162  023B                     u1580:	
  4163  023B  0020               	movlb	0	; select bank0
  4164  023C  1016               	bcf	22,0	;volatile
  4165  023D                     l2052:	
  4166                           
  4167                           ;main.c: 36: printf("\n");
  4168  023D  3076               	movlw	low (STR_1| (0+32768))
  4169  023E  00AE               	movwf	printf@f
  4170  023F  3084               	movlw	high (STR_1| (0+32768))
  4171  0240  00AF               	movwf	printf@f+1
  4172  0241  3181  216F  3182   	fcall	_printf
  4173                           
  4174                           ;main.c: 37: EUSART_Write(0x0D);
  4175  0244  300D               	movlw	13
  4176  0245  3184  24C2  3182   	fcall	_EUSART_Write
  4177                           
  4178                           ;main.c: 39: if (EMC1001_Read(0, (uint8_t*)&temp))
  4179  0248  3040               	movlw	(low (main@temp| 0))& (0+255)
  4180  0249  0020               	movlb	0	; select bank0
  4181  024A  00BE               	movwf	??_main
  4182  024B  083E               	movf	??_main,w
  4183  024C  00A7               	movwf	EMC1001_Read@pData
  4184  024D  3000               	movlw	0
  4185  024E  3183  231C  3182   	fcall	_EMC1001_Read
  4186  0251  3A00               	xorlw	0
  4187  0252  1903               	skipnz
  4188  0253  2A2C               	goto	l224
  4189                           
  4190                           ;main.c: 40: {
  4191                           ;main.c: 41: EMC1001_Read(2, &templo);
  4192  0254  3041               	movlw	(low (main@templo| 0))& (0+255)
  4193  0255  0020               	movlb	0	; select bank0
  4194  0256  00BE               	movwf	??_main
  4195  0257  083E               	movf	??_main,w
  4196  0258  00A7               	movwf	EMC1001_Read@pData
  4197  0259  3002               	movlw	2
  4198  025A  3183  231C  3182   	fcall	_EMC1001_Read
  4199                           
  4200                           ;main.c: 42: templo = templo >> 6;
  4201  025D  0020               	movlb	0	; select bank0
  4202  025E  0841               	movf	main@templo,w
  4203  025F  00BE               	movwf	??_main
  4204  0260  3006               	movlw	6
  4205  0261                     u1615:	
  4206  0261  36BE               	lsrf	??_main,f
  4207  0262  0B89               	decfsz	9,f
  4208  0263  2A61               	goto	u1615
  4209  0264  083E               	movf	??_main,w
  4210  0265  00BF               	movwf	??_main+1
  4211  0266  083F               	movf	??_main+1,w
  4212  0267  00C1               	movwf	main@templo
  4213                           
  4214                           ;main.c: 43: if (temp < 0) templo = 3-templo;
  4215  0268  1FC0               	btfss	main@temp,7
  4216  0269  2A70               	goto	l2066
  4217  026A  0341               	decf	main@templo,w
  4218  026B  3AFF               	xorlw	255
  4219  026C  3E03               	addlw	3
  4220  026D  00BE               	movwf	??_main
  4221  026E  083E               	movf	??_main,w
  4222  026F  00C1               	movwf	main@templo
  4223  0270                     l2066:	
  4224                           
  4225                           ;main.c: 44: printf("%d.%d", temp, templo*25);
  4226  0270  3070               	movlw	low (STR_2| (0+32768))
  4227  0271  00AE               	movwf	printf@f
  4228  0272  3084               	movlw	high (STR_2| (0+32768))
  4229  0273  00AF               	movwf	printf@f+1
  4230  0274  0840               	movf	main@temp,w
  4231  0275  00B0               	movwf	?_printf+2
  4232  0276  01B1               	clrf	?_printf+3
  4233  0277  1BB0               	btfsc	?_printf+2,7
  4234  0278  03B1               	decf	?_printf+3,f
  4235  0279  0841               	movf	main@templo,w
  4236  027A  00BE               	movwf	??_main
  4237  027B  01BF               	clrf	??_main+1
  4238  027C  083E               	movf	??_main,w
  4239  027D  00A0               	movwf	___wmul@multiplier
  4240  027E  083F               	movf	??_main+1,w
  4241  027F  00A1               	movwf	___wmul@multiplier+1
  4242  0280  3019               	movlw	25
  4243  0281  00A2               	movwf	___wmul@multiplicand
  4244  0282  3000               	movlw	0
  4245  0283  00A3               	movwf	___wmul@multiplicand+1
  4246  0284  3184  2402  3182   	fcall	___wmul
  4247  0287  0020               	movlb	0	; select bank0
  4248  0288  0821               	movf	?___wmul+1,w
  4249  0289  00B3               	movwf	?_printf+5
  4250  028A  0820               	movf	?___wmul,w
  4251  028B  00B2               	movwf	?_printf+4
  4252  028C  3181  216F  3182   	fcall	_printf
  4253  028F  2A2C               	goto	l224
  4254  0290                     __end_of_main:	
  4255                           
  4256                           	psect	text1
  4257  016F                     __ptext1:	
  4258 ;; *************** function _printf *****************
  4259 ;; Defined at:
  4260 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4263 ;;		 -> STR_2(6), STR_1(2), 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  tmpval          4    0        struct .
  4266 ;;  val             2   27[BANK0 ] unsigned int 
  4267 ;;  cp              2    0        PTR const unsigned char 
  4268 ;;  len             2    0        unsigned int 
  4269 ;;  c               1   29[BANK0 ] char 
  4270 ;;  prec            1   26[BANK0 ] char 
  4271 ;;  flag            1   25[BANK0 ] unsigned char 
  4272 ;;  ap              1   24[BANK0 ] PTR void [1]
  4273 ;;		 -> ?_printf(2), 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2   14[BANK0 ] int 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:       16 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    5
  4290 ;; This function calls:
  4291 ;;		___lwdiv
  4292 ;;		___lwmod
  4293 ;;		_putch
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _printf
  4301  016F                     _printf:	
  4302                           
  4303                           ;doprnt.c: 466: va_list ap;
  4304                           ;doprnt.c: 499: signed char c;
  4305                           ;doprnt.c: 506: signed char prec;
  4306                           ;doprnt.c: 508: unsigned char flag;
  4307                           ;doprnt.c: 523: union {
  4308                           ;doprnt.c: 524: unsigned long vd;
  4309                           ;doprnt.c: 525: double integ;
  4310                           ;doprnt.c: 526: } tmpval;
  4311                           ;doprnt.c: 528: unsigned int val;
  4312                           ;doprnt.c: 529: unsigned len;
  4313                           ;doprnt.c: 530: const char * cp;
  4314                           ;doprnt.c: 533: *ap = __va_start();
  4315                           
  4316                           ;incstack = 0
  4317                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4318  016F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4319  0170  0020               	movlb	0	; select bank0
  4320  0171  00B4               	movwf	??_printf
  4321  0172  0834               	movf	??_printf,w
  4322  0173  00B8               	movwf	printf@ap
  4323  0174                     l2026:	
  4324                           ;doprnt.c: 536: while(c = *f++) {
  4325                           
  4326  0174  0020               	movlb	0	; select bank0
  4327  0175  082F               	movf	printf@f+1,w
  4328  0176  00B5               	movwf	??_printf+1
  4329  0177  082E               	movf	printf@f,w
  4330  0178  00B4               	movwf	??_printf
  4331  0179  0AAE               	incf	printf@f,f
  4332  017A  1903               	skipnz
  4333  017B  0AAF               	incf	printf@f+1,f
  4334  017C  0834               	movf	??_printf,w
  4335  017D  0084               	movwf	4
  4336  017E  0835               	movf	??_printf+1,w
  4337  017F  0085               	movwf	5
  4338  0180  0800               	movf	0,w	;code access
  4339  0181  00B6               	movwf	??_printf+2
  4340  0182  0836               	movf	??_printf+2,w
  4341  0183  00BD               	movwf	printf@c
  4342  0184  083D               	movf	printf@c,w
  4343  0185  1903               	btfsc	3,2
  4344  0186  0008               	return
  4345                           
  4346                           ;doprnt.c: 538: if(c != '%')
  4347  0187  3025               	movlw	37
  4348  0188  063D               	xorwf	printf@c,w
  4349  0189  1903               	btfsc	3,2
  4350  018A  2990               	goto	l1986
  4351                           
  4352                           ;doprnt.c: 540: {
  4353                           ;doprnt.c: 541: (putch(c) );
  4354  018B  083D               	movf	printf@c,w
  4355  018C  3184  24DB  3181   	fcall	_putch
  4356                           
  4357                           ;doprnt.c: 542: continue;
  4358  018F  2974               	goto	l2026
  4359  0190                     l1986:	
  4360                           
  4361                           ;doprnt.c: 543: }
  4362                           ;doprnt.c: 548: flag = 0;
  4363  0190  0020               	movlb	0	; select bank0
  4364  0191  01B9               	clrf	printf@flag
  4365                           
  4366                           ;doprnt.c: 822: }
  4367                           
  4368                           ;doprnt.c: 813: continue;
  4369                           
  4370                           ;doprnt.c: 802: default:
  4371                           
  4372                           ;doprnt.c: 698: case 'i':
  4373                           ;doprnt.c: 699: break;
  4374                           
  4375                           ;doprnt.c: 697: case 'd':
  4376                           
  4377                           ;doprnt.c: 638: goto alldone;
  4378                           
  4379                           ;doprnt.c: 637: case 0:
  4380                           
  4381                           ;doprnt.c: 635: switch(c = *f++) {
  4382  0192  082F               	movf	printf@f+1,w
  4383  0193  00B5               	movwf	??_printf+1
  4384  0194  082E               	movf	printf@f,w
  4385  0195  00B4               	movwf	??_printf
  4386  0196  0AAE               	incf	printf@f,f
  4387  0197  1903               	skipnz
  4388  0198  0AAF               	incf	printf@f+1,f
  4389  0199  0834               	movf	??_printf,w
  4390  019A  0084               	movwf	4
  4391  019B  0835               	movf	??_printf+1,w
  4392  019C  0085               	movwf	5
  4393  019D  0800               	movf	0,w	;code access
  4394  019E  00BD               	movwf	printf@c
  4395                           
  4396                           ; Switch size 1, requested type "space"
  4397                           ; Number of cases is 3, Range of values is 0 to 105
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte           10     6 (average)
  4401                           ; direct_byte          218     6 (fixed)
  4402                           ; jumptable            260     6 (fixed)
  4403                           ;	Chosen strategy is simple_byte
  4404  019F  3A00               	xorlw	0	; case 0
  4405  01A0  1903               	skipnz
  4406  01A1  2A26               	goto	l426
  4407  01A2  3A64               	xorlw	100	; case 100
  4408  01A3  1903               	skipnz
  4409  01A4  29A9               	goto	l1992
  4410  01A5  3A0D               	xorlw	13	; case 105
  4411  01A6  1903               	skipnz
  4412  01A7  29A9               	goto	l1992
  4413  01A8  2974               	goto	l2026
  4414  01A9                     l1992:	
  4415                           
  4416                           ;doprnt.c: 1253: {
  4417                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4418  01A9  0838               	movf	printf@ap,w
  4419  01AA  0086               	movwf	6
  4420  01AB  0187               	clrf	7
  4421  01AC  3F40               	moviw [0]fsr1
  4422  01AD  00BB               	movwf	printf@val
  4423  01AE  3F41               	moviw [1]fsr1
  4424  01AF  00BC               	movwf	printf@val+1
  4425  01B0  3002               	movlw	2
  4426  01B1  00B4               	movwf	??_printf
  4427  01B2  0834               	movf	??_printf,w
  4428  01B3  07B8               	addwf	printf@ap,f
  4429                           
  4430                           ;doprnt.c: 1261: if((int)val < 0) {
  4431  01B4  1FBC               	btfss	printf@val+1,7
  4432  01B5  29BF               	goto	l2002
  4433                           
  4434                           ;doprnt.c: 1262: flag |= 0x03;
  4435  01B6  3003               	movlw	3
  4436  01B7  00B4               	movwf	??_printf
  4437  01B8  0834               	movf	??_printf,w
  4438  01B9  04B9               	iorwf	printf@flag,f
  4439                           
  4440                           ;doprnt.c: 1263: val = -val;
  4441  01BA  09BB               	comf	printf@val,f
  4442  01BB  09BC               	comf	printf@val+1,f
  4443  01BC  0ABB               	incf	printf@val,f
  4444  01BD  1903               	skipnz
  4445  01BE  0ABC               	incf	printf@val+1,f
  4446  01BF                     l2002:	
  4447                           
  4448                           ;doprnt.c: 1264: }
  4449                           ;doprnt.c: 1266: }
  4450                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4451  01BF  01BD               	clrf	printf@c
  4452  01C0  0ABD               	incf	printf@c,f
  4453  01C1  3005               	movlw	5
  4454  01C2  063D               	xorwf	printf@c,w
  4455  01C3  1903               	btfsc	3,2
  4456  01C4  29E4               	goto	l2014
  4457  01C5                     l2008:	
  4458                           
  4459                           ;doprnt.c: 1306: if(val < dpowers[c])
  4460  01C5  083D               	movf	printf@c,w
  4461  01C6  00B4               	movwf	??_printf
  4462  01C7  01B5               	clrf	??_printf+1
  4463  01C8  35B4               	lslf	??_printf,f
  4464  01C9  0DB5               	rlf	??_printf+1,f
  4465  01CA  3066               	movlw	low (_dpowers| (0+32768))
  4466  01CB  0734               	addwf	??_printf,w
  4467  01CC  0084               	movwf	4
  4468  01CD  3084               	movlw	high (_dpowers| (0+32768))
  4469  01CE  3D35               	addwfc	??_printf+1,w
  4470  01CF  0085               	movwf	5
  4471  01D0  3F00               	moviw [0]fsr0
  4472  01D1  00B6               	movwf	??_printf+2
  4473  01D2  3F01               	moviw [1]fsr0
  4474  01D3  00B7               	movwf	??_printf+3
  4475  01D4  0837               	movf	??_printf+3,w
  4476  01D5  023C               	subwf	printf@val+1,w
  4477  01D6  1D03               	skipz
  4478  01D7  29DA               	goto	u1485
  4479  01D8  0836               	movf	??_printf+2,w
  4480  01D9  023B               	subwf	printf@val,w
  4481  01DA                     u1485:	
  4482  01DA  1C03               	btfss	3,0
  4483  01DB  29E4               	goto	l2014
  4484                           
  4485                           ;doprnt.c: 1307: break;
  4486  01DC  3001               	movlw	1
  4487  01DD  00B4               	movwf	??_printf
  4488  01DE  0834               	movf	??_printf,w
  4489  01DF  07BD               	addwf	printf@c,f
  4490  01E0  3005               	movlw	5
  4491  01E1  063D               	xorwf	printf@c,w
  4492  01E2  1D03               	btfss	3,2
  4493  01E3  29C5               	goto	l2008
  4494  01E4                     l2014:	
  4495                           
  4496                           ;doprnt.c: 1422: {
  4497                           ;doprnt.c: 1438: if(flag & 0x03)
  4498  01E4  0839               	movf	printf@flag,w
  4499  01E5  3903               	andlw	3
  4500  01E6  1903               	btfsc	3,2
  4501  01E7  29EC               	goto	l2018
  4502                           
  4503                           ;doprnt.c: 1439: (putch('-') );
  4504  01E8  302D               	movlw	45
  4505  01E9  3184  24DB  3181   	fcall	_putch
  4506  01EC                     l2018:	
  4507                           
  4508                           ;doprnt.c: 1469: }
  4509                           ;doprnt.c: 1472: prec = c;
  4510  01EC  0020               	movlb	0	; select bank0
  4511  01ED  083D               	movf	printf@c,w
  4512  01EE  00B4               	movwf	??_printf
  4513  01EF  0834               	movf	??_printf,w
  4514  01F0  00BA               	movwf	printf@prec
  4515  01F1                     l2024:	
  4516                           ;doprnt.c: 1474: while(prec--) {
  4517                           
  4518  01F1  30FF               	movlw	255
  4519  01F2  0020               	movlb	0	; select bank0
  4520  01F3  00B4               	movwf	??_printf
  4521  01F4  0834               	movf	??_printf,w
  4522  01F5  07BA               	addwf	printf@prec,f
  4523  01F6  0A3A               	incf	printf@prec,w
  4524  01F7  1903               	btfsc	3,2
  4525  01F8  2974               	goto	l2026
  4526                           
  4527                           ;doprnt.c: 1478: {
  4528                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4529  01F9  300A               	movlw	10
  4530  01FA  00A8               	movwf	___lwmod@divisor
  4531  01FB  3000               	movlw	0
  4532  01FC  00A9               	movwf	___lwmod@divisor+1
  4533  01FD  083A               	movf	printf@prec,w
  4534  01FE  00B4               	movwf	??_printf
  4535  01FF  01B5               	clrf	??_printf+1
  4536  0200  35B4               	lslf	??_printf,f
  4537  0201  0DB5               	rlf	??_printf+1,f
  4538  0202  3066               	movlw	low (_dpowers| (0+32768))
  4539  0203  0734               	addwf	??_printf,w
  4540  0204  0084               	movwf	4
  4541  0205  3084               	movlw	high (_dpowers| (0+32768))
  4542  0206  3D35               	addwfc	??_printf+1,w
  4543  0207  0085               	movwf	5
  4544  0208  3F00               	moviw [0]fsr0
  4545  0209  00A0               	movwf	___lwdiv@divisor
  4546  020A  3F01               	moviw [1]fsr0
  4547  020B  00A1               	movwf	___lwdiv@divisor+1
  4548  020C  083C               	movf	printf@val+1,w
  4549  020D  00A3               	movwf	___lwdiv@dividend+1
  4550  020E  083B               	movf	printf@val,w
  4551  020F  00A2               	movwf	___lwdiv@dividend
  4552  0210  3183  2358  3181   	fcall	___lwdiv
  4553  0213  0020               	movlb	0	; select bank0
  4554  0214  0821               	movf	?___lwdiv+1,w
  4555  0215  00AB               	movwf	___lwmod@dividend+1
  4556  0216  0820               	movf	?___lwdiv,w
  4557  0217  00AA               	movwf	___lwmod@dividend
  4558  0218  3183  238D  3181   	fcall	___lwmod
  4559  021B  0020               	movlb	0	; select bank0
  4560  021C  0828               	movf	?___lwmod,w
  4561  021D  3E30               	addlw	48
  4562  021E  00B6               	movwf	??_printf+2
  4563  021F  0836               	movf	??_printf+2,w
  4564  0220  00BD               	movwf	printf@c
  4565                           
  4566                           ;doprnt.c: 1523: }
  4567                           ;doprnt.c: 1524: (putch(c) );
  4568  0221  083D               	movf	printf@c,w
  4569  0222  3184  24DB  3181   	fcall	_putch
  4570  0225  29F1               	goto	l2024
  4571  0226                     l426:	
  4572                           ;doprnt.c: 1540: return 0;
  4573                           ;	Return value of _printf is never used
  4574                           
  4575                           ;doprnt.c: 1525: }
  4576                           ;doprnt.c: 1533: }
  4577                           ;doprnt.c: 1535: alldone:
  4578                           
  4579  0226  0008               	return
  4580  0227                     __end_of_printf:	
  4581                           
  4582                           	psect	text2
  4583  04DB                     __ptext2:	
  4584 ;; *************** function _putch *****************
  4585 ;; Defined at:
  4586 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  txData          1    wreg     unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  txData          1    1[BANK0 ] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;Total ram usage:        1 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    4
  4607 ;; This function calls:
  4608 ;;		_EUSART_Write
  4609 ;; This function is called by:
  4610 ;;		_printf
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _putch
  4616  04DB                     _putch:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4620                           ;putch@txData stored from wreg
  4621  04DB  0020               	movlb	0	; select bank0
  4622  04DC  00A1               	movwf	putch@txData
  4623                           
  4624                           ;eusart.c: 113: EUSART_Write(txData);
  4625  04DD  0821               	movf	putch@txData,w
  4626  04DE  3184  24C2         	fcall	_EUSART_Write
  4627  04E0  0008               	return
  4628  04E1                     __end_of_putch:	
  4629                           
  4630                           	psect	text3
  4631  04C2                     __ptext3:	
  4632 ;; *************** function _EUSART_Write *****************
  4633 ;; Defined at:
  4634 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  txData          1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  txData          1    0[BANK0 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;Total ram usage:        1 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    3
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_putch
  4659 ;;		_main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _EUSART_Write
  4665  04C2                     _EUSART_Write:	
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in _EUSART_Write: [wreg]
  4669                           ;EUSART_Write@txData stored from wreg
  4670  04C2  0020               	movlb	0	; select bank0
  4671  04C3  00A0               	movwf	EUSART_Write@txData
  4672  04C4                     l31:	
  4673                           ;eusart.c: 100: {
  4674                           
  4675                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  4676                           
  4677  04C4  002E               	movlb	14	; select bank14
  4678  04C5  1E0F               	btfss	15,4	;volatile
  4679  04C6  2CC4               	goto	l31
  4680                           
  4681                           ;eusart.c: 101: }
  4682                           ;eusart.c: 103: TX1REG = txData;
  4683  04C7  0020               	movlb	0	; select bank0
  4684  04C8  0820               	movf	EUSART_Write@txData,w
  4685  04C9  0022               	movlb	2	; select bank2
  4686  04CA  009A               	movwf	26	;volatile
  4687  04CB  0008               	return
  4688  04CC                     __end_of_EUSART_Write:	
  4689                           
  4690                           	psect	text4
  4691  038D                     __ptext4:	
  4692 ;; *************** function ___lwmod *****************
  4693 ;; Defined at:
  4694 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  divisor         2    8[BANK0 ] unsigned int 
  4697 ;;  dividend        2   10[BANK0 ] unsigned int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  counter         1   13[BANK0 ] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2    8[BANK0 ] unsigned int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        6 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    3
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_printf
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function ___lwmod
  4725  038D                     ___lwmod:	
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4729  038D  0020               	movlb	0	; select bank0
  4730  038E  0828               	movf	___lwmod@divisor,w
  4731  038F  0429               	iorwf	___lwmod@divisor+1,w
  4732  0390  1903               	btfsc	3,2
  4733  0391  2BB5               	goto	l1590
  4734  0392  01AD               	clrf	___lwmod@counter
  4735  0393  0AAD               	incf	___lwmod@counter,f
  4736  0394                     l1580:	
  4737  0394  1BA9               	btfsc	___lwmod@divisor+1,7
  4738  0395  2BA0               	goto	l1582
  4739  0396  3001               	movlw	1
  4740  0397                     u905:	
  4741  0397  35A8               	lslf	___lwmod@divisor,f
  4742  0398  0DA9               	rlf	___lwmod@divisor+1,f
  4743  0399  0B89               	decfsz	9,f
  4744  039A  2B97               	goto	u905
  4745  039B  3001               	movlw	1
  4746  039C  00AC               	movwf	??___lwmod
  4747  039D  082C               	movf	??___lwmod,w
  4748  039E  07AD               	addwf	___lwmod@counter,f
  4749  039F  2B94               	goto	l1580
  4750  03A0                     l1582:	
  4751  03A0  0829               	movf	___lwmod@divisor+1,w
  4752  03A1  022B               	subwf	___lwmod@dividend+1,w
  4753  03A2  1D03               	skipz
  4754  03A3  2BA6               	goto	u925
  4755  03A4  0828               	movf	___lwmod@divisor,w
  4756  03A5  022A               	subwf	___lwmod@dividend,w
  4757  03A6                     u925:	
  4758  03A6  1C03               	skipc
  4759  03A7  2BAC               	goto	l1586
  4760  03A8  0828               	movf	___lwmod@divisor,w
  4761  03A9  02AA               	subwf	___lwmod@dividend,f
  4762  03AA  0829               	movf	___lwmod@divisor+1,w
  4763  03AB  3BAB               	subwfb	___lwmod@dividend+1,f
  4764  03AC                     l1586:	
  4765  03AC  3001               	movlw	1
  4766  03AD                     u935:	
  4767  03AD  36A9               	lsrf	___lwmod@divisor+1,f
  4768  03AE  0CA8               	rrf	___lwmod@divisor,f
  4769  03AF  0B89               	decfsz	9,f
  4770  03B0  2BAD               	goto	u935
  4771  03B1  3001               	movlw	1
  4772  03B2  02AD               	subwf	___lwmod@counter,f
  4773  03B3  1D03               	btfss	3,2
  4774  03B4  2BA0               	goto	l1582
  4775  03B5                     l1590:	
  4776  03B5  082B               	movf	___lwmod@dividend+1,w
  4777  03B6  00A9               	movwf	?___lwmod+1
  4778  03B7  082A               	movf	___lwmod@dividend,w
  4779  03B8  00A8               	movwf	?___lwmod
  4780  03B9  0008               	return
  4781  03BA                     __end_of___lwmod:	
  4782                           
  4783                           	psect	text5
  4784  0358                     __ptext5:	
  4785 ;; *************** function ___lwdiv *****************
  4786 ;; Defined at:
  4787 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  divisor         2    0[BANK0 ] unsigned int 
  4790 ;;  dividend        2    2[BANK0 ] unsigned int 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  quotient        2    5[BANK0 ] unsigned int 
  4793 ;;  counter         1    7[BANK0 ] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2    0[BANK0 ] unsigned int 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;Total ram usage:        8 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    3
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_printf
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function ___lwdiv
  4819  0358                     ___lwdiv:	
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4823  0358  0020               	movlb	0	; select bank0
  4824  0359  01A5               	clrf	___lwdiv@quotient
  4825  035A  01A6               	clrf	___lwdiv@quotient+1
  4826  035B  0820               	movf	___lwdiv@divisor,w
  4827  035C  0421               	iorwf	___lwdiv@divisor+1,w
  4828  035D  1903               	btfsc	3,2
  4829  035E  2B88               	goto	l1568
  4830  035F  01A7               	clrf	___lwdiv@counter
  4831  0360  0AA7               	incf	___lwdiv@counter,f
  4832  0361                     l1556:	
  4833  0361  1BA1               	btfsc	___lwdiv@divisor+1,7
  4834  0362  2B6D               	goto	l1558
  4835  0363  3001               	movlw	1
  4836  0364                     u835:	
  4837  0364  35A0               	lslf	___lwdiv@divisor,f
  4838  0365  0DA1               	rlf	___lwdiv@divisor+1,f
  4839  0366  0B89               	decfsz	9,f
  4840  0367  2B64               	goto	u835
  4841  0368  3001               	movlw	1
  4842  0369  00A4               	movwf	??___lwdiv
  4843  036A  0824               	movf	??___lwdiv,w
  4844  036B  07A7               	addwf	___lwdiv@counter,f
  4845  036C  2B61               	goto	l1556
  4846  036D                     l1558:	
  4847  036D  3001               	movlw	1
  4848  036E                     u855:	
  4849  036E  35A5               	lslf	___lwdiv@quotient,f
  4850  036F  0DA6               	rlf	___lwdiv@quotient+1,f
  4851  0370  0B89               	decfsz	9,f
  4852  0371  2B6E               	goto	u855
  4853  0372  0821               	movf	___lwdiv@divisor+1,w
  4854  0373  0223               	subwf	___lwdiv@dividend+1,w
  4855  0374  1D03               	skipz
  4856  0375  2B78               	goto	u865
  4857  0376  0820               	movf	___lwdiv@divisor,w
  4858  0377  0222               	subwf	___lwdiv@dividend,w
  4859  0378                     u865:	
  4860  0378  1C03               	skipc
  4861  0379  2B7F               	goto	l1564
  4862  037A  0820               	movf	___lwdiv@divisor,w
  4863  037B  02A2               	subwf	___lwdiv@dividend,f
  4864  037C  0821               	movf	___lwdiv@divisor+1,w
  4865  037D  3BA3               	subwfb	___lwdiv@dividend+1,f
  4866  037E  1425               	bsf	___lwdiv@quotient,0
  4867  037F                     l1564:	
  4868  037F  3001               	movlw	1
  4869  0380                     u875:	
  4870  0380  36A1               	lsrf	___lwdiv@divisor+1,f
  4871  0381  0CA0               	rrf	___lwdiv@divisor,f
  4872  0382  0B89               	decfsz	9,f
  4873  0383  2B80               	goto	u875
  4874  0384  3001               	movlw	1
  4875  0385  02A7               	subwf	___lwdiv@counter,f
  4876  0386  1D03               	btfss	3,2
  4877  0387  2B6D               	goto	l1558
  4878  0388                     l1568:	
  4879  0388  0826               	movf	___lwdiv@quotient+1,w
  4880  0389  00A1               	movwf	?___lwdiv+1
  4881  038A  0825               	movf	___lwdiv@quotient,w
  4882  038B  00A0               	movwf	?___lwdiv
  4883  038C  0008               	return
  4884  038D                     __end_of___lwdiv:	
  4885                           
  4886                           	psect	text6
  4887  0402                     __ptext6:	
  4888 ;; *************** function ___wmul *****************
  4889 ;; Defined at:
  4890 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4893 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  product         2    4[BANK0 ] unsigned int 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2    0[BANK0 ] unsigned int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4905 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;Total ram usage:        6 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    3
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_main
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function ___wmul
  4921  0402                     ___wmul:	
  4922                           
  4923                           ;incstack = 0
  4924                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4925  0402  0020               	movlb	0	; select bank0
  4926  0403  01A4               	clrf	___wmul@product
  4927  0404  01A5               	clrf	___wmul@product+1
  4928  0405                     l2030:	
  4929  0405  1C20               	btfss	___wmul@multiplier,0
  4930  0406  2C0B               	goto	l508
  4931  0407  0822               	movf	___wmul@multiplicand,w
  4932  0408  07A4               	addwf	___wmul@product,f
  4933  0409  0823               	movf	___wmul@multiplicand+1,w
  4934  040A  3DA5               	addwfc	___wmul@product+1,f
  4935  040B                     l508:	
  4936  040B  3001               	movlw	1
  4937  040C                     u1545:	
  4938  040C  35A2               	lslf	___wmul@multiplicand,f
  4939  040D  0DA3               	rlf	___wmul@multiplicand+1,f
  4940  040E  0B89               	decfsz	9,f
  4941  040F  2C0C               	goto	u1545
  4942  0410  3001               	movlw	1
  4943  0411                     u1555:	
  4944  0411  36A1               	lsrf	___wmul@multiplier+1,f
  4945  0412  0CA0               	rrf	___wmul@multiplier,f
  4946  0413  0B89               	decfsz	9,f
  4947  0414  2C11               	goto	u1555
  4948  0415  0820               	movf	___wmul@multiplier,w
  4949  0416  0421               	iorwf	___wmul@multiplier+1,w
  4950  0417  1D03               	btfss	3,2
  4951  0418  2C05               	goto	l2030
  4952  0419  0825               	movf	___wmul@product+1,w
  4953  041A  00A1               	movwf	?___wmul+1
  4954  041B  0824               	movf	___wmul@product,w
  4955  041C  00A0               	movwf	?___wmul
  4956  041D  0008               	return
  4957  041E                     __end_of___wmul:	
  4958                           
  4959                           	psect	text7
  4960  04A8                     __ptext7:	
  4961 ;; *************** function _TMR6_HasOverflowOccured *****************
  4962 ;; Defined at:
  4963 ;;		line 161 in file "mcc_generated_files/tmr6.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  status          1    0[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      unsigned char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;Total ram usage:        1 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    3
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_main
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           
  4992                           ;psect for function _TMR6_HasOverflowOccured
  4993  04A8                     _TMR6_HasOverflowOccured:	
  4994                           
  4995                           ;tmr6.c: 164: bool status = PIR4bits.TMR6IF;
  4996                           
  4997                           ;incstack = 0
  4998                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
  4999  04A8  3000               	movlw	0
  5000  04A9  002E               	movlb	14	; select bank14
  5001  04AA  1A90               	btfsc	16,5	;volatile
  5002  04AB  3001               	movlw	1
  5003  04AC  0020               	movlb	0	; select bank0
  5004  04AD  00A0               	movwf	TMR6_HasOverflowOccured@status
  5005                           
  5006                           ;tmr6.c: 165: if(status)
  5007  04AE  0820               	movf	TMR6_HasOverflowOccured@status,w
  5008  04AF  1903               	btfsc	3,2
  5009  04B0  2CB3               	goto	l1974
  5010                           
  5011                           ;tmr6.c: 166: {
  5012                           ;tmr6.c: 168: PIR4bits.TMR6IF = 0;
  5013  04B1  002E               	movlb	14	; select bank14
  5014  04B2  1290               	bcf	16,5	;volatile
  5015  04B3                     l1974:	
  5016                           
  5017                           ;tmr6.c: 169: }
  5018                           ;tmr6.c: 170: return status;
  5019  04B3  0020               	movlb	0	; select bank0
  5020  04B4  0820               	movf	TMR6_HasOverflowOccured@status,w
  5021  04B5  0008               	return
  5022  04B6                     __end_of_TMR6_HasOverflowOccured:	
  5023                           
  5024                           	psect	text8
  5025  048A                     __ptext8:	
  5026 ;; *************** function _SYSTEM_Initialize *****************
  5027 ;; Defined at:
  5028 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, pclath, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    5
  5049 ;; This function calls:
  5050 ;;		_EUSART_Initialize
  5051 ;;		_I2C2_Initialize
  5052 ;;		_OSCILLATOR_Initialize
  5053 ;;		_PIN_MANAGER_Initialize
  5054 ;;		_TMR6_Initialize
  5055 ;; This function is called by:
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _SYSTEM_Initialize
  5062  048A                     _SYSTEM_Initialize:	
  5063                           
  5064                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5068  048A  3182  2290  3184   	fcall	_PIN_MANAGER_Initialize
  5069                           
  5070                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5071  048D  3184  24CC  3184   	fcall	_OSCILLATOR_Initialize
  5072                           
  5073                           ;mcc.c: 87: I2C2_Initialize();
  5074  0490  3184  241E  3184   	fcall	_I2C2_Initialize
  5075                           
  5076                           ;mcc.c: 88: TMR6_Initialize();
  5077  0493  3184  2499  3184   	fcall	_TMR6_Initialize
  5078                           
  5079                           ;mcc.c: 89: EUSART_Initialize();
  5080  0496  3184  24B6         	fcall	_EUSART_Initialize
  5081  0498  0008               	return
  5082  0499                     __end_of_SYSTEM_Initialize:	
  5083                           
  5084                           	psect	text9
  5085  0499                     __ptext9:	
  5086 ;; *************** function _TMR6_Initialize *****************
  5087 ;; Defined at:
  5088 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    4
  5109 ;; This function calls:
  5110 ;;		_TMR6_Start
  5111 ;; This function is called by:
  5112 ;;		_SYSTEM_Initialize
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _TMR6_Initialize
  5118  0499                     _TMR6_Initialize:	
  5119                           
  5120                           ;tmr6.c: 68: T6CON = 0x79;
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5124  0499  3079               	movlw	121
  5125  049A  0025               	movlb	5	; select bank5
  5126  049B  009A               	movwf	26	;volatile
  5127                           
  5128                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5129  049C  3004               	movlw	4
  5130  049D  009C               	movwf	28	;volatile
  5131                           
  5132                           ;tmr6.c: 74: T6HLT = 0x00;
  5133  049E  019B               	clrf	27	;volatile
  5134                           
  5135                           ;tmr6.c: 77: T6RST = 0x00;
  5136  049F  019D               	clrf	29	;volatile
  5137                           
  5138                           ;tmr6.c: 80: T6PR = 0xF1;
  5139  04A0  30F1               	movlw	241
  5140  04A1  0099               	movwf	25	;volatile
  5141                           
  5142                           ;tmr6.c: 83: T6TMR = 0x00;
  5143  04A2  0198               	clrf	24	;volatile
  5144                           
  5145                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5146  04A3  002E               	movlb	14	; select bank14
  5147  04A4  1290               	bcf	16,5	;volatile
  5148                           
  5149                           ;tmr6.c: 89: TMR6_Start();
  5150  04A5  3184  24E1         	fcall	_TMR6_Start
  5151  04A7  0008               	return
  5152  04A8                     __end_of_TMR6_Initialize:	
  5153                           
  5154                           	psect	text10
  5155  04E1                     __ptext10:	
  5156 ;; *************** function _TMR6_Start *****************
  5157 ;; Defined at:
  5158 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		None
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_TMR6_Initialize
  5183 ;;		_TMR6_StartTimer
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _TMR6_Start
  5189  04E1                     _TMR6_Start:	
  5190                           
  5191                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _TMR6_Start: []
  5195  04E1  0025               	movlb	5	; select bank5
  5196  04E2  179A               	bsf	26,7	;volatile
  5197  04E3  0008               	return
  5198  04E4                     __end_of_TMR6_Start:	
  5199                           
  5200                           	psect	text11
  5201  0290                     __ptext11:	
  5202 ;; *************** function _PIN_MANAGER_Initialize *****************
  5203 ;; Defined at:
  5204 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  state           1    0[BANK0 ] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        1 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    3
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_SYSTEM_Initialize
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _PIN_MANAGER_Initialize
  5234  0290                     _PIN_MANAGER_Initialize:	
  5235                           
  5236                           ;pin_manager.c: 56: LATA = 0x00;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5240  0290  0020               	movlb	0	; select bank0
  5241  0291  0196               	clrf	22	;volatile
  5242                           
  5243                           ;pin_manager.c: 57: LATB = 0x00;
  5244  0292  0197               	clrf	23	;volatile
  5245                           
  5246                           ;pin_manager.c: 58: LATC = 0x00;
  5247  0293  0198               	clrf	24	;volatile
  5248                           
  5249                           ;pin_manager.c: 63: TRISA = 0xFC;
  5250  0294  30FC               	movlw	252
  5251  0295  0091               	movwf	17	;volatile
  5252                           
  5253                           ;pin_manager.c: 64: TRISB = 0xFF;
  5254  0296  30FF               	movlw	255
  5255  0297  0092               	movwf	18	;volatile
  5256                           
  5257                           ;pin_manager.c: 65: TRISC = 0xBE;
  5258  0298  30BE               	movlw	190
  5259  0299  0093               	movwf	19	;volatile
  5260                           
  5261                           ;pin_manager.c: 70: ANSELC = 0xE7;
  5262  029A  30E7               	movlw	231
  5263  029B  003E               	movlb	30	; select bank30
  5264  029C  00CE               	movwf	78	;volatile
  5265                           
  5266                           ;pin_manager.c: 71: ANSELB = 0x7F;
  5267  029D  307F               	movlw	127
  5268  029E  00C3               	movwf	67	;volatile
  5269                           
  5270                           ;pin_manager.c: 72: ANSELA = 0xFC;
  5271  029F  30FC               	movlw	252
  5272  02A0  00B8               	movwf	56	;volatile
  5273                           
  5274                           ;pin_manager.c: 77: WPUE = 0x00;
  5275  02A1  01E5               	clrf	101	;volatile
  5276                           
  5277                           ;pin_manager.c: 78: WPUB = 0x00;
  5278  02A2  01C4               	clrf	68	;volatile
  5279                           
  5280                           ;pin_manager.c: 79: WPUA = 0x00;
  5281  02A3  01B9               	clrf	57	;volatile
  5282                           
  5283                           ;pin_manager.c: 80: WPUC = 0x00;
  5284  02A4  01CF               	clrf	79	;volatile
  5285                           
  5286                           ;pin_manager.c: 85: ODCONA = 0x00;
  5287  02A5  01BA               	clrf	58	;volatile
  5288                           
  5289                           ;pin_manager.c: 86: ODCONB = 0x00;
  5290  02A6  01C5               	clrf	69	;volatile
  5291                           
  5292                           ;pin_manager.c: 87: ODCONC = 0x00;
  5293  02A7  01D0               	clrf	80	;volatile
  5294                           
  5295                           ;pin_manager.c: 94: bool state = GIE;
  5296  02A8  3000               	movlw	0
  5297  02A9  1B8B               	btfsc	11,7	;volatile
  5298  02AA  3001               	movlw	1
  5299  02AB  0020               	movlb	0	; select bank0
  5300  02AC  00A0               	movwf	PIN_MANAGER_Initialize@state
  5301                           
  5302                           ;pin_manager.c: 95: GIE = 0;
  5303  02AD  138B               	bcf	11,7	;volatile
  5304                           
  5305                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  5306  02AE  3055               	movlw	85
  5307  02AF  003D               	movlb	29	; select bank29
  5308  02B0  008F               	movwf	15	;volatile
  5309                           
  5310                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  5311  02B1  30AA               	movlw	170
  5312  02B2  008F               	movwf	15	;volatile
  5313                           
  5314                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  5315  02B3  100F               	bcf	15,0	;volatile
  5316                           
  5317                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  5318  02B4  081E               	movf	30,w	;volatile
  5319  02B5  39E0               	andlw	-32
  5320  02B6  380F               	iorlw	15
  5321  02B7  009E               	movwf	30	;volatile
  5322                           
  5323                           ;pin_manager.c: 101: RC0PPS = 0x10;
  5324  02B8  3010               	movlw	16
  5325  02B9  003E               	movlb	30	; select bank30
  5326  02BA  00A0               	movwf	32	;volatile
  5327                           
  5328                           ;pin_manager.c: 102: RC3PPS = 0x17;
  5329  02BB  3017               	movlw	23
  5330  02BC  00A3               	movwf	35	;volatile
  5331                           
  5332                           ;pin_manager.c: 103: RC4PPS = 0x16;
  5333  02BD  3016               	movlw	22
  5334  02BE  00A4               	movwf	36	;volatile
  5335                           
  5336                           ;pin_manager.c: 104: RC6PPS = 0x10;
  5337  02BF  3010               	movlw	16
  5338  02C0  00A6               	movwf	38	;volatile
  5339                           
  5340                           ;pin_manager.c: 105: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5341  02C1  003D               	movlb	29	; select bank29
  5342  02C2  0849               	movf	73,w	;volatile
  5343  02C3  39E0               	andlw	-32
  5344  02C4  3813               	iorlw	19
  5345  02C5  00C9               	movwf	73	;volatile
  5346                           
  5347                           ;pin_manager.c: 106: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5348  02C6  0848               	movf	72,w	;volatile
  5349  02C7  39E0               	andlw	-32
  5350  02C8  3814               	iorlw	20
  5351  02C9  00C8               	movwf	72	;volatile
  5352                           
  5353                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  5354  02CA  3055               	movlw	85
  5355  02CB  008F               	movwf	15	;volatile
  5356                           
  5357                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  5358  02CC  30AA               	movlw	170
  5359  02CD  008F               	movwf	15	;volatile
  5360                           
  5361                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
  5362  02CE  140F               	bsf	15,0	;volatile
  5363                           
  5364                           ;pin_manager.c: 112: GIE = state;
  5365  02CF  0020               	movlb	0	; select bank0
  5366  02D0  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  5367  02D1  2AD4               	goto	u1420
  5368  02D2  178B               	bsf	11,7	;volatile
  5369  02D3  0008               	return
  5370  02D4                     u1420:	
  5371  02D4  138B               	bcf	11,7	;volatile
  5372  02D5  0008               	return
  5373  02D6                     __end_of_PIN_MANAGER_Initialize:	
  5374                           
  5375                           	psect	text12
  5376  04CC                     __ptext12:	
  5377 ;; *************** function _OSCILLATOR_Initialize *****************
  5378 ;; Defined at:
  5379 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    3
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_SYSTEM_Initialize
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _OSCILLATOR_Initialize
  5409  04CC                     _OSCILLATOR_Initialize:	
  5410                           
  5411                           ;mcc.c: 95: OSCCON1 = 0x10;
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5415  04CC  3010               	movlw	16
  5416  04CD  0031               	movlb	17	; select bank17
  5417  04CE  008D               	movwf	13	;volatile
  5418                           
  5419                           ;mcc.c: 97: OSCCON3 = 0x00;
  5420  04CF  018F               	clrf	15	;volatile
  5421                           
  5422                           ;mcc.c: 99: OSCEN = 0x00;
  5423  04D0  0191               	clrf	17	;volatile
  5424                           
  5425                           ;mcc.c: 101: OSCFRQ = 0x05;
  5426  04D1  3005               	movlw	5
  5427  04D2  0093               	movwf	19	;volatile
  5428                           
  5429                           ;mcc.c: 103: OSCTUNE = 0x00;
  5430  04D3  0192               	clrf	18	;volatile
  5431  04D4  0008               	return
  5432  04D5                     __end_of_OSCILLATOR_Initialize:	
  5433                           
  5434                           	psect	text13
  5435  041E                     __ptext13:	
  5436 ;; *************** function _I2C2_Initialize *****************
  5437 ;; Defined at:
  5438 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;Total ram usage:        1 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    3
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_SYSTEM_Initialize
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _I2C2_Initialize
  5468  041E                     _I2C2_Initialize:	
  5469                           
  5470                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5474  041E  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5475  041F  0020               	movlb	0	; select bank0
  5476  0420  00A0               	movwf	??_I2C2_Initialize
  5477  0421  0820               	movf	??_I2C2_Initialize,w
  5478  0422  00C3               	movwf	low ((_i2c2_object| 0+1))
  5479                           
  5480                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5481  0423  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5482  0424  00A0               	movwf	??_I2C2_Initialize
  5483  0425  0820               	movf	??_I2C2_Initialize,w
  5484  0426  00C2               	movwf	_i2c2_object
  5485                           
  5486                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5487  0427  14C4               	bsf	_i2c2_object+2,1
  5488                           
  5489                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5490  0428  1044               	bcf	_i2c2_object+2,0
  5491                           
  5492                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5493  0429  01C6               	clrf	_i2c2_object+4
  5494                           
  5495                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5496  042A  3080               	movlw	128
  5497  042B  0023               	movlb	3	; select bank3
  5498  042C  0099               	movwf	25	;volatile
  5499                           
  5500                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5501  042D  3028               	movlw	40
  5502  042E  009A               	movwf	26	;volatile
  5503                           
  5504                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5505  042F  019C               	clrf	28	;volatile
  5506                           
  5507                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  5508  0430  309F               	movlw	159
  5509  0431  0097               	movwf	23	;volatile
  5510                           
  5511                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5512  0432  002E               	movlb	14	; select bank14
  5513  0433  110F               	bcf	15,2	;volatile
  5514                           
  5515                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5516  0434  1519               	bsf	25,2	;volatile
  5517  0435  0008               	return
  5518  0436                     __end_of_I2C2_Initialize:	
  5519                           
  5520                           	psect	text14
  5521  04B6                     __ptext14:	
  5522 ;; *************** function _EUSART_Initialize *****************
  5523 ;; Defined at:
  5524 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    3
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_SYSTEM_Initialize
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _EUSART_Initialize
  5554  04B6                     _EUSART_Initialize:	
  5555                           
  5556                           ;eusart.c: 60: BAUD1CON = 0x08;
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _EUSART_Initialize: [wreg]
  5560  04B6  3008               	movlw	8
  5561  04B7  0022               	movlb	2	; select bank2
  5562  04B8  009F               	movwf	31	;volatile
  5563                           
  5564                           ;eusart.c: 63: RC1STA = 0x80;
  5565  04B9  3080               	movlw	128
  5566  04BA  009D               	movwf	29	;volatile
  5567                           
  5568                           ;eusart.c: 66: TX1STA = 0x24;
  5569  04BB  3024               	movlw	36
  5570  04BC  009E               	movwf	30	;volatile
  5571                           
  5572                           ;eusart.c: 69: SP1BRGL = 0x40;
  5573  04BD  3040               	movlw	64
  5574  04BE  009B               	movwf	27	;volatile
  5575                           
  5576                           ;eusart.c: 72: SP1BRGH = 0x03;
  5577  04BF  3003               	movlw	3
  5578  04C0  009C               	movwf	28	;volatile
  5579  04C1  0008               	return
  5580  04C2                     __end_of_EUSART_Initialize:	
  5581                           
  5582                           	psect	text15
  5583  031C                     __ptext15:	
  5584 ;; *************** function _EMC1001_Read *****************
  5585 ;; Defined at:
  5586 ;;		line 8 in file "main.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  reg             1    wreg     unsigned char 
  5589 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5590 ;;		 -> main@templo(1), main@temp(1), 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  reg             1   10[BANK0 ] unsigned char 
  5593 ;;  status          1   11[BANK0 ] enum E13567
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      unsigned char 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5603 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;Total ram usage:        5 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    4
  5610 ;; This function calls:
  5611 ;;		_I2C2_MasterReadTRBBuild
  5612 ;;		_I2C2_MasterTRBInsert
  5613 ;;		_I2C2_MasterWriteTRBBuild
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function _EMC1001_Read
  5621  031C                     _EMC1001_Read:	
  5622                           
  5623                           ;incstack = 0
  5624                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5625                           ;EMC1001_Read@reg stored from wreg
  5626  031C  0020               	movlb	0	; select bank0
  5627  031D  00AA               	movwf	EMC1001_Read@reg
  5628                           
  5629                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5630  031E  3002               	movlw	2
  5631  031F  00A8               	movwf	??_EMC1001_Read
  5632  0320  0828               	movf	??_EMC1001_Read,w
  5633  0321  00AB               	movwf	EMC1001_Read@status
  5634                           
  5635                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5636                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5637  0322  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5638  0323  00A8               	movwf	??_EMC1001_Read
  5639  0324  0828               	movf	??_EMC1001_Read,w
  5640  0325  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5641  0326  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5642  0327  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5643  0328  3038               	movlw	56
  5644  0329  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5645  032A  3000               	movlw	0
  5646  032B  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5647  032C  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5648  032D  3183  23E2  3183   	fcall	_I2C2_MasterWriteTRBBuild
  5649                           
  5650                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5651  0330  0020               	movlb	0	; select bank0
  5652  0331  0827               	movf	EMC1001_Read@pData,w
  5653  0332  00A8               	movwf	??_EMC1001_Read
  5654  0333  0828               	movf	??_EMC1001_Read,w
  5655  0334  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5656  0335  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5657  0336  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5658  0337  3038               	movlw	56
  5659  0338  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5660  0339  3000               	movlw	0
  5661  033A  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5662  033B  304F               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5663  033C  3183  23BA  3183   	fcall	_I2C2_MasterReadTRBBuild
  5664                           
  5665                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5666  033F  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5667  0340  0020               	movlb	0	; select bank0
  5668  0341  00A8               	movwf	??_EMC1001_Read
  5669  0342  0828               	movf	??_EMC1001_Read,w
  5670  0343  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5671  0344  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5672  0345  00A9               	movwf	??_EMC1001_Read+1
  5673  0346  0829               	movf	??_EMC1001_Read+1,w
  5674  0347  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5675  0348  3002               	movlw	2
  5676  0349  3182  22D6  3183   	fcall	_I2C2_MasterTRBInsert
  5677  034C                     l1614:	
  5678                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  5679                           
  5680  034C  3002               	movlw	2
  5681  034D  0020               	movlb	0	; select bank0
  5682  034E  062B               	xorwf	EMC1001_Read@status,w
  5683  034F  1903               	btfsc	3,2
  5684  0350  2B4C               	goto	l1614
  5685                           
  5686                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  5687  0351  082B               	movf	EMC1001_Read@status,w
  5688  0352  1D03               	btfss	3,2
  5689  0353  2B56               	goto	u970
  5690  0354  3001               	movlw	1
  5691  0355  0008               	return
  5692  0356                     u970:	
  5693  0356  3000               	movlw	0
  5694  0357  0008               	return
  5695  0358                     __end_of_EMC1001_Read:	
  5696                           
  5697                           	psect	text16
  5698  03E2                     __ptext16:	
  5699 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5700 ;; Defined at:
  5701 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  ptrb            1    wreg     PTR struct .
  5704 ;;		 -> I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5705 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5706 ;;		 -> EMC1001_Read@reg(1), 
  5707 ;;  length          1    1[BANK0 ] unsigned char 
  5708 ;;  address         2    2[BANK0 ] unsigned int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5711 ;;		 -> I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        7 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    3
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_EMC1001_Read
  5732 ;;		_I2C2_MasterWrite
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _I2C2_MasterWriteTRBBuild
  5738  03E2                     _I2C2_MasterWriteTRBBuild:	
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5742                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5743  03E2  0020               	movlb	0	; select bank0
  5744  03E3  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5745                           
  5746                           ;i2c2.c: 713: ptrb->address = address << 1;
  5747  03E4  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5748  03E5  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5749  03E6  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  5750  03E7  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5751  03E8  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5752  03E9  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5753  03EA  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5754  03EB  0086               	movwf	6
  5755  03EC  0187               	clrf	7
  5756  03ED  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5757  03EE  3FC0               	movwi [0]fsr1
  5758  03EF  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5759  03F0  3FC1               	movwi [1]fsr1
  5760                           
  5761                           ;i2c2.c: 714: ptrb->length = length;
  5762  03F1  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  5763  03F2  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5764  03F3  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5765  03F4  3E02               	addlw	2
  5766  03F5  0086               	movwf	6
  5767  03F6  0187               	clrf	7
  5768  03F7  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5769  03F8  0081               	movwf	1
  5770                           
  5771                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5772  03F9  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5773  03FA  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5774  03FB  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5775  03FC  3E03               	addlw	3
  5776  03FD  0086               	movwf	6
  5777  03FE  0187               	clrf	7
  5778  03FF  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5779  0400  0081               	movwf	1
  5780  0401  0008               	return
  5781  0402                     __end_of_I2C2_MasterWriteTRBBuild:	
  5782                           
  5783                           	psect	text17
  5784  02D6                     __ptext17:	
  5785 ;; *************** function _I2C2_MasterTRBInsert *****************
  5786 ;; Defined at:
  5787 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  count           1    wreg     unsigned char 
  5790 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5791 ;;		 -> I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5792 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  5793 ;;		 -> EMC1001_Read@status(1), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  count           1    3[BANK0 ] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;Total ram usage:        4 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    3
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_EMC1001_Read
  5816 ;;		_I2C2_MasterWrite
  5817 ;;		_I2C2_MasterRead
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function _I2C2_MasterTRBInsert
  5823  02D6                     _I2C2_MasterTRBInsert:	
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5827                           ;I2C2_MasterTRBInsert@count stored from wreg
  5828  02D6  0020               	movlb	0	; select bank0
  5829  02D7  00A3               	movwf	I2C2_MasterTRBInsert@count
  5830                           
  5831                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5832  02D8  1844               	btfsc	_i2c2_object+2,0
  5833  02D9  2B0A               	goto	l1526
  5834                           
  5835                           ;i2c2.c: 649: {
  5836                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5837  02DA  3002               	movlw	2
  5838  02DB  00A2               	movwf	??_I2C2_MasterTRBInsert
  5839  02DC  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5840  02DD  0086               	movwf	6
  5841  02DE  0187               	clrf	7
  5842  02DF  0822               	movf	??_I2C2_MasterTRBInsert,w
  5843  02E0  0081               	movwf	1
  5844                           
  5845                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5846  02E1  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5847  02E2  00A2               	movwf	??_I2C2_MasterTRBInsert
  5848  02E3  0A42               	incf	_i2c2_object,w
  5849  02E4  0086               	movwf	6
  5850  02E5  0187               	clrf	7
  5851  02E6  0822               	movf	??_I2C2_MasterTRBInsert,w
  5852  02E7  0081               	movwf	1
  5853                           
  5854                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5855  02E8  0823               	movf	I2C2_MasterTRBInsert@count,w
  5856  02E9  00A2               	movwf	??_I2C2_MasterTRBInsert
  5857  02EA  0842               	movf	_i2c2_object,w
  5858  02EB  0086               	movwf	6
  5859  02EC  0187               	clrf	7
  5860  02ED  0822               	movf	??_I2C2_MasterTRBInsert,w
  5861  02EE  0081               	movwf	1
  5862                           
  5863                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  5864  02EF  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5865  02F0  00A2               	movwf	??_I2C2_MasterTRBInsert
  5866  02F1  0842               	movf	_i2c2_object,w
  5867  02F2  3E02               	addlw	2
  5868  02F3  0086               	movwf	6
  5869  02F4  0187               	clrf	7
  5870  02F5  0822               	movf	??_I2C2_MasterTRBInsert,w
  5871  02F6  0081               	movwf	1
  5872                           
  5873                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  5874  02F7  3003               	movlw	3
  5875  02F8  00A2               	movwf	??_I2C2_MasterTRBInsert
  5876  02F9  0822               	movf	??_I2C2_MasterTRBInsert,w
  5877  02FA  07C2               	addwf	_i2c2_object,f
  5878                           
  5879                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  5880  02FB  0842               	movf	_i2c2_object,w
  5881  02FC  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  5882  02FD  1D03               	skipz
  5883  02FE  2B03               	goto	l1522
  5884                           
  5885                           ;i2c2.c: 659: {
  5886                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  5887  02FF  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5888  0300  00A2               	movwf	??_I2C2_MasterTRBInsert
  5889  0301  0822               	movf	??_I2C2_MasterTRBInsert,w
  5890  0302  00C2               	movwf	_i2c2_object
  5891  0303                     l1522:	
  5892                           
  5893                           ;i2c2.c: 662: }
  5894                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  5895  0303  10C4               	bcf	_i2c2_object+2,1
  5896                           
  5897                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  5898  0304  0843               	movf	low ((_i2c2_object| 0+1)),w
  5899  0305  0642               	xorwf	_i2c2_object,w
  5900  0306  1D03               	skipz
  5901  0307  2B0F               	goto	l1528
  5902                           
  5903                           ;i2c2.c: 670: {
  5904                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  5905  0308  1444               	bsf	_i2c2_object+2,0
  5906                           
  5907                           ;i2c2.c: 673: }
  5908                           ;i2c2.c: 675: }
  5909  0309  2B0F               	goto	l1528
  5910  030A                     l1526:	
  5911                           
  5912                           ;i2c2.c: 676: else
  5913                           ;i2c2.c: 677: {
  5914                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  5915  030A  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5916  030B  0086               	movwf	6
  5917  030C  0187               	clrf	7
  5918  030D  0181               	clrf	1
  5919  030E  0A81               	incf	1,f
  5920  030F                     l1528:	
  5921                           
  5922                           ;i2c2.c: 679: }
  5923                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  5924  030F  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5925  0310  0086               	movwf	6
  5926  0311  0187               	clrf	7
  5927  0312  3002               	movlw	2
  5928  0313  0601               	xorwf	1,w
  5929  0314  1D03               	btfss	3,2
  5930  0315  0008               	return
  5931  0316                     l1532:	
  5932                           ;i2c2.c: 683: {
  5933                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  5934                           
  5935  0316  084A               	movf	_i2c2_state,w
  5936  0317  1D03               	btfss	3,2
  5937  0318  2B16               	goto	l1532
  5938                           
  5939                           ;i2c2.c: 685: {
  5940                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  5941  0319  002E               	movlb	14	; select bank14
  5942  031A  150F               	bsf	15,2	;volatile
  5943  031B  0008               	return
  5944  031C                     __end_of_I2C2_MasterTRBInsert:	
  5945                           
  5946                           	psect	text18
  5947  03BA                     __ptext18:	
  5948 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  5949 ;; Defined at:
  5950 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  ptrb            1    wreg     PTR struct .
  5953 ;;		 -> I2C2_MasterRead@trBlock(4), EMC1001_Read@trb(8), 
  5954 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5955 ;;		 -> main@templo(1), main@temp(1), 
  5956 ;;  length          1    1[BANK0 ] unsigned char 
  5957 ;;  address         2    2[BANK0 ] unsigned int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5960 ;;		 -> I2C2_MasterRead@trBlock(4), EMC1001_Read@trb(8), 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;Total ram usage:        7 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    3
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_EMC1001_Read
  5981 ;;		_I2C2_MasterRead
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function _I2C2_MasterReadTRBBuild
  5987  03BA                     _I2C2_MasterReadTRBBuild:	
  5988                           
  5989                           ;incstack = 0
  5990                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5991                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  5992  03BA  0020               	movlb	0	; select bank0
  5993  03BB  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  5994                           
  5995                           ;i2c2.c: 700: ptrb->address = address << 1;
  5996  03BC  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  5997  03BD  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  5998  03BE  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  5999  03BF  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6000  03C0  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6001  03C1  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6002  03C2  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6003  03C3  0086               	movwf	6
  6004  03C4  0187               	clrf	7
  6005  03C5  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6006  03C6  3FC0               	movwi [0]fsr1
  6007  03C7  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6008  03C8  3FC1               	movwi [1]fsr1
  6009                           
  6010                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6011  03C9  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6012  03CA  0086               	movwf	6
  6013  03CB  0187               	clrf	7
  6014  03CC  3001               	movlw	1
  6015  03CD  0481               	iorwf	1,f
  6016  03CE  3141               	addfsr 1,1
  6017  03CF  3000               	movlw	0
  6018  03D0  0481               	iorwf	1,f
  6019                           
  6020                           ;i2c2.c: 703: ptrb->length = length;
  6021  03D1  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6022  03D2  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6023  03D3  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6024  03D4  3E02               	addlw	2
  6025  03D5  0086               	movwf	6
  6026  03D6  0187               	clrf	7
  6027  03D7  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6028  03D8  0081               	movwf	1
  6029                           
  6030                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6031  03D9  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6032  03DA  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6033  03DB  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6034  03DC  3E03               	addlw	3
  6035  03DD  0086               	movwf	6
  6036  03DE  0187               	clrf	7
  6037  03DF  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6038  03E0  0081               	movwf	1
  6039  03E1  0008               	return
  6040  03E2                     __end_of_I2C2_MasterReadTRBBuild:	
  6041                           
  6042                           	psect	intentry
  6043  0004                     __pintentry:	
  6044 ;; *************** function _INTERRUPT_InterruptManager *****************
  6045 ;; Defined at:
  6046 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;Total ram usage:        1 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		_I2C2_BusCollisionISR
  6069 ;;		_I2C2_ISR
  6070 ;; This function is called by:
  6071 ;;		Interrupt level 1
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075  0004                     _INTERRUPT_InterruptManager:	
  6076                           
  6077                           ;incstack = 0
  6078  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6079                           
  6080                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6081  0005  3180               	pagesel	$
  6082  0006  0020               	movlb	0	; select bank0
  6083  0007  087F               	movf	127,w
  6084  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  6085                           
  6086                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  6087  0009  1F0B               	btfss	11,6	;volatile
  6088  000A  2813               	goto	i1l245
  6089  000B  002E               	movlb	14	; select bank14
  6090  000C  1999               	btfsc	25,3	;volatile
  6091  000D  1D8F               	btfss	15,3	;volatile
  6092  000E  2813               	goto	i1l245
  6093                           
  6094                           ;interrupt_manager.c: 55: {
  6095                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6096  000F  3184  24E4  3180   	fcall	_I2C2_BusCollisionISR
  6097                           
  6098                           ;interrupt_manager.c: 57: }
  6099  0012  281B               	goto	i1l249
  6100  0013                     i1l245:	
  6101                           
  6102                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  6103  0013  1F0B               	btfss	11,6	;volatile
  6104  0014  281B               	goto	i1l249
  6105  0015  002E               	movlb	14	; select bank14
  6106  0016  1919               	btfsc	25,2	;volatile
  6107  0017  1D0F               	btfss	15,2	;volatile
  6108  0018  281B               	goto	i1l249
  6109                           
  6110                           ;interrupt_manager.c: 59: {
  6111                           ;interrupt_manager.c: 60: I2C2_ISR();
  6112  0019  3180  2034         	fcall	_I2C2_ISR
  6113  001B                     i1l249:	
  6114                           ;interrupt_manager.c: 62: else
  6115                           ;interrupt_manager.c: 63: {
  6116                           
  6117                           ;interrupt_manager.c: 61: }
  6118                           
  6119  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  6120  001C  0020               	movlb	0	; select bank0
  6121  001D  00FF               	movwf	127
  6122  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6123  001F  0009               	retfie
  6124  0020                     __end_of_INTERRUPT_InterruptManager:	
  6125                           
  6126                           	psect	text20
  6127  0034                     __ptext20:	
  6128 ;; *************** function _I2C2_ISR *****************
  6129 ;; Defined at:
  6130 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;Total ram usage:        4 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    1
  6151 ;; This function calls:
  6152 ;;		_I2C2_FunctionComplete
  6153 ;;		_I2C2_Stop
  6154 ;; This function is called by:
  6155 ;;		_INTERRUPT_InterruptManager
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function _I2C2_ISR
  6161  0034                     _I2C2_ISR:	
  6162                           
  6163                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6164                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6165                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6166                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6167                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6171  0034  002E               	movlb	14	; select bank14
  6172  0035  110F               	bcf	15,2	;volatile
  6173                           
  6174                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6175  0036  0023               	movlb	3	; select bank3
  6176  0037  1F9A               	btfss	26,7	;volatile
  6177  0038  2963               	goto	i1l1804
  6178                           
  6179                           ;i2c2.c: 246: {
  6180                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6181  0039  139A               	bcf	26,7	;volatile
  6182                           
  6183                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6184  003A  0020               	movlb	0	; select bank0
  6185  003B  01CA               	clrf	_i2c2_state
  6186                           
  6187                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6188  003C  0873               	movf	_p_i2c2_current,w
  6189  003D  3E02               	addlw	2
  6190  003E  0086               	movwf	6
  6191  003F  0187               	clrf	7
  6192  0040  0801               	movf	1,w
  6193  0041  0086               	movwf	6
  6194  0042  0187               	clrf	7
  6195  0043  0181               	clrf	1
  6196  0044  0A81               	incf	1,f
  6197                           
  6198                           ;i2c2.c: 253: p_i2c2_current = (0);
  6199  0045  01F3               	clrf	_p_i2c2_current
  6200                           
  6201                           ;i2c2.c: 255: return;
  6202  0046  0008               	return
  6203  0047                     i1l309:	
  6204                           ;i2c2.c: 260: {
  6205                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6206                           
  6207                           ;i2c2.c: 256: }
  6208                           ;i2c2.c: 259: switch(i2c2_state)
  6209                           
  6210                           
  6211                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6212  0047  18C4               	btfsc	_i2c2_object+2,1
  6213  0048  0008               	return
  6214                           
  6215                           ;i2c2.c: 264: {
  6216                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6217  0049  0843               	movf	low ((_i2c2_object| 0+1)),w
  6218  004A  00F9               	movwf	??_I2C2_ISR
  6219  004B  0879               	movf	??_I2C2_ISR,w
  6220  004C  00F3               	movwf	_p_i2c2_current
  6221                           
  6222                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6223  004D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6224  004E  0086               	movwf	6
  6225  004F  0187               	clrf	7
  6226  0050  0801               	movf	1,w
  6227  0051  00F9               	movwf	??_I2C2_ISR
  6228  0052  0879               	movf	??_I2C2_ISR,w
  6229  0053  00F2               	movwf	_i2c2_trb_count
  6230                           
  6231                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6232  0054  0843               	movf	low ((_i2c2_object| 0+1)),w
  6233  0055  0086               	movwf	6
  6234  0056  0187               	clrf	7
  6235  0057  3F41               	moviw [1]fsr1
  6236  0058  00F4               	movwf	_p_i2c2_trb_current
  6237                           
  6238                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6239  0059  3003               	movlw	3
  6240  005A  00F9               	movwf	??_I2C2_ISR
  6241  005B  0879               	movf	??_I2C2_ISR,w
  6242  005C  07C3               	addwf	low ((_i2c2_object| 0+1)),f
  6243                           
  6244                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6245  005D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6246  005E  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6247  005F  1D03               	skipz
  6248  0060  2865               	goto	i1l1692
  6249                           
  6250                           ;i2c2.c: 274: {
  6251                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6252  0061  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6253  0062  00F9               	movwf	??_I2C2_ISR
  6254  0063  0879               	movf	??_I2C2_ISR,w
  6255  0064  00C3               	movwf	low ((_i2c2_object| 0+1))
  6256  0065                     i1l1692:	
  6257                           
  6258                           ;i2c2.c: 277: }
  6259                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6260  0065  1044               	bcf	_i2c2_object+2,0
  6261                           
  6262                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6263  0066  0843               	movf	low ((_i2c2_object| 0+1)),w
  6264  0067  0642               	xorwf	_i2c2_object,w
  6265  0068  1903               	btfsc	3,2
  6266                           
  6267                           ;i2c2.c: 285: {
  6268                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6269  0069  14C4               	bsf	_i2c2_object+2,1
  6270                           
  6271                           ;i2c2.c: 288: }
  6272                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6273  006A  0023               	movlb	3	; select bank3
  6274  006B  141B               	bsf	27,0	;volatile
  6275                           
  6276                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6277  006C  3002               	movlw	2
  6278  006D  00F9               	movwf	??_I2C2_ISR
  6279  006E  0879               	movf	??_I2C2_ISR,w
  6280  006F  0020               	movlb	0	; select bank0
  6281  0070  00CA               	movwf	_i2c2_state
  6282                           
  6283                           ;i2c2.c: 295: }
  6284                           ;i2c2.c: 297: break;
  6285  0071  0008               	return
  6286  0072                     i1l314:	
  6287                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6288                           
  6289                           
  6290                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6291  0072  0023               	movlb	3	; select bank3
  6292  0073  149B               	bsf	27,1	;volatile
  6293                           
  6294                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6295  0074  3002               	movlw	2
  6296  0075  00F9               	movwf	??_I2C2_ISR
  6297  0076  0879               	movf	??_I2C2_ISR,w
  6298  0077  0020               	movlb	0	; select bank0
  6299  0078  00CA               	movwf	_i2c2_state
  6300                           
  6301                           ;i2c2.c: 309: break;
  6302  0079  0008               	return
  6303  007A                     i1l315:	
  6304                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6305                           
  6306                           
  6307                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6308  007A  0023               	movlb	3	; select bank3
  6309  007B  1F1B               	btfss	27,6	;volatile
  6310  007C  2886               	goto	i1l1704
  6311                           
  6312                           ;i2c2.c: 314: {
  6313                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6314  007D  3001               	movlw	1
  6315  007E  00F9               	movwf	??_I2C2_ISR
  6316  007F  0879               	movf	??_I2C2_ISR,w
  6317  0080  0020               	movlb	0	; select bank0
  6318  0081  07C6               	addwf	_i2c2_object+4,f
  6319                           
  6320                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6321  0082  3004               	movlw	4
  6322  0083  3184  244E         	fcall	_I2C2_Stop
  6323                           
  6324                           ;i2c2.c: 317: }
  6325  0085  0008               	return
  6326  0086                     i1l1704:	
  6327                           
  6328                           ;i2c2.c: 318: else
  6329                           ;i2c2.c: 319: {
  6330                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6331  0086  0876               	movf	I2C2_ISR@i2c_address+1,w
  6332  0087  00FA               	movwf	??_I2C2_ISR+1
  6333  0088  0875               	movf	I2C2_ISR@i2c_address,w
  6334  0089  00F9               	movwf	??_I2C2_ISR
  6335  008A  36FA               	lsrf	??_I2C2_ISR+1,f
  6336  008B  0CF9               	rrf	??_I2C2_ISR,f
  6337  008C  0879               	movf	??_I2C2_ISR,w
  6338  008D  0023               	movlb	3	; select bank3
  6339  008E  0096               	movwf	22	;volatile
  6340                           
  6341                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6342  008F  1C75               	btfss	I2C2_ISR@i2c_address,0
  6343  0090  2897               	goto	i1l1710
  6344                           
  6345                           ;i2c2.c: 325: {
  6346                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6347  0091  300B               	movlw	11
  6348  0092  00F9               	movwf	??_I2C2_ISR
  6349  0093  0879               	movf	??_I2C2_ISR,w
  6350  0094  0020               	movlb	0	; select bank0
  6351  0095  00CA               	movwf	_i2c2_state
  6352                           
  6353                           ;i2c2.c: 329: }
  6354  0096  0008               	return
  6355  0097                     i1l1710:	
  6356                           
  6357                           ;i2c2.c: 330: else
  6358                           ;i2c2.c: 331: {
  6359                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6360  0097  3003               	movlw	3
  6361  0098  00F9               	movwf	??_I2C2_ISR
  6362  0099  0879               	movf	??_I2C2_ISR,w
  6363  009A  0020               	movlb	0	; select bank0
  6364  009B  00CA               	movwf	_i2c2_state
  6365                           
  6366                           ;i2c2.c: 334: }
  6367                           ;i2c2.c: 335: }
  6368                           ;i2c2.c: 337: break;
  6369  009C  0008               	return
  6370  009D                     i1l320:	
  6371                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6372                           
  6373                           
  6374                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6375  009D  0023               	movlb	3	; select bank3
  6376  009E  1F1B               	btfss	27,6	;volatile
  6377  009F  28A9               	goto	i1l321
  6378                           
  6379                           ;i2c2.c: 342: {
  6380                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6381  00A0  3001               	movlw	1
  6382  00A1  00F9               	movwf	??_I2C2_ISR
  6383  00A2  0879               	movf	??_I2C2_ISR,w
  6384  00A3  0020               	movlb	0	; select bank0
  6385  00A4  07C6               	addwf	_i2c2_object+4,f
  6386                           
  6387                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6388  00A5  3004               	movlw	4
  6389  00A6  3184  244E         	fcall	_I2C2_Stop
  6390                           
  6391                           ;i2c2.c: 345: }
  6392  00A8  0008               	return
  6393  00A9                     i1l321:	
  6394                           
  6395                           ;i2c2.c: 346: else
  6396                           ;i2c2.c: 347: {
  6397                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6398  00A9  149B               	bsf	27,1	;volatile
  6399                           
  6400                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6401  00AA  0876               	movf	I2C2_ISR@i2c_address+1,w
  6402  00AB  00FA               	movwf	??_I2C2_ISR+1
  6403  00AC  0875               	movf	I2C2_ISR@i2c_address,w
  6404  00AD  00F9               	movwf	??_I2C2_ISR
  6405  00AE  087A               	movf	??_I2C2_ISR+1,w
  6406  00AF  00F9               	movwf	??_I2C2_ISR
  6407  00B0  01FA               	clrf	??_I2C2_ISR+1
  6408  00B1  3006               	movlw	6
  6409  00B2  0579               	andwf	??_I2C2_ISR,w
  6410  00B3  00FB               	movwf	??_I2C2_ISR+2
  6411  00B4  3000               	movlw	0
  6412  00B5  057A               	andwf	??_I2C2_ISR+1,w
  6413  00B6  00FC               	movwf	??_I2C2_ISR+3
  6414  00B7  30F0               	movlw	240
  6415  00B8  047B               	iorwf	??_I2C2_ISR+2,w
  6416  00B9  00F5               	movwf	I2C2_ISR@i2c_address
  6417  00BA  3000               	movlw	0
  6418  00BB  047C               	iorwf	??_I2C2_ISR+3,w
  6419  00BC  00F6               	movwf	I2C2_ISR@i2c_address+1
  6420                           
  6421                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6422  00BD  1475               	bsf	I2C2_ISR@i2c_address,0
  6423                           
  6424                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6425  00BE  0020               	movlb	0	; select bank0
  6426  00BF  01C9               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6427  00C0  0AC9               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6428                           
  6429                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6430  00C1  3002               	movlw	2
  6431  00C2  00F9               	movwf	??_I2C2_ISR
  6432  00C3  0879               	movf	??_I2C2_ISR,w
  6433  00C4  00CA               	movwf	_i2c2_state
  6434                           
  6435                           ;i2c2.c: 364: }
  6436                           ;i2c2.c: 366: break;
  6437  00C5  0008               	return
  6438  00C6                     i1l1724:	
  6439                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6440                           
  6441                           
  6442                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6443  00C6  0349               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6444  00C7  1903               	btfsc	3,2
  6445  00C8  28DA               	goto	i1l1744
  6446                           
  6447                           ;i2c2.c: 382: {
  6448                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6449  00C9  0874               	movf	_p_i2c2_trb_current,w
  6450  00CA  0086               	movwf	6
  6451  00CB  0187               	clrf	7
  6452  00CC  3F40               	moviw [0]fsr1
  6453  00CD  00F5               	movwf	I2C2_ISR@i2c_address
  6454  00CE  3F41               	moviw [1]fsr1
  6455  00CF  00F6               	movwf	I2C2_ISR@i2c_address+1
  6456                           
  6457                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6458  00D0  0874               	movf	_p_i2c2_trb_current,w
  6459  00D1  0086               	movwf	6
  6460  00D2  0187               	clrf	7
  6461  00D3  3F43               	moviw [3]fsr1
  6462  00D4  00F1               	movwf	I2C2_ISR@pi2c_buf_ptr
  6463                           
  6464                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6465  00D5  0874               	movf	_p_i2c2_trb_current,w
  6466  00D6  0086               	movwf	6
  6467  00D7  0187               	clrf	7
  6468  00D8  3F42               	moviw [2]fsr1
  6469  00D9  00F0               	movwf	I2C2_ISR@i2c_bytes_left
  6470  00DA                     i1l1744:	
  6471                           ;i2c2.c: 407: }
  6472                           ;i2c2.c: 408: }
  6473                           
  6474                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6475                           
  6476                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6477                           
  6478                           ;i2c2.c: 400: else
  6479                           ;i2c2.c: 401: {
  6480                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6481                           
  6482                           ;i2c2.c: 399: }
  6483                           
  6484                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6485                           
  6486                           ;i2c2.c: 393: {
  6487                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6488                           
  6489                           ;i2c2.c: 391: {
  6490                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6491                           
  6492                           ;i2c2.c: 387: }
  6493                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6494                           
  6495                           
  6496                           ;i2c2.c: 409: else
  6497                           ;i2c2.c: 410: {
  6498                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6499  00DA  0875               	movf	I2C2_ISR@i2c_address,w
  6500  00DB  0023               	movlb	3	; select bank3
  6501  00DC  0096               	movwf	22	;volatile
  6502                           
  6503                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6504  00DD  1C75               	btfss	I2C2_ISR@i2c_address,0
  6505  00DE  28E5               	goto	i1l1750
  6506                           
  6507                           ;i2c2.c: 414: {
  6508                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6509  00DF  3005               	movlw	5
  6510  00E0  00F9               	movwf	??_I2C2_ISR
  6511  00E1  0879               	movf	??_I2C2_ISR,w
  6512  00E2  0020               	movlb	0	; select bank0
  6513  00E3  00CA               	movwf	_i2c2_state
  6514                           
  6515                           ;i2c2.c: 417: }
  6516  00E4  0008               	return
  6517  00E5                     i1l1750:	
  6518                           
  6519                           ;i2c2.c: 418: else
  6520                           ;i2c2.c: 419: {
  6521                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6522  00E5  3003               	movlw	3
  6523  00E6  00F9               	movwf	??_I2C2_ISR
  6524  00E7  0879               	movf	??_I2C2_ISR,w
  6525  00E8  0020               	movlb	0	; select bank0
  6526  00E9  00CA               	movwf	_i2c2_state
  6527                           
  6528                           ;i2c2.c: 422: }
  6529                           ;i2c2.c: 423: }
  6530                           ;i2c2.c: 424: break;
  6531  00EA  0008               	return
  6532  00EB                     i1l331:	
  6533                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6534                           
  6535                           
  6536                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6537  00EB  0023               	movlb	3	; select bank3
  6538  00EC  1F1B               	btfss	27,6	;volatile
  6539  00ED  28F9               	goto	i1l1758
  6540                           
  6541                           ;i2c2.c: 430: {
  6542                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6543  00EE  3001               	movlw	1
  6544  00EF  00F9               	movwf	??_I2C2_ISR
  6545  00F0  0879               	movf	??_I2C2_ISR,w
  6546  00F1  0020               	movlb	0	; select bank0
  6547  00F2  07C6               	addwf	_i2c2_object+4,f
  6548                           
  6549                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6550  00F3  0023               	movlb	3	; select bank3
  6551  00F4  131B               	bcf	27,6	;volatile
  6552                           
  6553                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6554  00F5  3005               	movlw	5
  6555  00F6  3184  244E         	fcall	_I2C2_Stop
  6556                           
  6557                           ;i2c2.c: 440: }
  6558  00F8  0008               	return
  6559  00F9                     i1l1758:	
  6560                           
  6561                           ;i2c2.c: 441: else
  6562                           ;i2c2.c: 442: {
  6563                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6564  00F9  3001               	movlw	1
  6565  00FA  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6566  00FB  0A70               	incf	I2C2_ISR@i2c_bytes_left,w
  6567  00FC  1D03               	btfss	3,2
  6568  00FD  2912               	goto	i1l1766
  6569                           
  6570                           ;i2c2.c: 445: {
  6571                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6572  00FE  3004               	movlw	4
  6573  00FF  00F9               	movwf	??_I2C2_ISR
  6574  0100  0879               	movf	??_I2C2_ISR,w
  6575  0101  07F4               	addwf	_p_i2c2_trb_current,f
  6576                           
  6577                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6578  0102  3001               	movlw	1
  6579  0103  02F2               	subwf	_i2c2_trb_count,f
  6580  0104  1D03               	btfss	3,2
  6581  0105  290A               	goto	i1l335
  6582                           
  6583                           ;i2c2.c: 453: {
  6584                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6585  0106  3000               	movlw	0
  6586  0107  3184  244E         	fcall	_I2C2_Stop
  6587                           
  6588                           ;i2c2.c: 455: }
  6589  0109  0008               	return
  6590  010A                     i1l335:	
  6591                           
  6592                           ;i2c2.c: 456: else
  6593                           ;i2c2.c: 457: {
  6594                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6595  010A  0023               	movlb	3	; select bank3
  6596  010B  149B               	bsf	27,1	;volatile
  6597                           
  6598                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6599  010C  3002               	movlw	2
  6600  010D  00F9               	movwf	??_I2C2_ISR
  6601  010E  0879               	movf	??_I2C2_ISR,w
  6602  010F  0020               	movlb	0	; select bank0
  6603  0110  00CA               	movwf	_i2c2_state
  6604                           
  6605                           ;i2c2.c: 469: }
  6606                           ;i2c2.c: 470: }
  6607  0111  0008               	return
  6608  0112                     i1l1766:	
  6609                           
  6610                           ;i2c2.c: 471: else
  6611                           ;i2c2.c: 472: {
  6612                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6613  0112  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6614  0113  0086               	movwf	6
  6615  0114  0187               	clrf	7
  6616  0115  0801               	movf	1,w
  6617  0116  0023               	movlb	3	; select bank3
  6618  0117  0096               	movwf	22	;volatile
  6619  0118  3001               	movlw	1
  6620  0119  00F9               	movwf	??_I2C2_ISR
  6621  011A  0879               	movf	??_I2C2_ISR,w
  6622  011B  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6623                           
  6624                           ;i2c2.c: 475: }
  6625                           ;i2c2.c: 476: }
  6626                           ;i2c2.c: 477: break;
  6627  011C  0008               	return
  6628  011D                     i1l338:	
  6629                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6630                           
  6631                           
  6632                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6633  011D  0023               	movlb	3	; select bank3
  6634  011E  1F1B               	btfss	27,6	;volatile
  6635  011F  292B               	goto	i1l339
  6636                           
  6637                           ;i2c2.c: 483: {
  6638                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6639  0120  3001               	movlw	1
  6640  0121  00F9               	movwf	??_I2C2_ISR
  6641  0122  0879               	movf	??_I2C2_ISR,w
  6642  0123  0020               	movlb	0	; select bank0
  6643  0124  07C6               	addwf	_i2c2_object+4,f
  6644                           
  6645                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6646  0125  3004               	movlw	4
  6647  0126  3184  244E         	fcall	_I2C2_Stop
  6648                           
  6649                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6650  0128  0023               	movlb	3	; select bank3
  6651  0129  131B               	bcf	27,6	;volatile
  6652                           
  6653                           ;i2c2.c: 493: }
  6654  012A  0008               	return
  6655  012B                     i1l339:	
  6656                           
  6657                           ;i2c2.c: 494: else
  6658                           ;i2c2.c: 495: {
  6659                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6660  012B  159B               	bsf	27,3	;volatile
  6661                           
  6662                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6663  012C  3008               	movlw	8
  6664  012D  00F9               	movwf	??_I2C2_ISR
  6665  012E  0879               	movf	??_I2C2_ISR,w
  6666  012F  0020               	movlb	0	; select bank0
  6667  0130  00CA               	movwf	_i2c2_state
  6668                           
  6669                           ;i2c2.c: 498: }
  6670                           ;i2c2.c: 499: break;
  6671  0131  0008               	return
  6672  0132                     i1l1778:	
  6673                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6674                           
  6675                           
  6676                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6677  0132  3008               	movlw	8
  6678  0133  00F9               	movwf	??_I2C2_ISR
  6679  0134  0879               	movf	??_I2C2_ISR,w
  6680  0135  00CA               	movwf	_i2c2_state
  6681                           
  6682                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6683  0136  0023               	movlb	3	; select bank3
  6684  0137  159B               	bsf	27,3	;volatile
  6685                           
  6686                           ;i2c2.c: 511: break;
  6687  0138  0008               	return
  6688  0139                     i1l1782:	
  6689                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6690                           
  6691                           
  6692                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6693  0139  0023               	movlb	3	; select bank3
  6694  013A  0816               	movf	22,w	;volatile
  6695  013B  00F9               	movwf	??_I2C2_ISR
  6696  013C  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6697  013D  0086               	movwf	6
  6698  013E  0187               	clrf	7
  6699  013F  0879               	movf	??_I2C2_ISR,w
  6700  0140  0081               	movwf	1
  6701  0141  3001               	movlw	1
  6702  0142  00F9               	movwf	??_I2C2_ISR
  6703  0143  0879               	movf	??_I2C2_ISR,w
  6704  0144  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6705                           
  6706                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6707  0145  3001               	movlw	1
  6708  0146  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6709  0147  1903               	btfsc	3,2
  6710  0148  2950               	goto	i1l343
  6711                           
  6712                           ;i2c2.c: 520: {
  6713                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6714  0149  129B               	bcf	27,5	;volatile
  6715                           
  6716                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6717  014A  3006               	movlw	6
  6718  014B  00F9               	movwf	??_I2C2_ISR
  6719  014C  0879               	movf	??_I2C2_ISR,w
  6720  014D  0020               	movlb	0	; select bank0
  6721  014E  00CA               	movwf	_i2c2_state
  6722                           
  6723                           ;i2c2.c: 530: }
  6724  014F  2953               	goto	i1l1794
  6725  0150                     i1l343:	
  6726                           
  6727                           ;i2c2.c: 531: else
  6728                           ;i2c2.c: 532: {
  6729                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6730  0150  169B               	bsf	27,5	;volatile
  6731                           
  6732                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6733  0151  3184  2478         	fcall	_I2C2_FunctionComplete
  6734  0153                     i1l1794:	
  6735                           
  6736                           ;i2c2.c: 539: }
  6737                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6738  0153  0023               	movlb	3	; select bank3
  6739  0154  161B               	bsf	27,4	;volatile
  6740                           
  6741                           ;i2c2.c: 543: break;
  6742  0155  0008               	return
  6743  0156                     i1l1796:	
  6744                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6745                           
  6746                           
  6747                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6748                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6749  0156  3000               	movlw	0
  6750  0157  3184  244E         	fcall	_I2C2_Stop
  6751                           
  6752                           ;i2c2.c: 550: break;
  6753  0159  0008               	return
  6754  015A                     i1l1798:	
  6755                           ;i2c2.c: 552: default:
  6756                           
  6757                           
  6758                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6759  015A  3001               	movlw	1
  6760  015B  00F9               	movwf	??_I2C2_ISR
  6761  015C  0879               	movf	??_I2C2_ISR,w
  6762  015D  0020               	movlb	0	; select bank0
  6763  015E  07C6               	addwf	_i2c2_object+4,f
  6764                           
  6765                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6766  015F  3006               	movlw	6
  6767  0160  3184  244E         	fcall	_I2C2_Stop
  6768                           
  6769                           ;i2c2.c: 560: }
  6770                           
  6771                           ;i2c2.c: 558: break;
  6772  0162  0008               	return
  6773  0163                     i1l1804:	
  6774  0163  0020               	movlb	0	; select bank0
  6775  0164  084A               	movf	_i2c2_state,w
  6776                           
  6777                           ; Switch size 1, requested type "space"
  6778                           ; Number of cases is 11, Range of values is 0 to 11
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; direct_byte           30     6 (fixed)
  6782                           ; simple_byte           34    18 (average)
  6783                           ; jumptable            260     6 (fixed)
  6784                           ;	Chosen strategy is direct_byte
  6785  0165  0084               	movwf	4
  6786  0166  300C               	movlw	12
  6787  0167  0204               	subwf	4,w
  6788  0168  1803               	skipnc
  6789  0169  295A               	goto	i1l1798
  6790  016A  3184               	movlp	high i1S2088
  6791  016B  3504               	lslf	4,w
  6792  016C  3E36               	addlw	low i1S2088
  6793  016D  0082               	movwf	2
  6794  016E  0008               	return
  6795  016F                     __end_of_I2C2_ISR:	
  6796                           
  6797                           	psect	swtext1
  6798  0436                     __pswtext1:	
  6799  0436                     i1S2088:	
  6800  0436  3180  2847         	ljmp	i1l309
  6801  0438  3180  2872         	ljmp	i1l314
  6802  043A  3180  28C6         	ljmp	i1l1724
  6803  043C  3180  28EB         	ljmp	i1l331
  6804  043E  3181  2956         	ljmp	i1l1796
  6805  0440  3181  291D         	ljmp	i1l338
  6806  0442  3181  2932         	ljmp	i1l1778
  6807  0444  3181  2956         	ljmp	i1l1796
  6808  0446  3181  2939         	ljmp	i1l1782
  6809  0448  3181  295A         	ljmp	i1l1798
  6810  044A  3180  287A         	ljmp	i1l315
  6811  044C  3180  289D         	ljmp	i1l320
  6812                           
  6813                           	psect	text21
  6814  044E                     __ptext21:	
  6815 ;; *************** function _I2C2_Stop *****************
  6816 ;; Defined at:
  6817 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  completion_c    1    wreg     enum E13560
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  completion_c    1    1[COMMON] enum E13560
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_I2C2_ISR
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function _I2C2_Stop
  6846  044E                     _I2C2_Stop:	
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6850                           ;I2C2_Stop@completion_code stored from wreg
  6851  044E  00F8               	movwf	I2C2_Stop@completion_code
  6852                           
  6853                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6854  044F  0023               	movlb	3	; select bank3
  6855  0450  151B               	bsf	27,2	;volatile
  6856                           
  6857                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6858  0451  0873               	movf	_p_i2c2_current,w
  6859  0452  3E02               	addlw	2
  6860  0453  0086               	movwf	6
  6861  0454  0187               	clrf	7
  6862  0455  0801               	movf	1,w
  6863  0456  1903               	btfsc	3,2
  6864  0457  2C63               	goto	i1l1540
  6865                           
  6866                           ;i2c2.c: 588: {
  6867                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  6868  0458  0878               	movf	I2C2_Stop@completion_code,w
  6869  0459  00F7               	movwf	??_I2C2_Stop
  6870  045A  0873               	movf	_p_i2c2_current,w
  6871  045B  3E02               	addlw	2
  6872  045C  0086               	movwf	6
  6873  045D  0187               	clrf	7
  6874  045E  0801               	movf	1,w
  6875  045F  0086               	movwf	6
  6876  0460  0187               	clrf	7
  6877  0461  0877               	movf	??_I2C2_Stop,w
  6878  0462  0081               	movwf	1
  6879  0463                     i1l1540:	
  6880                           
  6881                           ;i2c2.c: 591: }
  6882                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  6883  0463  0020               	movlb	0	; select bank0
  6884  0464  01CA               	clrf	_i2c2_state
  6885  0465  0008               	return
  6886  0466                     __end_of_I2C2_Stop:	
  6887                           
  6888                           	psect	text22
  6889  0478                     __ptext22:	
  6890 ;; *************** function _I2C2_FunctionComplete *****************
  6891 ;; Defined at:
  6892 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;Total ram usage:        1 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_I2C2_ISR
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _I2C2_FunctionComplete
  6921  0478                     _I2C2_FunctionComplete:	
  6922                           
  6923                           ;i2c2.c: 567: p_i2c2_trb_current++;
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  6927  0478  3004               	movlw	4
  6928  0479  00F7               	movwf	??_I2C2_FunctionComplete
  6929  047A  0877               	movf	??_I2C2_FunctionComplete,w
  6930  047B  07F4               	addwf	_p_i2c2_trb_current,f
  6931                           
  6932                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  6933  047C  3001               	movlw	1
  6934  047D  02F2               	subwf	_i2c2_trb_count,f
  6935  047E  1D03               	btfss	3,2
  6936  047F  2C86               	goto	i1l350
  6937                           
  6938                           ;i2c2.c: 571: {
  6939                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  6940  0480  3004               	movlw	4
  6941  0481  00F7               	movwf	??_I2C2_FunctionComplete
  6942  0482  0877               	movf	??_I2C2_FunctionComplete,w
  6943  0483  0020               	movlb	0	; select bank0
  6944  0484  00CA               	movwf	_i2c2_state
  6945                           
  6946                           ;i2c2.c: 573: }
  6947  0485  0008               	return
  6948  0486                     i1l350:	
  6949                           
  6950                           ;i2c2.c: 574: else
  6951                           ;i2c2.c: 575: {
  6952                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  6953  0486  0020               	movlb	0	; select bank0
  6954  0487  01CA               	clrf	_i2c2_state
  6955  0488  0ACA               	incf	_i2c2_state,f
  6956  0489  0008               	return
  6957  048A                     __end_of_I2C2_FunctionComplete:	
  6958                           
  6959                           	psect	text23
  6960  04E4                     __ptext23:	
  6961 ;; *************** function _I2C2_BusCollisionISR *****************
  6962 ;; Defined at:
  6963 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;		None
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		None
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;Total ram usage:        0 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_INTERRUPT_InterruptManager
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           
  6991                           ;psect for function _I2C2_BusCollisionISR
  6992  04E4                     _I2C2_BusCollisionISR:	
  6993                           
  6994                           ;incstack = 0
  6995                           ; Regs used in _I2C2_BusCollisionISR: []
  6996  04E4  0008               	return
  6997  04E5                     __end_of_I2C2_BusCollisionISR:	
  6998  007E                     btemp	set	126	;btemp
  6999  007E                     int$flags	set	126
  7000  007E                     wtemp	set	126
  7001  007E                     wtemp0	set	126
  7002  0080                     wtemp1	set	128
  7003  0082                     wtemp2	set	130
  7004  0084                     wtemp3	set	132
  7005  0086                     wtemp4	set	134
  7006  0088                     wtemp5	set	136
  7007  007F                     wtemp6	set	127
  7008  007E                     ttemp	set	126
  7009  007E                     ttemp0	set	126
  7010  0081                     ttemp1	set	129
  7011  0084                     ttemp2	set	132
  7012  0087                     ttemp3	set	135
  7013  007F                     ttemp4	set	127
  7014  007E                     ltemp	set	126
  7015  007E                     ltemp0	set	126
  7016  0082                     ltemp1	set	130
  7017  0086                     ltemp2	set	134
  7018  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     34      62
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C2_ISR@i2c_address(COMMON[2]), NULL(NULL[0]), main@templo(BANK0[1]), main@temp(BANK0[1]), 
		 -> EMC1001_Read@reg(BANK0[1]), 

    S475$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), EMC1001_Read@trb(BANK0[8]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    S633$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S633$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S644$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S644$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3958
                                             30 BANK0      4     4      0
                       _EMC1001_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1356
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      65
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (3) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_Start
   _TMR6_HasOverflowOccured
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 18:33:26 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 04C4  
    __end_of_TMR6_HasOverflowOccured 04B6                  ___wmul@multiplicand 0022  
     I2C2_MasterReadTRBBuild@address 0022                                  l224 022C  
                                l426 0226                                  l508 040B  
                                _GIE 005F                         __CFG_CPD$OFF 0000  
                                _PR6 0299                    EMC1001_Read@pData 0027  
                                u905 0397                                  u835 0364  
                                u925 03A6                                  u855 036E  
                                u935 03AD                                  u865 0378  
                                u970 0356                                  u875 0380  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_LVP$OFF 0000  
                       __CFG_ZCD$OFF 0000                     __end_of_I2C2_ISR 016F  
                               l2002 01BF                                 l2030 0405  
                               l2014 01E4                                 l2024 01F1  
                               l2008 01C5                                 l2018 01EC  
                               l2026 0174                                 l2052 023D  
                               l1522 0303                                 l2066 0270  
                               l1532 0316                                 l1526 030A  
                               l1614 034C                                 l1528 030F  
                               l1564 037F                                 l1556 0361  
                               l1580 0394                                 l1558 036D  
                               l1582 03A0                                 l1590 03B5  
                               l1568 0388                                 l1586 03AC  
                               l1974 04B3                                 l1992 01A9  
                               l1986 0190                                 STR_1 0476  
                               STR_2 0470                                 u1420 02D4  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u1615 0261  
                               u1545 040C                                 u1555 0411  
                               u1580 023B                                 u1485 01DA  
                               _T6PR 0299                                 _TMR6 0298  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0227                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0020  
                               ttemp 007E                                 wtemp 007E  
                 EMC1001_Read@status 002B                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         _EMC1001_Read 031C  
                         _i2c2_state 004A                        ?_EUSART_Write 0077  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 04D5  
            _I2C2_MasterReadTRBBuild 03BA                                ?_main 0077  
                      __CFG_WDTE$OFF 0000                    __end_of_I2C2_Stop 0466  
                              _T6CON 029A                      __end_of___lwdiv 038D  
                              _T6HLT 029B       __size_of_I2C2_FunctionComplete 0012  
                              i1l320 009D                                i1l321 00A9  
                              i1l314 0072                                i1l331 00EB  
                              i1l315 007A                                i1l309 0047  
                              i1l245 0013                                i1l350 0486  
                              i1l343 0150                                i1l335 010A  
                              i1l249 001B                      __end_of___lwmod 03BA  
                              i1l338 011D                                i1l339 012B  
                              _T6TMR 0298                                _T6RST 029D  
      __end_of_I2C2_FunctionComplete 048A                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      __end_of_dpowers 0470  
                              _putch 04DB                          ?_TMR6_Start 0077  
       I2C2_MasterReadTRBBuild@pdata 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 0290               ??_I2C2_MasterTRBInsert 0022  
                     ??_EUSART_Write 0020          ?_INTERRUPT_InterruptManager 0077  
   __end_of_I2C2_MasterWriteTRBBuild 0402                               ??_main 003E  
                        _i2c2_object 0042                      _TMR6_Initialize 0499  
                             i1S2088 0436                               _ANSELA 0F38  
                             ?_putch 0077                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC1REG 0119  
                             _RC0PPS 0F20                               _RC1STA 011D  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
       __end_of_I2C2_BusCollisionISR 04E5                               _ODCONA 0F3A  
                             _ODCONB 0F45                               _RC6PPS 0F26  
                             _ODCONC 0F50                               i1l1540 0463  
                             i1l1710 0097                               i1l1704 0086  
                             i1l1724 00C6                               i1l1804 0163  
                             i1l1750 00E5                               i1l1744 00DA  
                             i1l1692 0065                               i1l1782 0139  
                             i1l1766 0112                               i1l1758 00F9  
                             i1l1794 0153                               i1l1778 0132  
                             i1l1796 0156                               i1l1798 015A  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
   __size_of_TMR6_HasOverflowOccured 000E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0402                       _p_i2c2_current 0073  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0077                  __size_of_TMR6_Start 0003  
           I2C2_Stop@completion_code 0078                               _printf 016F  
      I2C2_MasterReadTRBBuild@length 0021                    _SYSTEM_Initialize 048A  
            __end_of__initialization 0030                   ?_SYSTEM_Initialize 0077  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 004B  
                     __pcstackCOMMON 0077                  ??_SYSTEM_Initialize 0021  
                     _i2c2_trb_count 0072                        __end_of_putch 04E1  
                         ??_I2C2_ISR 0079              __end_of_TMR6_Initialize 04A8  
           _I2C2_MasterWriteTRBBuild 03E2         I2C2_MasterWriteTRBBuild@ptrb 0026  
          __end_of_SYSTEM_Initialize 0499                              ??_putch 0021  
                         __pbssBANK0 0042                 __end_of_EUSART_Write 04CC  
                         __pmaintext 0227                              ?___wmul 0020  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                     _SSP2DATPPSbits 0EC9                 _I2C2_BusCollisionISR 04E4  
                            ?_printf 002E                              _SP1BRGH 011C  
                            _SP1BRGL 011B    I2C2_ISR@i2c_10bit_address_restart 0049  
                            _OSCCON1 088D                              _OSCCON3 088F  
                          _I2C2_Stop 044E                       _SSP2CLKPPSbits 0EC8  
                            _OSCTUNE 0892                              _SSP2ADD 0197  
                            _PPSLOCK 0E8F                              _SSP2BUF 0196  
                       ??_TMR6_Start 0020                      _I2C2_Initialize 041E  
            _TMR6_HasOverflowOccured 04A8               I2C2_MasterRead@trBlock 0053  
                       _T6AINPPSbits 0E9E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 0358  
                            ___lwmod 038D                ?_I2C2_BusCollisionISR 0077  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 04E4  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 016F  
                            __ptext2 04DB                              __ptext3 04C2  
                            __ptext4 038D                              __ptext5 0358  
                            __ptext6 0402                              __ptext7 04A8  
                            __ptext8 048A                              __ptext9 0499  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 00B8  
                            _dpowers 0466                _OSCILLATOR_Initialize 04CC  
           ??_PIN_MANAGER_Initialize 0020                           ?_I2C2_Stop 0077  
              _I2C2_FunctionComplete 0478                            _T6CONbits 029A  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 000F  
                            clrloop0 04D6                 end_of_initialization 0030  
                          _T6RSTbits 029D                    _EUSART_Initialize 04B6  
                 ?_EUSART_Initialize 0077                   _p_i2c2_trb_current 0074  
                            printf@c 003D                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0070                         __pstringtext 0466  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0020                    __size_of_I2C2_ISR 013B  
            __end_of_I2C2_Initialize 0436        TMR6_HasOverflowOccured@status 0020  
              __size_of_EUSART_Write 000A            ??_TMR6_HasOverflowOccured 0020  
                   __CFG_FEXTOSC$OFF 0000            __end_of_EUSART_Initialize 04C2  
                         main@templo 0041               ??_I2C2_BusCollisionISR 0077  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 041E  
                       _EUSART_Write 04C2               ?_OSCILLATOR_Initialize 0077  
                     __end_of_printf 0227               ?_I2C2_FunctionComplete 0077  
                start_initialization 0022                          ??_I2C2_Stop 0077  
    __size_of_PIN_MANAGER_Initialize 0046                          putch@txData 0021  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0071                             ??_printf 0034  
                        __pbssCOMMON 0070                     ?_I2C2_Initialize 0077  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 005B           __size_of_EUSART_Initialize 000C  
              _TMR6_InterruptHandler 0047                     ___lwdiv@dividend 0022  
             _PIN_MANAGER_Initialize 0290                       ??_EMC1001_Read 0028  
                           ?___lwdiv 0020                             ?___lwmod 0028  
                           _I2C2_ISR 0034         ??_INTERRUPT_InterruptManager 007D  
                          __pswtext1 0436                             _BAUD1CON 011F  
                   ___lwdiv@quotient 0025                 __CFG_RSTOSC$HFINTPLL 0000  
                     __size_of_putch 0006                             _T6CLKCON 029C  
    __end_of_I2C2_MasterReadTRBBuild 03E2                       ___wmul@product 0024  
                           _LATAbits 0016                            clear_ram0 04D5  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 001C  
                           _PIR3bits 070F                             _PIR4bits 0710  
                           _SSP2CON1 019A                             _SSP2CON3 019C  
                           _SSP2STAT 0199        I2C2_MasterTRBInsert@ptrb_list 0020  
                  ___wmul@multiplier 0020                           printf@flag 0039  
                         printf@prec 003A             __size_of_TMR6_Initialize 000F  
       __end_of_I2C2_MasterTRBInsert 031C       I2C2_MasterWriteTRBBuild@length 0021  
            ??_OSCILLATOR_Initialize 0020                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D              ??_I2C2_FunctionComplete 0077  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 04E1                             __ptext11 0290  
                           __ptext20 0034                             __ptext12 04CC  
                           __ptext21 044E                             __ptext13 041E  
                           __ptext22 0478                             __ptext14 04B6  
                           __ptext23 04E4                             __ptext15 031C  
                           __ptext16 03E2                             __ptext17 02D6  
                           __ptext18 03BA                 __end_of_EMC1001_Read 0358  
                       _SSP2CON1bits 019A                         _SSP2CON2bits 019B  
                      __size_of_main 0069                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                          printf@val 003B              I2C2_MasterWrite@trBlock 0057  
                           main@temp 0040        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
           ?_TMR6_HasOverflowOccured 0077                           _INTCONbits 000B  
  __size_of_I2C2_MasterWriteTRBBuild 0020            ?_I2C2_MasterWriteTRBBuild 0020  
                           intlevel1 0000                     ___lwmod@dividend 002A  
                I2C2_ISR@i2c_address 0075              ?_PIN_MANAGER_Initialize 0077  
                  ??_TMR6_Initialize 0020                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                             printf@ap 0038  
               _I2C2_MasterTRBInsert 02D6                      ___lwmod@divisor 0028  
                    ___lwmod@counter 002D                           _TMR6_Start 04E1  
                 EUSART_Write@txData 0020       __end_of_PIN_MANAGER_Initialize 02D6  
           __size_of_I2C2_Initialize 0018                   __size_of_I2C2_Stop 0018  
