

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 19:11:17 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext1,local,class=CONST,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0008                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000D                     	;# 
    50  000E                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  001C                     	;# 
    59  001C                     	;# 
    60  001D                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  008E                     	;# 
    69  008F                     	;# 
    70  0090                     	;# 
    71  0090                     	;# 
    72  0091                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  010E                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  0110                     	;# 
    91  0110                     	;# 
    92  0111                     	;# 
    93  0112                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  0119                     	;# 
   103  0119                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011A                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011B                     	;# 
   110  011B                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011C                     	;# 
   114  011C                     	;# 
   115  011C                     	;# 
   116  011D                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  011E                     	;# 
   121  011E                     	;# 
   122  011F                     	;# 
   123  011F                     	;# 
   124  011F                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  018E                     	;# 
   130  018F                     	;# 
   131  0190                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0198                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  020C                     	;# 
   142  020D                     	;# 
   143  020E                     	;# 
   144  020F                     	;# 
   145  020F                     	;# 
   146  0210                     	;# 
   147  0210                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0218                     	;# 
   160  0219                     	;# 
   161  021A                     	;# 
   162  021B                     	;# 
   163  021B                     	;# 
   164  021C                     	;# 
   165  021C                     	;# 
   166  021D                     	;# 
   167  021D                     	;# 
   168  021E                     	;# 
   169  021F                     	;# 
   170  028C                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028D                     	;# 
   174  028E                     	;# 
   175  028F                     	;# 
   176  0290                     	;# 
   177  0290                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0296                     	;# 
   187  0297                     	;# 
   188  0298                     	;# 
   189  0298                     	;# 
   190  0299                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029B                     	;# 
   194  029C                     	;# 
   195  029C                     	;# 
   196  029D                     	;# 
   197  030C                     	;# 
   198  030C                     	;# 
   199  030D                     	;# 
   200  030E                     	;# 
   201  030F                     	;# 
   202  0310                     	;# 
   203  0310                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0314                     	;# 
   208  0314                     	;# 
   209  0315                     	;# 
   210  0316                     	;# 
   211  0317                     	;# 
   212  0318                     	;# 
   213  0318                     	;# 
   214  0319                     	;# 
   215  031A                     	;# 
   216  031B                     	;# 
   217  031C                     	;# 
   218  031C                     	;# 
   219  031D                     	;# 
   220  031E                     	;# 
   221  031F                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0390                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  040C                     	;# 
   229  040D                     	;# 
   230  040E                     	;# 
   231  040F                     	;# 
   232  0410                     	;# 
   233  0411                     	;# 
   234  0416                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  0418                     	;# 
   238  0418                     	;# 
   239  0419                     	;# 
   240  041A                     	;# 
   241  041A                     	;# 
   242  041B                     	;# 
   243  041C                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  041F                     	;# 
   248  048C                     	;# 
   249  048C                     	;# 
   250  048D                     	;# 
   251  048E                     	;# 
   252  048F                     	;# 
   253  048F                     	;# 
   254  0490                     	;# 
   255  0491                     	;# 
   256  0492                     	;# 
   257  0492                     	;# 
   258  0493                     	;# 
   259  0494                     	;# 
   260  0495                     	;# 
   261  0495                     	;# 
   262  0496                     	;# 
   263  0497                     	;# 
   264  0498                     	;# 
   265  0499                     	;# 
   266  049A                     	;# 
   267  049B                     	;# 
   268  049C                     	;# 
   269  049D                     	;# 
   270  050C                     	;# 
   271  050C                     	;# 
   272  050D                     	;# 
   273  050E                     	;# 
   274  050F                     	;# 
   275  050F                     	;# 
   276  0510                     	;# 
   277  0511                     	;# 
   278  0512                     	;# 
   279  0512                     	;# 
   280  0513                     	;# 
   281  0514                     	;# 
   282  0515                     	;# 
   283  0515                     	;# 
   284  0516                     	;# 
   285  0517                     	;# 
   286  0518                     	;# 
   287  0519                     	;# 
   288  051A                     	;# 
   289  051B                     	;# 
   290  051C                     	;# 
   291  051D                     	;# 
   292  058C                     	;# 
   293  058C                     	;# 
   294  058D                     	;# 
   295  058E                     	;# 
   296  058F                     	;# 
   297  058F                     	;# 
   298  0590                     	;# 
   299  0591                     	;# 
   300  0592                     	;# 
   301  0593                     	;# 
   302  060C                     	;# 
   303  060D                     	;# 
   304  060E                     	;# 
   305  060F                     	;# 
   306  0610                     	;# 
   307  0611                     	;# 
   308  0612                     	;# 
   309  0613                     	;# 
   310  0614                     	;# 
   311  0616                     	;# 
   312  0617                     	;# 
   313  0618                     	;# 
   314  0619                     	;# 
   315  061A                     	;# 
   316  061B                     	;# 
   317  061C                     	;# 
   318  061D                     	;# 
   319  061E                     	;# 
   320  068C                     	;# 
   321  068D                     	;# 
   322  068E                     	;# 
   323  068F                     	;# 
   324  0690                     	;# 
   325  0691                     	;# 
   326  0692                     	;# 
   327  0693                     	;# 
   328  0694                     	;# 
   329  070C                     	;# 
   330  070D                     	;# 
   331  070E                     	;# 
   332  070F                     	;# 
   333  0710                     	;# 
   334  0711                     	;# 
   335  0712                     	;# 
   336  0713                     	;# 
   337  0714                     	;# 
   338  0716                     	;# 
   339  0717                     	;# 
   340  0718                     	;# 
   341  0719                     	;# 
   342  071A                     	;# 
   343  071B                     	;# 
   344  071C                     	;# 
   345  071D                     	;# 
   346  071E                     	;# 
   347  0796                     	;# 
   348  0797                     	;# 
   349  0798                     	;# 
   350  0799                     	;# 
   351  079A                     	;# 
   352  079B                     	;# 
   353  080C                     	;# 
   354  080D                     	;# 
   355  080E                     	;# 
   356  080F                     	;# 
   357  0810                     	;# 
   358  0811                     	;# 
   359  0812                     	;# 
   360  0813                     	;# 
   361  0814                     	;# 
   362  081A                     	;# 
   363  081B                     	;# 
   364  081C                     	;# 
   365  081D                     	;# 
   366  081E                     	;# 
   367  081F                     	;# 
   368  088C                     	;# 
   369  088D                     	;# 
   370  088E                     	;# 
   371  088F                     	;# 
   372  0890                     	;# 
   373  0891                     	;# 
   374  0892                     	;# 
   375  0893                     	;# 
   376  0895                     	;# 
   377  0896                     	;# 
   378  0897                     	;# 
   379  0898                     	;# 
   380  0899                     	;# 
   381  089A                     	;# 
   382  089B                     	;# 
   383  090C                     	;# 
   384  090E                     	;# 
   385  090F                     	;# 
   386  091F                     	;# 
   387  091F                     	;# 
   388  098F                     	;# 
   389  098F                     	;# 
   390  0990                     	;# 
   391  0991                     	;# 
   392  0992                     	;# 
   393  0993                     	;# 
   394  0994                     	;# 
   395  0995                     	;# 
   396  0996                     	;# 
   397  0997                     	;# 
   398  0E0F                     	;# 
   399  0E10                     	;# 
   400  0E11                     	;# 
   401  0E12                     	;# 
   402  0E13                     	;# 
   403  0E14                     	;# 
   404  0E15                     	;# 
   405  0E16                     	;# 
   406  0E17                     	;# 
   407  0E18                     	;# 
   408  0E19                     	;# 
   409  0E1A                     	;# 
   410  0E1B                     	;# 
   411  0E1C                     	;# 
   412  0E1D                     	;# 
   413  0E1E                     	;# 
   414  0E1F                     	;# 
   415  0E20                     	;# 
   416  0E21                     	;# 
   417  0E22                     	;# 
   418  0E23                     	;# 
   419  0E24                     	;# 
   420  0E25                     	;# 
   421  0E26                     	;# 
   422  0E27                     	;# 
   423  0E28                     	;# 
   424  0E29                     	;# 
   425  0E2A                     	;# 
   426  0E2B                     	;# 
   427  0E2C                     	;# 
   428  0E2D                     	;# 
   429  0E2E                     	;# 
   430  0E2F                     	;# 
   431  0E30                     	;# 
   432  0E31                     	;# 
   433  0E32                     	;# 
   434  0E33                     	;# 
   435  0E34                     	;# 
   436  0E35                     	;# 
   437  0E36                     	;# 
   438  0E37                     	;# 
   439  0E8F                     	;# 
   440  0E90                     	;# 
   441  0E91                     	;# 
   442  0E92                     	;# 
   443  0E93                     	;# 
   444  0E94                     	;# 
   445  0E95                     	;# 
   446  0E96                     	;# 
   447  0E97                     	;# 
   448  0E9C                     	;# 
   449  0E9D                     	;# 
   450  0E9E                     	;# 
   451  0EA1                     	;# 
   452  0EA2                     	;# 
   453  0EA3                     	;# 
   454  0EA4                     	;# 
   455  0EA5                     	;# 
   456  0EA9                     	;# 
   457  0EAA                     	;# 
   458  0EAB                     	;# 
   459  0EAC                     	;# 
   460  0EB1                     	;# 
   461  0EB2                     	;# 
   462  0EB3                     	;# 
   463  0EB8                     	;# 
   464  0EB9                     	;# 
   465  0EBA                     	;# 
   466  0EBB                     	;# 
   467  0EBC                     	;# 
   468  0EBD                     	;# 
   469  0EBE                     	;# 
   470  0EC3                     	;# 
   471  0EC5                     	;# 
   472  0EC6                     	;# 
   473  0EC7                     	;# 
   474  0EC8                     	;# 
   475  0EC9                     	;# 
   476  0ECA                     	;# 
   477  0ECB                     	;# 
   478  0ECC                     	;# 
   479  0F10                     	;# 
   480  0F11                     	;# 
   481  0F12                     	;# 
   482  0F13                     	;# 
   483  0F14                     	;# 
   484  0F15                     	;# 
   485  0F16                     	;# 
   486  0F17                     	;# 
   487  0F18                     	;# 
   488  0F19                     	;# 
   489  0F1A                     	;# 
   490  0F1B                     	;# 
   491  0F1C                     	;# 
   492  0F1D                     	;# 
   493  0F1E                     	;# 
   494  0F1F                     	;# 
   495  0F20                     	;# 
   496  0F21                     	;# 
   497  0F22                     	;# 
   498  0F23                     	;# 
   499  0F24                     	;# 
   500  0F25                     	;# 
   501  0F26                     	;# 
   502  0F27                     	;# 
   503  0F38                     	;# 
   504  0F39                     	;# 
   505  0F3A                     	;# 
   506  0F3B                     	;# 
   507  0F3C                     	;# 
   508  0F3D                     	;# 
   509  0F3E                     	;# 
   510  0F3F                     	;# 
   511  0F40                     	;# 
   512  0F41                     	;# 
   513  0F43                     	;# 
   514  0F44                     	;# 
   515  0F45                     	;# 
   516  0F46                     	;# 
   517  0F47                     	;# 
   518  0F48                     	;# 
   519  0F49                     	;# 
   520  0F4A                     	;# 
   521  0F4B                     	;# 
   522  0F4C                     	;# 
   523  0F4E                     	;# 
   524  0F4F                     	;# 
   525  0F50                     	;# 
   526  0F51                     	;# 
   527  0F52                     	;# 
   528  0F53                     	;# 
   529  0F54                     	;# 
   530  0F55                     	;# 
   531  0F56                     	;# 
   532  0F57                     	;# 
   533  0F65                     	;# 
   534  0F68                     	;# 
   535  0F69                     	;# 
   536  0F6A                     	;# 
   537  0F6B                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  001C                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  008E                     	;# 
   581  008E                     	;# 
   582  008F                     	;# 
   583  0090                     	;# 
   584  0090                     	;# 
   585  0091                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  0110                     	;# 
   604  0110                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0112                     	;# 
   608  0113                     	;# 
   609  0114                     	;# 
   610  0114                     	;# 
   611  0115                     	;# 
   612  0116                     	;# 
   613  0116                     	;# 
   614  0117                     	;# 
   615  0119                     	;# 
   616  0119                     	;# 
   617  0119                     	;# 
   618  011A                     	;# 
   619  011A                     	;# 
   620  011A                     	;# 
   621  011B                     	;# 
   622  011B                     	;# 
   623  011B                     	;# 
   624  011B                     	;# 
   625  011B                     	;# 
   626  011C                     	;# 
   627  011C                     	;# 
   628  011C                     	;# 
   629  011D                     	;# 
   630  011D                     	;# 
   631  011D                     	;# 
   632  011E                     	;# 
   633  011E                     	;# 
   634  011E                     	;# 
   635  011F                     	;# 
   636  011F                     	;# 
   637  011F                     	;# 
   638  011F                     	;# 
   639  011F                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  018E                     	;# 
   643  018F                     	;# 
   644  0190                     	;# 
   645  0191                     	;# 
   646  0192                     	;# 
   647  0196                     	;# 
   648  0197                     	;# 
   649  0198                     	;# 
   650  0199                     	;# 
   651  019A                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  020C                     	;# 
   655  020D                     	;# 
   656  020E                     	;# 
   657  020F                     	;# 
   658  020F                     	;# 
   659  0210                     	;# 
   660  0210                     	;# 
   661  0211                     	;# 
   662  0211                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0218                     	;# 
   673  0219                     	;# 
   674  021A                     	;# 
   675  021B                     	;# 
   676  021B                     	;# 
   677  021C                     	;# 
   678  021C                     	;# 
   679  021D                     	;# 
   680  021D                     	;# 
   681  021E                     	;# 
   682  021F                     	;# 
   683  028C                     	;# 
   684  028C                     	;# 
   685  028D                     	;# 
   686  028D                     	;# 
   687  028E                     	;# 
   688  028F                     	;# 
   689  0290                     	;# 
   690  0290                     	;# 
   691  0291                     	;# 
   692  0292                     	;# 
   693  0292                     	;# 
   694  0293                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0296                     	;# 
   699  0296                     	;# 
   700  0297                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  0299                     	;# 
   705  029A                     	;# 
   706  029B                     	;# 
   707  029C                     	;# 
   708  029C                     	;# 
   709  029D                     	;# 
   710  030C                     	;# 
   711  030C                     	;# 
   712  030D                     	;# 
   713  030E                     	;# 
   714  030F                     	;# 
   715  0310                     	;# 
   716  0310                     	;# 
   717  0311                     	;# 
   718  0312                     	;# 
   719  0313                     	;# 
   720  0314                     	;# 
   721  0314                     	;# 
   722  0315                     	;# 
   723  0316                     	;# 
   724  0317                     	;# 
   725  0318                     	;# 
   726  0318                     	;# 
   727  0319                     	;# 
   728  031A                     	;# 
   729  031B                     	;# 
   730  031C                     	;# 
   731  031C                     	;# 
   732  031D                     	;# 
   733  031E                     	;# 
   734  031F                     	;# 
   735  038C                     	;# 
   736  038D                     	;# 
   737  038E                     	;# 
   738  0390                     	;# 
   739  0391                     	;# 
   740  0392                     	;# 
   741  040C                     	;# 
   742  040D                     	;# 
   743  040E                     	;# 
   744  040F                     	;# 
   745  0410                     	;# 
   746  0411                     	;# 
   747  0416                     	;# 
   748  0416                     	;# 
   749  0417                     	;# 
   750  0418                     	;# 
   751  0418                     	;# 
   752  0419                     	;# 
   753  041A                     	;# 
   754  041A                     	;# 
   755  041B                     	;# 
   756  041C                     	;# 
   757  041C                     	;# 
   758  041D                     	;# 
   759  041E                     	;# 
   760  041F                     	;# 
   761  048C                     	;# 
   762  048C                     	;# 
   763  048D                     	;# 
   764  048E                     	;# 
   765  048F                     	;# 
   766  048F                     	;# 
   767  0490                     	;# 
   768  0491                     	;# 
   769  0492                     	;# 
   770  0492                     	;# 
   771  0493                     	;# 
   772  0494                     	;# 
   773  0495                     	;# 
   774  0495                     	;# 
   775  0496                     	;# 
   776  0497                     	;# 
   777  0498                     	;# 
   778  0499                     	;# 
   779  049A                     	;# 
   780  049B                     	;# 
   781  049C                     	;# 
   782  049D                     	;# 
   783  050C                     	;# 
   784  050C                     	;# 
   785  050D                     	;# 
   786  050E                     	;# 
   787  050F                     	;# 
   788  050F                     	;# 
   789  0510                     	;# 
   790  0511                     	;# 
   791  0512                     	;# 
   792  0512                     	;# 
   793  0513                     	;# 
   794  0514                     	;# 
   795  0515                     	;# 
   796  0515                     	;# 
   797  0516                     	;# 
   798  0517                     	;# 
   799  0518                     	;# 
   800  0519                     	;# 
   801  051A                     	;# 
   802  051B                     	;# 
   803  051C                     	;# 
   804  051D                     	;# 
   805  058C                     	;# 
   806  058C                     	;# 
   807  058D                     	;# 
   808  058E                     	;# 
   809  058F                     	;# 
   810  058F                     	;# 
   811  0590                     	;# 
   812  0591                     	;# 
   813  0592                     	;# 
   814  0593                     	;# 
   815  060C                     	;# 
   816  060D                     	;# 
   817  060E                     	;# 
   818  060F                     	;# 
   819  0610                     	;# 
   820  0611                     	;# 
   821  0612                     	;# 
   822  0613                     	;# 
   823  0614                     	;# 
   824  0616                     	;# 
   825  0617                     	;# 
   826  0618                     	;# 
   827  0619                     	;# 
   828  061A                     	;# 
   829  061B                     	;# 
   830  061C                     	;# 
   831  061D                     	;# 
   832  061E                     	;# 
   833  068C                     	;# 
   834  068D                     	;# 
   835  068E                     	;# 
   836  068F                     	;# 
   837  0690                     	;# 
   838  0691                     	;# 
   839  0692                     	;# 
   840  0693                     	;# 
   841  0694                     	;# 
   842  070C                     	;# 
   843  070D                     	;# 
   844  070E                     	;# 
   845  070F                     	;# 
   846  0710                     	;# 
   847  0711                     	;# 
   848  0712                     	;# 
   849  0713                     	;# 
   850  0714                     	;# 
   851  0716                     	;# 
   852  0717                     	;# 
   853  0718                     	;# 
   854  0719                     	;# 
   855  071A                     	;# 
   856  071B                     	;# 
   857  071C                     	;# 
   858  071D                     	;# 
   859  071E                     	;# 
   860  0796                     	;# 
   861  0797                     	;# 
   862  0798                     	;# 
   863  0799                     	;# 
   864  079A                     	;# 
   865  079B                     	;# 
   866  080C                     	;# 
   867  080D                     	;# 
   868  080E                     	;# 
   869  080F                     	;# 
   870  0810                     	;# 
   871  0811                     	;# 
   872  0812                     	;# 
   873  0813                     	;# 
   874  0814                     	;# 
   875  081A                     	;# 
   876  081B                     	;# 
   877  081C                     	;# 
   878  081D                     	;# 
   879  081E                     	;# 
   880  081F                     	;# 
   881  088C                     	;# 
   882  088D                     	;# 
   883  088E                     	;# 
   884  088F                     	;# 
   885  0890                     	;# 
   886  0891                     	;# 
   887  0892                     	;# 
   888  0893                     	;# 
   889  0895                     	;# 
   890  0896                     	;# 
   891  0897                     	;# 
   892  0898                     	;# 
   893  0899                     	;# 
   894  089A                     	;# 
   895  089B                     	;# 
   896  090C                     	;# 
   897  090E                     	;# 
   898  090F                     	;# 
   899  091F                     	;# 
   900  091F                     	;# 
   901  098F                     	;# 
   902  098F                     	;# 
   903  0990                     	;# 
   904  0991                     	;# 
   905  0992                     	;# 
   906  0993                     	;# 
   907  0994                     	;# 
   908  0995                     	;# 
   909  0996                     	;# 
   910  0997                     	;# 
   911  0E0F                     	;# 
   912  0E10                     	;# 
   913  0E11                     	;# 
   914  0E12                     	;# 
   915  0E13                     	;# 
   916  0E14                     	;# 
   917  0E15                     	;# 
   918  0E16                     	;# 
   919  0E17                     	;# 
   920  0E18                     	;# 
   921  0E19                     	;# 
   922  0E1A                     	;# 
   923  0E1B                     	;# 
   924  0E1C                     	;# 
   925  0E1D                     	;# 
   926  0E1E                     	;# 
   927  0E1F                     	;# 
   928  0E20                     	;# 
   929  0E21                     	;# 
   930  0E22                     	;# 
   931  0E23                     	;# 
   932  0E24                     	;# 
   933  0E25                     	;# 
   934  0E26                     	;# 
   935  0E27                     	;# 
   936  0E28                     	;# 
   937  0E29                     	;# 
   938  0E2A                     	;# 
   939  0E2B                     	;# 
   940  0E2C                     	;# 
   941  0E2D                     	;# 
   942  0E2E                     	;# 
   943  0E2F                     	;# 
   944  0E30                     	;# 
   945  0E31                     	;# 
   946  0E32                     	;# 
   947  0E33                     	;# 
   948  0E34                     	;# 
   949  0E35                     	;# 
   950  0E36                     	;# 
   951  0E37                     	;# 
   952  0E8F                     	;# 
   953  0E90                     	;# 
   954  0E91                     	;# 
   955  0E92                     	;# 
   956  0E93                     	;# 
   957  0E94                     	;# 
   958  0E95                     	;# 
   959  0E96                     	;# 
   960  0E97                     	;# 
   961  0E9C                     	;# 
   962  0E9D                     	;# 
   963  0E9E                     	;# 
   964  0EA1                     	;# 
   965  0EA2                     	;# 
   966  0EA3                     	;# 
   967  0EA4                     	;# 
   968  0EA5                     	;# 
   969  0EA9                     	;# 
   970  0EAA                     	;# 
   971  0EAB                     	;# 
   972  0EAC                     	;# 
   973  0EB1                     	;# 
   974  0EB2                     	;# 
   975  0EB3                     	;# 
   976  0EB8                     	;# 
   977  0EB9                     	;# 
   978  0EBA                     	;# 
   979  0EBB                     	;# 
   980  0EBC                     	;# 
   981  0EBD                     	;# 
   982  0EBE                     	;# 
   983  0EC3                     	;# 
   984  0EC5                     	;# 
   985  0EC6                     	;# 
   986  0EC7                     	;# 
   987  0EC8                     	;# 
   988  0EC9                     	;# 
   989  0ECA                     	;# 
   990  0ECB                     	;# 
   991  0ECC                     	;# 
   992  0F10                     	;# 
   993  0F11                     	;# 
   994  0F12                     	;# 
   995  0F13                     	;# 
   996  0F14                     	;# 
   997  0F15                     	;# 
   998  0F16                     	;# 
   999  0F17                     	;# 
  1000  0F18                     	;# 
  1001  0F19                     	;# 
  1002  0F1A                     	;# 
  1003  0F1B                     	;# 
  1004  0F1C                     	;# 
  1005  0F1D                     	;# 
  1006  0F1E                     	;# 
  1007  0F1F                     	;# 
  1008  0F20                     	;# 
  1009  0F21                     	;# 
  1010  0F22                     	;# 
  1011  0F23                     	;# 
  1012  0F24                     	;# 
  1013  0F25                     	;# 
  1014  0F26                     	;# 
  1015  0F27                     	;# 
  1016  0F38                     	;# 
  1017  0F39                     	;# 
  1018  0F3A                     	;# 
  1019  0F3B                     	;# 
  1020  0F3C                     	;# 
  1021  0F3D                     	;# 
  1022  0F3E                     	;# 
  1023  0F3F                     	;# 
  1024  0F40                     	;# 
  1025  0F41                     	;# 
  1026  0F43                     	;# 
  1027  0F44                     	;# 
  1028  0F45                     	;# 
  1029  0F46                     	;# 
  1030  0F47                     	;# 
  1031  0F48                     	;# 
  1032  0F49                     	;# 
  1033  0F4A                     	;# 
  1034  0F4B                     	;# 
  1035  0F4C                     	;# 
  1036  0F4E                     	;# 
  1037  0F4F                     	;# 
  1038  0F50                     	;# 
  1039  0F51                     	;# 
  1040  0F52                     	;# 
  1041  0F53                     	;# 
  1042  0F54                     	;# 
  1043  0F55                     	;# 
  1044  0F56                     	;# 
  1045  0F57                     	;# 
  1046  0F65                     	;# 
  1047  0F68                     	;# 
  1048  0F69                     	;# 
  1049  0F6A                     	;# 
  1050  0F6B                     	;# 
  1051  0FE4                     	;# 
  1052  0FE5                     	;# 
  1053  0FE6                     	;# 
  1054  0FE7                     	;# 
  1055  0FE8                     	;# 
  1056  0FE9                     	;# 
  1057  0FEA                     	;# 
  1058  0FEB                     	;# 
  1059  0FED                     	;# 
  1060  0FEE                     	;# 
  1061  0FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  000E                     	;# 
  1077  0010                     	;# 
  1078  0011                     	;# 
  1079  0012                     	;# 
  1080  0013                     	;# 
  1081  0016                     	;# 
  1082  0017                     	;# 
  1083  0018                     	;# 
  1084  001C                     	;# 
  1085  001C                     	;# 
  1086  001D                     	;# 
  1087  001D                     	;# 
  1088  001E                     	;# 
  1089  001F                     	;# 
  1090  008C                     	;# 
  1091  008C                     	;# 
  1092  008D                     	;# 
  1093  008E                     	;# 
  1094  008E                     	;# 
  1095  008F                     	;# 
  1096  0090                     	;# 
  1097  0090                     	;# 
  1098  0091                     	;# 
  1099  0093                     	;# 
  1100  0094                     	;# 
  1101  0095                     	;# 
  1102  0096                     	;# 
  1103  0097                     	;# 
  1104  0098                     	;# 
  1105  0099                     	;# 
  1106  009A                     	;# 
  1107  009B                     	;# 
  1108  009C                     	;# 
  1109  009D                     	;# 
  1110  009E                     	;# 
  1111  010C                     	;# 
  1112  010D                     	;# 
  1113  010E                     	;# 
  1114  010E                     	;# 
  1115  010F                     	;# 
  1116  0110                     	;# 
  1117  0110                     	;# 
  1118  0111                     	;# 
  1119  0112                     	;# 
  1120  0112                     	;# 
  1121  0113                     	;# 
  1122  0114                     	;# 
  1123  0114                     	;# 
  1124  0115                     	;# 
  1125  0116                     	;# 
  1126  0116                     	;# 
  1127  0117                     	;# 
  1128  0119                     	;# 
  1129  0119                     	;# 
  1130  0119                     	;# 
  1131  011A                     	;# 
  1132  011A                     	;# 
  1133  011A                     	;# 
  1134  011B                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011C                     	;# 
  1140  011C                     	;# 
  1141  011C                     	;# 
  1142  011D                     	;# 
  1143  011D                     	;# 
  1144  011D                     	;# 
  1145  011E                     	;# 
  1146  011E                     	;# 
  1147  011E                     	;# 
  1148  011F                     	;# 
  1149  011F                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  018C                     	;# 
  1154  018D                     	;# 
  1155  018E                     	;# 
  1156  018F                     	;# 
  1157  0190                     	;# 
  1158  0191                     	;# 
  1159  0192                     	;# 
  1160  0196                     	;# 
  1161  0197                     	;# 
  1162  0198                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  020C                     	;# 
  1168  020D                     	;# 
  1169  020E                     	;# 
  1170  020F                     	;# 
  1171  020F                     	;# 
  1172  0210                     	;# 
  1173  0210                     	;# 
  1174  0211                     	;# 
  1175  0211                     	;# 
  1176  0212                     	;# 
  1177  0213                     	;# 
  1178  0214                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0218                     	;# 
  1186  0219                     	;# 
  1187  021A                     	;# 
  1188  021B                     	;# 
  1189  021B                     	;# 
  1190  021C                     	;# 
  1191  021C                     	;# 
  1192  021D                     	;# 
  1193  021D                     	;# 
  1194  021E                     	;# 
  1195  021F                     	;# 
  1196  028C                     	;# 
  1197  028C                     	;# 
  1198  028D                     	;# 
  1199  028D                     	;# 
  1200  028E                     	;# 
  1201  028F                     	;# 
  1202  0290                     	;# 
  1203  0290                     	;# 
  1204  0291                     	;# 
  1205  0292                     	;# 
  1206  0292                     	;# 
  1207  0293                     	;# 
  1208  0293                     	;# 
  1209  0294                     	;# 
  1210  0295                     	;# 
  1211  0296                     	;# 
  1212  0296                     	;# 
  1213  0297                     	;# 
  1214  0298                     	;# 
  1215  0298                     	;# 
  1216  0299                     	;# 
  1217  0299                     	;# 
  1218  029A                     	;# 
  1219  029B                     	;# 
  1220  029C                     	;# 
  1221  029C                     	;# 
  1222  029D                     	;# 
  1223  030C                     	;# 
  1224  030C                     	;# 
  1225  030D                     	;# 
  1226  030E                     	;# 
  1227  030F                     	;# 
  1228  0310                     	;# 
  1229  0310                     	;# 
  1230  0311                     	;# 
  1231  0312                     	;# 
  1232  0313                     	;# 
  1233  0314                     	;# 
  1234  0314                     	;# 
  1235  0315                     	;# 
  1236  0316                     	;# 
  1237  0317                     	;# 
  1238  0318                     	;# 
  1239  0318                     	;# 
  1240  0319                     	;# 
  1241  031A                     	;# 
  1242  031B                     	;# 
  1243  031C                     	;# 
  1244  031C                     	;# 
  1245  031D                     	;# 
  1246  031E                     	;# 
  1247  031F                     	;# 
  1248  038C                     	;# 
  1249  038D                     	;# 
  1250  038E                     	;# 
  1251  0390                     	;# 
  1252  0391                     	;# 
  1253  0392                     	;# 
  1254  040C                     	;# 
  1255  040D                     	;# 
  1256  040E                     	;# 
  1257  040F                     	;# 
  1258  0410                     	;# 
  1259  0411                     	;# 
  1260  0416                     	;# 
  1261  0416                     	;# 
  1262  0417                     	;# 
  1263  0418                     	;# 
  1264  0418                     	;# 
  1265  0419                     	;# 
  1266  041A                     	;# 
  1267  041A                     	;# 
  1268  041B                     	;# 
  1269  041C                     	;# 
  1270  041C                     	;# 
  1271  041D                     	;# 
  1272  041E                     	;# 
  1273  041F                     	;# 
  1274  048C                     	;# 
  1275  048C                     	;# 
  1276  048D                     	;# 
  1277  048E                     	;# 
  1278  048F                     	;# 
  1279  048F                     	;# 
  1280  0490                     	;# 
  1281  0491                     	;# 
  1282  0492                     	;# 
  1283  0492                     	;# 
  1284  0493                     	;# 
  1285  0494                     	;# 
  1286  0495                     	;# 
  1287  0495                     	;# 
  1288  0496                     	;# 
  1289  0497                     	;# 
  1290  0498                     	;# 
  1291  0499                     	;# 
  1292  049A                     	;# 
  1293  049B                     	;# 
  1294  049C                     	;# 
  1295  049D                     	;# 
  1296  050C                     	;# 
  1297  050C                     	;# 
  1298  050D                     	;# 
  1299  050E                     	;# 
  1300  050F                     	;# 
  1301  050F                     	;# 
  1302  0510                     	;# 
  1303  0511                     	;# 
  1304  0512                     	;# 
  1305  0512                     	;# 
  1306  0513                     	;# 
  1307  0514                     	;# 
  1308  0515                     	;# 
  1309  0515                     	;# 
  1310  0516                     	;# 
  1311  0517                     	;# 
  1312  0518                     	;# 
  1313  0519                     	;# 
  1314  051A                     	;# 
  1315  051B                     	;# 
  1316  051C                     	;# 
  1317  051D                     	;# 
  1318  058C                     	;# 
  1319  058C                     	;# 
  1320  058D                     	;# 
  1321  058E                     	;# 
  1322  058F                     	;# 
  1323  058F                     	;# 
  1324  0590                     	;# 
  1325  0591                     	;# 
  1326  0592                     	;# 
  1327  0593                     	;# 
  1328  060C                     	;# 
  1329  060D                     	;# 
  1330  060E                     	;# 
  1331  060F                     	;# 
  1332  0610                     	;# 
  1333  0611                     	;# 
  1334  0612                     	;# 
  1335  0613                     	;# 
  1336  0614                     	;# 
  1337  0616                     	;# 
  1338  0617                     	;# 
  1339  0618                     	;# 
  1340  0619                     	;# 
  1341  061A                     	;# 
  1342  061B                     	;# 
  1343  061C                     	;# 
  1344  061D                     	;# 
  1345  061E                     	;# 
  1346  068C                     	;# 
  1347  068D                     	;# 
  1348  068E                     	;# 
  1349  068F                     	;# 
  1350  0690                     	;# 
  1351  0691                     	;# 
  1352  0692                     	;# 
  1353  0693                     	;# 
  1354  0694                     	;# 
  1355  070C                     	;# 
  1356  070D                     	;# 
  1357  070E                     	;# 
  1358  070F                     	;# 
  1359  0710                     	;# 
  1360  0711                     	;# 
  1361  0712                     	;# 
  1362  0713                     	;# 
  1363  0714                     	;# 
  1364  0716                     	;# 
  1365  0717                     	;# 
  1366  0718                     	;# 
  1367  0719                     	;# 
  1368  071A                     	;# 
  1369  071B                     	;# 
  1370  071C                     	;# 
  1371  071D                     	;# 
  1372  071E                     	;# 
  1373  0796                     	;# 
  1374  0797                     	;# 
  1375  0798                     	;# 
  1376  0799                     	;# 
  1377  079A                     	;# 
  1378  079B                     	;# 
  1379  080C                     	;# 
  1380  080D                     	;# 
  1381  080E                     	;# 
  1382  080F                     	;# 
  1383  0810                     	;# 
  1384  0811                     	;# 
  1385  0812                     	;# 
  1386  0813                     	;# 
  1387  0814                     	;# 
  1388  081A                     	;# 
  1389  081B                     	;# 
  1390  081C                     	;# 
  1391  081D                     	;# 
  1392  081E                     	;# 
  1393  081F                     	;# 
  1394  088C                     	;# 
  1395  088D                     	;# 
  1396  088E                     	;# 
  1397  088F                     	;# 
  1398  0890                     	;# 
  1399  0891                     	;# 
  1400  0892                     	;# 
  1401  0893                     	;# 
  1402  0895                     	;# 
  1403  0896                     	;# 
  1404  0897                     	;# 
  1405  0898                     	;# 
  1406  0899                     	;# 
  1407  089A                     	;# 
  1408  089B                     	;# 
  1409  090C                     	;# 
  1410  090E                     	;# 
  1411  090F                     	;# 
  1412  091F                     	;# 
  1413  091F                     	;# 
  1414  098F                     	;# 
  1415  098F                     	;# 
  1416  0990                     	;# 
  1417  0991                     	;# 
  1418  0992                     	;# 
  1419  0993                     	;# 
  1420  0994                     	;# 
  1421  0995                     	;# 
  1422  0996                     	;# 
  1423  0997                     	;# 
  1424  0E0F                     	;# 
  1425  0E10                     	;# 
  1426  0E11                     	;# 
  1427  0E12                     	;# 
  1428  0E13                     	;# 
  1429  0E14                     	;# 
  1430  0E15                     	;# 
  1431  0E16                     	;# 
  1432  0E17                     	;# 
  1433  0E18                     	;# 
  1434  0E19                     	;# 
  1435  0E1A                     	;# 
  1436  0E1B                     	;# 
  1437  0E1C                     	;# 
  1438  0E1D                     	;# 
  1439  0E1E                     	;# 
  1440  0E1F                     	;# 
  1441  0E20                     	;# 
  1442  0E21                     	;# 
  1443  0E22                     	;# 
  1444  0E23                     	;# 
  1445  0E24                     	;# 
  1446  0E25                     	;# 
  1447  0E26                     	;# 
  1448  0E27                     	;# 
  1449  0E28                     	;# 
  1450  0E29                     	;# 
  1451  0E2A                     	;# 
  1452  0E2B                     	;# 
  1453  0E2C                     	;# 
  1454  0E2D                     	;# 
  1455  0E2E                     	;# 
  1456  0E2F                     	;# 
  1457  0E30                     	;# 
  1458  0E31                     	;# 
  1459  0E32                     	;# 
  1460  0E33                     	;# 
  1461  0E34                     	;# 
  1462  0E35                     	;# 
  1463  0E36                     	;# 
  1464  0E37                     	;# 
  1465  0E8F                     	;# 
  1466  0E90                     	;# 
  1467  0E91                     	;# 
  1468  0E92                     	;# 
  1469  0E93                     	;# 
  1470  0E94                     	;# 
  1471  0E95                     	;# 
  1472  0E96                     	;# 
  1473  0E97                     	;# 
  1474  0E9C                     	;# 
  1475  0E9D                     	;# 
  1476  0E9E                     	;# 
  1477  0EA1                     	;# 
  1478  0EA2                     	;# 
  1479  0EA3                     	;# 
  1480  0EA4                     	;# 
  1481  0EA5                     	;# 
  1482  0EA9                     	;# 
  1483  0EAA                     	;# 
  1484  0EAB                     	;# 
  1485  0EAC                     	;# 
  1486  0EB1                     	;# 
  1487  0EB2                     	;# 
  1488  0EB3                     	;# 
  1489  0EB8                     	;# 
  1490  0EB9                     	;# 
  1491  0EBA                     	;# 
  1492  0EBB                     	;# 
  1493  0EBC                     	;# 
  1494  0EBD                     	;# 
  1495  0EBE                     	;# 
  1496  0EC3                     	;# 
  1497  0EC5                     	;# 
  1498  0EC6                     	;# 
  1499  0EC7                     	;# 
  1500  0EC8                     	;# 
  1501  0EC9                     	;# 
  1502  0ECA                     	;# 
  1503  0ECB                     	;# 
  1504  0ECC                     	;# 
  1505  0F10                     	;# 
  1506  0F11                     	;# 
  1507  0F12                     	;# 
  1508  0F13                     	;# 
  1509  0F14                     	;# 
  1510  0F15                     	;# 
  1511  0F16                     	;# 
  1512  0F17                     	;# 
  1513  0F18                     	;# 
  1514  0F19                     	;# 
  1515  0F1A                     	;# 
  1516  0F1B                     	;# 
  1517  0F1C                     	;# 
  1518  0F1D                     	;# 
  1519  0F1E                     	;# 
  1520  0F1F                     	;# 
  1521  0F20                     	;# 
  1522  0F21                     	;# 
  1523  0F22                     	;# 
  1524  0F23                     	;# 
  1525  0F24                     	;# 
  1526  0F25                     	;# 
  1527  0F26                     	;# 
  1528  0F27                     	;# 
  1529  0F38                     	;# 
  1530  0F39                     	;# 
  1531  0F3A                     	;# 
  1532  0F3B                     	;# 
  1533  0F3C                     	;# 
  1534  0F3D                     	;# 
  1535  0F3E                     	;# 
  1536  0F3F                     	;# 
  1537  0F40                     	;# 
  1538  0F41                     	;# 
  1539  0F43                     	;# 
  1540  0F44                     	;# 
  1541  0F45                     	;# 
  1542  0F46                     	;# 
  1543  0F47                     	;# 
  1544  0F48                     	;# 
  1545  0F49                     	;# 
  1546  0F4A                     	;# 
  1547  0F4B                     	;# 
  1548  0F4C                     	;# 
  1549  0F4E                     	;# 
  1550  0F4F                     	;# 
  1551  0F50                     	;# 
  1552  0F51                     	;# 
  1553  0F52                     	;# 
  1554  0F53                     	;# 
  1555  0F54                     	;# 
  1556  0F55                     	;# 
  1557  0F56                     	;# 
  1558  0F57                     	;# 
  1559  0F65                     	;# 
  1560  0F68                     	;# 
  1561  0F69                     	;# 
  1562  0F6A                     	;# 
  1563  0F6B                     	;# 
  1564  0FE4                     	;# 
  1565  0FE5                     	;# 
  1566  0FE6                     	;# 
  1567  0FE7                     	;# 
  1568  0FE8                     	;# 
  1569  0FE9                     	;# 
  1570  0FEA                     	;# 
  1571  0FEB                     	;# 
  1572  0FED                     	;# 
  1573  0FEE                     	;# 
  1574  0FEF                     	;# 
  1575  0000                     	;# 
  1576  0001                     	;# 
  1577  0002                     	;# 
  1578  0003                     	;# 
  1579  0004                     	;# 
  1580  0005                     	;# 
  1581  0006                     	;# 
  1582  0007                     	;# 
  1583  0008                     	;# 
  1584  0009                     	;# 
  1585  000A                     	;# 
  1586  000B                     	;# 
  1587  000C                     	;# 
  1588  000D                     	;# 
  1589  000E                     	;# 
  1590  0010                     	;# 
  1591  0011                     	;# 
  1592  0012                     	;# 
  1593  0013                     	;# 
  1594  0016                     	;# 
  1595  0017                     	;# 
  1596  0018                     	;# 
  1597  001C                     	;# 
  1598  001C                     	;# 
  1599  001D                     	;# 
  1600  001D                     	;# 
  1601  001E                     	;# 
  1602  001F                     	;# 
  1603  008C                     	;# 
  1604  008C                     	;# 
  1605  008D                     	;# 
  1606  008E                     	;# 
  1607  008E                     	;# 
  1608  008F                     	;# 
  1609  0090                     	;# 
  1610  0090                     	;# 
  1611  0091                     	;# 
  1612  0093                     	;# 
  1613  0094                     	;# 
  1614  0095                     	;# 
  1615  0096                     	;# 
  1616  0097                     	;# 
  1617  0098                     	;# 
  1618  0099                     	;# 
  1619  009A                     	;# 
  1620  009B                     	;# 
  1621  009C                     	;# 
  1622  009D                     	;# 
  1623  009E                     	;# 
  1624  010C                     	;# 
  1625  010D                     	;# 
  1626  010E                     	;# 
  1627  010E                     	;# 
  1628  010F                     	;# 
  1629  0110                     	;# 
  1630  0110                     	;# 
  1631  0111                     	;# 
  1632  0112                     	;# 
  1633  0112                     	;# 
  1634  0113                     	;# 
  1635  0114                     	;# 
  1636  0114                     	;# 
  1637  0115                     	;# 
  1638  0116                     	;# 
  1639  0116                     	;# 
  1640  0117                     	;# 
  1641  0119                     	;# 
  1642  0119                     	;# 
  1643  0119                     	;# 
  1644  011A                     	;# 
  1645  011A                     	;# 
  1646  011A                     	;# 
  1647  011B                     	;# 
  1648  011B                     	;# 
  1649  011B                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011C                     	;# 
  1653  011C                     	;# 
  1654  011C                     	;# 
  1655  011D                     	;# 
  1656  011D                     	;# 
  1657  011D                     	;# 
  1658  011E                     	;# 
  1659  011E                     	;# 
  1660  011E                     	;# 
  1661  011F                     	;# 
  1662  011F                     	;# 
  1663  011F                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  018C                     	;# 
  1667  018D                     	;# 
  1668  018E                     	;# 
  1669  018F                     	;# 
  1670  0190                     	;# 
  1671  0191                     	;# 
  1672  0192                     	;# 
  1673  0196                     	;# 
  1674  0197                     	;# 
  1675  0198                     	;# 
  1676  0199                     	;# 
  1677  019A                     	;# 
  1678  019B                     	;# 
  1679  019C                     	;# 
  1680  020C                     	;# 
  1681  020D                     	;# 
  1682  020E                     	;# 
  1683  020F                     	;# 
  1684  020F                     	;# 
  1685  0210                     	;# 
  1686  0210                     	;# 
  1687  0211                     	;# 
  1688  0211                     	;# 
  1689  0212                     	;# 
  1690  0213                     	;# 
  1691  0214                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0216                     	;# 
  1695  0216                     	;# 
  1696  0217                     	;# 
  1697  0217                     	;# 
  1698  0218                     	;# 
  1699  0219                     	;# 
  1700  021A                     	;# 
  1701  021B                     	;# 
  1702  021B                     	;# 
  1703  021C                     	;# 
  1704  021C                     	;# 
  1705  021D                     	;# 
  1706  021D                     	;# 
  1707  021E                     	;# 
  1708  021F                     	;# 
  1709  028C                     	;# 
  1710  028C                     	;# 
  1711  028D                     	;# 
  1712  028D                     	;# 
  1713  028E                     	;# 
  1714  028F                     	;# 
  1715  0290                     	;# 
  1716  0290                     	;# 
  1717  0291                     	;# 
  1718  0292                     	;# 
  1719  0292                     	;# 
  1720  0293                     	;# 
  1721  0293                     	;# 
  1722  0294                     	;# 
  1723  0295                     	;# 
  1724  0296                     	;# 
  1725  0296                     	;# 
  1726  0297                     	;# 
  1727  0298                     	;# 
  1728  0298                     	;# 
  1729  0299                     	;# 
  1730  0299                     	;# 
  1731  029A                     	;# 
  1732  029B                     	;# 
  1733  029C                     	;# 
  1734  029C                     	;# 
  1735  029D                     	;# 
  1736  030C                     	;# 
  1737  030C                     	;# 
  1738  030D                     	;# 
  1739  030E                     	;# 
  1740  030F                     	;# 
  1741  0310                     	;# 
  1742  0310                     	;# 
  1743  0311                     	;# 
  1744  0312                     	;# 
  1745  0313                     	;# 
  1746  0314                     	;# 
  1747  0314                     	;# 
  1748  0315                     	;# 
  1749  0316                     	;# 
  1750  0317                     	;# 
  1751  0318                     	;# 
  1752  0318                     	;# 
  1753  0319                     	;# 
  1754  031A                     	;# 
  1755  031B                     	;# 
  1756  031C                     	;# 
  1757  031C                     	;# 
  1758  031D                     	;# 
  1759  031E                     	;# 
  1760  031F                     	;# 
  1761  038C                     	;# 
  1762  038D                     	;# 
  1763  038E                     	;# 
  1764  0390                     	;# 
  1765  0391                     	;# 
  1766  0392                     	;# 
  1767  040C                     	;# 
  1768  040D                     	;# 
  1769  040E                     	;# 
  1770  040F                     	;# 
  1771  0410                     	;# 
  1772  0411                     	;# 
  1773  0416                     	;# 
  1774  0416                     	;# 
  1775  0417                     	;# 
  1776  0418                     	;# 
  1777  0418                     	;# 
  1778  0419                     	;# 
  1779  041A                     	;# 
  1780  041A                     	;# 
  1781  041B                     	;# 
  1782  041C                     	;# 
  1783  041C                     	;# 
  1784  041D                     	;# 
  1785  041E                     	;# 
  1786  041F                     	;# 
  1787  048C                     	;# 
  1788  048C                     	;# 
  1789  048D                     	;# 
  1790  048E                     	;# 
  1791  048F                     	;# 
  1792  048F                     	;# 
  1793  0490                     	;# 
  1794  0491                     	;# 
  1795  0492                     	;# 
  1796  0492                     	;# 
  1797  0493                     	;# 
  1798  0494                     	;# 
  1799  0495                     	;# 
  1800  0495                     	;# 
  1801  0496                     	;# 
  1802  0497                     	;# 
  1803  0498                     	;# 
  1804  0499                     	;# 
  1805  049A                     	;# 
  1806  049B                     	;# 
  1807  049C                     	;# 
  1808  049D                     	;# 
  1809  050C                     	;# 
  1810  050C                     	;# 
  1811  050D                     	;# 
  1812  050E                     	;# 
  1813  050F                     	;# 
  1814  050F                     	;# 
  1815  0510                     	;# 
  1816  0511                     	;# 
  1817  0512                     	;# 
  1818  0512                     	;# 
  1819  0513                     	;# 
  1820  0514                     	;# 
  1821  0515                     	;# 
  1822  0515                     	;# 
  1823  0516                     	;# 
  1824  0517                     	;# 
  1825  0518                     	;# 
  1826  0519                     	;# 
  1827  051A                     	;# 
  1828  051B                     	;# 
  1829  051C                     	;# 
  1830  051D                     	;# 
  1831  058C                     	;# 
  1832  058C                     	;# 
  1833  058D                     	;# 
  1834  058E                     	;# 
  1835  058F                     	;# 
  1836  058F                     	;# 
  1837  0590                     	;# 
  1838  0591                     	;# 
  1839  0592                     	;# 
  1840  0593                     	;# 
  1841  060C                     	;# 
  1842  060D                     	;# 
  1843  060E                     	;# 
  1844  060F                     	;# 
  1845  0610                     	;# 
  1846  0611                     	;# 
  1847  0612                     	;# 
  1848  0613                     	;# 
  1849  0614                     	;# 
  1850  0616                     	;# 
  1851  0617                     	;# 
  1852  0618                     	;# 
  1853  0619                     	;# 
  1854  061A                     	;# 
  1855  061B                     	;# 
  1856  061C                     	;# 
  1857  061D                     	;# 
  1858  061E                     	;# 
  1859  068C                     	;# 
  1860  068D                     	;# 
  1861  068E                     	;# 
  1862  068F                     	;# 
  1863  0690                     	;# 
  1864  0691                     	;# 
  1865  0692                     	;# 
  1866  0693                     	;# 
  1867  0694                     	;# 
  1868  070C                     	;# 
  1869  070D                     	;# 
  1870  070E                     	;# 
  1871  070F                     	;# 
  1872  0710                     	;# 
  1873  0711                     	;# 
  1874  0712                     	;# 
  1875  0713                     	;# 
  1876  0714                     	;# 
  1877  0716                     	;# 
  1878  0717                     	;# 
  1879  0718                     	;# 
  1880  0719                     	;# 
  1881  071A                     	;# 
  1882  071B                     	;# 
  1883  071C                     	;# 
  1884  071D                     	;# 
  1885  071E                     	;# 
  1886  0796                     	;# 
  1887  0797                     	;# 
  1888  0798                     	;# 
  1889  0799                     	;# 
  1890  079A                     	;# 
  1891  079B                     	;# 
  1892  080C                     	;# 
  1893  080D                     	;# 
  1894  080E                     	;# 
  1895  080F                     	;# 
  1896  0810                     	;# 
  1897  0811                     	;# 
  1898  0812                     	;# 
  1899  0813                     	;# 
  1900  0814                     	;# 
  1901  081A                     	;# 
  1902  081B                     	;# 
  1903  081C                     	;# 
  1904  081D                     	;# 
  1905  081E                     	;# 
  1906  081F                     	;# 
  1907  088C                     	;# 
  1908  088D                     	;# 
  1909  088E                     	;# 
  1910  088F                     	;# 
  1911  0890                     	;# 
  1912  0891                     	;# 
  1913  0892                     	;# 
  1914  0893                     	;# 
  1915  0895                     	;# 
  1916  0896                     	;# 
  1917  0897                     	;# 
  1918  0898                     	;# 
  1919  0899                     	;# 
  1920  089A                     	;# 
  1921  089B                     	;# 
  1922  090C                     	;# 
  1923  090E                     	;# 
  1924  090F                     	;# 
  1925  091F                     	;# 
  1926  091F                     	;# 
  1927  098F                     	;# 
  1928  098F                     	;# 
  1929  0990                     	;# 
  1930  0991                     	;# 
  1931  0992                     	;# 
  1932  0993                     	;# 
  1933  0994                     	;# 
  1934  0995                     	;# 
  1935  0996                     	;# 
  1936  0997                     	;# 
  1937  0E0F                     	;# 
  1938  0E10                     	;# 
  1939  0E11                     	;# 
  1940  0E12                     	;# 
  1941  0E13                     	;# 
  1942  0E14                     	;# 
  1943  0E15                     	;# 
  1944  0E16                     	;# 
  1945  0E17                     	;# 
  1946  0E18                     	;# 
  1947  0E19                     	;# 
  1948  0E1A                     	;# 
  1949  0E1B                     	;# 
  1950  0E1C                     	;# 
  1951  0E1D                     	;# 
  1952  0E1E                     	;# 
  1953  0E1F                     	;# 
  1954  0E20                     	;# 
  1955  0E21                     	;# 
  1956  0E22                     	;# 
  1957  0E23                     	;# 
  1958  0E24                     	;# 
  1959  0E25                     	;# 
  1960  0E26                     	;# 
  1961  0E27                     	;# 
  1962  0E28                     	;# 
  1963  0E29                     	;# 
  1964  0E2A                     	;# 
  1965  0E2B                     	;# 
  1966  0E2C                     	;# 
  1967  0E2D                     	;# 
  1968  0E2E                     	;# 
  1969  0E2F                     	;# 
  1970  0E30                     	;# 
  1971  0E31                     	;# 
  1972  0E32                     	;# 
  1973  0E33                     	;# 
  1974  0E34                     	;# 
  1975  0E35                     	;# 
  1976  0E36                     	;# 
  1977  0E37                     	;# 
  1978  0E8F                     	;# 
  1979  0E90                     	;# 
  1980  0E91                     	;# 
  1981  0E92                     	;# 
  1982  0E93                     	;# 
  1983  0E94                     	;# 
  1984  0E95                     	;# 
  1985  0E96                     	;# 
  1986  0E97                     	;# 
  1987  0E9C                     	;# 
  1988  0E9D                     	;# 
  1989  0E9E                     	;# 
  1990  0EA1                     	;# 
  1991  0EA2                     	;# 
  1992  0EA3                     	;# 
  1993  0EA4                     	;# 
  1994  0EA5                     	;# 
  1995  0EA9                     	;# 
  1996  0EAA                     	;# 
  1997  0EAB                     	;# 
  1998  0EAC                     	;# 
  1999  0EB1                     	;# 
  2000  0EB2                     	;# 
  2001  0EB3                     	;# 
  2002  0EB8                     	;# 
  2003  0EB9                     	;# 
  2004  0EBA                     	;# 
  2005  0EBB                     	;# 
  2006  0EBC                     	;# 
  2007  0EBD                     	;# 
  2008  0EBE                     	;# 
  2009  0EC3                     	;# 
  2010  0EC5                     	;# 
  2011  0EC6                     	;# 
  2012  0EC7                     	;# 
  2013  0EC8                     	;# 
  2014  0EC9                     	;# 
  2015  0ECA                     	;# 
  2016  0ECB                     	;# 
  2017  0ECC                     	;# 
  2018  0F10                     	;# 
  2019  0F11                     	;# 
  2020  0F12                     	;# 
  2021  0F13                     	;# 
  2022  0F14                     	;# 
  2023  0F15                     	;# 
  2024  0F16                     	;# 
  2025  0F17                     	;# 
  2026  0F18                     	;# 
  2027  0F19                     	;# 
  2028  0F1A                     	;# 
  2029  0F1B                     	;# 
  2030  0F1C                     	;# 
  2031  0F1D                     	;# 
  2032  0F1E                     	;# 
  2033  0F1F                     	;# 
  2034  0F20                     	;# 
  2035  0F21                     	;# 
  2036  0F22                     	;# 
  2037  0F23                     	;# 
  2038  0F24                     	;# 
  2039  0F25                     	;# 
  2040  0F26                     	;# 
  2041  0F27                     	;# 
  2042  0F38                     	;# 
  2043  0F39                     	;# 
  2044  0F3A                     	;# 
  2045  0F3B                     	;# 
  2046  0F3C                     	;# 
  2047  0F3D                     	;# 
  2048  0F3E                     	;# 
  2049  0F3F                     	;# 
  2050  0F40                     	;# 
  2051  0F41                     	;# 
  2052  0F43                     	;# 
  2053  0F44                     	;# 
  2054  0F45                     	;# 
  2055  0F46                     	;# 
  2056  0F47                     	;# 
  2057  0F48                     	;# 
  2058  0F49                     	;# 
  2059  0F4A                     	;# 
  2060  0F4B                     	;# 
  2061  0F4C                     	;# 
  2062  0F4E                     	;# 
  2063  0F4F                     	;# 
  2064  0F50                     	;# 
  2065  0F51                     	;# 
  2066  0F52                     	;# 
  2067  0F53                     	;# 
  2068  0F54                     	;# 
  2069  0F55                     	;# 
  2070  0F56                     	;# 
  2071  0F57                     	;# 
  2072  0F65                     	;# 
  2073  0F68                     	;# 
  2074  0F69                     	;# 
  2075  0F6A                     	;# 
  2076  0F6B                     	;# 
  2077  0FE4                     	;# 
  2078  0FE5                     	;# 
  2079  0FE6                     	;# 
  2080  0FE7                     	;# 
  2081  0FE8                     	;# 
  2082  0FE9                     	;# 
  2083  0FEA                     	;# 
  2084  0FEB                     	;# 
  2085  0FED                     	;# 
  2086  0FEE                     	;# 
  2087  0FEF                     	;# 
  2088  0000                     	;# 
  2089  0001                     	;# 
  2090  0002                     	;# 
  2091  0003                     	;# 
  2092  0004                     	;# 
  2093  0005                     	;# 
  2094  0006                     	;# 
  2095  0007                     	;# 
  2096  0008                     	;# 
  2097  0009                     	;# 
  2098  000A                     	;# 
  2099  000B                     	;# 
  2100  000C                     	;# 
  2101  000D                     	;# 
  2102  000E                     	;# 
  2103  0010                     	;# 
  2104  0011                     	;# 
  2105  0012                     	;# 
  2106  0013                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  001C                     	;# 
  2111  001C                     	;# 
  2112  001D                     	;# 
  2113  001D                     	;# 
  2114  001E                     	;# 
  2115  001F                     	;# 
  2116  008C                     	;# 
  2117  008C                     	;# 
  2118  008D                     	;# 
  2119  008E                     	;# 
  2120  008E                     	;# 
  2121  008F                     	;# 
  2122  0090                     	;# 
  2123  0090                     	;# 
  2124  0091                     	;# 
  2125  0093                     	;# 
  2126  0094                     	;# 
  2127  0095                     	;# 
  2128  0096                     	;# 
  2129  0097                     	;# 
  2130  0098                     	;# 
  2131  0099                     	;# 
  2132  009A                     	;# 
  2133  009B                     	;# 
  2134  009C                     	;# 
  2135  009D                     	;# 
  2136  009E                     	;# 
  2137  010C                     	;# 
  2138  010D                     	;# 
  2139  010E                     	;# 
  2140  010E                     	;# 
  2141  010F                     	;# 
  2142  0110                     	;# 
  2143  0110                     	;# 
  2144  0111                     	;# 
  2145  0112                     	;# 
  2146  0112                     	;# 
  2147  0113                     	;# 
  2148  0114                     	;# 
  2149  0114                     	;# 
  2150  0115                     	;# 
  2151  0116                     	;# 
  2152  0116                     	;# 
  2153  0117                     	;# 
  2154  0119                     	;# 
  2155  0119                     	;# 
  2156  0119                     	;# 
  2157  011A                     	;# 
  2158  011A                     	;# 
  2159  011A                     	;# 
  2160  011B                     	;# 
  2161  011B                     	;# 
  2162  011B                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011C                     	;# 
  2166  011C                     	;# 
  2167  011C                     	;# 
  2168  011D                     	;# 
  2169  011D                     	;# 
  2170  011D                     	;# 
  2171  011E                     	;# 
  2172  011E                     	;# 
  2173  011E                     	;# 
  2174  011F                     	;# 
  2175  011F                     	;# 
  2176  011F                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  018C                     	;# 
  2180  018D                     	;# 
  2181  018E                     	;# 
  2182  018F                     	;# 
  2183  0190                     	;# 
  2184  0191                     	;# 
  2185  0192                     	;# 
  2186  0196                     	;# 
  2187  0197                     	;# 
  2188  0198                     	;# 
  2189  0199                     	;# 
  2190  019A                     	;# 
  2191  019B                     	;# 
  2192  019C                     	;# 
  2193  020C                     	;# 
  2194  020D                     	;# 
  2195  020E                     	;# 
  2196  020F                     	;# 
  2197  020F                     	;# 
  2198  0210                     	;# 
  2199  0210                     	;# 
  2200  0211                     	;# 
  2201  0211                     	;# 
  2202  0212                     	;# 
  2203  0213                     	;# 
  2204  0214                     	;# 
  2205  0215                     	;# 
  2206  0215                     	;# 
  2207  0216                     	;# 
  2208  0216                     	;# 
  2209  0217                     	;# 
  2210  0217                     	;# 
  2211  0218                     	;# 
  2212  0219                     	;# 
  2213  021A                     	;# 
  2214  021B                     	;# 
  2215  021B                     	;# 
  2216  021C                     	;# 
  2217  021C                     	;# 
  2218  021D                     	;# 
  2219  021D                     	;# 
  2220  021E                     	;# 
  2221  021F                     	;# 
  2222  028C                     	;# 
  2223  028C                     	;# 
  2224  028D                     	;# 
  2225  028D                     	;# 
  2226  028E                     	;# 
  2227  028F                     	;# 
  2228  0290                     	;# 
  2229  0290                     	;# 
  2230  0291                     	;# 
  2231  0292                     	;# 
  2232  0292                     	;# 
  2233  0293                     	;# 
  2234  0293                     	;# 
  2235  0294                     	;# 
  2236  0295                     	;# 
  2237  0296                     	;# 
  2238  0296                     	;# 
  2239  0297                     	;# 
  2240  0298                     	;# 
  2241  0298                     	;# 
  2242  0299                     	;# 
  2243  0299                     	;# 
  2244  029A                     	;# 
  2245  029B                     	;# 
  2246  029C                     	;# 
  2247  029C                     	;# 
  2248  029D                     	;# 
  2249  030C                     	;# 
  2250  030C                     	;# 
  2251  030D                     	;# 
  2252  030E                     	;# 
  2253  030F                     	;# 
  2254  0310                     	;# 
  2255  0310                     	;# 
  2256  0311                     	;# 
  2257  0312                     	;# 
  2258  0313                     	;# 
  2259  0314                     	;# 
  2260  0314                     	;# 
  2261  0315                     	;# 
  2262  0316                     	;# 
  2263  0317                     	;# 
  2264  0318                     	;# 
  2265  0318                     	;# 
  2266  0319                     	;# 
  2267  031A                     	;# 
  2268  031B                     	;# 
  2269  031C                     	;# 
  2270  031C                     	;# 
  2271  031D                     	;# 
  2272  031E                     	;# 
  2273  031F                     	;# 
  2274  038C                     	;# 
  2275  038D                     	;# 
  2276  038E                     	;# 
  2277  0390                     	;# 
  2278  0391                     	;# 
  2279  0392                     	;# 
  2280  040C                     	;# 
  2281  040D                     	;# 
  2282  040E                     	;# 
  2283  040F                     	;# 
  2284  0410                     	;# 
  2285  0411                     	;# 
  2286  0416                     	;# 
  2287  0416                     	;# 
  2288  0417                     	;# 
  2289  0418                     	;# 
  2290  0418                     	;# 
  2291  0419                     	;# 
  2292  041A                     	;# 
  2293  041A                     	;# 
  2294  041B                     	;# 
  2295  041C                     	;# 
  2296  041C                     	;# 
  2297  041D                     	;# 
  2298  041E                     	;# 
  2299  041F                     	;# 
  2300  048C                     	;# 
  2301  048C                     	;# 
  2302  048D                     	;# 
  2303  048E                     	;# 
  2304  048F                     	;# 
  2305  048F                     	;# 
  2306  0490                     	;# 
  2307  0491                     	;# 
  2308  0492                     	;# 
  2309  0492                     	;# 
  2310  0493                     	;# 
  2311  0494                     	;# 
  2312  0495                     	;# 
  2313  0495                     	;# 
  2314  0496                     	;# 
  2315  0497                     	;# 
  2316  0498                     	;# 
  2317  0499                     	;# 
  2318  049A                     	;# 
  2319  049B                     	;# 
  2320  049C                     	;# 
  2321  049D                     	;# 
  2322  050C                     	;# 
  2323  050C                     	;# 
  2324  050D                     	;# 
  2325  050E                     	;# 
  2326  050F                     	;# 
  2327  050F                     	;# 
  2328  0510                     	;# 
  2329  0511                     	;# 
  2330  0512                     	;# 
  2331  0512                     	;# 
  2332  0513                     	;# 
  2333  0514                     	;# 
  2334  0515                     	;# 
  2335  0515                     	;# 
  2336  0516                     	;# 
  2337  0517                     	;# 
  2338  0518                     	;# 
  2339  0519                     	;# 
  2340  051A                     	;# 
  2341  051B                     	;# 
  2342  051C                     	;# 
  2343  051D                     	;# 
  2344  058C                     	;# 
  2345  058C                     	;# 
  2346  058D                     	;# 
  2347  058E                     	;# 
  2348  058F                     	;# 
  2349  058F                     	;# 
  2350  0590                     	;# 
  2351  0591                     	;# 
  2352  0592                     	;# 
  2353  0593                     	;# 
  2354  060C                     	;# 
  2355  060D                     	;# 
  2356  060E                     	;# 
  2357  060F                     	;# 
  2358  0610                     	;# 
  2359  0611                     	;# 
  2360  0612                     	;# 
  2361  0613                     	;# 
  2362  0614                     	;# 
  2363  0616                     	;# 
  2364  0617                     	;# 
  2365  0618                     	;# 
  2366  0619                     	;# 
  2367  061A                     	;# 
  2368  061B                     	;# 
  2369  061C                     	;# 
  2370  061D                     	;# 
  2371  061E                     	;# 
  2372  068C                     	;# 
  2373  068D                     	;# 
  2374  068E                     	;# 
  2375  068F                     	;# 
  2376  0690                     	;# 
  2377  0691                     	;# 
  2378  0692                     	;# 
  2379  0693                     	;# 
  2380  0694                     	;# 
  2381  070C                     	;# 
  2382  070D                     	;# 
  2383  070E                     	;# 
  2384  070F                     	;# 
  2385  0710                     	;# 
  2386  0711                     	;# 
  2387  0712                     	;# 
  2388  0713                     	;# 
  2389  0714                     	;# 
  2390  0716                     	;# 
  2391  0717                     	;# 
  2392  0718                     	;# 
  2393  0719                     	;# 
  2394  071A                     	;# 
  2395  071B                     	;# 
  2396  071C                     	;# 
  2397  071D                     	;# 
  2398  071E                     	;# 
  2399  0796                     	;# 
  2400  0797                     	;# 
  2401  0798                     	;# 
  2402  0799                     	;# 
  2403  079A                     	;# 
  2404  079B                     	;# 
  2405  080C                     	;# 
  2406  080D                     	;# 
  2407  080E                     	;# 
  2408  080F                     	;# 
  2409  0810                     	;# 
  2410  0811                     	;# 
  2411  0812                     	;# 
  2412  0813                     	;# 
  2413  0814                     	;# 
  2414  081A                     	;# 
  2415  081B                     	;# 
  2416  081C                     	;# 
  2417  081D                     	;# 
  2418  081E                     	;# 
  2419  081F                     	;# 
  2420  088C                     	;# 
  2421  088D                     	;# 
  2422  088E                     	;# 
  2423  088F                     	;# 
  2424  0890                     	;# 
  2425  0891                     	;# 
  2426  0892                     	;# 
  2427  0893                     	;# 
  2428  0895                     	;# 
  2429  0896                     	;# 
  2430  0897                     	;# 
  2431  0898                     	;# 
  2432  0899                     	;# 
  2433  089A                     	;# 
  2434  089B                     	;# 
  2435  090C                     	;# 
  2436  090E                     	;# 
  2437  090F                     	;# 
  2438  091F                     	;# 
  2439  091F                     	;# 
  2440  098F                     	;# 
  2441  098F                     	;# 
  2442  0990                     	;# 
  2443  0991                     	;# 
  2444  0992                     	;# 
  2445  0993                     	;# 
  2446  0994                     	;# 
  2447  0995                     	;# 
  2448  0996                     	;# 
  2449  0997                     	;# 
  2450  0E0F                     	;# 
  2451  0E10                     	;# 
  2452  0E11                     	;# 
  2453  0E12                     	;# 
  2454  0E13                     	;# 
  2455  0E14                     	;# 
  2456  0E15                     	;# 
  2457  0E16                     	;# 
  2458  0E17                     	;# 
  2459  0E18                     	;# 
  2460  0E19                     	;# 
  2461  0E1A                     	;# 
  2462  0E1B                     	;# 
  2463  0E1C                     	;# 
  2464  0E1D                     	;# 
  2465  0E1E                     	;# 
  2466  0E1F                     	;# 
  2467  0E20                     	;# 
  2468  0E21                     	;# 
  2469  0E22                     	;# 
  2470  0E23                     	;# 
  2471  0E24                     	;# 
  2472  0E25                     	;# 
  2473  0E26                     	;# 
  2474  0E27                     	;# 
  2475  0E28                     	;# 
  2476  0E29                     	;# 
  2477  0E2A                     	;# 
  2478  0E2B                     	;# 
  2479  0E2C                     	;# 
  2480  0E2D                     	;# 
  2481  0E2E                     	;# 
  2482  0E2F                     	;# 
  2483  0E30                     	;# 
  2484  0E31                     	;# 
  2485  0E32                     	;# 
  2486  0E33                     	;# 
  2487  0E34                     	;# 
  2488  0E35                     	;# 
  2489  0E36                     	;# 
  2490  0E37                     	;# 
  2491  0E8F                     	;# 
  2492  0E90                     	;# 
  2493  0E91                     	;# 
  2494  0E92                     	;# 
  2495  0E93                     	;# 
  2496  0E94                     	;# 
  2497  0E95                     	;# 
  2498  0E96                     	;# 
  2499  0E97                     	;# 
  2500  0E9C                     	;# 
  2501  0E9D                     	;# 
  2502  0E9E                     	;# 
  2503  0EA1                     	;# 
  2504  0EA2                     	;# 
  2505  0EA3                     	;# 
  2506  0EA4                     	;# 
  2507  0EA5                     	;# 
  2508  0EA9                     	;# 
  2509  0EAA                     	;# 
  2510  0EAB                     	;# 
  2511  0EAC                     	;# 
  2512  0EB1                     	;# 
  2513  0EB2                     	;# 
  2514  0EB3                     	;# 
  2515  0EB8                     	;# 
  2516  0EB9                     	;# 
  2517  0EBA                     	;# 
  2518  0EBB                     	;# 
  2519  0EBC                     	;# 
  2520  0EBD                     	;# 
  2521  0EBE                     	;# 
  2522  0EC3                     	;# 
  2523  0EC5                     	;# 
  2524  0EC6                     	;# 
  2525  0EC7                     	;# 
  2526  0EC8                     	;# 
  2527  0EC9                     	;# 
  2528  0ECA                     	;# 
  2529  0ECB                     	;# 
  2530  0ECC                     	;# 
  2531  0F10                     	;# 
  2532  0F11                     	;# 
  2533  0F12                     	;# 
  2534  0F13                     	;# 
  2535  0F14                     	;# 
  2536  0F15                     	;# 
  2537  0F16                     	;# 
  2538  0F17                     	;# 
  2539  0F18                     	;# 
  2540  0F19                     	;# 
  2541  0F1A                     	;# 
  2542  0F1B                     	;# 
  2543  0F1C                     	;# 
  2544  0F1D                     	;# 
  2545  0F1E                     	;# 
  2546  0F1F                     	;# 
  2547  0F20                     	;# 
  2548  0F21                     	;# 
  2549  0F22                     	;# 
  2550  0F23                     	;# 
  2551  0F24                     	;# 
  2552  0F25                     	;# 
  2553  0F26                     	;# 
  2554  0F27                     	;# 
  2555  0F38                     	;# 
  2556  0F39                     	;# 
  2557  0F3A                     	;# 
  2558  0F3B                     	;# 
  2559  0F3C                     	;# 
  2560  0F3D                     	;# 
  2561  0F3E                     	;# 
  2562  0F3F                     	;# 
  2563  0F40                     	;# 
  2564  0F41                     	;# 
  2565  0F43                     	;# 
  2566  0F44                     	;# 
  2567  0F45                     	;# 
  2568  0F46                     	;# 
  2569  0F47                     	;# 
  2570  0F48                     	;# 
  2571  0F49                     	;# 
  2572  0F4A                     	;# 
  2573  0F4B                     	;# 
  2574  0F4C                     	;# 
  2575  0F4E                     	;# 
  2576  0F4F                     	;# 
  2577  0F50                     	;# 
  2578  0F51                     	;# 
  2579  0F52                     	;# 
  2580  0F53                     	;# 
  2581  0F54                     	;# 
  2582  0F55                     	;# 
  2583  0F56                     	;# 
  2584  0F57                     	;# 
  2585  0F65                     	;# 
  2586  0F68                     	;# 
  2587  0F69                     	;# 
  2588  0F6A                     	;# 
  2589  0F6B                     	;# 
  2590  0FE4                     	;# 
  2591  0FE5                     	;# 
  2592  0FE6                     	;# 
  2593  0FE7                     	;# 
  2594  0FE8                     	;# 
  2595  0FE9                     	;# 
  2596  0FEA                     	;# 
  2597  0FEB                     	;# 
  2598  0FED                     	;# 
  2599  0FEE                     	;# 
  2600  0FEF                     	;# 
  2601  0000                     	;# 
  2602  0001                     	;# 
  2603  0002                     	;# 
  2604  0003                     	;# 
  2605  0004                     	;# 
  2606  0005                     	;# 
  2607  0006                     	;# 
  2608  0007                     	;# 
  2609  0008                     	;# 
  2610  0009                     	;# 
  2611  000A                     	;# 
  2612  000B                     	;# 
  2613  000C                     	;# 
  2614  000D                     	;# 
  2615  000E                     	;# 
  2616  0010                     	;# 
  2617  0011                     	;# 
  2618  0012                     	;# 
  2619  0013                     	;# 
  2620  0016                     	;# 
  2621  0017                     	;# 
  2622  0018                     	;# 
  2623  001C                     	;# 
  2624  001C                     	;# 
  2625  001D                     	;# 
  2626  001D                     	;# 
  2627  001E                     	;# 
  2628  001F                     	;# 
  2629  008C                     	;# 
  2630  008C                     	;# 
  2631  008D                     	;# 
  2632  008E                     	;# 
  2633  008E                     	;# 
  2634  008F                     	;# 
  2635  0090                     	;# 
  2636  0090                     	;# 
  2637  0091                     	;# 
  2638  0093                     	;# 
  2639  0094                     	;# 
  2640  0095                     	;# 
  2641  0096                     	;# 
  2642  0097                     	;# 
  2643  0098                     	;# 
  2644  0099                     	;# 
  2645  009A                     	;# 
  2646  009B                     	;# 
  2647  009C                     	;# 
  2648  009D                     	;# 
  2649  009E                     	;# 
  2650  010C                     	;# 
  2651  010D                     	;# 
  2652  010E                     	;# 
  2653  010E                     	;# 
  2654  010F                     	;# 
  2655  0110                     	;# 
  2656  0110                     	;# 
  2657  0111                     	;# 
  2658  0112                     	;# 
  2659  0112                     	;# 
  2660  0113                     	;# 
  2661  0114                     	;# 
  2662  0114                     	;# 
  2663  0115                     	;# 
  2664  0116                     	;# 
  2665  0116                     	;# 
  2666  0117                     	;# 
  2667  0119                     	;# 
  2668  0119                     	;# 
  2669  0119                     	;# 
  2670  011A                     	;# 
  2671  011A                     	;# 
  2672  011A                     	;# 
  2673  011B                     	;# 
  2674  011B                     	;# 
  2675  011B                     	;# 
  2676  011B                     	;# 
  2677  011B                     	;# 
  2678  011C                     	;# 
  2679  011C                     	;# 
  2680  011C                     	;# 
  2681  011D                     	;# 
  2682  011D                     	;# 
  2683  011D                     	;# 
  2684  011E                     	;# 
  2685  011E                     	;# 
  2686  011E                     	;# 
  2687  011F                     	;# 
  2688  011F                     	;# 
  2689  011F                     	;# 
  2690  011F                     	;# 
  2691  011F                     	;# 
  2692  018C                     	;# 
  2693  018D                     	;# 
  2694  018E                     	;# 
  2695  018F                     	;# 
  2696  0190                     	;# 
  2697  0191                     	;# 
  2698  0192                     	;# 
  2699  0196                     	;# 
  2700  0197                     	;# 
  2701  0198                     	;# 
  2702  0199                     	;# 
  2703  019A                     	;# 
  2704  019B                     	;# 
  2705  019C                     	;# 
  2706  020C                     	;# 
  2707  020D                     	;# 
  2708  020E                     	;# 
  2709  020F                     	;# 
  2710  020F                     	;# 
  2711  0210                     	;# 
  2712  0210                     	;# 
  2713  0211                     	;# 
  2714  0211                     	;# 
  2715  0212                     	;# 
  2716  0213                     	;# 
  2717  0214                     	;# 
  2718  0215                     	;# 
  2719  0215                     	;# 
  2720  0216                     	;# 
  2721  0216                     	;# 
  2722  0217                     	;# 
  2723  0217                     	;# 
  2724  0218                     	;# 
  2725  0219                     	;# 
  2726  021A                     	;# 
  2727  021B                     	;# 
  2728  021B                     	;# 
  2729  021C                     	;# 
  2730  021C                     	;# 
  2731  021D                     	;# 
  2732  021D                     	;# 
  2733  021E                     	;# 
  2734  021F                     	;# 
  2735  028C                     	;# 
  2736  028C                     	;# 
  2737  028D                     	;# 
  2738  028D                     	;# 
  2739  028E                     	;# 
  2740  028F                     	;# 
  2741  0290                     	;# 
  2742  0290                     	;# 
  2743  0291                     	;# 
  2744  0292                     	;# 
  2745  0292                     	;# 
  2746  0293                     	;# 
  2747  0293                     	;# 
  2748  0294                     	;# 
  2749  0295                     	;# 
  2750  0296                     	;# 
  2751  0296                     	;# 
  2752  0297                     	;# 
  2753  0298                     	;# 
  2754  0298                     	;# 
  2755  0299                     	;# 
  2756  0299                     	;# 
  2757  029A                     	;# 
  2758  029B                     	;# 
  2759  029C                     	;# 
  2760  029C                     	;# 
  2761  029D                     	;# 
  2762  030C                     	;# 
  2763  030C                     	;# 
  2764  030D                     	;# 
  2765  030E                     	;# 
  2766  030F                     	;# 
  2767  0310                     	;# 
  2768  0310                     	;# 
  2769  0311                     	;# 
  2770  0312                     	;# 
  2771  0313                     	;# 
  2772  0314                     	;# 
  2773  0314                     	;# 
  2774  0315                     	;# 
  2775  0316                     	;# 
  2776  0317                     	;# 
  2777  0318                     	;# 
  2778  0318                     	;# 
  2779  0319                     	;# 
  2780  031A                     	;# 
  2781  031B                     	;# 
  2782  031C                     	;# 
  2783  031C                     	;# 
  2784  031D                     	;# 
  2785  031E                     	;# 
  2786  031F                     	;# 
  2787  038C                     	;# 
  2788  038D                     	;# 
  2789  038E                     	;# 
  2790  0390                     	;# 
  2791  0391                     	;# 
  2792  0392                     	;# 
  2793  040C                     	;# 
  2794  040D                     	;# 
  2795  040E                     	;# 
  2796  040F                     	;# 
  2797  0410                     	;# 
  2798  0411                     	;# 
  2799  0416                     	;# 
  2800  0416                     	;# 
  2801  0417                     	;# 
  2802  0418                     	;# 
  2803  0418                     	;# 
  2804  0419                     	;# 
  2805  041A                     	;# 
  2806  041A                     	;# 
  2807  041B                     	;# 
  2808  041C                     	;# 
  2809  041C                     	;# 
  2810  041D                     	;# 
  2811  041E                     	;# 
  2812  041F                     	;# 
  2813  048C                     	;# 
  2814  048C                     	;# 
  2815  048D                     	;# 
  2816  048E                     	;# 
  2817  048F                     	;# 
  2818  048F                     	;# 
  2819  0490                     	;# 
  2820  0491                     	;# 
  2821  0492                     	;# 
  2822  0492                     	;# 
  2823  0493                     	;# 
  2824  0494                     	;# 
  2825  0495                     	;# 
  2826  0495                     	;# 
  2827  0496                     	;# 
  2828  0497                     	;# 
  2829  0498                     	;# 
  2830  0499                     	;# 
  2831  049A                     	;# 
  2832  049B                     	;# 
  2833  049C                     	;# 
  2834  049D                     	;# 
  2835  050C                     	;# 
  2836  050C                     	;# 
  2837  050D                     	;# 
  2838  050E                     	;# 
  2839  050F                     	;# 
  2840  050F                     	;# 
  2841  0510                     	;# 
  2842  0511                     	;# 
  2843  0512                     	;# 
  2844  0512                     	;# 
  2845  0513                     	;# 
  2846  0514                     	;# 
  2847  0515                     	;# 
  2848  0515                     	;# 
  2849  0516                     	;# 
  2850  0517                     	;# 
  2851  0518                     	;# 
  2852  0519                     	;# 
  2853  051A                     	;# 
  2854  051B                     	;# 
  2855  051C                     	;# 
  2856  051D                     	;# 
  2857  058C                     	;# 
  2858  058C                     	;# 
  2859  058D                     	;# 
  2860  058E                     	;# 
  2861  058F                     	;# 
  2862  058F                     	;# 
  2863  0590                     	;# 
  2864  0591                     	;# 
  2865  0592                     	;# 
  2866  0593                     	;# 
  2867  060C                     	;# 
  2868  060D                     	;# 
  2869  060E                     	;# 
  2870  060F                     	;# 
  2871  0610                     	;# 
  2872  0611                     	;# 
  2873  0612                     	;# 
  2874  0613                     	;# 
  2875  0614                     	;# 
  2876  0616                     	;# 
  2877  0617                     	;# 
  2878  0618                     	;# 
  2879  0619                     	;# 
  2880  061A                     	;# 
  2881  061B                     	;# 
  2882  061C                     	;# 
  2883  061D                     	;# 
  2884  061E                     	;# 
  2885  068C                     	;# 
  2886  068D                     	;# 
  2887  068E                     	;# 
  2888  068F                     	;# 
  2889  0690                     	;# 
  2890  0691                     	;# 
  2891  0692                     	;# 
  2892  0693                     	;# 
  2893  0694                     	;# 
  2894  070C                     	;# 
  2895  070D                     	;# 
  2896  070E                     	;# 
  2897  070F                     	;# 
  2898  0710                     	;# 
  2899  0711                     	;# 
  2900  0712                     	;# 
  2901  0713                     	;# 
  2902  0714                     	;# 
  2903  0716                     	;# 
  2904  0717                     	;# 
  2905  0718                     	;# 
  2906  0719                     	;# 
  2907  071A                     	;# 
  2908  071B                     	;# 
  2909  071C                     	;# 
  2910  071D                     	;# 
  2911  071E                     	;# 
  2912  0796                     	;# 
  2913  0797                     	;# 
  2914  0798                     	;# 
  2915  0799                     	;# 
  2916  079A                     	;# 
  2917  079B                     	;# 
  2918  080C                     	;# 
  2919  080D                     	;# 
  2920  080E                     	;# 
  2921  080F                     	;# 
  2922  0810                     	;# 
  2923  0811                     	;# 
  2924  0812                     	;# 
  2925  0813                     	;# 
  2926  0814                     	;# 
  2927  081A                     	;# 
  2928  081B                     	;# 
  2929  081C                     	;# 
  2930  081D                     	;# 
  2931  081E                     	;# 
  2932  081F                     	;# 
  2933  088C                     	;# 
  2934  088D                     	;# 
  2935  088E                     	;# 
  2936  088F                     	;# 
  2937  0890                     	;# 
  2938  0891                     	;# 
  2939  0892                     	;# 
  2940  0893                     	;# 
  2941  0895                     	;# 
  2942  0896                     	;# 
  2943  0897                     	;# 
  2944  0898                     	;# 
  2945  0899                     	;# 
  2946  089A                     	;# 
  2947  089B                     	;# 
  2948  090C                     	;# 
  2949  090E                     	;# 
  2950  090F                     	;# 
  2951  091F                     	;# 
  2952  091F                     	;# 
  2953  098F                     	;# 
  2954  098F                     	;# 
  2955  0990                     	;# 
  2956  0991                     	;# 
  2957  0992                     	;# 
  2958  0993                     	;# 
  2959  0994                     	;# 
  2960  0995                     	;# 
  2961  0996                     	;# 
  2962  0997                     	;# 
  2963  0E0F                     	;# 
  2964  0E10                     	;# 
  2965  0E11                     	;# 
  2966  0E12                     	;# 
  2967  0E13                     	;# 
  2968  0E14                     	;# 
  2969  0E15                     	;# 
  2970  0E16                     	;# 
  2971  0E17                     	;# 
  2972  0E18                     	;# 
  2973  0E19                     	;# 
  2974  0E1A                     	;# 
  2975  0E1B                     	;# 
  2976  0E1C                     	;# 
  2977  0E1D                     	;# 
  2978  0E1E                     	;# 
  2979  0E1F                     	;# 
  2980  0E20                     	;# 
  2981  0E21                     	;# 
  2982  0E22                     	;# 
  2983  0E23                     	;# 
  2984  0E24                     	;# 
  2985  0E25                     	;# 
  2986  0E26                     	;# 
  2987  0E27                     	;# 
  2988  0E28                     	;# 
  2989  0E29                     	;# 
  2990  0E2A                     	;# 
  2991  0E2B                     	;# 
  2992  0E2C                     	;# 
  2993  0E2D                     	;# 
  2994  0E2E                     	;# 
  2995  0E2F                     	;# 
  2996  0E30                     	;# 
  2997  0E31                     	;# 
  2998  0E32                     	;# 
  2999  0E33                     	;# 
  3000  0E34                     	;# 
  3001  0E35                     	;# 
  3002  0E36                     	;# 
  3003  0E37                     	;# 
  3004  0E8F                     	;# 
  3005  0E90                     	;# 
  3006  0E91                     	;# 
  3007  0E92                     	;# 
  3008  0E93                     	;# 
  3009  0E94                     	;# 
  3010  0E95                     	;# 
  3011  0E96                     	;# 
  3012  0E97                     	;# 
  3013  0E9C                     	;# 
  3014  0E9D                     	;# 
  3015  0E9E                     	;# 
  3016  0EA1                     	;# 
  3017  0EA2                     	;# 
  3018  0EA3                     	;# 
  3019  0EA4                     	;# 
  3020  0EA5                     	;# 
  3021  0EA9                     	;# 
  3022  0EAA                     	;# 
  3023  0EAB                     	;# 
  3024  0EAC                     	;# 
  3025  0EB1                     	;# 
  3026  0EB2                     	;# 
  3027  0EB3                     	;# 
  3028  0EB8                     	;# 
  3029  0EB9                     	;# 
  3030  0EBA                     	;# 
  3031  0EBB                     	;# 
  3032  0EBC                     	;# 
  3033  0EBD                     	;# 
  3034  0EBE                     	;# 
  3035  0EC3                     	;# 
  3036  0EC5                     	;# 
  3037  0EC6                     	;# 
  3038  0EC7                     	;# 
  3039  0EC8                     	;# 
  3040  0EC9                     	;# 
  3041  0ECA                     	;# 
  3042  0ECB                     	;# 
  3043  0ECC                     	;# 
  3044  0F10                     	;# 
  3045  0F11                     	;# 
  3046  0F12                     	;# 
  3047  0F13                     	;# 
  3048  0F14                     	;# 
  3049  0F15                     	;# 
  3050  0F16                     	;# 
  3051  0F17                     	;# 
  3052  0F18                     	;# 
  3053  0F19                     	;# 
  3054  0F1A                     	;# 
  3055  0F1B                     	;# 
  3056  0F1C                     	;# 
  3057  0F1D                     	;# 
  3058  0F1E                     	;# 
  3059  0F1F                     	;# 
  3060  0F20                     	;# 
  3061  0F21                     	;# 
  3062  0F22                     	;# 
  3063  0F23                     	;# 
  3064  0F24                     	;# 
  3065  0F25                     	;# 
  3066  0F26                     	;# 
  3067  0F27                     	;# 
  3068  0F38                     	;# 
  3069  0F39                     	;# 
  3070  0F3A                     	;# 
  3071  0F3B                     	;# 
  3072  0F3C                     	;# 
  3073  0F3D                     	;# 
  3074  0F3E                     	;# 
  3075  0F3F                     	;# 
  3076  0F40                     	;# 
  3077  0F41                     	;# 
  3078  0F43                     	;# 
  3079  0F44                     	;# 
  3080  0F45                     	;# 
  3081  0F46                     	;# 
  3082  0F47                     	;# 
  3083  0F48                     	;# 
  3084  0F49                     	;# 
  3085  0F4A                     	;# 
  3086  0F4B                     	;# 
  3087  0F4C                     	;# 
  3088  0F4E                     	;# 
  3089  0F4F                     	;# 
  3090  0F50                     	;# 
  3091  0F51                     	;# 
  3092  0F52                     	;# 
  3093  0F53                     	;# 
  3094  0F54                     	;# 
  3095  0F55                     	;# 
  3096  0F56                     	;# 
  3097  0F57                     	;# 
  3098  0F65                     	;# 
  3099  0F68                     	;# 
  3100  0F69                     	;# 
  3101  0F6A                     	;# 
  3102  0F6B                     	;# 
  3103  0FE4                     	;# 
  3104  0FE5                     	;# 
  3105  0FE6                     	;# 
  3106  0FE7                     	;# 
  3107  0FE8                     	;# 
  3108  0FE9                     	;# 
  3109  0FEA                     	;# 
  3110  0FEB                     	;# 
  3111  0FED                     	;# 
  3112  0FEE                     	;# 
  3113  0FEF                     	;# 
  3114  0000                     	;# 
  3115  0001                     	;# 
  3116  0002                     	;# 
  3117  0003                     	;# 
  3118  0004                     	;# 
  3119  0005                     	;# 
  3120  0006                     	;# 
  3121  0007                     	;# 
  3122  0008                     	;# 
  3123  0009                     	;# 
  3124  000A                     	;# 
  3125  000B                     	;# 
  3126  000C                     	;# 
  3127  000D                     	;# 
  3128  000E                     	;# 
  3129  0010                     	;# 
  3130  0011                     	;# 
  3131  0012                     	;# 
  3132  0013                     	;# 
  3133  0016                     	;# 
  3134  0017                     	;# 
  3135  0018                     	;# 
  3136  001C                     	;# 
  3137  001C                     	;# 
  3138  001D                     	;# 
  3139  001D                     	;# 
  3140  001E                     	;# 
  3141  001F                     	;# 
  3142  008C                     	;# 
  3143  008C                     	;# 
  3144  008D                     	;# 
  3145  008E                     	;# 
  3146  008E                     	;# 
  3147  008F                     	;# 
  3148  0090                     	;# 
  3149  0090                     	;# 
  3150  0091                     	;# 
  3151  0093                     	;# 
  3152  0094                     	;# 
  3153  0095                     	;# 
  3154  0096                     	;# 
  3155  0097                     	;# 
  3156  0098                     	;# 
  3157  0099                     	;# 
  3158  009A                     	;# 
  3159  009B                     	;# 
  3160  009C                     	;# 
  3161  009D                     	;# 
  3162  009E                     	;# 
  3163  010C                     	;# 
  3164  010D                     	;# 
  3165  010E                     	;# 
  3166  010E                     	;# 
  3167  010F                     	;# 
  3168  0110                     	;# 
  3169  0110                     	;# 
  3170  0111                     	;# 
  3171  0112                     	;# 
  3172  0112                     	;# 
  3173  0113                     	;# 
  3174  0114                     	;# 
  3175  0114                     	;# 
  3176  0115                     	;# 
  3177  0116                     	;# 
  3178  0116                     	;# 
  3179  0117                     	;# 
  3180  0119                     	;# 
  3181  0119                     	;# 
  3182  0119                     	;# 
  3183  011A                     	;# 
  3184  011A                     	;# 
  3185  011A                     	;# 
  3186  011B                     	;# 
  3187  011B                     	;# 
  3188  011B                     	;# 
  3189  011B                     	;# 
  3190  011B                     	;# 
  3191  011C                     	;# 
  3192  011C                     	;# 
  3193  011C                     	;# 
  3194  011D                     	;# 
  3195  011D                     	;# 
  3196  011D                     	;# 
  3197  011E                     	;# 
  3198  011E                     	;# 
  3199  011E                     	;# 
  3200  011F                     	;# 
  3201  011F                     	;# 
  3202  011F                     	;# 
  3203  011F                     	;# 
  3204  011F                     	;# 
  3205  018C                     	;# 
  3206  018D                     	;# 
  3207  018E                     	;# 
  3208  018F                     	;# 
  3209  0190                     	;# 
  3210  0191                     	;# 
  3211  0192                     	;# 
  3212  0196                     	;# 
  3213  0197                     	;# 
  3214  0198                     	;# 
  3215  0199                     	;# 
  3216  019A                     	;# 
  3217  019B                     	;# 
  3218  019C                     	;# 
  3219  020C                     	;# 
  3220  020D                     	;# 
  3221  020E                     	;# 
  3222  020F                     	;# 
  3223  020F                     	;# 
  3224  0210                     	;# 
  3225  0210                     	;# 
  3226  0211                     	;# 
  3227  0211                     	;# 
  3228  0212                     	;# 
  3229  0213                     	;# 
  3230  0214                     	;# 
  3231  0215                     	;# 
  3232  0215                     	;# 
  3233  0216                     	;# 
  3234  0216                     	;# 
  3235  0217                     	;# 
  3236  0217                     	;# 
  3237  0218                     	;# 
  3238  0219                     	;# 
  3239  021A                     	;# 
  3240  021B                     	;# 
  3241  021B                     	;# 
  3242  021C                     	;# 
  3243  021C                     	;# 
  3244  021D                     	;# 
  3245  021D                     	;# 
  3246  021E                     	;# 
  3247  021F                     	;# 
  3248  028C                     	;# 
  3249  028C                     	;# 
  3250  028D                     	;# 
  3251  028D                     	;# 
  3252  028E                     	;# 
  3253  028F                     	;# 
  3254  0290                     	;# 
  3255  0290                     	;# 
  3256  0291                     	;# 
  3257  0292                     	;# 
  3258  0292                     	;# 
  3259  0293                     	;# 
  3260  0293                     	;# 
  3261  0294                     	;# 
  3262  0295                     	;# 
  3263  0296                     	;# 
  3264  0296                     	;# 
  3265  0297                     	;# 
  3266  0298                     	;# 
  3267  0298                     	;# 
  3268  0299                     	;# 
  3269  0299                     	;# 
  3270  029A                     	;# 
  3271  029B                     	;# 
  3272  029C                     	;# 
  3273  029C                     	;# 
  3274  029D                     	;# 
  3275  030C                     	;# 
  3276  030C                     	;# 
  3277  030D                     	;# 
  3278  030E                     	;# 
  3279  030F                     	;# 
  3280  0310                     	;# 
  3281  0310                     	;# 
  3282  0311                     	;# 
  3283  0312                     	;# 
  3284  0313                     	;# 
  3285  0314                     	;# 
  3286  0314                     	;# 
  3287  0315                     	;# 
  3288  0316                     	;# 
  3289  0317                     	;# 
  3290  0318                     	;# 
  3291  0318                     	;# 
  3292  0319                     	;# 
  3293  031A                     	;# 
  3294  031B                     	;# 
  3295  031C                     	;# 
  3296  031C                     	;# 
  3297  031D                     	;# 
  3298  031E                     	;# 
  3299  031F                     	;# 
  3300  038C                     	;# 
  3301  038D                     	;# 
  3302  038E                     	;# 
  3303  0390                     	;# 
  3304  0391                     	;# 
  3305  0392                     	;# 
  3306  040C                     	;# 
  3307  040D                     	;# 
  3308  040E                     	;# 
  3309  040F                     	;# 
  3310  0410                     	;# 
  3311  0411                     	;# 
  3312  0416                     	;# 
  3313  0416                     	;# 
  3314  0417                     	;# 
  3315  0418                     	;# 
  3316  0418                     	;# 
  3317  0419                     	;# 
  3318  041A                     	;# 
  3319  041A                     	;# 
  3320  041B                     	;# 
  3321  041C                     	;# 
  3322  041C                     	;# 
  3323  041D                     	;# 
  3324  041E                     	;# 
  3325  041F                     	;# 
  3326  048C                     	;# 
  3327  048C                     	;# 
  3328  048D                     	;# 
  3329  048E                     	;# 
  3330  048F                     	;# 
  3331  048F                     	;# 
  3332  0490                     	;# 
  3333  0491                     	;# 
  3334  0492                     	;# 
  3335  0492                     	;# 
  3336  0493                     	;# 
  3337  0494                     	;# 
  3338  0495                     	;# 
  3339  0495                     	;# 
  3340  0496                     	;# 
  3341  0497                     	;# 
  3342  0498                     	;# 
  3343  0499                     	;# 
  3344  049A                     	;# 
  3345  049B                     	;# 
  3346  049C                     	;# 
  3347  049D                     	;# 
  3348  050C                     	;# 
  3349  050C                     	;# 
  3350  050D                     	;# 
  3351  050E                     	;# 
  3352  050F                     	;# 
  3353  050F                     	;# 
  3354  0510                     	;# 
  3355  0511                     	;# 
  3356  0512                     	;# 
  3357  0512                     	;# 
  3358  0513                     	;# 
  3359  0514                     	;# 
  3360  0515                     	;# 
  3361  0515                     	;# 
  3362  0516                     	;# 
  3363  0517                     	;# 
  3364  0518                     	;# 
  3365  0519                     	;# 
  3366  051A                     	;# 
  3367  051B                     	;# 
  3368  051C                     	;# 
  3369  051D                     	;# 
  3370  058C                     	;# 
  3371  058C                     	;# 
  3372  058D                     	;# 
  3373  058E                     	;# 
  3374  058F                     	;# 
  3375  058F                     	;# 
  3376  0590                     	;# 
  3377  0591                     	;# 
  3378  0592                     	;# 
  3379  0593                     	;# 
  3380  060C                     	;# 
  3381  060D                     	;# 
  3382  060E                     	;# 
  3383  060F                     	;# 
  3384  0610                     	;# 
  3385  0611                     	;# 
  3386  0612                     	;# 
  3387  0613                     	;# 
  3388  0614                     	;# 
  3389  0616                     	;# 
  3390  0617                     	;# 
  3391  0618                     	;# 
  3392  0619                     	;# 
  3393  061A                     	;# 
  3394  061B                     	;# 
  3395  061C                     	;# 
  3396  061D                     	;# 
  3397  061E                     	;# 
  3398  068C                     	;# 
  3399  068D                     	;# 
  3400  068E                     	;# 
  3401  068F                     	;# 
  3402  0690                     	;# 
  3403  0691                     	;# 
  3404  0692                     	;# 
  3405  0693                     	;# 
  3406  0694                     	;# 
  3407  070C                     	;# 
  3408  070D                     	;# 
  3409  070E                     	;# 
  3410  070F                     	;# 
  3411  0710                     	;# 
  3412  0711                     	;# 
  3413  0712                     	;# 
  3414  0713                     	;# 
  3415  0714                     	;# 
  3416  0716                     	;# 
  3417  0717                     	;# 
  3418  0718                     	;# 
  3419  0719                     	;# 
  3420  071A                     	;# 
  3421  071B                     	;# 
  3422  071C                     	;# 
  3423  071D                     	;# 
  3424  071E                     	;# 
  3425  0796                     	;# 
  3426  0797                     	;# 
  3427  0798                     	;# 
  3428  0799                     	;# 
  3429  079A                     	;# 
  3430  079B                     	;# 
  3431  080C                     	;# 
  3432  080D                     	;# 
  3433  080E                     	;# 
  3434  080F                     	;# 
  3435  0810                     	;# 
  3436  0811                     	;# 
  3437  0812                     	;# 
  3438  0813                     	;# 
  3439  0814                     	;# 
  3440  081A                     	;# 
  3441  081B                     	;# 
  3442  081C                     	;# 
  3443  081D                     	;# 
  3444  081E                     	;# 
  3445  081F                     	;# 
  3446  088C                     	;# 
  3447  088D                     	;# 
  3448  088E                     	;# 
  3449  088F                     	;# 
  3450  0890                     	;# 
  3451  0891                     	;# 
  3452  0892                     	;# 
  3453  0893                     	;# 
  3454  0895                     	;# 
  3455  0896                     	;# 
  3456  0897                     	;# 
  3457  0898                     	;# 
  3458  0899                     	;# 
  3459  089A                     	;# 
  3460  089B                     	;# 
  3461  090C                     	;# 
  3462  090E                     	;# 
  3463  090F                     	;# 
  3464  091F                     	;# 
  3465  091F                     	;# 
  3466  098F                     	;# 
  3467  098F                     	;# 
  3468  0990                     	;# 
  3469  0991                     	;# 
  3470  0992                     	;# 
  3471  0993                     	;# 
  3472  0994                     	;# 
  3473  0995                     	;# 
  3474  0996                     	;# 
  3475  0997                     	;# 
  3476  0E0F                     	;# 
  3477  0E10                     	;# 
  3478  0E11                     	;# 
  3479  0E12                     	;# 
  3480  0E13                     	;# 
  3481  0E14                     	;# 
  3482  0E15                     	;# 
  3483  0E16                     	;# 
  3484  0E17                     	;# 
  3485  0E18                     	;# 
  3486  0E19                     	;# 
  3487  0E1A                     	;# 
  3488  0E1B                     	;# 
  3489  0E1C                     	;# 
  3490  0E1D                     	;# 
  3491  0E1E                     	;# 
  3492  0E1F                     	;# 
  3493  0E20                     	;# 
  3494  0E21                     	;# 
  3495  0E22                     	;# 
  3496  0E23                     	;# 
  3497  0E24                     	;# 
  3498  0E25                     	;# 
  3499  0E26                     	;# 
  3500  0E27                     	;# 
  3501  0E28                     	;# 
  3502  0E29                     	;# 
  3503  0E2A                     	;# 
  3504  0E2B                     	;# 
  3505  0E2C                     	;# 
  3506  0E2D                     	;# 
  3507  0E2E                     	;# 
  3508  0E2F                     	;# 
  3509  0E30                     	;# 
  3510  0E31                     	;# 
  3511  0E32                     	;# 
  3512  0E33                     	;# 
  3513  0E34                     	;# 
  3514  0E35                     	;# 
  3515  0E36                     	;# 
  3516  0E37                     	;# 
  3517  0E8F                     	;# 
  3518  0E90                     	;# 
  3519  0E91                     	;# 
  3520  0E92                     	;# 
  3521  0E93                     	;# 
  3522  0E94                     	;# 
  3523  0E95                     	;# 
  3524  0E96                     	;# 
  3525  0E97                     	;# 
  3526  0E9C                     	;# 
  3527  0E9D                     	;# 
  3528  0E9E                     	;# 
  3529  0EA1                     	;# 
  3530  0EA2                     	;# 
  3531  0EA3                     	;# 
  3532  0EA4                     	;# 
  3533  0EA5                     	;# 
  3534  0EA9                     	;# 
  3535  0EAA                     	;# 
  3536  0EAB                     	;# 
  3537  0EAC                     	;# 
  3538  0EB1                     	;# 
  3539  0EB2                     	;# 
  3540  0EB3                     	;# 
  3541  0EB8                     	;# 
  3542  0EB9                     	;# 
  3543  0EBA                     	;# 
  3544  0EBB                     	;# 
  3545  0EBC                     	;# 
  3546  0EBD                     	;# 
  3547  0EBE                     	;# 
  3548  0EC3                     	;# 
  3549  0EC5                     	;# 
  3550  0EC6                     	;# 
  3551  0EC7                     	;# 
  3552  0EC8                     	;# 
  3553  0EC9                     	;# 
  3554  0ECA                     	;# 
  3555  0ECB                     	;# 
  3556  0ECC                     	;# 
  3557  0F10                     	;# 
  3558  0F11                     	;# 
  3559  0F12                     	;# 
  3560  0F13                     	;# 
  3561  0F14                     	;# 
  3562  0F15                     	;# 
  3563  0F16                     	;# 
  3564  0F17                     	;# 
  3565  0F18                     	;# 
  3566  0F19                     	;# 
  3567  0F1A                     	;# 
  3568  0F1B                     	;# 
  3569  0F1C                     	;# 
  3570  0F1D                     	;# 
  3571  0F1E                     	;# 
  3572  0F1F                     	;# 
  3573  0F20                     	;# 
  3574  0F21                     	;# 
  3575  0F22                     	;# 
  3576  0F23                     	;# 
  3577  0F24                     	;# 
  3578  0F25                     	;# 
  3579  0F26                     	;# 
  3580  0F27                     	;# 
  3581  0F38                     	;# 
  3582  0F39                     	;# 
  3583  0F3A                     	;# 
  3584  0F3B                     	;# 
  3585  0F3C                     	;# 
  3586  0F3D                     	;# 
  3587  0F3E                     	;# 
  3588  0F3F                     	;# 
  3589  0F40                     	;# 
  3590  0F41                     	;# 
  3591  0F43                     	;# 
  3592  0F44                     	;# 
  3593  0F45                     	;# 
  3594  0F46                     	;# 
  3595  0F47                     	;# 
  3596  0F48                     	;# 
  3597  0F49                     	;# 
  3598  0F4A                     	;# 
  3599  0F4B                     	;# 
  3600  0F4C                     	;# 
  3601  0F4E                     	;# 
  3602  0F4F                     	;# 
  3603  0F50                     	;# 
  3604  0F51                     	;# 
  3605  0F52                     	;# 
  3606  0F53                     	;# 
  3607  0F54                     	;# 
  3608  0F55                     	;# 
  3609  0F56                     	;# 
  3610  0F57                     	;# 
  3611  0F65                     	;# 
  3612  0F68                     	;# 
  3613  0F69                     	;# 
  3614  0F6A                     	;# 
  3615  0F6B                     	;# 
  3616  0FE4                     	;# 
  3617  0FE5                     	;# 
  3618  0FE6                     	;# 
  3619  0FE7                     	;# 
  3620  0FE8                     	;# 
  3621  0FE9                     	;# 
  3622  0FEA                     	;# 
  3623  0FEB                     	;# 
  3624  0FED                     	;# 
  3625  0FEE                     	;# 
  3626  0FEF                     	;# 
  3627                           
  3628                           	psect	stringtext
  3629  046A                     __pstringtext:	
  3630  046A                     _dpowers:	
  3631  046A  3401               	retlw	1
  3632  046B  3400               	retlw	0
  3633  046C  340A               	retlw	10
  3634  046D  3400               	retlw	0
  3635  046E  3464               	retlw	100
  3636  046F  3400               	retlw	0
  3637  0470  34E8               	retlw	232
  3638  0471  3403               	retlw	3
  3639  0472  3410               	retlw	16
  3640  0473  3427               	retlw	39
  3641  0474                     __end_of_dpowers:	
  3642  000B                     _INTCONbits	set	11
  3643  0016                     _LATA	set	22
  3644  0016                     _LATAbits	set	22
  3645  0017                     _LATB	set	23
  3646  0018                     _LATC	set	24
  3647  000C                     _PORTAbits	set	12
  3648  0011                     _TRISA	set	17
  3649  0012                     _TRISB	set	18
  3650  0013                     _TRISC	set	19
  3651  005F                     _GIE	set	95
  3652  011F                     _BAUD1CON	set	287
  3653  0119                     _RC1REG	set	281
  3654  011D                     _RC1STA	set	285
  3655  011D                     _RC1STAbits	set	285
  3656  011C                     _SP1BRGH	set	284
  3657  011B                     _SP1BRGL	set	283
  3658  011A                     _TX1REG	set	282
  3659  011E                     _TX1STA	set	286
  3660  0197                     _SSP2ADD	set	407
  3661  0196                     _SSP2BUF	set	406
  3662  019A                     _SSP2CON1	set	410
  3663  019A                     _SSP2CON1bits	set	410
  3664  019B                     _SSP2CON2bits	set	411
  3665  019C                     _SSP2CON3	set	412
  3666  0199                     _SSP2STAT	set	409
  3667  0299                     _PR6	set	665
  3668  029C                     _T6CLKCON	set	668
  3669  029A                     _T6CON	set	666
  3670  029A                     _T6CONbits	set	666
  3671  029B                     _T6HLT	set	667
  3672  029B                     _T6HLTbits	set	667
  3673  0299                     _T6PR	set	665
  3674  029D                     _T6RST	set	669
  3675  029D                     _T6RSTbits	set	669
  3676  0298                     _T6TMR	set	664
  3677  0298                     _TMR6	set	664
  3678  0719                     _PIE3bits	set	1817
  3679  070F                     _PIR3bits	set	1807
  3680  0710                     _PIR4bits	set	1808
  3681  088D                     _OSCCON1	set	2189
  3682  088F                     _OSCCON3	set	2191
  3683  0891                     _OSCEN	set	2193
  3684  0893                     _OSCFRQ	set	2195
  3685  0892                     _OSCTUNE	set	2194
  3686  0E8F                     _PPSLOCK	set	3727
  3687  0E8F                     _PPSLOCKbits	set	3727
  3688  0EC8                     _SSP2CLKPPSbits	set	3784
  3689  0EC9                     _SSP2DATPPSbits	set	3785
  3690  0E9E                     _T6AINPPSbits	set	3742
  3691  0F38                     _ANSELA	set	3896
  3692  0F43                     _ANSELB	set	3907
  3693  0F4E                     _ANSELC	set	3918
  3694  0F3A                     _ODCONA	set	3898
  3695  0F45                     _ODCONB	set	3909
  3696  0F50                     _ODCONC	set	3920
  3697  0F20                     _RC0PPS	set	3872
  3698  0F23                     _RC3PPS	set	3875
  3699  0F24                     _RC4PPS	set	3876
  3700  0F26                     _RC6PPS	set	3878
  3701  0F39                     _WPUA	set	3897
  3702  0F44                     _WPUB	set	3908
  3703  0F4F                     _WPUC	set	3919
  3704  0F65                     _WPUE	set	3941
  3705  0474                     STR_2:	
  3706  0474  3425               	retlw	37	;'%'
  3707  0475  3464               	retlw	100	;'d'
  3708  0476  342E               	retlw	46	;'.'
  3709  0477  3425               	retlw	37	;'%'
  3710  0478  3464               	retlw	100	;'d'
  3711  0479  3400               	retlw	0
  3712  047A                     STR_1:	
  3713  047A  340A               	retlw	10
  3714  047B  3400               	retlw	0
  3715                           
  3716                           ; #config settings
  3717  0000                     
  3718                           	psect	cinit
  3719  0022                     start_initialization:	
  3720  0022                     __initialization:	
  3721                           
  3722                           ; Clear objects allocated to COMMON
  3723  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  3724  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3725  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3726  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3727  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3728  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3729  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3730                           
  3731                           ; Clear objects allocated to BANK0
  3732  0029  3042               	movlw	low __pbssBANK0
  3733  002A  0084               	movwf	4
  3734  002B  3000               	movlw	high __pbssBANK0
  3735  002C  0085               	movwf	5
  3736  002D  301C               	movlw	28
  3737  002E  3184  24CB         	fcall	clear_ram0
  3738  0030                     end_of_initialization:	
  3739                           ;End of C runtime variable initialization code
  3740                           
  3741  0030                     __end_of__initialization:	
  3742  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3743  0031  0020               	movlb	0
  3744  0032  3182  2A27         	ljmp	_main	;jump to C main() function
  3745                           
  3746                           	psect	bssCOMMON
  3747  0070                     __pbssCOMMON:	
  3748  0070                     I2C2_ISR@i2c_bytes_left:	
  3749  0070                     	ds	1
  3750  0071                     I2C2_ISR@pi2c_buf_ptr:	
  3751  0071                     	ds	1
  3752  0072                     _i2c2_trb_count:	
  3753  0072                     	ds	1
  3754  0073                     _p_i2c2_current:	
  3755  0073                     	ds	1
  3756  0074                     _p_i2c2_trb_current:	
  3757  0074                     	ds	1
  3758  0075                     I2C2_ISR@i2c_address:	
  3759  0075                     	ds	2
  3760                           
  3761                           	psect	bssBANK0
  3762  0042                     __pbssBANK0:	
  3763  0042                     _i2c2_object:	
  3764  0042                     	ds	5
  3765  0047                     _TMR6_InterruptHandler:	
  3766  0047                     	ds	2
  3767  0049                     I2C2_ISR@i2c_10bit_address_restart:	
  3768  0049                     	ds	1
  3769  004A                     _i2c2_state:	
  3770  004A                     	ds	1
  3771  004B                     EMC1001_Read@trb:	
  3772  004B                     	ds	8
  3773  0053                     I2C2_MasterRead@trBlock:	
  3774  0053                     	ds	4
  3775  0057                     I2C2_MasterWrite@trBlock:	
  3776  0057                     	ds	4
  3777  005B                     _i2c2_tr_queue:	
  3778  005B                     	ds	3
  3779                           
  3780                           	psect	clrtext
  3781  04CB                     clear_ram0:	
  3782                           ;	Called with FSR0 containing the base address, and
  3783                           ;	WREG with the size to clear
  3784                           
  3785  04CB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3786  04CC                     clrloop0:	
  3787  04CC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3788  04CD  3101               	addfsr 0,1
  3789  04CE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3790  04CF  2CCC               	goto	clrloop0	;have we reached the end yet?
  3791  04D0  3400               	retlw	0	;all done for this memory range, return
  3792                           
  3793                           	psect	cstackCOMMON
  3794  0077                     __pcstackCOMMON:	
  3795  0077                     ?_TMR6_Start:	
  3796  0077                     ?_PIN_MANAGER_Initialize:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0077                     ?_OSCILLATOR_Initialize:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0077                     ?_I2C2_Initialize:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0077                     ?_I2C2_BusCollisionISR:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0077                     ??_I2C2_BusCollisionISR:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811  0077                     ?_I2C2_ISR:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0077                     ?_I2C2_Stop:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0077                     ??_I2C2_Stop:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0077                     ?_I2C2_FunctionComplete:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0077                     ??_I2C2_FunctionComplete:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0077                     ?_EUSART_Initialize:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0077                     ?_EUSART_Write:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0077                     ?_putch:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0077                     ?_TMR6_Initialize:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0077                     ?_SYSTEM_Initialize:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0077                     ?_INTERRUPT_InterruptManager:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0077                     ?_main:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847                           
  3848                           ; 1 bytes @ 0x0
  3849  0077                     	ds	1
  3850  0078                     I2C2_Stop@completion_code:	
  3851                           
  3852                           ; 1 bytes @ 0x1
  3853  0078                     	ds	1
  3854  0079                     ??_I2C2_ISR:	
  3855                           
  3856                           ; 1 bytes @ 0x2
  3857  0079                     	ds	4
  3858  007D                     ??_INTERRUPT_InterruptManager:	
  3859                           
  3860                           ; 1 bytes @ 0x6
  3861  007D                     	ds	1
  3862                           
  3863                           	psect	cstackBANK0
  3864  0020                     __pcstackBANK0:	
  3865  0020                     ??_TMR6_Start:	
  3866  0020                     ??_PIN_MANAGER_Initialize:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0020                     ??_OSCILLATOR_Initialize:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0020                     ??_I2C2_Initialize:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0020                     ?_I2C2_MasterTRBInsert:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0020                     ?_I2C2_MasterReadTRBBuild:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0020                     ??_EUSART_Initialize:	
  3885                           ; 1 bytes @ 0x0
  3886                           
  3887  0020                     ??_EUSART_Write:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0020                     ??_TMR6_Initialize:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0020                     ?___wmul:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0020                     ?___lwdiv:	
  3897                           ; 2 bytes @ 0x0
  3898                           
  3899  0020                     EUSART_Write@txData:	
  3900                           ; 2 bytes @ 0x0
  3901                           
  3902  0020                     PIN_MANAGER_Initialize@state:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3906                           ; 1 bytes @ 0x0
  3907                           
  3908  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3912                           ; 1 bytes @ 0x0
  3913                           
  3914  0020                     ___wmul@multiplier:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0020                     ___lwdiv@divisor:	
  3918                           ; 2 bytes @ 0x0
  3919                           
  3920                           
  3921                           ; 2 bytes @ 0x0
  3922  0020                     	ds	1
  3923  0021                     ??_putch:	
  3924  0021                     ??_SYSTEM_Initialize:	
  3925                           ; 1 bytes @ 0x1
  3926                           
  3927  0021                     putch@txData:	
  3928                           ; 1 bytes @ 0x1
  3929                           
  3930  0021                     I2C2_MasterTRBInsert@pflag:	
  3931                           ; 1 bytes @ 0x1
  3932                           
  3933  0021                     I2C2_MasterReadTRBBuild@length:	
  3934                           ; 1 bytes @ 0x1
  3935                           
  3936  0021                     I2C2_MasterWriteTRBBuild@length:	
  3937                           ; 1 bytes @ 0x1
  3938                           
  3939                           
  3940                           ; 1 bytes @ 0x1
  3941  0021                     	ds	1
  3942  0022                     ??_I2C2_MasterTRBInsert:	
  3943  0022                     I2C2_MasterReadTRBBuild@address:	
  3944                           ; 1 bytes @ 0x2
  3945                           
  3946  0022                     I2C2_MasterWriteTRBBuild@address:	
  3947                           ; 2 bytes @ 0x2
  3948                           
  3949  0022                     ___wmul@multiplicand:	
  3950                           ; 2 bytes @ 0x2
  3951                           
  3952  0022                     ___lwdiv@dividend:	
  3953                           ; 2 bytes @ 0x2
  3954                           
  3955                           
  3956                           ; 2 bytes @ 0x2
  3957  0022                     	ds	1
  3958  0023                     I2C2_MasterTRBInsert@count:	
  3959                           
  3960                           ; 1 bytes @ 0x3
  3961  0023                     	ds	1
  3962  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3963  0024                     ??_I2C2_MasterReadTRBBuild:	
  3964                           ; 1 bytes @ 0x4
  3965                           
  3966  0024                     ??___wmul:	
  3967                           ; 1 bytes @ 0x4
  3968                           
  3969  0024                     ??___lwdiv:	
  3970                           ; 1 bytes @ 0x4
  3971                           
  3972  0024                     ___wmul@product:	
  3973                           ; 1 bytes @ 0x4
  3974                           
  3975                           
  3976                           ; 2 bytes @ 0x4
  3977  0024                     	ds	1
  3978  0025                     ___lwdiv@quotient:	
  3979                           
  3980                           ; 2 bytes @ 0x5
  3981  0025                     	ds	1
  3982  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3983  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3984                           ; 1 bytes @ 0x6
  3985                           
  3986                           
  3987                           ; 1 bytes @ 0x6
  3988  0026                     	ds	1
  3989  0027                     ?_EMC1001_Read:	
  3990  0027                     EMC1001_Read@pData:	
  3991                           ; 1 bytes @ 0x7
  3992                           
  3993  0027                     ___lwdiv@counter:	
  3994                           ; 1 bytes @ 0x7
  3995                           
  3996                           
  3997                           ; 1 bytes @ 0x7
  3998  0027                     	ds	1
  3999  0028                     ??_EMC1001_Read:	
  4000  0028                     ?___lwmod:	
  4001                           ; 1 bytes @ 0x8
  4002                           
  4003  0028                     ___lwmod@divisor:	
  4004                           ; 2 bytes @ 0x8
  4005                           
  4006                           
  4007                           ; 2 bytes @ 0x8
  4008  0028                     	ds	2
  4009  002A                     EMC1001_Read@reg:	
  4010  002A                     ___lwmod@dividend:	
  4011                           ; 1 bytes @ 0xA
  4012                           
  4013                           
  4014                           ; 2 bytes @ 0xA
  4015  002A                     	ds	1
  4016  002B                     EMC1001_Read@status:	
  4017                           
  4018                           ; 1 bytes @ 0xB
  4019  002B                     	ds	1
  4020  002C                     ??___lwmod:	
  4021                           
  4022                           ; 1 bytes @ 0xC
  4023  002C                     	ds	1
  4024  002D                     ___lwmod@counter:	
  4025                           
  4026                           ; 1 bytes @ 0xD
  4027  002D                     	ds	1
  4028  002E                     ?_printf:	
  4029  002E                     printf@f:	
  4030                           ; 2 bytes @ 0xE
  4031                           
  4032                           
  4033                           ; 2 bytes @ 0xE
  4034  002E                     	ds	6
  4035  0034                     ??_printf:	
  4036                           
  4037                           ; 1 bytes @ 0x14
  4038  0034                     	ds	4
  4039  0038                     printf@ap:	
  4040                           
  4041                           ; 1 bytes @ 0x18
  4042  0038                     	ds	1
  4043  0039                     printf@flag:	
  4044                           
  4045                           ; 1 bytes @ 0x19
  4046  0039                     	ds	1
  4047  003A                     printf@prec:	
  4048                           
  4049                           ; 1 bytes @ 0x1A
  4050  003A                     	ds	1
  4051  003B                     printf@val:	
  4052                           
  4053                           ; 2 bytes @ 0x1B
  4054  003B                     	ds	2
  4055  003D                     printf@c:	
  4056                           
  4057                           ; 1 bytes @ 0x1D
  4058  003D                     	ds	1
  4059  003E                     ??_main:	
  4060                           
  4061                           ; 1 bytes @ 0x1E
  4062  003E                     	ds	2
  4063  0040                     main@temp:	
  4064                           
  4065                           ; 1 bytes @ 0x20
  4066  0040                     	ds	1
  4067  0041                     main@templo:	
  4068                           
  4069                           ; 1 bytes @ 0x21
  4070  0041                     	ds	1
  4071                           
  4072                           	psect	maintext
  4073  0227                     __pmaintext:	
  4074 ;;
  4075 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4076 ;;
  4077 ;; *************** function _main *****************
  4078 ;; Defined at:
  4079 ;;		line 22 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  templo          1   33[BANK0 ] unsigned char 
  4084 ;;  temp            1   32[BANK0 ] char 
  4085 ;;  data            1    0        unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : B1F/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels required when called:    6
  4101 ;; This function calls:
  4102 ;;		_EMC1001_Read
  4103 ;;		_EUSART_Write
  4104 ;;		_SYSTEM_Initialize
  4105 ;;		_TMR6_Start
  4106 ;;		___wmul
  4107 ;;		_printf
  4108 ;; This function is called by:
  4109 ;;		Startup code after reset
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _main
  4115  0227                     _main:	
  4116                           
  4117                           ;main.c: 24: uint8_t data;
  4118                           ;main.c: 25: int8_t temp;
  4119                           ;main.c: 26: uint8_t templo;
  4120                           ;main.c: 27: SYSTEM_Initialize();
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4124  0227  3184  248E  3182   	fcall	_SYSTEM_Initialize
  4125                           
  4126                           ;main.c: 28: (INTCONbits.GIE = 1);
  4127  022A  178B               	bsf	11,7	;volatile
  4128                           
  4129                           ;main.c: 29: (INTCONbits.PEIE = 1);
  4130  022B  170B               	bsf	11,6	;volatile
  4131  022C                     l2046:	
  4132                           ;main.c: 31: while (1)
  4133                           
  4134                           
  4135                           ;main.c: 32: {
  4136                           ;main.c: 33: if (!PORTAbits.RA5 && T6TMR == 0x00)
  4137  022C  0020               	movlb	0	; select bank0
  4138  022D  1A8C               	btfsc	12,5	;volatile
  4139  022E  2A2C               	goto	l2046
  4140  022F  0025               	movlb	5	; select bank5
  4141  0230  0818               	movf	24,w	;volatile
  4142  0231  1D03               	btfss	3,2
  4143  0232  2A2C               	goto	l2046
  4144                           
  4145                           ;main.c: 34: {
  4146                           ;main.c: 35: TMR6_Start();
  4147  0233  3184  24D7  3182   	fcall	_TMR6_Start
  4148                           
  4149                           ;main.c: 36: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4150  0236  1003               	clrc
  4151  0237  0020               	movlb	0	; select bank0
  4152  0238  1C16               	btfss	22,0	;volatile
  4153  0239  1403               	setc
  4154  023A  1C03               	btfss	3,0
  4155  023B  2A3F               	goto	u1590
  4156  023C  0020               	movlb	0	; select bank0
  4157  023D  1416               	bsf	22,0	;volatile
  4158  023E  2A41               	goto	l2054
  4159  023F                     u1590:	
  4160  023F  0020               	movlb	0	; select bank0
  4161  0240  1016               	bcf	22,0	;volatile
  4162  0241                     l2054:	
  4163                           
  4164                           ;main.c: 37: printf("\n");
  4165  0241  307A               	movlw	low (STR_1| (0+32768))
  4166  0242  00AE               	movwf	printf@f
  4167  0243  3084               	movlw	high (STR_1| (0+32768))
  4168  0244  00AF               	movwf	printf@f+1
  4169  0245  3181  216F  3182   	fcall	_printf
  4170                           
  4171                           ;main.c: 38: EUSART_Write(0x0D);
  4172  0248  300D               	movlw	13
  4173  0249  3184  24B8  3182   	fcall	_EUSART_Write
  4174                           
  4175                           ;main.c: 40: if (EMC1001_Read(0, (uint8_t*)&temp))
  4176  024C  3040               	movlw	(low (main@temp| 0))& (0+255)
  4177  024D  0020               	movlb	0	; select bank0
  4178  024E  00BE               	movwf	??_main
  4179  024F  083E               	movf	??_main,w
  4180  0250  00A7               	movwf	EMC1001_Read@pData
  4181  0251  3000               	movlw	0
  4182  0252  3183  2320  3182   	fcall	_EMC1001_Read
  4183  0255  3A00               	xorlw	0
  4184  0256  1903               	skipnz
  4185  0257  2A2C               	goto	l2046
  4186                           
  4187                           ;main.c: 41: {
  4188                           ;main.c: 42: EMC1001_Read(2, &templo);
  4189  0258  3041               	movlw	(low (main@templo| 0))& (0+255)
  4190  0259  0020               	movlb	0	; select bank0
  4191  025A  00BE               	movwf	??_main
  4192  025B  083E               	movf	??_main,w
  4193  025C  00A7               	movwf	EMC1001_Read@pData
  4194  025D  3002               	movlw	2
  4195  025E  3183  2320  3182   	fcall	_EMC1001_Read
  4196                           
  4197                           ;main.c: 43: templo = templo >> 6;
  4198  0261  0020               	movlb	0	; select bank0
  4199  0262  0841               	movf	main@templo,w
  4200  0263  00BE               	movwf	??_main
  4201  0264  3006               	movlw	6
  4202  0265                     u1625:	
  4203  0265  36BE               	lsrf	??_main,f
  4204  0266  0B89               	decfsz	9,f
  4205  0267  2A65               	goto	u1625
  4206  0268  083E               	movf	??_main,w
  4207  0269  00BF               	movwf	??_main+1
  4208  026A  083F               	movf	??_main+1,w
  4209  026B  00C1               	movwf	main@templo
  4210                           
  4211                           ;main.c: 44: if (temp < 0) templo = 3-templo;
  4212  026C  1FC0               	btfss	main@temp,7
  4213  026D  2A74               	goto	l2068
  4214  026E  0341               	decf	main@templo,w
  4215  026F  3AFF               	xorlw	255
  4216  0270  3E03               	addlw	3
  4217  0271  00BE               	movwf	??_main
  4218  0272  083E               	movf	??_main,w
  4219  0273  00C1               	movwf	main@templo
  4220  0274                     l2068:	
  4221                           
  4222                           ;main.c: 45: printf("%d.%d", temp, templo*25);
  4223  0274  3074               	movlw	low (STR_2| (0+32768))
  4224  0275  00AE               	movwf	printf@f
  4225  0276  3084               	movlw	high (STR_2| (0+32768))
  4226  0277  00AF               	movwf	printf@f+1
  4227  0278  0840               	movf	main@temp,w
  4228  0279  00B0               	movwf	?_printf+2
  4229  027A  01B1               	clrf	?_printf+3
  4230  027B  1BB0               	btfsc	?_printf+2,7
  4231  027C  03B1               	decf	?_printf+3,f
  4232  027D  0841               	movf	main@templo,w
  4233  027E  00BE               	movwf	??_main
  4234  027F  01BF               	clrf	??_main+1
  4235  0280  083E               	movf	??_main,w
  4236  0281  00A0               	movwf	___wmul@multiplier
  4237  0282  083F               	movf	??_main+1,w
  4238  0283  00A1               	movwf	___wmul@multiplier+1
  4239  0284  3019               	movlw	25
  4240  0285  00A2               	movwf	___wmul@multiplicand
  4241  0286  3000               	movlw	0
  4242  0287  00A3               	movwf	___wmul@multiplicand+1
  4243  0288  3184  2406  3182   	fcall	___wmul
  4244  028B  0020               	movlb	0	; select bank0
  4245  028C  0821               	movf	?___wmul+1,w
  4246  028D  00B3               	movwf	?_printf+5
  4247  028E  0820               	movf	?___wmul,w
  4248  028F  00B2               	movwf	?_printf+4
  4249  0290  3181  216F  3182   	fcall	_printf
  4250  0293  2A2C               	goto	l2046
  4251  0294                     __end_of_main:	
  4252                           
  4253                           	psect	text1
  4254  016F                     __ptext1:	
  4255 ;; *************** function _printf *****************
  4256 ;; Defined at:
  4257 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4260 ;;		 -> STR_2(6), STR_1(2), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  tmpval          4    0        struct .
  4263 ;;  val             2   27[BANK0 ] unsigned int 
  4264 ;;  cp              2    0        PTR const unsigned char 
  4265 ;;  len             2    0        unsigned int 
  4266 ;;  c               1   29[BANK0 ] char 
  4267 ;;  prec            1   26[BANK0 ] char 
  4268 ;;  flag            1   25[BANK0 ] unsigned char 
  4269 ;;  ap              1   24[BANK0 ] PTR void [1]
  4270 ;;		 -> ?_printf(2), 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2   14[BANK0 ] int 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4280 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;Total ram usage:       16 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    5
  4287 ;; This function calls:
  4288 ;;		___lwdiv
  4289 ;;		___lwmod
  4290 ;;		_putch
  4291 ;; This function is called by:
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _printf
  4298  016F                     _printf:	
  4299                           
  4300                           ;doprnt.c: 466: va_list ap;
  4301                           ;doprnt.c: 499: signed char c;
  4302                           ;doprnt.c: 506: signed char prec;
  4303                           ;doprnt.c: 508: unsigned char flag;
  4304                           ;doprnt.c: 523: union {
  4305                           ;doprnt.c: 524: unsigned long vd;
  4306                           ;doprnt.c: 525: double integ;
  4307                           ;doprnt.c: 526: } tmpval;
  4308                           ;doprnt.c: 528: unsigned int val;
  4309                           ;doprnt.c: 529: unsigned len;
  4310                           ;doprnt.c: 530: const char * cp;
  4311                           ;doprnt.c: 533: *ap = __va_start();
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4315  016F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4316  0170  0020               	movlb	0	; select bank0
  4317  0171  00B4               	movwf	??_printf
  4318  0172  0834               	movf	??_printf,w
  4319  0173  00B8               	movwf	printf@ap
  4320  0174                     l2022:	
  4321                           ;doprnt.c: 536: while(c = *f++) {
  4322                           
  4323  0174  0020               	movlb	0	; select bank0
  4324  0175  082F               	movf	printf@f+1,w
  4325  0176  00B5               	movwf	??_printf+1
  4326  0177  082E               	movf	printf@f,w
  4327  0178  00B4               	movwf	??_printf
  4328  0179  0AAE               	incf	printf@f,f
  4329  017A  1903               	skipnz
  4330  017B  0AAF               	incf	printf@f+1,f
  4331  017C  0834               	movf	??_printf,w
  4332  017D  0084               	movwf	4
  4333  017E  0835               	movf	??_printf+1,w
  4334  017F  0085               	movwf	5
  4335  0180  0800               	movf	0,w	;code access
  4336  0181  00B6               	movwf	??_printf+2
  4337  0182  0836               	movf	??_printf+2,w
  4338  0183  00BD               	movwf	printf@c
  4339  0184  083D               	movf	printf@c,w
  4340  0185  1903               	btfsc	3,2
  4341  0186  0008               	return
  4342                           
  4343                           ;doprnt.c: 538: if(c != '%')
  4344  0187  3025               	movlw	37
  4345  0188  063D               	xorwf	printf@c,w
  4346  0189  1903               	btfsc	3,2
  4347  018A  2990               	goto	l1982
  4348                           
  4349                           ;doprnt.c: 540: {
  4350                           ;doprnt.c: 541: (putch(c) );
  4351  018B  083D               	movf	printf@c,w
  4352  018C  3184  24D1  3181   	fcall	_putch
  4353                           
  4354                           ;doprnt.c: 542: continue;
  4355  018F  2974               	goto	l2022
  4356  0190                     l1982:	
  4357                           
  4358                           ;doprnt.c: 543: }
  4359                           ;doprnt.c: 548: flag = 0;
  4360  0190  0020               	movlb	0	; select bank0
  4361  0191  01B9               	clrf	printf@flag
  4362                           
  4363                           ;doprnt.c: 822: }
  4364                           
  4365                           ;doprnt.c: 813: continue;
  4366                           
  4367                           ;doprnt.c: 802: default:
  4368                           
  4369                           ;doprnt.c: 698: case 'i':
  4370                           ;doprnt.c: 699: break;
  4371                           
  4372                           ;doprnt.c: 697: case 'd':
  4373                           
  4374                           ;doprnt.c: 638: goto alldone;
  4375                           
  4376                           ;doprnt.c: 637: case 0:
  4377                           
  4378                           ;doprnt.c: 635: switch(c = *f++) {
  4379  0192  082F               	movf	printf@f+1,w
  4380  0193  00B5               	movwf	??_printf+1
  4381  0194  082E               	movf	printf@f,w
  4382  0195  00B4               	movwf	??_printf
  4383  0196  0AAE               	incf	printf@f,f
  4384  0197  1903               	skipnz
  4385  0198  0AAF               	incf	printf@f+1,f
  4386  0199  0834               	movf	??_printf,w
  4387  019A  0084               	movwf	4
  4388  019B  0835               	movf	??_printf+1,w
  4389  019C  0085               	movwf	5
  4390  019D  0800               	movf	0,w	;code access
  4391  019E  00BD               	movwf	printf@c
  4392                           
  4393                           ; Switch size 1, requested type "space"
  4394                           ; Number of cases is 3, Range of values is 0 to 105
  4395                           ; switch strategies available:
  4396                           ; Name         Instructions Cycles
  4397                           ; simple_byte           10     6 (average)
  4398                           ; direct_byte          218     6 (fixed)
  4399                           ; jumptable            260     6 (fixed)
  4400                           ;	Chosen strategy is simple_byte
  4401  019F  3A00               	xorlw	0	; case 0
  4402  01A0  1903               	skipnz
  4403  01A1  2A26               	goto	l430
  4404  01A2  3A64               	xorlw	100	; case 100
  4405  01A3  1903               	skipnz
  4406  01A4  29A9               	goto	l1988
  4407  01A5  3A0D               	xorlw	13	; case 105
  4408  01A6  1903               	skipnz
  4409  01A7  29A9               	goto	l1988
  4410  01A8  2974               	goto	l2022
  4411  01A9                     l1988:	
  4412                           
  4413                           ;doprnt.c: 1253: {
  4414                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4415  01A9  0838               	movf	printf@ap,w
  4416  01AA  0086               	movwf	6
  4417  01AB  0187               	clrf	7
  4418  01AC  3F40               	moviw [0]fsr1
  4419  01AD  00BB               	movwf	printf@val
  4420  01AE  3F41               	moviw [1]fsr1
  4421  01AF  00BC               	movwf	printf@val+1
  4422  01B0  3002               	movlw	2
  4423  01B1  00B4               	movwf	??_printf
  4424  01B2  0834               	movf	??_printf,w
  4425  01B3  07B8               	addwf	printf@ap,f
  4426                           
  4427                           ;doprnt.c: 1261: if((int)val < 0) {
  4428  01B4  1FBC               	btfss	printf@val+1,7
  4429  01B5  29BF               	goto	l1998
  4430                           
  4431                           ;doprnt.c: 1262: flag |= 0x03;
  4432  01B6  3003               	movlw	3
  4433  01B7  00B4               	movwf	??_printf
  4434  01B8  0834               	movf	??_printf,w
  4435  01B9  04B9               	iorwf	printf@flag,f
  4436                           
  4437                           ;doprnt.c: 1263: val = -val;
  4438  01BA  09BB               	comf	printf@val,f
  4439  01BB  09BC               	comf	printf@val+1,f
  4440  01BC  0ABB               	incf	printf@val,f
  4441  01BD  1903               	skipnz
  4442  01BE  0ABC               	incf	printf@val+1,f
  4443  01BF                     l1998:	
  4444                           
  4445                           ;doprnt.c: 1264: }
  4446                           ;doprnt.c: 1266: }
  4447                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4448  01BF  01BD               	clrf	printf@c
  4449  01C0  0ABD               	incf	printf@c,f
  4450  01C1  3005               	movlw	5
  4451  01C2  063D               	xorwf	printf@c,w
  4452  01C3  1903               	btfsc	3,2
  4453  01C4  29E4               	goto	l2010
  4454  01C5                     l2004:	
  4455                           
  4456                           ;doprnt.c: 1306: if(val < dpowers[c])
  4457  01C5  083D               	movf	printf@c,w
  4458  01C6  00B4               	movwf	??_printf
  4459  01C7  01B5               	clrf	??_printf+1
  4460  01C8  35B4               	lslf	??_printf,f
  4461  01C9  0DB5               	rlf	??_printf+1,f
  4462  01CA  306A               	movlw	low (_dpowers| (0+32768))
  4463  01CB  0734               	addwf	??_printf,w
  4464  01CC  0084               	movwf	4
  4465  01CD  3084               	movlw	high (_dpowers| (0+32768))
  4466  01CE  3D35               	addwfc	??_printf+1,w
  4467  01CF  0085               	movwf	5
  4468  01D0  3F00               	moviw [0]fsr0
  4469  01D1  00B6               	movwf	??_printf+2
  4470  01D2  3F01               	moviw [1]fsr0
  4471  01D3  00B7               	movwf	??_printf+3
  4472  01D4  0837               	movf	??_printf+3,w
  4473  01D5  023C               	subwf	printf@val+1,w
  4474  01D6  1D03               	skipz
  4475  01D7  29DA               	goto	u1485
  4476  01D8  0836               	movf	??_printf+2,w
  4477  01D9  023B               	subwf	printf@val,w
  4478  01DA                     u1485:	
  4479  01DA  1C03               	btfss	3,0
  4480  01DB  29E4               	goto	l2010
  4481                           
  4482                           ;doprnt.c: 1307: break;
  4483  01DC  3001               	movlw	1
  4484  01DD  00B4               	movwf	??_printf
  4485  01DE  0834               	movf	??_printf,w
  4486  01DF  07BD               	addwf	printf@c,f
  4487  01E0  3005               	movlw	5
  4488  01E1  063D               	xorwf	printf@c,w
  4489  01E2  1D03               	btfss	3,2
  4490  01E3  29C5               	goto	l2004
  4491  01E4                     l2010:	
  4492                           
  4493                           ;doprnt.c: 1422: {
  4494                           ;doprnt.c: 1438: if(flag & 0x03)
  4495  01E4  0839               	movf	printf@flag,w
  4496  01E5  3903               	andlw	3
  4497  01E6  1903               	btfsc	3,2
  4498  01E7  29EC               	goto	l2014
  4499                           
  4500                           ;doprnt.c: 1439: (putch('-') );
  4501  01E8  302D               	movlw	45
  4502  01E9  3184  24D1  3181   	fcall	_putch
  4503  01EC                     l2014:	
  4504                           
  4505                           ;doprnt.c: 1469: }
  4506                           ;doprnt.c: 1472: prec = c;
  4507  01EC  0020               	movlb	0	; select bank0
  4508  01ED  083D               	movf	printf@c,w
  4509  01EE  00B4               	movwf	??_printf
  4510  01EF  0834               	movf	??_printf,w
  4511  01F0  00BA               	movwf	printf@prec
  4512  01F1                     l2020:	
  4513                           ;doprnt.c: 1474: while(prec--) {
  4514                           
  4515  01F1  30FF               	movlw	255
  4516  01F2  0020               	movlb	0	; select bank0
  4517  01F3  00B4               	movwf	??_printf
  4518  01F4  0834               	movf	??_printf,w
  4519  01F5  07BA               	addwf	printf@prec,f
  4520  01F6  0A3A               	incf	printf@prec,w
  4521  01F7  1903               	btfsc	3,2
  4522  01F8  2974               	goto	l2022
  4523                           
  4524                           ;doprnt.c: 1478: {
  4525                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4526  01F9  300A               	movlw	10
  4527  01FA  00A8               	movwf	___lwmod@divisor
  4528  01FB  3000               	movlw	0
  4529  01FC  00A9               	movwf	___lwmod@divisor+1
  4530  01FD  083A               	movf	printf@prec,w
  4531  01FE  00B4               	movwf	??_printf
  4532  01FF  01B5               	clrf	??_printf+1
  4533  0200  35B4               	lslf	??_printf,f
  4534  0201  0DB5               	rlf	??_printf+1,f
  4535  0202  306A               	movlw	low (_dpowers| (0+32768))
  4536  0203  0734               	addwf	??_printf,w
  4537  0204  0084               	movwf	4
  4538  0205  3084               	movlw	high (_dpowers| (0+32768))
  4539  0206  3D35               	addwfc	??_printf+1,w
  4540  0207  0085               	movwf	5
  4541  0208  3F00               	moviw [0]fsr0
  4542  0209  00A0               	movwf	___lwdiv@divisor
  4543  020A  3F01               	moviw [1]fsr0
  4544  020B  00A1               	movwf	___lwdiv@divisor+1
  4545  020C  083C               	movf	printf@val+1,w
  4546  020D  00A3               	movwf	___lwdiv@dividend+1
  4547  020E  083B               	movf	printf@val,w
  4548  020F  00A2               	movwf	___lwdiv@dividend
  4549  0210  3183  235C  3181   	fcall	___lwdiv
  4550  0213  0020               	movlb	0	; select bank0
  4551  0214  0821               	movf	?___lwdiv+1,w
  4552  0215  00AB               	movwf	___lwmod@dividend+1
  4553  0216  0820               	movf	?___lwdiv,w
  4554  0217  00AA               	movwf	___lwmod@dividend
  4555  0218  3183  2391  3181   	fcall	___lwmod
  4556  021B  0020               	movlb	0	; select bank0
  4557  021C  0828               	movf	?___lwmod,w
  4558  021D  3E30               	addlw	48
  4559  021E  00B6               	movwf	??_printf+2
  4560  021F  0836               	movf	??_printf+2,w
  4561  0220  00BD               	movwf	printf@c
  4562                           
  4563                           ;doprnt.c: 1523: }
  4564                           ;doprnt.c: 1524: (putch(c) );
  4565  0221  083D               	movf	printf@c,w
  4566  0222  3184  24D1  3181   	fcall	_putch
  4567  0225  29F1               	goto	l2020
  4568  0226                     l430:	
  4569                           ;doprnt.c: 1540: return 0;
  4570                           ;	Return value of _printf is never used
  4571                           
  4572                           ;doprnt.c: 1525: }
  4573                           ;doprnt.c: 1533: }
  4574                           ;doprnt.c: 1535: alldone:
  4575                           
  4576  0226  0008               	return
  4577  0227                     __end_of_printf:	
  4578                           
  4579                           	psect	text2
  4580  04D1                     __ptext2:	
  4581 ;; *************** function _putch *****************
  4582 ;; Defined at:
  4583 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  txData          1    wreg     unsigned char 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  txData          1    1[BANK0 ] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        1 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    4
  4604 ;; This function calls:
  4605 ;;		_EUSART_Write
  4606 ;; This function is called by:
  4607 ;;		_printf
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _putch
  4613  04D1                     _putch:	
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4617                           ;putch@txData stored from wreg
  4618  04D1  0020               	movlb	0	; select bank0
  4619  04D2  00A1               	movwf	putch@txData
  4620                           
  4621                           ;eusart.c: 113: EUSART_Write(txData);
  4622  04D3  0821               	movf	putch@txData,w
  4623  04D4  3184  24B8         	fcall	_EUSART_Write
  4624  04D6  0008               	return
  4625  04D7                     __end_of_putch:	
  4626                           
  4627                           	psect	text3
  4628  04B8                     __ptext3:	
  4629 ;; *************** function _EUSART_Write *****************
  4630 ;; Defined at:
  4631 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  txData          1    wreg     unsigned char 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  txData          1    0[BANK0 ] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;Total ram usage:        1 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    3
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_putch
  4656 ;;		_main
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _EUSART_Write
  4662  04B8                     _EUSART_Write:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _EUSART_Write: [wreg]
  4666                           ;EUSART_Write@txData stored from wreg
  4667  04B8  0020               	movlb	0	; select bank0
  4668  04B9  00A0               	movwf	EUSART_Write@txData
  4669  04BA                     l31:	
  4670                           ;eusart.c: 100: {
  4671                           
  4672                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  4673                           
  4674  04BA  002E               	movlb	14	; select bank14
  4675  04BB  1E0F               	btfss	15,4	;volatile
  4676  04BC  2CBA               	goto	l31
  4677                           
  4678                           ;eusart.c: 101: }
  4679                           ;eusart.c: 103: TX1REG = txData;
  4680  04BD  0020               	movlb	0	; select bank0
  4681  04BE  0820               	movf	EUSART_Write@txData,w
  4682  04BF  0022               	movlb	2	; select bank2
  4683  04C0  009A               	movwf	26	;volatile
  4684  04C1  0008               	return
  4685  04C2                     __end_of_EUSART_Write:	
  4686                           
  4687                           	psect	text4
  4688  0391                     __ptext4:	
  4689 ;; *************** function ___lwmod *****************
  4690 ;; Defined at:
  4691 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  divisor         2    8[BANK0 ] unsigned int 
  4694 ;;  dividend        2   10[BANK0 ] unsigned int 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  counter         1   13[BANK0 ] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  2    8[BANK0 ] unsigned int 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:        6 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    3
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_printf
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function ___lwmod
  4722  0391                     ___lwmod:	
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4726  0391  0020               	movlb	0	; select bank0
  4727  0392  0828               	movf	___lwmod@divisor,w
  4728  0393  0429               	iorwf	___lwmod@divisor+1,w
  4729  0394  1903               	btfsc	3,2
  4730  0395  2BB9               	goto	l1600
  4731  0396  01AD               	clrf	___lwmod@counter
  4732  0397  0AAD               	incf	___lwmod@counter,f
  4733  0398                     l1590:	
  4734  0398  1BA9               	btfsc	___lwmod@divisor+1,7
  4735  0399  2BA4               	goto	l1592
  4736  039A  3001               	movlw	1
  4737  039B                     u915:	
  4738  039B  35A8               	lslf	___lwmod@divisor,f
  4739  039C  0DA9               	rlf	___lwmod@divisor+1,f
  4740  039D  0B89               	decfsz	9,f
  4741  039E  2B9B               	goto	u915
  4742  039F  3001               	movlw	1
  4743  03A0  00AC               	movwf	??___lwmod
  4744  03A1  082C               	movf	??___lwmod,w
  4745  03A2  07AD               	addwf	___lwmod@counter,f
  4746  03A3  2B98               	goto	l1590
  4747  03A4                     l1592:	
  4748  03A4  0829               	movf	___lwmod@divisor+1,w
  4749  03A5  022B               	subwf	___lwmod@dividend+1,w
  4750  03A6  1D03               	skipz
  4751  03A7  2BAA               	goto	u935
  4752  03A8  0828               	movf	___lwmod@divisor,w
  4753  03A9  022A               	subwf	___lwmod@dividend,w
  4754  03AA                     u935:	
  4755  03AA  1C03               	skipc
  4756  03AB  2BB0               	goto	l1596
  4757  03AC  0828               	movf	___lwmod@divisor,w
  4758  03AD  02AA               	subwf	___lwmod@dividend,f
  4759  03AE  0829               	movf	___lwmod@divisor+1,w
  4760  03AF  3BAB               	subwfb	___lwmod@dividend+1,f
  4761  03B0                     l1596:	
  4762  03B0  3001               	movlw	1
  4763  03B1                     u945:	
  4764  03B1  36A9               	lsrf	___lwmod@divisor+1,f
  4765  03B2  0CA8               	rrf	___lwmod@divisor,f
  4766  03B3  0B89               	decfsz	9,f
  4767  03B4  2BB1               	goto	u945
  4768  03B5  3001               	movlw	1
  4769  03B6  02AD               	subwf	___lwmod@counter,f
  4770  03B7  1D03               	btfss	3,2
  4771  03B8  2BA4               	goto	l1592
  4772  03B9                     l1600:	
  4773  03B9  082B               	movf	___lwmod@dividend+1,w
  4774  03BA  00A9               	movwf	?___lwmod+1
  4775  03BB  082A               	movf	___lwmod@dividend,w
  4776  03BC  00A8               	movwf	?___lwmod
  4777  03BD  0008               	return
  4778  03BE                     __end_of___lwmod:	
  4779                           
  4780                           	psect	text5
  4781  035C                     __ptext5:	
  4782 ;; *************** function ___lwdiv *****************
  4783 ;; Defined at:
  4784 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  divisor         2    0[BANK0 ] unsigned int 
  4787 ;;  dividend        2    2[BANK0 ] unsigned int 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  quotient        2    5[BANK0 ] unsigned int 
  4790 ;;  counter         1    7[BANK0 ] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2    0[BANK0 ] unsigned int 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4800 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;Total ram usage:        8 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    3
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_printf
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           
  4815                           ;psect for function ___lwdiv
  4816  035C                     ___lwdiv:	
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4820  035C  0020               	movlb	0	; select bank0
  4821  035D  01A5               	clrf	___lwdiv@quotient
  4822  035E  01A6               	clrf	___lwdiv@quotient+1
  4823  035F  0820               	movf	___lwdiv@divisor,w
  4824  0360  0421               	iorwf	___lwdiv@divisor+1,w
  4825  0361  1903               	btfsc	3,2
  4826  0362  2B8C               	goto	l1578
  4827  0363  01A7               	clrf	___lwdiv@counter
  4828  0364  0AA7               	incf	___lwdiv@counter,f
  4829  0365                     l1566:	
  4830  0365  1BA1               	btfsc	___lwdiv@divisor+1,7
  4831  0366  2B71               	goto	l1568
  4832  0367  3001               	movlw	1
  4833  0368                     u845:	
  4834  0368  35A0               	lslf	___lwdiv@divisor,f
  4835  0369  0DA1               	rlf	___lwdiv@divisor+1,f
  4836  036A  0B89               	decfsz	9,f
  4837  036B  2B68               	goto	u845
  4838  036C  3001               	movlw	1
  4839  036D  00A4               	movwf	??___lwdiv
  4840  036E  0824               	movf	??___lwdiv,w
  4841  036F  07A7               	addwf	___lwdiv@counter,f
  4842  0370  2B65               	goto	l1566
  4843  0371                     l1568:	
  4844  0371  3001               	movlw	1
  4845  0372                     u865:	
  4846  0372  35A5               	lslf	___lwdiv@quotient,f
  4847  0373  0DA6               	rlf	___lwdiv@quotient+1,f
  4848  0374  0B89               	decfsz	9,f
  4849  0375  2B72               	goto	u865
  4850  0376  0821               	movf	___lwdiv@divisor+1,w
  4851  0377  0223               	subwf	___lwdiv@dividend+1,w
  4852  0378  1D03               	skipz
  4853  0379  2B7C               	goto	u875
  4854  037A  0820               	movf	___lwdiv@divisor,w
  4855  037B  0222               	subwf	___lwdiv@dividend,w
  4856  037C                     u875:	
  4857  037C  1C03               	skipc
  4858  037D  2B83               	goto	l1574
  4859  037E  0820               	movf	___lwdiv@divisor,w
  4860  037F  02A2               	subwf	___lwdiv@dividend,f
  4861  0380  0821               	movf	___lwdiv@divisor+1,w
  4862  0381  3BA3               	subwfb	___lwdiv@dividend+1,f
  4863  0382  1425               	bsf	___lwdiv@quotient,0
  4864  0383                     l1574:	
  4865  0383  3001               	movlw	1
  4866  0384                     u885:	
  4867  0384  36A1               	lsrf	___lwdiv@divisor+1,f
  4868  0385  0CA0               	rrf	___lwdiv@divisor,f
  4869  0386  0B89               	decfsz	9,f
  4870  0387  2B84               	goto	u885
  4871  0388  3001               	movlw	1
  4872  0389  02A7               	subwf	___lwdiv@counter,f
  4873  038A  1D03               	btfss	3,2
  4874  038B  2B71               	goto	l1568
  4875  038C                     l1578:	
  4876  038C  0826               	movf	___lwdiv@quotient+1,w
  4877  038D  00A1               	movwf	?___lwdiv+1
  4878  038E  0825               	movf	___lwdiv@quotient,w
  4879  038F  00A0               	movwf	?___lwdiv
  4880  0390  0008               	return
  4881  0391                     __end_of___lwdiv:	
  4882                           
  4883                           	psect	text6
  4884  0406                     __ptext6:	
  4885 ;; *************** function ___wmul *****************
  4886 ;; Defined at:
  4887 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4890 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  product         2    4[BANK0 ] unsigned int 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    0[BANK0 ] unsigned int 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;Total ram usage:        6 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    3
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function ___wmul
  4918  0406                     ___wmul:	
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4922  0406  0020               	movlb	0	; select bank0
  4923  0407  01A4               	clrf	___wmul@product
  4924  0408  01A5               	clrf	___wmul@product+1
  4925  0409                     l2026:	
  4926  0409  1C20               	btfss	___wmul@multiplier,0
  4927  040A  2C0F               	goto	l512
  4928  040B  0822               	movf	___wmul@multiplicand,w
  4929  040C  07A4               	addwf	___wmul@product,f
  4930  040D  0823               	movf	___wmul@multiplicand+1,w
  4931  040E  3DA5               	addwfc	___wmul@product+1,f
  4932  040F                     l512:	
  4933  040F  3001               	movlw	1
  4934  0410                     u1545:	
  4935  0410  35A2               	lslf	___wmul@multiplicand,f
  4936  0411  0DA3               	rlf	___wmul@multiplicand+1,f
  4937  0412  0B89               	decfsz	9,f
  4938  0413  2C10               	goto	u1545
  4939  0414  3001               	movlw	1
  4940  0415                     u1555:	
  4941  0415  36A1               	lsrf	___wmul@multiplier+1,f
  4942  0416  0CA0               	rrf	___wmul@multiplier,f
  4943  0417  0B89               	decfsz	9,f
  4944  0418  2C15               	goto	u1555
  4945  0419  0820               	movf	___wmul@multiplier,w
  4946  041A  0421               	iorwf	___wmul@multiplier+1,w
  4947  041B  1D03               	btfss	3,2
  4948  041C  2C09               	goto	l2026
  4949  041D  0825               	movf	___wmul@product+1,w
  4950  041E  00A1               	movwf	?___wmul+1
  4951  041F  0824               	movf	___wmul@product,w
  4952  0420  00A0               	movwf	?___wmul
  4953  0421  0008               	return
  4954  0422                     __end_of___wmul:	
  4955                           
  4956                           	psect	text7
  4957  048E                     __ptext7:	
  4958 ;; *************** function _SYSTEM_Initialize *****************
  4959 ;; Defined at:
  4960 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, pclath, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    5
  4981 ;; This function calls:
  4982 ;;		_EUSART_Initialize
  4983 ;;		_I2C2_Initialize
  4984 ;;		_OSCILLATOR_Initialize
  4985 ;;		_PIN_MANAGER_Initialize
  4986 ;;		_TMR6_Initialize
  4987 ;; This function is called by:
  4988 ;;		_main
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           
  4993                           ;psect for function _SYSTEM_Initialize
  4994  048E                     _SYSTEM_Initialize:	
  4995                           
  4996                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5000  048E  3182  2294  3184   	fcall	_PIN_MANAGER_Initialize
  5001                           
  5002                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5003  0491  3184  24C2  3184   	fcall	_OSCILLATOR_Initialize
  5004                           
  5005                           ;mcc.c: 87: I2C2_Initialize();
  5006  0494  3184  2422  3184   	fcall	_I2C2_Initialize
  5007                           
  5008                           ;mcc.c: 88: TMR6_Initialize();
  5009  0497  3184  249D  3184   	fcall	_TMR6_Initialize
  5010                           
  5011                           ;mcc.c: 89: EUSART_Initialize();
  5012  049A  3184  24AC         	fcall	_EUSART_Initialize
  5013  049C  0008               	return
  5014  049D                     __end_of_SYSTEM_Initialize:	
  5015                           
  5016                           	psect	text8
  5017  049D                     __ptext8:	
  5018 ;; *************** function _TMR6_Initialize *****************
  5019 ;; Defined at:
  5020 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    4
  5041 ;; This function calls:
  5042 ;;		_TMR6_Start
  5043 ;; This function is called by:
  5044 ;;		_SYSTEM_Initialize
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           
  5049                           ;psect for function _TMR6_Initialize
  5050  049D                     _TMR6_Initialize:	
  5051                           
  5052                           ;tmr6.c: 68: T6CON = 0x79;
  5053                           
  5054                           ;incstack = 0
  5055                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5056  049D  3079               	movlw	121
  5057  049E  0025               	movlb	5	; select bank5
  5058  049F  009A               	movwf	26	;volatile
  5059                           
  5060                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5061  04A0  3004               	movlw	4
  5062  04A1  009C               	movwf	28	;volatile
  5063                           
  5064                           ;tmr6.c: 74: T6HLT = 0x00;
  5065  04A2  019B               	clrf	27	;volatile
  5066                           
  5067                           ;tmr6.c: 77: T6RST = 0x00;
  5068  04A3  019D               	clrf	29	;volatile
  5069                           
  5070                           ;tmr6.c: 80: T6PR = 0x2F;
  5071  04A4  302F               	movlw	47
  5072  04A5  0099               	movwf	25	;volatile
  5073                           
  5074                           ;tmr6.c: 83: T6TMR = 0x00;
  5075  04A6  0198               	clrf	24	;volatile
  5076                           
  5077                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5078  04A7  002E               	movlb	14	; select bank14
  5079  04A8  1290               	bcf	16,5	;volatile
  5080                           
  5081                           ;tmr6.c: 89: TMR6_Start();
  5082  04A9  3184  24D7         	fcall	_TMR6_Start
  5083  04AB  0008               	return
  5084  04AC                     __end_of_TMR6_Initialize:	
  5085                           
  5086                           	psect	text9
  5087  04D7                     __ptext9:	
  5088 ;; *************** function _TMR6_Start *****************
  5089 ;; Defined at:
  5090 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		None
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    3
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_TMR6_Initialize
  5115 ;;		_main
  5116 ;;		_TMR6_StartTimer
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _TMR6_Start
  5122  04D7                     _TMR6_Start:	
  5123                           
  5124                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _TMR6_Start: []
  5128  04D7  0025               	movlb	5	; select bank5
  5129  04D8  179A               	bsf	26,7	;volatile
  5130  04D9  0008               	return
  5131  04DA                     __end_of_TMR6_Start:	
  5132                           
  5133                           	psect	text10
  5134  0294                     __ptext10:	
  5135 ;; *************** function _PIN_MANAGER_Initialize *****************
  5136 ;; Defined at:
  5137 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  state           1    0[BANK0 ] unsigned char 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;Total ram usage:        1 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    3
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_SYSTEM_Initialize
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _PIN_MANAGER_Initialize
  5167  0294                     _PIN_MANAGER_Initialize:	
  5168                           
  5169                           ;pin_manager.c: 56: LATA = 0x00;
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5173  0294  0020               	movlb	0	; select bank0
  5174  0295  0196               	clrf	22	;volatile
  5175                           
  5176                           ;pin_manager.c: 57: LATB = 0x00;
  5177  0296  0197               	clrf	23	;volatile
  5178                           
  5179                           ;pin_manager.c: 58: LATC = 0x00;
  5180  0297  0198               	clrf	24	;volatile
  5181                           
  5182                           ;pin_manager.c: 63: TRISA = 0xFC;
  5183  0298  30FC               	movlw	252
  5184  0299  0091               	movwf	17	;volatile
  5185                           
  5186                           ;pin_manager.c: 64: TRISB = 0xFF;
  5187  029A  30FF               	movlw	255
  5188  029B  0092               	movwf	18	;volatile
  5189                           
  5190                           ;pin_manager.c: 65: TRISC = 0xBE;
  5191  029C  30BE               	movlw	190
  5192  029D  0093               	movwf	19	;volatile
  5193                           
  5194                           ;pin_manager.c: 70: ANSELC = 0xE7;
  5195  029E  30E7               	movlw	231
  5196  029F  003E               	movlb	30	; select bank30
  5197  02A0  00CE               	movwf	78	;volatile
  5198                           
  5199                           ;pin_manager.c: 71: ANSELB = 0x7F;
  5200  02A1  307F               	movlw	127
  5201  02A2  00C3               	movwf	67	;volatile
  5202                           
  5203                           ;pin_manager.c: 72: ANSELA = 0xDC;
  5204  02A3  30DC               	movlw	220
  5205  02A4  00B8               	movwf	56	;volatile
  5206                           
  5207                           ;pin_manager.c: 77: WPUE = 0x00;
  5208  02A5  01E5               	clrf	101	;volatile
  5209                           
  5210                           ;pin_manager.c: 78: WPUB = 0x00;
  5211  02A6  01C4               	clrf	68	;volatile
  5212                           
  5213                           ;pin_manager.c: 79: WPUA = 0x00;
  5214  02A7  01B9               	clrf	57	;volatile
  5215                           
  5216                           ;pin_manager.c: 80: WPUC = 0x00;
  5217  02A8  01CF               	clrf	79	;volatile
  5218                           
  5219                           ;pin_manager.c: 85: ODCONA = 0x00;
  5220  02A9  01BA               	clrf	58	;volatile
  5221                           
  5222                           ;pin_manager.c: 86: ODCONB = 0x00;
  5223  02AA  01C5               	clrf	69	;volatile
  5224                           
  5225                           ;pin_manager.c: 87: ODCONC = 0x00;
  5226  02AB  01D0               	clrf	80	;volatile
  5227                           
  5228                           ;pin_manager.c: 94: bool state = GIE;
  5229  02AC  3000               	movlw	0
  5230  02AD  1B8B               	btfsc	11,7	;volatile
  5231  02AE  3001               	movlw	1
  5232  02AF  0020               	movlb	0	; select bank0
  5233  02B0  00A0               	movwf	PIN_MANAGER_Initialize@state
  5234                           
  5235                           ;pin_manager.c: 95: GIE = 0;
  5236  02B1  138B               	bcf	11,7	;volatile
  5237                           
  5238                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  5239  02B2  3055               	movlw	85
  5240  02B3  003D               	movlb	29	; select bank29
  5241  02B4  008F               	movwf	15	;volatile
  5242                           
  5243                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  5244  02B5  30AA               	movlw	170
  5245  02B6  008F               	movwf	15	;volatile
  5246                           
  5247                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  5248  02B7  100F               	bcf	15,0	;volatile
  5249                           
  5250                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  5251  02B8  081E               	movf	30,w	;volatile
  5252  02B9  39E0               	andlw	-32
  5253  02BA  380F               	iorlw	15
  5254  02BB  009E               	movwf	30	;volatile
  5255                           
  5256                           ;pin_manager.c: 101: RC0PPS = 0x10;
  5257  02BC  3010               	movlw	16
  5258  02BD  003E               	movlb	30	; select bank30
  5259  02BE  00A0               	movwf	32	;volatile
  5260                           
  5261                           ;pin_manager.c: 102: RC3PPS = 0x17;
  5262  02BF  3017               	movlw	23
  5263  02C0  00A3               	movwf	35	;volatile
  5264                           
  5265                           ;pin_manager.c: 103: RC4PPS = 0x16;
  5266  02C1  3016               	movlw	22
  5267  02C2  00A4               	movwf	36	;volatile
  5268                           
  5269                           ;pin_manager.c: 104: RC6PPS = 0x10;
  5270  02C3  3010               	movlw	16
  5271  02C4  00A6               	movwf	38	;volatile
  5272                           
  5273                           ;pin_manager.c: 105: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5274  02C5  003D               	movlb	29	; select bank29
  5275  02C6  0849               	movf	73,w	;volatile
  5276  02C7  39E0               	andlw	-32
  5277  02C8  3813               	iorlw	19
  5278  02C9  00C9               	movwf	73	;volatile
  5279                           
  5280                           ;pin_manager.c: 106: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5281  02CA  0848               	movf	72,w	;volatile
  5282  02CB  39E0               	andlw	-32
  5283  02CC  3814               	iorlw	20
  5284  02CD  00C8               	movwf	72	;volatile
  5285                           
  5286                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  5287  02CE  3055               	movlw	85
  5288  02CF  008F               	movwf	15	;volatile
  5289                           
  5290                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  5291  02D0  30AA               	movlw	170
  5292  02D1  008F               	movwf	15	;volatile
  5293                           
  5294                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
  5295  02D2  140F               	bsf	15,0	;volatile
  5296                           
  5297                           ;pin_manager.c: 112: GIE = state;
  5298  02D3  0020               	movlb	0	; select bank0
  5299  02D4  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  5300  02D5  2AD8               	goto	u1430
  5301  02D6  178B               	bsf	11,7	;volatile
  5302  02D7  0008               	return
  5303  02D8                     u1430:	
  5304  02D8  138B               	bcf	11,7	;volatile
  5305  02D9  0008               	return
  5306  02DA                     __end_of_PIN_MANAGER_Initialize:	
  5307                           
  5308                           	psect	text11
  5309  04C2                     __ptext11:	
  5310 ;; *************** function _OSCILLATOR_Initialize *****************
  5311 ;; Defined at:
  5312 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    3
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_SYSTEM_Initialize
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _OSCILLATOR_Initialize
  5342  04C2                     _OSCILLATOR_Initialize:	
  5343                           
  5344                           ;mcc.c: 95: OSCCON1 = 0x10;
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5348  04C2  3010               	movlw	16
  5349  04C3  0031               	movlb	17	; select bank17
  5350  04C4  008D               	movwf	13	;volatile
  5351                           
  5352                           ;mcc.c: 97: OSCCON3 = 0x00;
  5353  04C5  018F               	clrf	15	;volatile
  5354                           
  5355                           ;mcc.c: 99: OSCEN = 0x00;
  5356  04C6  0191               	clrf	17	;volatile
  5357                           
  5358                           ;mcc.c: 101: OSCFRQ = 0x05;
  5359  04C7  3005               	movlw	5
  5360  04C8  0093               	movwf	19	;volatile
  5361                           
  5362                           ;mcc.c: 103: OSCTUNE = 0x00;
  5363  04C9  0192               	clrf	18	;volatile
  5364  04CA  0008               	return
  5365  04CB                     __end_of_OSCILLATOR_Initialize:	
  5366                           
  5367                           	psect	text12
  5368  0422                     __ptext12:	
  5369 ;; *************** function _I2C2_Initialize *****************
  5370 ;; Defined at:
  5371 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;Total ram usage:        1 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    3
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_SYSTEM_Initialize
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function _I2C2_Initialize
  5401  0422                     _I2C2_Initialize:	
  5402                           
  5403                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5404                           
  5405                           ;incstack = 0
  5406                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5407  0422  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5408  0423  0020               	movlb	0	; select bank0
  5409  0424  00A0               	movwf	??_I2C2_Initialize
  5410  0425  0820               	movf	??_I2C2_Initialize,w
  5411  0426  00C3               	movwf	low ((_i2c2_object| 0+1))
  5412                           
  5413                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5414  0427  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5415  0428  00A0               	movwf	??_I2C2_Initialize
  5416  0429  0820               	movf	??_I2C2_Initialize,w
  5417  042A  00C2               	movwf	_i2c2_object
  5418                           
  5419                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5420  042B  14C4               	bsf	_i2c2_object+2,1
  5421                           
  5422                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5423  042C  1044               	bcf	_i2c2_object+2,0
  5424                           
  5425                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5426  042D  01C6               	clrf	_i2c2_object+4
  5427                           
  5428                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5429  042E  3080               	movlw	128
  5430  042F  0023               	movlb	3	; select bank3
  5431  0430  0099               	movwf	25	;volatile
  5432                           
  5433                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5434  0431  3028               	movlw	40
  5435  0432  009A               	movwf	26	;volatile
  5436                           
  5437                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5438  0433  019C               	clrf	28	;volatile
  5439                           
  5440                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  5441  0434  309F               	movlw	159
  5442  0435  0097               	movwf	23	;volatile
  5443                           
  5444                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5445  0436  002E               	movlb	14	; select bank14
  5446  0437  110F               	bcf	15,2	;volatile
  5447                           
  5448                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5449  0438  1519               	bsf	25,2	;volatile
  5450  0439  0008               	return
  5451  043A                     __end_of_I2C2_Initialize:	
  5452                           
  5453                           	psect	text13
  5454  04AC                     __ptext13:	
  5455 ;; *************** function _EUSART_Initialize *****************
  5456 ;; Defined at:
  5457 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    3
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_SYSTEM_Initialize
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           
  5486                           ;psect for function _EUSART_Initialize
  5487  04AC                     _EUSART_Initialize:	
  5488                           
  5489                           ;eusart.c: 60: BAUD1CON = 0x08;
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _EUSART_Initialize: [wreg]
  5493  04AC  3008               	movlw	8
  5494  04AD  0022               	movlb	2	; select bank2
  5495  04AE  009F               	movwf	31	;volatile
  5496                           
  5497                           ;eusart.c: 63: RC1STA = 0x80;
  5498  04AF  3080               	movlw	128
  5499  04B0  009D               	movwf	29	;volatile
  5500                           
  5501                           ;eusart.c: 66: TX1STA = 0x24;
  5502  04B1  3024               	movlw	36
  5503  04B2  009E               	movwf	30	;volatile
  5504                           
  5505                           ;eusart.c: 69: SP1BRGL = 0x40;
  5506  04B3  3040               	movlw	64
  5507  04B4  009B               	movwf	27	;volatile
  5508                           
  5509                           ;eusart.c: 72: SP1BRGH = 0x03;
  5510  04B5  3003               	movlw	3
  5511  04B6  009C               	movwf	28	;volatile
  5512  04B7  0008               	return
  5513  04B8                     __end_of_EUSART_Initialize:	
  5514                           
  5515                           	psect	text14
  5516  0320                     __ptext14:	
  5517 ;; *************** function _EMC1001_Read *****************
  5518 ;; Defined at:
  5519 ;;		line 8 in file "main.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  reg             1    wreg     unsigned char 
  5522 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5523 ;;		 -> main@templo(1), main@temp(1), 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  reg             1   10[BANK0 ] unsigned char 
  5526 ;;  status          1   11[BANK0 ] enum E13634
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      unsigned char 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5536 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;Total ram usage:        5 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    4
  5543 ;; This function calls:
  5544 ;;		_I2C2_MasterReadTRBBuild
  5545 ;;		_I2C2_MasterTRBInsert
  5546 ;;		_I2C2_MasterWriteTRBBuild
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _EMC1001_Read
  5554  0320                     _EMC1001_Read:	
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5558                           ;EMC1001_Read@reg stored from wreg
  5559  0320  0020               	movlb	0	; select bank0
  5560  0321  00AA               	movwf	EMC1001_Read@reg
  5561                           
  5562                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5563  0322  3002               	movlw	2
  5564  0323  00A8               	movwf	??_EMC1001_Read
  5565  0324  0828               	movf	??_EMC1001_Read,w
  5566  0325  00AB               	movwf	EMC1001_Read@status
  5567                           
  5568                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5569                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5570  0326  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5571  0327  00A8               	movwf	??_EMC1001_Read
  5572  0328  0828               	movf	??_EMC1001_Read,w
  5573  0329  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5574  032A  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5575  032B  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5576  032C  3038               	movlw	56
  5577  032D  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5578  032E  3000               	movlw	0
  5579  032F  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5580  0330  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5581  0331  3183  23E6  3183   	fcall	_I2C2_MasterWriteTRBBuild
  5582                           
  5583                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5584  0334  0020               	movlb	0	; select bank0
  5585  0335  0827               	movf	EMC1001_Read@pData,w
  5586  0336  00A8               	movwf	??_EMC1001_Read
  5587  0337  0828               	movf	??_EMC1001_Read,w
  5588  0338  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5589  0339  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5590  033A  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5591  033B  3038               	movlw	56
  5592  033C  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5593  033D  3000               	movlw	0
  5594  033E  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5595  033F  304F               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5596  0340  3183  23BE  3183   	fcall	_I2C2_MasterReadTRBBuild
  5597                           
  5598                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5599  0343  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5600  0344  0020               	movlb	0	; select bank0
  5601  0345  00A8               	movwf	??_EMC1001_Read
  5602  0346  0828               	movf	??_EMC1001_Read,w
  5603  0347  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5604  0348  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5605  0349  00A9               	movwf	??_EMC1001_Read+1
  5606  034A  0829               	movf	??_EMC1001_Read+1,w
  5607  034B  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5608  034C  3002               	movlw	2
  5609  034D  3182  22DA  3183   	fcall	_I2C2_MasterTRBInsert
  5610  0350                     l1756:	
  5611                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  5612                           
  5613  0350  3002               	movlw	2
  5614  0351  0020               	movlb	0	; select bank0
  5615  0352  062B               	xorwf	EMC1001_Read@status,w
  5616  0353  1903               	btfsc	3,2
  5617  0354  2B50               	goto	l1756
  5618                           
  5619                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  5620  0355  082B               	movf	EMC1001_Read@status,w
  5621  0356  1D03               	btfss	3,2
  5622  0357  2B5A               	goto	u1130
  5623  0358  3001               	movlw	1
  5624  0359  0008               	return
  5625  035A                     u1130:	
  5626  035A  3000               	movlw	0
  5627  035B  0008               	return
  5628  035C                     __end_of_EMC1001_Read:	
  5629                           
  5630                           	psect	text15
  5631  03E6                     __ptext15:	
  5632 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5633 ;; Defined at:
  5634 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  ptrb            1    wreg     PTR struct .
  5637 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5638 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5639 ;;		 -> EMC1001_Read@reg(1), 
  5640 ;;  length          1    1[BANK0 ] unsigned char 
  5641 ;;  address         2    2[BANK0 ] unsigned int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5644 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:        7 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    3
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_EMC1001_Read
  5665 ;;		_I2C2_MasterWrite
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _I2C2_MasterWriteTRBBuild
  5671  03E6                     _I2C2_MasterWriteTRBBuild:	
  5672                           
  5673                           ;incstack = 0
  5674                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5675                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5676  03E6  0020               	movlb	0	; select bank0
  5677  03E7  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5678                           
  5679                           ;i2c2.c: 713: ptrb->address = address << 1;
  5680  03E8  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5681  03E9  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5682  03EA  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  5683  03EB  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5684  03EC  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5685  03ED  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5686  03EE  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5687  03EF  0086               	movwf	6
  5688  03F0  0187               	clrf	7
  5689  03F1  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5690  03F2  3FC0               	movwi [0]fsr1
  5691  03F3  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5692  03F4  3FC1               	movwi [1]fsr1
  5693                           
  5694                           ;i2c2.c: 714: ptrb->length = length;
  5695  03F5  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  5696  03F6  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5697  03F7  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5698  03F8  3E02               	addlw	2
  5699  03F9  0086               	movwf	6
  5700  03FA  0187               	clrf	7
  5701  03FB  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5702  03FC  0081               	movwf	1
  5703                           
  5704                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5705  03FD  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5706  03FE  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5707  03FF  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5708  0400  3E03               	addlw	3
  5709  0401  0086               	movwf	6
  5710  0402  0187               	clrf	7
  5711  0403  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5712  0404  0081               	movwf	1
  5713  0405  0008               	return
  5714  0406                     __end_of_I2C2_MasterWriteTRBBuild:	
  5715                           
  5716                           	psect	text16
  5717  02DA                     __ptext16:	
  5718 ;; *************** function _I2C2_MasterTRBInsert *****************
  5719 ;; Defined at:
  5720 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  count           1    wreg     unsigned char 
  5723 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5724 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  5725 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  5726 ;;		 -> EMC1001_Read@status(1), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  count           1    3[BANK0 ] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;Total ram usage:        4 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    3
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_EMC1001_Read
  5749 ;;		_I2C2_MasterWrite
  5750 ;;		_I2C2_MasterRead
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _I2C2_MasterTRBInsert
  5756  02DA                     _I2C2_MasterTRBInsert:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5760                           ;I2C2_MasterTRBInsert@count stored from wreg
  5761  02DA  0020               	movlb	0	; select bank0
  5762  02DB  00A3               	movwf	I2C2_MasterTRBInsert@count
  5763                           
  5764                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5765  02DC  1844               	btfsc	_i2c2_object+2,0
  5766  02DD  2B0E               	goto	l1546
  5767                           
  5768                           ;i2c2.c: 649: {
  5769                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5770  02DE  3002               	movlw	2
  5771  02DF  00A2               	movwf	??_I2C2_MasterTRBInsert
  5772  02E0  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5773  02E1  0086               	movwf	6
  5774  02E2  0187               	clrf	7
  5775  02E3  0822               	movf	??_I2C2_MasterTRBInsert,w
  5776  02E4  0081               	movwf	1
  5777                           
  5778                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5779  02E5  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5780  02E6  00A2               	movwf	??_I2C2_MasterTRBInsert
  5781  02E7  0A42               	incf	_i2c2_object,w
  5782  02E8  0086               	movwf	6
  5783  02E9  0187               	clrf	7
  5784  02EA  0822               	movf	??_I2C2_MasterTRBInsert,w
  5785  02EB  0081               	movwf	1
  5786                           
  5787                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5788  02EC  0823               	movf	I2C2_MasterTRBInsert@count,w
  5789  02ED  00A2               	movwf	??_I2C2_MasterTRBInsert
  5790  02EE  0842               	movf	_i2c2_object,w
  5791  02EF  0086               	movwf	6
  5792  02F0  0187               	clrf	7
  5793  02F1  0822               	movf	??_I2C2_MasterTRBInsert,w
  5794  02F2  0081               	movwf	1
  5795                           
  5796                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  5797  02F3  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5798  02F4  00A2               	movwf	??_I2C2_MasterTRBInsert
  5799  02F5  0842               	movf	_i2c2_object,w
  5800  02F6  3E02               	addlw	2
  5801  02F7  0086               	movwf	6
  5802  02F8  0187               	clrf	7
  5803  02F9  0822               	movf	??_I2C2_MasterTRBInsert,w
  5804  02FA  0081               	movwf	1
  5805                           
  5806                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  5807  02FB  3003               	movlw	3
  5808  02FC  00A2               	movwf	??_I2C2_MasterTRBInsert
  5809  02FD  0822               	movf	??_I2C2_MasterTRBInsert,w
  5810  02FE  07C2               	addwf	_i2c2_object,f
  5811                           
  5812                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  5813  02FF  0842               	movf	_i2c2_object,w
  5814  0300  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  5815  0301  1D03               	skipz
  5816  0302  2B07               	goto	l1542
  5817                           
  5818                           ;i2c2.c: 659: {
  5819                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  5820  0303  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5821  0304  00A2               	movwf	??_I2C2_MasterTRBInsert
  5822  0305  0822               	movf	??_I2C2_MasterTRBInsert,w
  5823  0306  00C2               	movwf	_i2c2_object
  5824  0307                     l1542:	
  5825                           
  5826                           ;i2c2.c: 662: }
  5827                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  5828  0307  10C4               	bcf	_i2c2_object+2,1
  5829                           
  5830                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  5831  0308  0843               	movf	low ((_i2c2_object| 0+1)),w
  5832  0309  0642               	xorwf	_i2c2_object,w
  5833  030A  1D03               	skipz
  5834  030B  2B13               	goto	l1548
  5835                           
  5836                           ;i2c2.c: 670: {
  5837                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  5838  030C  1444               	bsf	_i2c2_object+2,0
  5839                           
  5840                           ;i2c2.c: 673: }
  5841                           ;i2c2.c: 675: }
  5842  030D  2B13               	goto	l1548
  5843  030E                     l1546:	
  5844                           
  5845                           ;i2c2.c: 676: else
  5846                           ;i2c2.c: 677: {
  5847                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  5848  030E  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5849  030F  0086               	movwf	6
  5850  0310  0187               	clrf	7
  5851  0311  0181               	clrf	1
  5852  0312  0A81               	incf	1,f
  5853  0313                     l1548:	
  5854                           
  5855                           ;i2c2.c: 679: }
  5856                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  5857  0313  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5858  0314  0086               	movwf	6
  5859  0315  0187               	clrf	7
  5860  0316  3002               	movlw	2
  5861  0317  0601               	xorwf	1,w
  5862  0318  1D03               	btfss	3,2
  5863  0319  0008               	return
  5864  031A                     l1552:	
  5865                           ;i2c2.c: 683: {
  5866                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  5867                           
  5868  031A  084A               	movf	_i2c2_state,w
  5869  031B  1D03               	btfss	3,2
  5870  031C  2B1A               	goto	l1552
  5871                           
  5872                           ;i2c2.c: 685: {
  5873                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  5874  031D  002E               	movlb	14	; select bank14
  5875  031E  150F               	bsf	15,2	;volatile
  5876  031F  0008               	return
  5877  0320                     __end_of_I2C2_MasterTRBInsert:	
  5878                           
  5879                           	psect	text17
  5880  03BE                     __ptext17:	
  5881 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  5882 ;; Defined at:
  5883 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  ptrb            1    wreg     PTR struct .
  5886 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  5887 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5888 ;;		 -> main@templo(1), main@temp(1), 
  5889 ;;  length          1    1[BANK0 ] unsigned char 
  5890 ;;  address         2    2[BANK0 ] unsigned int 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5893 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;Total ram usage:        7 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    3
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_EMC1001_Read
  5914 ;;		_I2C2_MasterRead
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _I2C2_MasterReadTRBBuild
  5920  03BE                     _I2C2_MasterReadTRBBuild:	
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5924                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  5925  03BE  0020               	movlb	0	; select bank0
  5926  03BF  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  5927                           
  5928                           ;i2c2.c: 700: ptrb->address = address << 1;
  5929  03C0  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  5930  03C1  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  5931  03C2  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  5932  03C3  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  5933  03C4  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  5934  03C5  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  5935  03C6  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  5936  03C7  0086               	movwf	6
  5937  03C8  0187               	clrf	7
  5938  03C9  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  5939  03CA  3FC0               	movwi [0]fsr1
  5940  03CB  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  5941  03CC  3FC1               	movwi [1]fsr1
  5942                           
  5943                           ;i2c2.c: 702: ptrb->address |= 0x01;
  5944  03CD  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  5945  03CE  0086               	movwf	6
  5946  03CF  0187               	clrf	7
  5947  03D0  3001               	movlw	1
  5948  03D1  0481               	iorwf	1,f
  5949  03D2  3141               	addfsr 1,1
  5950  03D3  3000               	movlw	0
  5951  03D4  0481               	iorwf	1,f
  5952                           
  5953                           ;i2c2.c: 703: ptrb->length = length;
  5954  03D5  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  5955  03D6  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  5956  03D7  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  5957  03D8  3E02               	addlw	2
  5958  03D9  0086               	movwf	6
  5959  03DA  0187               	clrf	7
  5960  03DB  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  5961  03DC  0081               	movwf	1
  5962                           
  5963                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  5964  03DD  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  5965  03DE  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  5966  03DF  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  5967  03E0  3E03               	addlw	3
  5968  03E1  0086               	movwf	6
  5969  03E2  0187               	clrf	7
  5970  03E3  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  5971  03E4  0081               	movwf	1
  5972  03E5  0008               	return
  5973  03E6                     __end_of_I2C2_MasterReadTRBBuild:	
  5974                           
  5975                           	psect	intentry
  5976  0004                     __pintentry:	
  5977 ;; *************** function _INTERRUPT_InterruptManager *****************
  5978 ;; Defined at:
  5979 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        1 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    2
  6000 ;; This function calls:
  6001 ;;		_I2C2_BusCollisionISR
  6002 ;;		_I2C2_ISR
  6003 ;; This function is called by:
  6004 ;;		Interrupt level 1
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008  0004                     _INTERRUPT_InterruptManager:	
  6009                           
  6010                           ;incstack = 0
  6011  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6012                           
  6013                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6014  0005  3180               	pagesel	$
  6015  0006  0020               	movlb	0	; select bank0
  6016  0007  087F               	movf	127,w
  6017  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  6018                           
  6019                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  6020  0009  1F0B               	btfss	11,6	;volatile
  6021  000A  2813               	goto	i1l208
  6022  000B  002E               	movlb	14	; select bank14
  6023  000C  1999               	btfsc	25,3	;volatile
  6024  000D  1D8F               	btfss	15,3	;volatile
  6025  000E  2813               	goto	i1l208
  6026                           
  6027                           ;interrupt_manager.c: 55: {
  6028                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6029  000F  3184  24DA  3180   	fcall	_I2C2_BusCollisionISR
  6030                           
  6031                           ;interrupt_manager.c: 57: }
  6032  0012  281B               	goto	i1l212
  6033  0013                     i1l208:	
  6034                           
  6035                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  6036  0013  1F0B               	btfss	11,6	;volatile
  6037  0014  281B               	goto	i1l212
  6038  0015  002E               	movlb	14	; select bank14
  6039  0016  1919               	btfsc	25,2	;volatile
  6040  0017  1D0F               	btfss	15,2	;volatile
  6041  0018  281B               	goto	i1l212
  6042                           
  6043                           ;interrupt_manager.c: 59: {
  6044                           ;interrupt_manager.c: 60: I2C2_ISR();
  6045  0019  3180  2034         	fcall	_I2C2_ISR
  6046  001B                     i1l212:	
  6047                           ;interrupt_manager.c: 62: else
  6048                           ;interrupt_manager.c: 63: {
  6049                           
  6050                           ;interrupt_manager.c: 61: }
  6051                           
  6052  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  6053  001C  0020               	movlb	0	; select bank0
  6054  001D  00FF               	movwf	127
  6055  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6056  001F  0009               	retfie
  6057  0020                     __end_of_INTERRUPT_InterruptManager:	
  6058                           
  6059                           	psect	text19
  6060  0034                     __ptext19:	
  6061 ;; *************** function _I2C2_ISR *****************
  6062 ;; Defined at:
  6063 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;Total ram usage:        4 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    1
  6084 ;; This function calls:
  6085 ;;		_I2C2_FunctionComplete
  6086 ;;		_I2C2_Stop
  6087 ;; This function is called by:
  6088 ;;		_INTERRUPT_InterruptManager
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           
  6093                           ;psect for function _I2C2_ISR
  6094  0034                     _I2C2_ISR:	
  6095                           
  6096                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6097                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6098                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6099                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6100                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6101                           
  6102                           ;incstack = 0
  6103                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6104  0034  002E               	movlb	14	; select bank14
  6105  0035  110F               	bcf	15,2	;volatile
  6106                           
  6107                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6108  0036  0023               	movlb	3	; select bank3
  6109  0037  1F9A               	btfss	26,7	;volatile
  6110  0038  2963               	goto	i1l1742
  6111                           
  6112                           ;i2c2.c: 246: {
  6113                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6114  0039  139A               	bcf	26,7	;volatile
  6115                           
  6116                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6117  003A  0020               	movlb	0	; select bank0
  6118  003B  01CA               	clrf	_i2c2_state
  6119                           
  6120                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6121  003C  0873               	movf	_p_i2c2_current,w
  6122  003D  3E02               	addlw	2
  6123  003E  0086               	movwf	6
  6124  003F  0187               	clrf	7
  6125  0040  0801               	movf	1,w
  6126  0041  0086               	movwf	6
  6127  0042  0187               	clrf	7
  6128  0043  0181               	clrf	1
  6129  0044  0A81               	incf	1,f
  6130                           
  6131                           ;i2c2.c: 253: p_i2c2_current = (0);
  6132  0045  01F3               	clrf	_p_i2c2_current
  6133                           
  6134                           ;i2c2.c: 255: return;
  6135  0046  0008               	return
  6136  0047                     i1l272:	
  6137                           ;i2c2.c: 260: {
  6138                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6139                           
  6140                           ;i2c2.c: 256: }
  6141                           ;i2c2.c: 259: switch(i2c2_state)
  6142                           
  6143                           
  6144                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6145  0047  18C4               	btfsc	_i2c2_object+2,1
  6146  0048  0008               	return
  6147                           
  6148                           ;i2c2.c: 264: {
  6149                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6150  0049  0843               	movf	low ((_i2c2_object| 0+1)),w
  6151  004A  00F9               	movwf	??_I2C2_ISR
  6152  004B  0879               	movf	??_I2C2_ISR,w
  6153  004C  00F3               	movwf	_p_i2c2_current
  6154                           
  6155                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6156  004D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6157  004E  0086               	movwf	6
  6158  004F  0187               	clrf	7
  6159  0050  0801               	movf	1,w
  6160  0051  00F9               	movwf	??_I2C2_ISR
  6161  0052  0879               	movf	??_I2C2_ISR,w
  6162  0053  00F2               	movwf	_i2c2_trb_count
  6163                           
  6164                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6165  0054  0843               	movf	low ((_i2c2_object| 0+1)),w
  6166  0055  0086               	movwf	6
  6167  0056  0187               	clrf	7
  6168  0057  3F41               	moviw [1]fsr1
  6169  0058  00F4               	movwf	_p_i2c2_trb_current
  6170                           
  6171                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6172  0059  3003               	movlw	3
  6173  005A  00F9               	movwf	??_I2C2_ISR
  6174  005B  0879               	movf	??_I2C2_ISR,w
  6175  005C  07C3               	addwf	low ((_i2c2_object| 0+1)),f
  6176                           
  6177                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6178  005D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6179  005E  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6180  005F  1D03               	skipz
  6181  0060  2865               	goto	i1l1630
  6182                           
  6183                           ;i2c2.c: 274: {
  6184                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6185  0061  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6186  0062  00F9               	movwf	??_I2C2_ISR
  6187  0063  0879               	movf	??_I2C2_ISR,w
  6188  0064  00C3               	movwf	low ((_i2c2_object| 0+1))
  6189  0065                     i1l1630:	
  6190                           
  6191                           ;i2c2.c: 277: }
  6192                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6193  0065  1044               	bcf	_i2c2_object+2,0
  6194                           
  6195                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6196  0066  0843               	movf	low ((_i2c2_object| 0+1)),w
  6197  0067  0642               	xorwf	_i2c2_object,w
  6198  0068  1903               	btfsc	3,2
  6199                           
  6200                           ;i2c2.c: 285: {
  6201                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6202  0069  14C4               	bsf	_i2c2_object+2,1
  6203                           
  6204                           ;i2c2.c: 288: }
  6205                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6206  006A  0023               	movlb	3	; select bank3
  6207  006B  141B               	bsf	27,0	;volatile
  6208                           
  6209                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6210  006C  3002               	movlw	2
  6211  006D  00F9               	movwf	??_I2C2_ISR
  6212  006E  0879               	movf	??_I2C2_ISR,w
  6213  006F  0020               	movlb	0	; select bank0
  6214  0070  00CA               	movwf	_i2c2_state
  6215                           
  6216                           ;i2c2.c: 295: }
  6217                           ;i2c2.c: 297: break;
  6218  0071  0008               	return
  6219  0072                     i1l277:	
  6220                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6221                           
  6222                           
  6223                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6224  0072  0023               	movlb	3	; select bank3
  6225  0073  149B               	bsf	27,1	;volatile
  6226                           
  6227                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6228  0074  3002               	movlw	2
  6229  0075  00F9               	movwf	??_I2C2_ISR
  6230  0076  0879               	movf	??_I2C2_ISR,w
  6231  0077  0020               	movlb	0	; select bank0
  6232  0078  00CA               	movwf	_i2c2_state
  6233                           
  6234                           ;i2c2.c: 309: break;
  6235  0079  0008               	return
  6236  007A                     i1l278:	
  6237                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6238                           
  6239                           
  6240                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6241  007A  0023               	movlb	3	; select bank3
  6242  007B  1F1B               	btfss	27,6	;volatile
  6243  007C  2886               	goto	i1l1642
  6244                           
  6245                           ;i2c2.c: 314: {
  6246                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6247  007D  3001               	movlw	1
  6248  007E  00F9               	movwf	??_I2C2_ISR
  6249  007F  0879               	movf	??_I2C2_ISR,w
  6250  0080  0020               	movlb	0	; select bank0
  6251  0081  07C6               	addwf	_i2c2_object+4,f
  6252                           
  6253                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6254  0082  3004               	movlw	4
  6255  0083  3184  2452         	fcall	_I2C2_Stop
  6256                           
  6257                           ;i2c2.c: 317: }
  6258  0085  0008               	return
  6259  0086                     i1l1642:	
  6260                           
  6261                           ;i2c2.c: 318: else
  6262                           ;i2c2.c: 319: {
  6263                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6264  0086  0876               	movf	I2C2_ISR@i2c_address+1,w
  6265  0087  00FA               	movwf	??_I2C2_ISR+1
  6266  0088  0875               	movf	I2C2_ISR@i2c_address,w
  6267  0089  00F9               	movwf	??_I2C2_ISR
  6268  008A  36FA               	lsrf	??_I2C2_ISR+1,f
  6269  008B  0CF9               	rrf	??_I2C2_ISR,f
  6270  008C  0879               	movf	??_I2C2_ISR,w
  6271  008D  0023               	movlb	3	; select bank3
  6272  008E  0096               	movwf	22	;volatile
  6273                           
  6274                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6275  008F  1C75               	btfss	I2C2_ISR@i2c_address,0
  6276  0090  2897               	goto	i1l1648
  6277                           
  6278                           ;i2c2.c: 325: {
  6279                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6280  0091  300B               	movlw	11
  6281  0092  00F9               	movwf	??_I2C2_ISR
  6282  0093  0879               	movf	??_I2C2_ISR,w
  6283  0094  0020               	movlb	0	; select bank0
  6284  0095  00CA               	movwf	_i2c2_state
  6285                           
  6286                           ;i2c2.c: 329: }
  6287  0096  0008               	return
  6288  0097                     i1l1648:	
  6289                           
  6290                           ;i2c2.c: 330: else
  6291                           ;i2c2.c: 331: {
  6292                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6293  0097  3003               	movlw	3
  6294  0098  00F9               	movwf	??_I2C2_ISR
  6295  0099  0879               	movf	??_I2C2_ISR,w
  6296  009A  0020               	movlb	0	; select bank0
  6297  009B  00CA               	movwf	_i2c2_state
  6298                           
  6299                           ;i2c2.c: 334: }
  6300                           ;i2c2.c: 335: }
  6301                           ;i2c2.c: 337: break;
  6302  009C  0008               	return
  6303  009D                     i1l283:	
  6304                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6305                           
  6306                           
  6307                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6308  009D  0023               	movlb	3	; select bank3
  6309  009E  1F1B               	btfss	27,6	;volatile
  6310  009F  28A9               	goto	i1l284
  6311                           
  6312                           ;i2c2.c: 342: {
  6313                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6314  00A0  3001               	movlw	1
  6315  00A1  00F9               	movwf	??_I2C2_ISR
  6316  00A2  0879               	movf	??_I2C2_ISR,w
  6317  00A3  0020               	movlb	0	; select bank0
  6318  00A4  07C6               	addwf	_i2c2_object+4,f
  6319                           
  6320                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6321  00A5  3004               	movlw	4
  6322  00A6  3184  2452         	fcall	_I2C2_Stop
  6323                           
  6324                           ;i2c2.c: 345: }
  6325  00A8  0008               	return
  6326  00A9                     i1l284:	
  6327                           
  6328                           ;i2c2.c: 346: else
  6329                           ;i2c2.c: 347: {
  6330                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6331  00A9  149B               	bsf	27,1	;volatile
  6332                           
  6333                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6334  00AA  0876               	movf	I2C2_ISR@i2c_address+1,w
  6335  00AB  00FA               	movwf	??_I2C2_ISR+1
  6336  00AC  0875               	movf	I2C2_ISR@i2c_address,w
  6337  00AD  00F9               	movwf	??_I2C2_ISR
  6338  00AE  087A               	movf	??_I2C2_ISR+1,w
  6339  00AF  00F9               	movwf	??_I2C2_ISR
  6340  00B0  01FA               	clrf	??_I2C2_ISR+1
  6341  00B1  3006               	movlw	6
  6342  00B2  0579               	andwf	??_I2C2_ISR,w
  6343  00B3  00FB               	movwf	??_I2C2_ISR+2
  6344  00B4  3000               	movlw	0
  6345  00B5  057A               	andwf	??_I2C2_ISR+1,w
  6346  00B6  00FC               	movwf	??_I2C2_ISR+3
  6347  00B7  30F0               	movlw	240
  6348  00B8  047B               	iorwf	??_I2C2_ISR+2,w
  6349  00B9  00F5               	movwf	I2C2_ISR@i2c_address
  6350  00BA  3000               	movlw	0
  6351  00BB  047C               	iorwf	??_I2C2_ISR+3,w
  6352  00BC  00F6               	movwf	I2C2_ISR@i2c_address+1
  6353                           
  6354                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6355  00BD  1475               	bsf	I2C2_ISR@i2c_address,0
  6356                           
  6357                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6358  00BE  0020               	movlb	0	; select bank0
  6359  00BF  01C9               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6360  00C0  0AC9               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6361                           
  6362                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6363  00C1  3002               	movlw	2
  6364  00C2  00F9               	movwf	??_I2C2_ISR
  6365  00C3  0879               	movf	??_I2C2_ISR,w
  6366  00C4  00CA               	movwf	_i2c2_state
  6367                           
  6368                           ;i2c2.c: 364: }
  6369                           ;i2c2.c: 366: break;
  6370  00C5  0008               	return
  6371  00C6                     i1l1662:	
  6372                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6373                           
  6374                           
  6375                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6376  00C6  0349               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6377  00C7  1903               	btfsc	3,2
  6378  00C8  28DA               	goto	i1l1682
  6379                           
  6380                           ;i2c2.c: 382: {
  6381                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6382  00C9  0874               	movf	_p_i2c2_trb_current,w
  6383  00CA  0086               	movwf	6
  6384  00CB  0187               	clrf	7
  6385  00CC  3F40               	moviw [0]fsr1
  6386  00CD  00F5               	movwf	I2C2_ISR@i2c_address
  6387  00CE  3F41               	moviw [1]fsr1
  6388  00CF  00F6               	movwf	I2C2_ISR@i2c_address+1
  6389                           
  6390                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6391  00D0  0874               	movf	_p_i2c2_trb_current,w
  6392  00D1  0086               	movwf	6
  6393  00D2  0187               	clrf	7
  6394  00D3  3F43               	moviw [3]fsr1
  6395  00D4  00F1               	movwf	I2C2_ISR@pi2c_buf_ptr
  6396                           
  6397                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6398  00D5  0874               	movf	_p_i2c2_trb_current,w
  6399  00D6  0086               	movwf	6
  6400  00D7  0187               	clrf	7
  6401  00D8  3F42               	moviw [2]fsr1
  6402  00D9  00F0               	movwf	I2C2_ISR@i2c_bytes_left
  6403  00DA                     i1l1682:	
  6404                           ;i2c2.c: 407: }
  6405                           ;i2c2.c: 408: }
  6406                           
  6407                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6408                           
  6409                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6410                           
  6411                           ;i2c2.c: 400: else
  6412                           ;i2c2.c: 401: {
  6413                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6414                           
  6415                           ;i2c2.c: 399: }
  6416                           
  6417                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6418                           
  6419                           ;i2c2.c: 393: {
  6420                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6421                           
  6422                           ;i2c2.c: 391: {
  6423                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6424                           
  6425                           ;i2c2.c: 387: }
  6426                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6427                           
  6428                           
  6429                           ;i2c2.c: 409: else
  6430                           ;i2c2.c: 410: {
  6431                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6432  00DA  0875               	movf	I2C2_ISR@i2c_address,w
  6433  00DB  0023               	movlb	3	; select bank3
  6434  00DC  0096               	movwf	22	;volatile
  6435                           
  6436                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6437  00DD  1C75               	btfss	I2C2_ISR@i2c_address,0
  6438  00DE  28E5               	goto	i1l1688
  6439                           
  6440                           ;i2c2.c: 414: {
  6441                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6442  00DF  3005               	movlw	5
  6443  00E0  00F9               	movwf	??_I2C2_ISR
  6444  00E1  0879               	movf	??_I2C2_ISR,w
  6445  00E2  0020               	movlb	0	; select bank0
  6446  00E3  00CA               	movwf	_i2c2_state
  6447                           
  6448                           ;i2c2.c: 417: }
  6449  00E4  0008               	return
  6450  00E5                     i1l1688:	
  6451                           
  6452                           ;i2c2.c: 418: else
  6453                           ;i2c2.c: 419: {
  6454                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6455  00E5  3003               	movlw	3
  6456  00E6  00F9               	movwf	??_I2C2_ISR
  6457  00E7  0879               	movf	??_I2C2_ISR,w
  6458  00E8  0020               	movlb	0	; select bank0
  6459  00E9  00CA               	movwf	_i2c2_state
  6460                           
  6461                           ;i2c2.c: 422: }
  6462                           ;i2c2.c: 423: }
  6463                           ;i2c2.c: 424: break;
  6464  00EA  0008               	return
  6465  00EB                     i1l294:	
  6466                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6467                           
  6468                           
  6469                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6470  00EB  0023               	movlb	3	; select bank3
  6471  00EC  1F1B               	btfss	27,6	;volatile
  6472  00ED  28F9               	goto	i1l1696
  6473                           
  6474                           ;i2c2.c: 430: {
  6475                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6476  00EE  3001               	movlw	1
  6477  00EF  00F9               	movwf	??_I2C2_ISR
  6478  00F0  0879               	movf	??_I2C2_ISR,w
  6479  00F1  0020               	movlb	0	; select bank0
  6480  00F2  07C6               	addwf	_i2c2_object+4,f
  6481                           
  6482                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6483  00F3  0023               	movlb	3	; select bank3
  6484  00F4  131B               	bcf	27,6	;volatile
  6485                           
  6486                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6487  00F5  3005               	movlw	5
  6488  00F6  3184  2452         	fcall	_I2C2_Stop
  6489                           
  6490                           ;i2c2.c: 440: }
  6491  00F8  0008               	return
  6492  00F9                     i1l1696:	
  6493                           
  6494                           ;i2c2.c: 441: else
  6495                           ;i2c2.c: 442: {
  6496                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6497  00F9  3001               	movlw	1
  6498  00FA  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6499  00FB  0A70               	incf	I2C2_ISR@i2c_bytes_left,w
  6500  00FC  1D03               	btfss	3,2
  6501  00FD  2912               	goto	i1l1704
  6502                           
  6503                           ;i2c2.c: 445: {
  6504                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6505  00FE  3004               	movlw	4
  6506  00FF  00F9               	movwf	??_I2C2_ISR
  6507  0100  0879               	movf	??_I2C2_ISR,w
  6508  0101  07F4               	addwf	_p_i2c2_trb_current,f
  6509                           
  6510                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6511  0102  3001               	movlw	1
  6512  0103  02F2               	subwf	_i2c2_trb_count,f
  6513  0104  1D03               	btfss	3,2
  6514  0105  290A               	goto	i1l298
  6515                           
  6516                           ;i2c2.c: 453: {
  6517                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6518  0106  3000               	movlw	0
  6519  0107  3184  2452         	fcall	_I2C2_Stop
  6520                           
  6521                           ;i2c2.c: 455: }
  6522  0109  0008               	return
  6523  010A                     i1l298:	
  6524                           
  6525                           ;i2c2.c: 456: else
  6526                           ;i2c2.c: 457: {
  6527                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6528  010A  0023               	movlb	3	; select bank3
  6529  010B  149B               	bsf	27,1	;volatile
  6530                           
  6531                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6532  010C  3002               	movlw	2
  6533  010D  00F9               	movwf	??_I2C2_ISR
  6534  010E  0879               	movf	??_I2C2_ISR,w
  6535  010F  0020               	movlb	0	; select bank0
  6536  0110  00CA               	movwf	_i2c2_state
  6537                           
  6538                           ;i2c2.c: 469: }
  6539                           ;i2c2.c: 470: }
  6540  0111  0008               	return
  6541  0112                     i1l1704:	
  6542                           
  6543                           ;i2c2.c: 471: else
  6544                           ;i2c2.c: 472: {
  6545                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6546  0112  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6547  0113  0086               	movwf	6
  6548  0114  0187               	clrf	7
  6549  0115  0801               	movf	1,w
  6550  0116  0023               	movlb	3	; select bank3
  6551  0117  0096               	movwf	22	;volatile
  6552  0118  3001               	movlw	1
  6553  0119  00F9               	movwf	??_I2C2_ISR
  6554  011A  0879               	movf	??_I2C2_ISR,w
  6555  011B  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6556                           
  6557                           ;i2c2.c: 475: }
  6558                           ;i2c2.c: 476: }
  6559                           ;i2c2.c: 477: break;
  6560  011C  0008               	return
  6561  011D                     i1l301:	
  6562                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6563                           
  6564                           
  6565                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6566  011D  0023               	movlb	3	; select bank3
  6567  011E  1F1B               	btfss	27,6	;volatile
  6568  011F  292B               	goto	i1l302
  6569                           
  6570                           ;i2c2.c: 483: {
  6571                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6572  0120  3001               	movlw	1
  6573  0121  00F9               	movwf	??_I2C2_ISR
  6574  0122  0879               	movf	??_I2C2_ISR,w
  6575  0123  0020               	movlb	0	; select bank0
  6576  0124  07C6               	addwf	_i2c2_object+4,f
  6577                           
  6578                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6579  0125  3004               	movlw	4
  6580  0126  3184  2452         	fcall	_I2C2_Stop
  6581                           
  6582                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6583  0128  0023               	movlb	3	; select bank3
  6584  0129  131B               	bcf	27,6	;volatile
  6585                           
  6586                           ;i2c2.c: 493: }
  6587  012A  0008               	return
  6588  012B                     i1l302:	
  6589                           
  6590                           ;i2c2.c: 494: else
  6591                           ;i2c2.c: 495: {
  6592                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6593  012B  159B               	bsf	27,3	;volatile
  6594                           
  6595                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6596  012C  3008               	movlw	8
  6597  012D  00F9               	movwf	??_I2C2_ISR
  6598  012E  0879               	movf	??_I2C2_ISR,w
  6599  012F  0020               	movlb	0	; select bank0
  6600  0130  00CA               	movwf	_i2c2_state
  6601                           
  6602                           ;i2c2.c: 498: }
  6603                           ;i2c2.c: 499: break;
  6604  0131  0008               	return
  6605  0132                     i1l1716:	
  6606                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6607                           
  6608                           
  6609                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6610  0132  3008               	movlw	8
  6611  0133  00F9               	movwf	??_I2C2_ISR
  6612  0134  0879               	movf	??_I2C2_ISR,w
  6613  0135  00CA               	movwf	_i2c2_state
  6614                           
  6615                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6616  0136  0023               	movlb	3	; select bank3
  6617  0137  159B               	bsf	27,3	;volatile
  6618                           
  6619                           ;i2c2.c: 511: break;
  6620  0138  0008               	return
  6621  0139                     i1l1720:	
  6622                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6623                           
  6624                           
  6625                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6626  0139  0023               	movlb	3	; select bank3
  6627  013A  0816               	movf	22,w	;volatile
  6628  013B  00F9               	movwf	??_I2C2_ISR
  6629  013C  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6630  013D  0086               	movwf	6
  6631  013E  0187               	clrf	7
  6632  013F  0879               	movf	??_I2C2_ISR,w
  6633  0140  0081               	movwf	1
  6634  0141  3001               	movlw	1
  6635  0142  00F9               	movwf	??_I2C2_ISR
  6636  0143  0879               	movf	??_I2C2_ISR,w
  6637  0144  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6638                           
  6639                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6640  0145  3001               	movlw	1
  6641  0146  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6642  0147  1903               	btfsc	3,2
  6643  0148  2950               	goto	i1l306
  6644                           
  6645                           ;i2c2.c: 520: {
  6646                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6647  0149  129B               	bcf	27,5	;volatile
  6648                           
  6649                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6650  014A  3006               	movlw	6
  6651  014B  00F9               	movwf	??_I2C2_ISR
  6652  014C  0879               	movf	??_I2C2_ISR,w
  6653  014D  0020               	movlb	0	; select bank0
  6654  014E  00CA               	movwf	_i2c2_state
  6655                           
  6656                           ;i2c2.c: 530: }
  6657  014F  2953               	goto	i1l1732
  6658  0150                     i1l306:	
  6659                           
  6660                           ;i2c2.c: 531: else
  6661                           ;i2c2.c: 532: {
  6662                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6663  0150  169B               	bsf	27,5	;volatile
  6664                           
  6665                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6666  0151  3184  247C         	fcall	_I2C2_FunctionComplete
  6667  0153                     i1l1732:	
  6668                           
  6669                           ;i2c2.c: 539: }
  6670                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6671  0153  0023               	movlb	3	; select bank3
  6672  0154  161B               	bsf	27,4	;volatile
  6673                           
  6674                           ;i2c2.c: 543: break;
  6675  0155  0008               	return
  6676  0156                     i1l1734:	
  6677                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6678                           
  6679                           
  6680                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6681                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6682  0156  3000               	movlw	0
  6683  0157  3184  2452         	fcall	_I2C2_Stop
  6684                           
  6685                           ;i2c2.c: 550: break;
  6686  0159  0008               	return
  6687  015A                     i1l1736:	
  6688                           ;i2c2.c: 552: default:
  6689                           
  6690                           
  6691                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6692  015A  3001               	movlw	1
  6693  015B  00F9               	movwf	??_I2C2_ISR
  6694  015C  0879               	movf	??_I2C2_ISR,w
  6695  015D  0020               	movlb	0	; select bank0
  6696  015E  07C6               	addwf	_i2c2_object+4,f
  6697                           
  6698                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6699  015F  3006               	movlw	6
  6700  0160  3184  2452         	fcall	_I2C2_Stop
  6701                           
  6702                           ;i2c2.c: 560: }
  6703                           
  6704                           ;i2c2.c: 558: break;
  6705  0162  0008               	return
  6706  0163                     i1l1742:	
  6707  0163  0020               	movlb	0	; select bank0
  6708  0164  084A               	movf	_i2c2_state,w
  6709                           
  6710                           ; Switch size 1, requested type "space"
  6711                           ; Number of cases is 11, Range of values is 0 to 11
  6712                           ; switch strategies available:
  6713                           ; Name         Instructions Cycles
  6714                           ; direct_byte           30     6 (fixed)
  6715                           ; simple_byte           34    18 (average)
  6716                           ; jumptable            260     6 (fixed)
  6717                           ;	Chosen strategy is direct_byte
  6718  0165  0084               	movwf	4
  6719  0166  300C               	movlw	12
  6720  0167  0204               	subwf	4,w
  6721  0168  1803               	skipnc
  6722  0169  295A               	goto	i1l1736
  6723  016A  3184               	movlp	high i1S2090
  6724  016B  3504               	lslf	4,w
  6725  016C  3E3A               	addlw	low i1S2090
  6726  016D  0082               	movwf	2
  6727  016E  0008               	return
  6728  016F                     __end_of_I2C2_ISR:	
  6729                           
  6730                           	psect	swtext1
  6731  043A                     __pswtext1:	
  6732  043A                     i1S2090:	
  6733  043A  3180  2847         	ljmp	i1l272
  6734  043C  3180  2872         	ljmp	i1l277
  6735  043E  3180  28C6         	ljmp	i1l1662
  6736  0440  3180  28EB         	ljmp	i1l294
  6737  0442  3181  2956         	ljmp	i1l1734
  6738  0444  3181  291D         	ljmp	i1l301
  6739  0446  3181  2932         	ljmp	i1l1716
  6740  0448  3181  2956         	ljmp	i1l1734
  6741  044A  3181  2939         	ljmp	i1l1720
  6742  044C  3181  295A         	ljmp	i1l1736
  6743  044E  3180  287A         	ljmp	i1l278
  6744  0450  3180  289D         	ljmp	i1l283
  6745                           
  6746                           	psect	text20
  6747  0452                     __ptext20:	
  6748 ;; *************** function _I2C2_Stop *****************
  6749 ;; Defined at:
  6750 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  completion_c    1    wreg     enum E13560
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  completion_c    1    1[COMMON] enum E13560
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;Total ram usage:        2 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_I2C2_ISR
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           
  6778                           ;psect for function _I2C2_Stop
  6779  0452                     _I2C2_Stop:	
  6780                           
  6781                           ;incstack = 0
  6782                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6783                           ;I2C2_Stop@completion_code stored from wreg
  6784  0452  00F8               	movwf	I2C2_Stop@completion_code
  6785                           
  6786                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6787  0453  0023               	movlb	3	; select bank3
  6788  0454  151B               	bsf	27,2	;volatile
  6789                           
  6790                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6791  0455  0873               	movf	_p_i2c2_current,w
  6792  0456  3E02               	addlw	2
  6793  0457  0086               	movwf	6
  6794  0458  0187               	clrf	7
  6795  0459  0801               	movf	1,w
  6796  045A  1903               	btfsc	3,2
  6797  045B  2C67               	goto	i1l1524
  6798                           
  6799                           ;i2c2.c: 588: {
  6800                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  6801  045C  0878               	movf	I2C2_Stop@completion_code,w
  6802  045D  00F7               	movwf	??_I2C2_Stop
  6803  045E  0873               	movf	_p_i2c2_current,w
  6804  045F  3E02               	addlw	2
  6805  0460  0086               	movwf	6
  6806  0461  0187               	clrf	7
  6807  0462  0801               	movf	1,w
  6808  0463  0086               	movwf	6
  6809  0464  0187               	clrf	7
  6810  0465  0877               	movf	??_I2C2_Stop,w
  6811  0466  0081               	movwf	1
  6812  0467                     i1l1524:	
  6813                           
  6814                           ;i2c2.c: 591: }
  6815                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  6816  0467  0020               	movlb	0	; select bank0
  6817  0468  01CA               	clrf	_i2c2_state
  6818  0469  0008               	return
  6819  046A                     __end_of_I2C2_Stop:	
  6820                           
  6821                           	psect	text21
  6822  047C                     __ptext21:	
  6823 ;; *************** function _I2C2_FunctionComplete *****************
  6824 ;; Defined at:
  6825 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      void 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;Total ram usage:        1 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_I2C2_ISR
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _I2C2_FunctionComplete
  6854  047C                     _I2C2_FunctionComplete:	
  6855                           
  6856                           ;i2c2.c: 567: p_i2c2_trb_current++;
  6857                           
  6858                           ;incstack = 0
  6859                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  6860  047C  3004               	movlw	4
  6861  047D  00F7               	movwf	??_I2C2_FunctionComplete
  6862  047E  0877               	movf	??_I2C2_FunctionComplete,w
  6863  047F  07F4               	addwf	_p_i2c2_trb_current,f
  6864                           
  6865                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  6866  0480  3001               	movlw	1
  6867  0481  02F2               	subwf	_i2c2_trb_count,f
  6868  0482  1D03               	btfss	3,2
  6869  0483  2C8A               	goto	i1l313
  6870                           
  6871                           ;i2c2.c: 571: {
  6872                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  6873  0484  3004               	movlw	4
  6874  0485  00F7               	movwf	??_I2C2_FunctionComplete
  6875  0486  0877               	movf	??_I2C2_FunctionComplete,w
  6876  0487  0020               	movlb	0	; select bank0
  6877  0488  00CA               	movwf	_i2c2_state
  6878                           
  6879                           ;i2c2.c: 573: }
  6880  0489  0008               	return
  6881  048A                     i1l313:	
  6882                           
  6883                           ;i2c2.c: 574: else
  6884                           ;i2c2.c: 575: {
  6885                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  6886  048A  0020               	movlb	0	; select bank0
  6887  048B  01CA               	clrf	_i2c2_state
  6888  048C  0ACA               	incf	_i2c2_state,f
  6889  048D  0008               	return
  6890  048E                     __end_of_I2C2_FunctionComplete:	
  6891                           
  6892                           	psect	text22
  6893  04DA                     __ptext22:	
  6894 ;; *************** function _I2C2_BusCollisionISR *****************
  6895 ;; Defined at:
  6896 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		None
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_INTERRUPT_InterruptManager
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           
  6924                           ;psect for function _I2C2_BusCollisionISR
  6925  04DA                     _I2C2_BusCollisionISR:	
  6926                           
  6927                           ;incstack = 0
  6928                           ; Regs used in _I2C2_BusCollisionISR: []
  6929  04DA  0008               	return
  6930  04DB                     __end_of_I2C2_BusCollisionISR:	
  6931  007E                     btemp	set	126	;btemp
  6932  007E                     int$flags	set	126
  6933  007E                     wtemp	set	126
  6934  007E                     wtemp0	set	126
  6935  0080                     wtemp1	set	128
  6936  0082                     wtemp2	set	130
  6937  0084                     wtemp3	set	132
  6938  0086                     wtemp4	set	134
  6939  0088                     wtemp5	set	136
  6940  007F                     wtemp6	set	127
  6941  007E                     ttemp	set	126
  6942  007E                     ttemp0	set	126
  6943  0081                     ttemp1	set	129
  6944  0084                     ttemp2	set	132
  6945  0087                     ttemp3	set	135
  6946  007F                     ttemp4	set	127
  6947  007E                     ltemp	set	126
  6948  007E                     ltemp0	set	126
  6949  0082                     ltemp1	set	130
  6950  0086                     ltemp2	set	134
  6951  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     34      62
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(COMMON[2]), 
		 -> NULL(NULL[0]), 

    S527$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S539$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S539$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S550$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S550$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3893
                                             30 BANK0      4     4      0
                       _EMC1001_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
                         _TMR6_Start
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1356
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (1) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_Start
   _TMR6_Start
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 19:11:17 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 04BA  
                ___wmul@multiplicand 0022       I2C2_MasterReadTRBBuild@address 0022  
                                l430 0226                                  l512 040F  
                                _GIE 005F                         __CFG_CPD$OFF 0000  
                                _PR6 0299                    EMC1001_Read@pData 0027  
                                u915 039B                                  u845 0368  
                                u935 03AA                                  u865 0372  
                                u945 03B1                                  u875 037C  
                                u885 0384                __size_of_EMC1001_Read 003C  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_LVP$OFF 0000                         __CFG_ZCD$OFF 0000  
                   __end_of_I2C2_ISR 016F                                 l2010 01E4  
                               l2020 01F1                                 l2004 01C5  
                               l2014 01EC                                 l2022 0174  
                               l2026 0409                                 l2054 0241  
                               l2046 022C                                 l1600 03B9  
                               l2068 0274                                 l1542 0307  
                               l1552 031A                                 l1546 030E  
                               l1548 0313                                 l1574 0383  
                               l1566 0365                                 l1590 0398  
                               l1568 0371                                 l1592 03A4  
                               l1578 038C                                 l1756 0350  
                               l1596 03B0                                 l1982 0190  
                               l1988 01A9                                 l1998 01BF  
                               STR_1 047A                                 STR_2 0474  
                               u1130 035A                                 _LATA 0016  
                               u1430 02D8                                 _LATB 0017  
                               _LATC 0018                                 u1545 0410  
                               u1625 0265                                 u1555 0415  
                               u1485 01DA                                 u1590 023F  
                               _T6PR 0299                                 _TMR6 0298  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0227                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0020  
                               ttemp 007E                                 wtemp 007E  
                 EMC1001_Read@status 002B                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         _EMC1001_Read 0320  
                         _i2c2_state 004A                        ?_EUSART_Write 0077  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 04CB  
            _I2C2_MasterReadTRBBuild 03BE                                ?_main 0077  
                      __CFG_WDTE$OFF 0000                    __end_of_I2C2_Stop 046A  
                              _T6CON 029A                      __end_of___lwdiv 0391  
                              _T6HLT 029B                                i1l212 001B  
     __size_of_I2C2_FunctionComplete 0012                                i1l301 011D  
                              i1l302 012B                                i1l208 0013  
                              i1l313 048A                                i1l306 0150  
                              i1l272 0047                      __end_of___lwmod 03BE  
                              i1l283 009D                                i1l284 00A9  
                              i1l277 0072                                i1l294 00EB  
                              i1l278 007A                                i1l298 010A  
                              _T6TMR 0298                                _T6RST 029D  
      __end_of_I2C2_FunctionComplete 048E                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      __end_of_dpowers 0474  
                              _putch 04D1                          ?_TMR6_Start 0077  
       I2C2_MasterReadTRBBuild@pdata 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 0294               ??_I2C2_MasterTRBInsert 0022  
                     ??_EUSART_Write 0020          ?_INTERRUPT_InterruptManager 0077  
   __end_of_I2C2_MasterWriteTRBBuild 0406                               ??_main 003E  
                        _i2c2_object 0042                      _TMR6_Initialize 049D  
                             i1S2090 043A                               _ANSELA 0F38  
                             ?_putch 0077                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC1REG 0119  
                             _RC0PPS 0F20                               _RC1STA 011D  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
       __end_of_I2C2_BusCollisionISR 04DB                               _ODCONA 0F3A  
                             _ODCONB 0F45                               _RC6PPS 0F26  
                             _ODCONC 0F50                               i1l1524 0467  
                             i1l1630 0065                               i1l1720 0139  
                             i1l1704 0112                               i1l1642 0086  
                             i1l1732 0153                               i1l1716 0132  
                             i1l1734 0156                               i1l1662 00C6  
                             i1l1742 0163                               i1l1736 015A  
                             i1l1648 0097                               i1l1682 00DA  
                             i1l1696 00F9                               i1l1688 00E5  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
                     __CFG_PWRTE$OFF 0000                               ___wmul 0406  
                     _p_i2c2_current 0073                       __CFG_STVREN$ON 0000  
          ??_I2C2_MasterReadTRBBuild 0024                            ??___lwdiv 0024  
                          ??___lwmod 002C                            ?_I2C2_ISR 0077  
                __size_of_TMR6_Start 0003             I2C2_Stop@completion_code 0078  
                             _printf 016F        I2C2_MasterReadTRBBuild@length 0021  
                  _SYSTEM_Initialize 048E              __end_of__initialization 0030  
                 ?_SYSTEM_Initialize 0077                      EMC1001_Read@reg 002A  
                    EMC1001_Read@trb 004B                       __pcstackCOMMON 0077  
                ??_SYSTEM_Initialize 0021                       _i2c2_trb_count 0072  
                      __end_of_putch 04D7                           ??_I2C2_ISR 0079  
            __end_of_TMR6_Initialize 04AC             _I2C2_MasterWriteTRBBuild 03E6  
       I2C2_MasterWriteTRBBuild@ptrb 0026            __end_of_SYSTEM_Initialize 049D  
                            ??_putch 0021                           __pbssBANK0 0042  
               __end_of_EUSART_Write 04C2                           __pmaintext 0227  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 04DA                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0049                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 0452  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                         ??_TMR6_Start 0020  
                    _I2C2_Initialize 0422               I2C2_MasterRead@trBlock 0053  
                       _T6AINPPSbits 0E9E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 035C  
                            ___lwmod 0391                ?_I2C2_BusCollisionISR 0077  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 04DA  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 016F  
                            __ptext2 04D1                              __ptext3 04B8  
                            __ptext4 0391                              __ptext5 035C  
                            __ptext6 0406                              __ptext7 048E  
                            __ptext8 049D                              __ptext9 04D7  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 00B8  
                            _dpowers 046A                _OSCILLATOR_Initialize 04C2  
           ??_PIN_MANAGER_Initialize 0020                           ?_I2C2_Stop 0077  
              _I2C2_FunctionComplete 047C                            _T6CONbits 029A  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 000F  
                            clrloop0 04CC                 end_of_initialization 0030  
                          _T6RSTbits 029D                    _EUSART_Initialize 04AC  
                 ?_EUSART_Initialize 0077                   _p_i2c2_trb_current 0074  
                            printf@c 003D                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0070                         __pstringtext 046A  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0020                            _PORTAbits 000C  
                  __size_of_I2C2_ISR 013B              __end_of_I2C2_Initialize 043A  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
          __end_of_EUSART_Initialize 04B8                           main@templo 0041  
             ??_I2C2_BusCollisionISR 0077           ??_I2C2_MasterWriteTRBBuild 0024  
                     __end_of___wmul 0422                         _EUSART_Write 04B8  
             ?_OSCILLATOR_Initialize 0077                       __end_of_printf 0227  
             ?_I2C2_FunctionComplete 0077                  start_initialization 0022  
                        ??_I2C2_Stop 0077      __size_of_PIN_MANAGER_Initialize 0046  
                        putch@txData 0021      I2C2_MasterWriteTRBBuild@address 0022  
           ?_I2C2_MasterReadTRBBuild 0020                     __CFG_LPBOREN$OFF 0000  
                      ?_EMC1001_Read 0027                             ??___wmul 0024  
      I2C2_MasterWriteTRBBuild@pdata 0020                 I2C2_ISR@pi2c_buf_ptr 0071  
                           ??_printf 0034                          __pbssCOMMON 0070  
                   ?_I2C2_Initialize 0077                            ___latbits 0002  
                      __pcstackBANK0 0020                        _i2c2_tr_queue 005B  
         __size_of_EUSART_Initialize 000C                _TMR6_InterruptHandler 0047  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 0294  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 0034  
       ??_INTERRUPT_InterruptManager 007D                            __pswtext1 043A  
                           _BAUD1CON 011F                     ___lwdiv@quotient 0025  
               __CFG_RSTOSC$HFINTPLL 0000                       __size_of_putch 0006  
                           _T6CLKCON 029C      __end_of_I2C2_MasterReadTRBBuild 03E6  
                     ___wmul@product 0024                             _LATAbits 0016  
                          clear_ram0 04CB                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR3bits 070F  
                           _PIR4bits 0710                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 0039                           printf@prec 003A  
           __size_of_TMR6_Initialize 000F         __end_of_I2C2_MasterTRBInsert 0320  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
            ??_I2C2_FunctionComplete 0077                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 0294  
                           __ptext11 04C2                             __ptext20 0452  
                           __ptext12 0422                             __ptext21 047C  
                           __ptext13 04AC                             __ptext22 04DA  
                           __ptext14 0320                             __ptext15 03E6  
                           __ptext16 02DA                             __ptext17 03BE  
                           __ptext19 0034                 __end_of_EMC1001_Read 035C  
                       _SSP2CON1bits 019A                         _SSP2CON2bits 019B  
                      __size_of_main 006D                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                          printf@val 003B              I2C2_MasterWrite@trBlock 0057  
                           main@temp 0040        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0075  
            ?_PIN_MANAGER_Initialize 0077                    ??_TMR6_Initialize 0020  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 0038                 _I2C2_MasterTRBInsert 02DA  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                         _TMR6_Start 04D7                   EUSART_Write@txData 0020  
     __end_of_PIN_MANAGER_Initialize 02DA             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018  
