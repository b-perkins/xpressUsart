

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 20:50:25 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext1,local,class=CONST,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  001C                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0090                     	;# 
    77  0091                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  0110                     	;# 
    96  0110                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0119                     	;# 
   108  0119                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011A                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011B                     	;# 
   118  011C                     	;# 
   119  011C                     	;# 
   120  011C                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  011E                     	;# 
   126  011E                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  011F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  018F                     	;# 
   136  0190                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0198                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  020E                     	;# 
   149  020F                     	;# 
   150  020F                     	;# 
   151  0210                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0218                     	;# 
   165  0219                     	;# 
   166  021A                     	;# 
   167  021B                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021C                     	;# 
   171  021D                     	;# 
   172  021D                     	;# 
   173  021E                     	;# 
   174  021F                     	;# 
   175  028C                     	;# 
   176  028C                     	;# 
   177  028D                     	;# 
   178  028D                     	;# 
   179  028E                     	;# 
   180  028F                     	;# 
   181  0290                     	;# 
   182  0290                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0293                     	;# 
   188  0294                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0296                     	;# 
   192  0297                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  029B                     	;# 
   199  029C                     	;# 
   200  029C                     	;# 
   201  029D                     	;# 
   202  030C                     	;# 
   203  030C                     	;# 
   204  030D                     	;# 
   205  030E                     	;# 
   206  030F                     	;# 
   207  0310                     	;# 
   208  0310                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0314                     	;# 
   213  0314                     	;# 
   214  0315                     	;# 
   215  0316                     	;# 
   216  0317                     	;# 
   217  0318                     	;# 
   218  0318                     	;# 
   219  0319                     	;# 
   220  031A                     	;# 
   221  031B                     	;# 
   222  031C                     	;# 
   223  031C                     	;# 
   224  031D                     	;# 
   225  031E                     	;# 
   226  031F                     	;# 
   227  038C                     	;# 
   228  038D                     	;# 
   229  038E                     	;# 
   230  0390                     	;# 
   231  0391                     	;# 
   232  0392                     	;# 
   233  040C                     	;# 
   234  040D                     	;# 
   235  040E                     	;# 
   236  040F                     	;# 
   237  0410                     	;# 
   238  0411                     	;# 
   239  0416                     	;# 
   240  0416                     	;# 
   241  0417                     	;# 
   242  0418                     	;# 
   243  0418                     	;# 
   244  0419                     	;# 
   245  041A                     	;# 
   246  041A                     	;# 
   247  041B                     	;# 
   248  041C                     	;# 
   249  041C                     	;# 
   250  041D                     	;# 
   251  041E                     	;# 
   252  041F                     	;# 
   253  048C                     	;# 
   254  048C                     	;# 
   255  048D                     	;# 
   256  048E                     	;# 
   257  048F                     	;# 
   258  048F                     	;# 
   259  0490                     	;# 
   260  0491                     	;# 
   261  0492                     	;# 
   262  0492                     	;# 
   263  0493                     	;# 
   264  0494                     	;# 
   265  0495                     	;# 
   266  0495                     	;# 
   267  0496                     	;# 
   268  0497                     	;# 
   269  0498                     	;# 
   270  0499                     	;# 
   271  049A                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  050C                     	;# 
   276  050C                     	;# 
   277  050D                     	;# 
   278  050E                     	;# 
   279  050F                     	;# 
   280  050F                     	;# 
   281  0510                     	;# 
   282  0511                     	;# 
   283  0512                     	;# 
   284  0512                     	;# 
   285  0513                     	;# 
   286  0514                     	;# 
   287  0515                     	;# 
   288  0515                     	;# 
   289  0516                     	;# 
   290  0517                     	;# 
   291  0518                     	;# 
   292  0519                     	;# 
   293  051A                     	;# 
   294  051B                     	;# 
   295  051C                     	;# 
   296  051D                     	;# 
   297  058C                     	;# 
   298  058C                     	;# 
   299  058D                     	;# 
   300  058E                     	;# 
   301  058F                     	;# 
   302  058F                     	;# 
   303  0590                     	;# 
   304  0591                     	;# 
   305  0592                     	;# 
   306  0593                     	;# 
   307  060C                     	;# 
   308  060D                     	;# 
   309  060E                     	;# 
   310  060F                     	;# 
   311  0610                     	;# 
   312  0611                     	;# 
   313  0612                     	;# 
   314  0613                     	;# 
   315  0614                     	;# 
   316  0616                     	;# 
   317  0617                     	;# 
   318  0618                     	;# 
   319  0619                     	;# 
   320  061A                     	;# 
   321  061B                     	;# 
   322  061C                     	;# 
   323  061D                     	;# 
   324  061E                     	;# 
   325  068C                     	;# 
   326  068D                     	;# 
   327  068E                     	;# 
   328  068F                     	;# 
   329  0690                     	;# 
   330  0691                     	;# 
   331  0692                     	;# 
   332  0693                     	;# 
   333  0694                     	;# 
   334  070C                     	;# 
   335  070D                     	;# 
   336  070E                     	;# 
   337  070F                     	;# 
   338  0710                     	;# 
   339  0711                     	;# 
   340  0712                     	;# 
   341  0713                     	;# 
   342  0714                     	;# 
   343  0716                     	;# 
   344  0717                     	;# 
   345  0718                     	;# 
   346  0719                     	;# 
   347  071A                     	;# 
   348  071B                     	;# 
   349  071C                     	;# 
   350  071D                     	;# 
   351  071E                     	;# 
   352  0796                     	;# 
   353  0797                     	;# 
   354  0798                     	;# 
   355  0799                     	;# 
   356  079A                     	;# 
   357  079B                     	;# 
   358  080C                     	;# 
   359  080D                     	;# 
   360  080E                     	;# 
   361  080F                     	;# 
   362  0810                     	;# 
   363  0811                     	;# 
   364  0812                     	;# 
   365  0813                     	;# 
   366  0814                     	;# 
   367  081A                     	;# 
   368  081B                     	;# 
   369  081C                     	;# 
   370  081D                     	;# 
   371  081E                     	;# 
   372  081F                     	;# 
   373  088C                     	;# 
   374  088D                     	;# 
   375  088E                     	;# 
   376  088F                     	;# 
   377  0890                     	;# 
   378  0891                     	;# 
   379  0892                     	;# 
   380  0893                     	;# 
   381  0895                     	;# 
   382  0896                     	;# 
   383  0897                     	;# 
   384  0898                     	;# 
   385  0899                     	;# 
   386  089A                     	;# 
   387  089B                     	;# 
   388  090C                     	;# 
   389  090E                     	;# 
   390  090F                     	;# 
   391  091F                     	;# 
   392  091F                     	;# 
   393  098F                     	;# 
   394  098F                     	;# 
   395  0990                     	;# 
   396  0991                     	;# 
   397  0992                     	;# 
   398  0993                     	;# 
   399  0994                     	;# 
   400  0995                     	;# 
   401  0996                     	;# 
   402  0997                     	;# 
   403  0E0F                     	;# 
   404  0E10                     	;# 
   405  0E11                     	;# 
   406  0E12                     	;# 
   407  0E13                     	;# 
   408  0E14                     	;# 
   409  0E15                     	;# 
   410  0E16                     	;# 
   411  0E17                     	;# 
   412  0E18                     	;# 
   413  0E19                     	;# 
   414  0E1A                     	;# 
   415  0E1B                     	;# 
   416  0E1C                     	;# 
   417  0E1D                     	;# 
   418  0E1E                     	;# 
   419  0E1F                     	;# 
   420  0E20                     	;# 
   421  0E21                     	;# 
   422  0E22                     	;# 
   423  0E23                     	;# 
   424  0E24                     	;# 
   425  0E25                     	;# 
   426  0E26                     	;# 
   427  0E27                     	;# 
   428  0E28                     	;# 
   429  0E29                     	;# 
   430  0E2A                     	;# 
   431  0E2B                     	;# 
   432  0E2C                     	;# 
   433  0E2D                     	;# 
   434  0E2E                     	;# 
   435  0E2F                     	;# 
   436  0E30                     	;# 
   437  0E31                     	;# 
   438  0E32                     	;# 
   439  0E33                     	;# 
   440  0E34                     	;# 
   441  0E35                     	;# 
   442  0E36                     	;# 
   443  0E37                     	;# 
   444  0E8F                     	;# 
   445  0E90                     	;# 
   446  0E91                     	;# 
   447  0E92                     	;# 
   448  0E93                     	;# 
   449  0E94                     	;# 
   450  0E95                     	;# 
   451  0E96                     	;# 
   452  0E97                     	;# 
   453  0E9C                     	;# 
   454  0E9D                     	;# 
   455  0E9E                     	;# 
   456  0EA1                     	;# 
   457  0EA2                     	;# 
   458  0EA3                     	;# 
   459  0EA4                     	;# 
   460  0EA5                     	;# 
   461  0EA9                     	;# 
   462  0EAA                     	;# 
   463  0EAB                     	;# 
   464  0EAC                     	;# 
   465  0EB1                     	;# 
   466  0EB2                     	;# 
   467  0EB3                     	;# 
   468  0EB8                     	;# 
   469  0EB9                     	;# 
   470  0EBA                     	;# 
   471  0EBB                     	;# 
   472  0EBC                     	;# 
   473  0EBD                     	;# 
   474  0EBE                     	;# 
   475  0EC3                     	;# 
   476  0EC5                     	;# 
   477  0EC6                     	;# 
   478  0EC7                     	;# 
   479  0EC8                     	;# 
   480  0EC9                     	;# 
   481  0ECA                     	;# 
   482  0ECB                     	;# 
   483  0ECC                     	;# 
   484  0F10                     	;# 
   485  0F11                     	;# 
   486  0F12                     	;# 
   487  0F13                     	;# 
   488  0F14                     	;# 
   489  0F15                     	;# 
   490  0F16                     	;# 
   491  0F17                     	;# 
   492  0F18                     	;# 
   493  0F19                     	;# 
   494  0F1A                     	;# 
   495  0F1B                     	;# 
   496  0F1C                     	;# 
   497  0F1D                     	;# 
   498  0F1E                     	;# 
   499  0F1F                     	;# 
   500  0F20                     	;# 
   501  0F21                     	;# 
   502  0F22                     	;# 
   503  0F23                     	;# 
   504  0F24                     	;# 
   505  0F25                     	;# 
   506  0F26                     	;# 
   507  0F27                     	;# 
   508  0F38                     	;# 
   509  0F39                     	;# 
   510  0F3A                     	;# 
   511  0F3B                     	;# 
   512  0F3C                     	;# 
   513  0F3D                     	;# 
   514  0F3E                     	;# 
   515  0F3F                     	;# 
   516  0F40                     	;# 
   517  0F41                     	;# 
   518  0F43                     	;# 
   519  0F44                     	;# 
   520  0F45                     	;# 
   521  0F46                     	;# 
   522  0F47                     	;# 
   523  0F48                     	;# 
   524  0F49                     	;# 
   525  0F4A                     	;# 
   526  0F4B                     	;# 
   527  0F4C                     	;# 
   528  0F4E                     	;# 
   529  0F4F                     	;# 
   530  0F50                     	;# 
   531  0F51                     	;# 
   532  0F52                     	;# 
   533  0F53                     	;# 
   534  0F54                     	;# 
   535  0F55                     	;# 
   536  0F56                     	;# 
   537  0F57                     	;# 
   538  0F65                     	;# 
   539  0F68                     	;# 
   540  0F69                     	;# 
   541  0F6A                     	;# 
   542  0F6B                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  0010                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  001C                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  008C                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  008E                     	;# 
   587  008F                     	;# 
   588  0090                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  010E                     	;# 
   607  010F                     	;# 
   608  0110                     	;# 
   609  0110                     	;# 
   610  0111                     	;# 
   611  0112                     	;# 
   612  0112                     	;# 
   613  0113                     	;# 
   614  0114                     	;# 
   615  0114                     	;# 
   616  0115                     	;# 
   617  0116                     	;# 
   618  0116                     	;# 
   619  0117                     	;# 
   620  0119                     	;# 
   621  0119                     	;# 
   622  0119                     	;# 
   623  011A                     	;# 
   624  011A                     	;# 
   625  011A                     	;# 
   626  011B                     	;# 
   627  011B                     	;# 
   628  011B                     	;# 
   629  011B                     	;# 
   630  011B                     	;# 
   631  011C                     	;# 
   632  011C                     	;# 
   633  011C                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  011D                     	;# 
   637  011E                     	;# 
   638  011E                     	;# 
   639  011E                     	;# 
   640  011F                     	;# 
   641  011F                     	;# 
   642  011F                     	;# 
   643  011F                     	;# 
   644  011F                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  018F                     	;# 
   649  0190                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0196                     	;# 
   653  0197                     	;# 
   654  0198                     	;# 
   655  0199                     	;# 
   656  019A                     	;# 
   657  019B                     	;# 
   658  019C                     	;# 
   659  020C                     	;# 
   660  020D                     	;# 
   661  020E                     	;# 
   662  020F                     	;# 
   663  020F                     	;# 
   664  0210                     	;# 
   665  0210                     	;# 
   666  0211                     	;# 
   667  0211                     	;# 
   668  0212                     	;# 
   669  0213                     	;# 
   670  0214                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0216                     	;# 
   674  0216                     	;# 
   675  0217                     	;# 
   676  0217                     	;# 
   677  0218                     	;# 
   678  0219                     	;# 
   679  021A                     	;# 
   680  021B                     	;# 
   681  021B                     	;# 
   682  021C                     	;# 
   683  021C                     	;# 
   684  021D                     	;# 
   685  021D                     	;# 
   686  021E                     	;# 
   687  021F                     	;# 
   688  028C                     	;# 
   689  028C                     	;# 
   690  028D                     	;# 
   691  028D                     	;# 
   692  028E                     	;# 
   693  028F                     	;# 
   694  0290                     	;# 
   695  0290                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0292                     	;# 
   699  0293                     	;# 
   700  0293                     	;# 
   701  0294                     	;# 
   702  0295                     	;# 
   703  0296                     	;# 
   704  0296                     	;# 
   705  0297                     	;# 
   706  0298                     	;# 
   707  0298                     	;# 
   708  0299                     	;# 
   709  0299                     	;# 
   710  029A                     	;# 
   711  029B                     	;# 
   712  029C                     	;# 
   713  029C                     	;# 
   714  029D                     	;# 
   715  030C                     	;# 
   716  030C                     	;# 
   717  030D                     	;# 
   718  030E                     	;# 
   719  030F                     	;# 
   720  0310                     	;# 
   721  0310                     	;# 
   722  0311                     	;# 
   723  0312                     	;# 
   724  0313                     	;# 
   725  0314                     	;# 
   726  0314                     	;# 
   727  0315                     	;# 
   728  0316                     	;# 
   729  0317                     	;# 
   730  0318                     	;# 
   731  0318                     	;# 
   732  0319                     	;# 
   733  031A                     	;# 
   734  031B                     	;# 
   735  031C                     	;# 
   736  031C                     	;# 
   737  031D                     	;# 
   738  031E                     	;# 
   739  031F                     	;# 
   740  038C                     	;# 
   741  038D                     	;# 
   742  038E                     	;# 
   743  0390                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  040C                     	;# 
   747  040D                     	;# 
   748  040E                     	;# 
   749  040F                     	;# 
   750  0410                     	;# 
   751  0411                     	;# 
   752  0416                     	;# 
   753  0416                     	;# 
   754  0417                     	;# 
   755  0418                     	;# 
   756  0418                     	;# 
   757  0419                     	;# 
   758  041A                     	;# 
   759  041A                     	;# 
   760  041B                     	;# 
   761  041C                     	;# 
   762  041C                     	;# 
   763  041D                     	;# 
   764  041E                     	;# 
   765  041F                     	;# 
   766  048C                     	;# 
   767  048C                     	;# 
   768  048D                     	;# 
   769  048E                     	;# 
   770  048F                     	;# 
   771  048F                     	;# 
   772  0490                     	;# 
   773  0491                     	;# 
   774  0492                     	;# 
   775  0492                     	;# 
   776  0493                     	;# 
   777  0494                     	;# 
   778  0495                     	;# 
   779  0495                     	;# 
   780  0496                     	;# 
   781  0497                     	;# 
   782  0498                     	;# 
   783  0499                     	;# 
   784  049A                     	;# 
   785  049B                     	;# 
   786  049C                     	;# 
   787  049D                     	;# 
   788  050C                     	;# 
   789  050C                     	;# 
   790  050D                     	;# 
   791  050E                     	;# 
   792  050F                     	;# 
   793  050F                     	;# 
   794  0510                     	;# 
   795  0511                     	;# 
   796  0512                     	;# 
   797  0512                     	;# 
   798  0513                     	;# 
   799  0514                     	;# 
   800  0515                     	;# 
   801  0515                     	;# 
   802  0516                     	;# 
   803  0517                     	;# 
   804  0518                     	;# 
   805  0519                     	;# 
   806  051A                     	;# 
   807  051B                     	;# 
   808  051C                     	;# 
   809  051D                     	;# 
   810  058C                     	;# 
   811  058C                     	;# 
   812  058D                     	;# 
   813  058E                     	;# 
   814  058F                     	;# 
   815  058F                     	;# 
   816  0590                     	;# 
   817  0591                     	;# 
   818  0592                     	;# 
   819  0593                     	;# 
   820  060C                     	;# 
   821  060D                     	;# 
   822  060E                     	;# 
   823  060F                     	;# 
   824  0610                     	;# 
   825  0611                     	;# 
   826  0612                     	;# 
   827  0613                     	;# 
   828  0614                     	;# 
   829  0616                     	;# 
   830  0617                     	;# 
   831  0618                     	;# 
   832  0619                     	;# 
   833  061A                     	;# 
   834  061B                     	;# 
   835  061C                     	;# 
   836  061D                     	;# 
   837  061E                     	;# 
   838  068C                     	;# 
   839  068D                     	;# 
   840  068E                     	;# 
   841  068F                     	;# 
   842  0690                     	;# 
   843  0691                     	;# 
   844  0692                     	;# 
   845  0693                     	;# 
   846  0694                     	;# 
   847  070C                     	;# 
   848  070D                     	;# 
   849  070E                     	;# 
   850  070F                     	;# 
   851  0710                     	;# 
   852  0711                     	;# 
   853  0712                     	;# 
   854  0713                     	;# 
   855  0714                     	;# 
   856  0716                     	;# 
   857  0717                     	;# 
   858  0718                     	;# 
   859  0719                     	;# 
   860  071A                     	;# 
   861  071B                     	;# 
   862  071C                     	;# 
   863  071D                     	;# 
   864  071E                     	;# 
   865  0796                     	;# 
   866  0797                     	;# 
   867  0798                     	;# 
   868  0799                     	;# 
   869  079A                     	;# 
   870  079B                     	;# 
   871  080C                     	;# 
   872  080D                     	;# 
   873  080E                     	;# 
   874  080F                     	;# 
   875  0810                     	;# 
   876  0811                     	;# 
   877  0812                     	;# 
   878  0813                     	;# 
   879  0814                     	;# 
   880  081A                     	;# 
   881  081B                     	;# 
   882  081C                     	;# 
   883  081D                     	;# 
   884  081E                     	;# 
   885  081F                     	;# 
   886  088C                     	;# 
   887  088D                     	;# 
   888  088E                     	;# 
   889  088F                     	;# 
   890  0890                     	;# 
   891  0891                     	;# 
   892  0892                     	;# 
   893  0893                     	;# 
   894  0895                     	;# 
   895  0896                     	;# 
   896  0897                     	;# 
   897  0898                     	;# 
   898  0899                     	;# 
   899  089A                     	;# 
   900  089B                     	;# 
   901  090C                     	;# 
   902  090E                     	;# 
   903  090F                     	;# 
   904  091F                     	;# 
   905  091F                     	;# 
   906  098F                     	;# 
   907  098F                     	;# 
   908  0990                     	;# 
   909  0991                     	;# 
   910  0992                     	;# 
   911  0993                     	;# 
   912  0994                     	;# 
   913  0995                     	;# 
   914  0996                     	;# 
   915  0997                     	;# 
   916  0E0F                     	;# 
   917  0E10                     	;# 
   918  0E11                     	;# 
   919  0E12                     	;# 
   920  0E13                     	;# 
   921  0E14                     	;# 
   922  0E15                     	;# 
   923  0E16                     	;# 
   924  0E17                     	;# 
   925  0E18                     	;# 
   926  0E19                     	;# 
   927  0E1A                     	;# 
   928  0E1B                     	;# 
   929  0E1C                     	;# 
   930  0E1D                     	;# 
   931  0E1E                     	;# 
   932  0E1F                     	;# 
   933  0E20                     	;# 
   934  0E21                     	;# 
   935  0E22                     	;# 
   936  0E23                     	;# 
   937  0E24                     	;# 
   938  0E25                     	;# 
   939  0E26                     	;# 
   940  0E27                     	;# 
   941  0E28                     	;# 
   942  0E29                     	;# 
   943  0E2A                     	;# 
   944  0E2B                     	;# 
   945  0E2C                     	;# 
   946  0E2D                     	;# 
   947  0E2E                     	;# 
   948  0E2F                     	;# 
   949  0E30                     	;# 
   950  0E31                     	;# 
   951  0E32                     	;# 
   952  0E33                     	;# 
   953  0E34                     	;# 
   954  0E35                     	;# 
   955  0E36                     	;# 
   956  0E37                     	;# 
   957  0E8F                     	;# 
   958  0E90                     	;# 
   959  0E91                     	;# 
   960  0E92                     	;# 
   961  0E93                     	;# 
   962  0E94                     	;# 
   963  0E95                     	;# 
   964  0E96                     	;# 
   965  0E97                     	;# 
   966  0E9C                     	;# 
   967  0E9D                     	;# 
   968  0E9E                     	;# 
   969  0EA1                     	;# 
   970  0EA2                     	;# 
   971  0EA3                     	;# 
   972  0EA4                     	;# 
   973  0EA5                     	;# 
   974  0EA9                     	;# 
   975  0EAA                     	;# 
   976  0EAB                     	;# 
   977  0EAC                     	;# 
   978  0EB1                     	;# 
   979  0EB2                     	;# 
   980  0EB3                     	;# 
   981  0EB8                     	;# 
   982  0EB9                     	;# 
   983  0EBA                     	;# 
   984  0EBB                     	;# 
   985  0EBC                     	;# 
   986  0EBD                     	;# 
   987  0EBE                     	;# 
   988  0EC3                     	;# 
   989  0EC5                     	;# 
   990  0EC6                     	;# 
   991  0EC7                     	;# 
   992  0EC8                     	;# 
   993  0EC9                     	;# 
   994  0ECA                     	;# 
   995  0ECB                     	;# 
   996  0ECC                     	;# 
   997  0F10                     	;# 
   998  0F11                     	;# 
   999  0F12                     	;# 
  1000  0F13                     	;# 
  1001  0F14                     	;# 
  1002  0F15                     	;# 
  1003  0F16                     	;# 
  1004  0F17                     	;# 
  1005  0F18                     	;# 
  1006  0F19                     	;# 
  1007  0F1A                     	;# 
  1008  0F1B                     	;# 
  1009  0F1C                     	;# 
  1010  0F1D                     	;# 
  1011  0F1E                     	;# 
  1012  0F1F                     	;# 
  1013  0F20                     	;# 
  1014  0F21                     	;# 
  1015  0F22                     	;# 
  1016  0F23                     	;# 
  1017  0F24                     	;# 
  1018  0F25                     	;# 
  1019  0F26                     	;# 
  1020  0F27                     	;# 
  1021  0F38                     	;# 
  1022  0F39                     	;# 
  1023  0F3A                     	;# 
  1024  0F3B                     	;# 
  1025  0F3C                     	;# 
  1026  0F3D                     	;# 
  1027  0F3E                     	;# 
  1028  0F3F                     	;# 
  1029  0F40                     	;# 
  1030  0F41                     	;# 
  1031  0F43                     	;# 
  1032  0F44                     	;# 
  1033  0F45                     	;# 
  1034  0F46                     	;# 
  1035  0F47                     	;# 
  1036  0F48                     	;# 
  1037  0F49                     	;# 
  1038  0F4A                     	;# 
  1039  0F4B                     	;# 
  1040  0F4C                     	;# 
  1041  0F4E                     	;# 
  1042  0F4F                     	;# 
  1043  0F50                     	;# 
  1044  0F51                     	;# 
  1045  0F52                     	;# 
  1046  0F53                     	;# 
  1047  0F54                     	;# 
  1048  0F55                     	;# 
  1049  0F56                     	;# 
  1050  0F57                     	;# 
  1051  0F65                     	;# 
  1052  0F68                     	;# 
  1053  0F69                     	;# 
  1054  0F6A                     	;# 
  1055  0F6B                     	;# 
  1056  0FE4                     	;# 
  1057  0FE5                     	;# 
  1058  0FE6                     	;# 
  1059  0FE7                     	;# 
  1060  0FE8                     	;# 
  1061  0FE9                     	;# 
  1062  0FEA                     	;# 
  1063  0FEB                     	;# 
  1064  0FED                     	;# 
  1065  0FEE                     	;# 
  1066  0FEF                     	;# 
  1067  0000                     	;# 
  1068  0001                     	;# 
  1069  0002                     	;# 
  1070  0003                     	;# 
  1071  0004                     	;# 
  1072  0005                     	;# 
  1073  0006                     	;# 
  1074  0007                     	;# 
  1075  0008                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  0010                     	;# 
  1083  0011                     	;# 
  1084  0012                     	;# 
  1085  0013                     	;# 
  1086  0016                     	;# 
  1087  0017                     	;# 
  1088  0018                     	;# 
  1089  001C                     	;# 
  1090  001C                     	;# 
  1091  001D                     	;# 
  1092  001D                     	;# 
  1093  001E                     	;# 
  1094  001F                     	;# 
  1095  008C                     	;# 
  1096  008C                     	;# 
  1097  008D                     	;# 
  1098  008E                     	;# 
  1099  008E                     	;# 
  1100  008F                     	;# 
  1101  0090                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0093                     	;# 
  1105  0094                     	;# 
  1106  0095                     	;# 
  1107  0096                     	;# 
  1108  0097                     	;# 
  1109  0098                     	;# 
  1110  0099                     	;# 
  1111  009A                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  010E                     	;# 
  1120  010F                     	;# 
  1121  0110                     	;# 
  1122  0110                     	;# 
  1123  0111                     	;# 
  1124  0112                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0114                     	;# 
  1129  0115                     	;# 
  1130  0116                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0119                     	;# 
  1134  0119                     	;# 
  1135  0119                     	;# 
  1136  011A                     	;# 
  1137  011A                     	;# 
  1138  011A                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011B                     	;# 
  1143  011B                     	;# 
  1144  011C                     	;# 
  1145  011C                     	;# 
  1146  011C                     	;# 
  1147  011D                     	;# 
  1148  011D                     	;# 
  1149  011D                     	;# 
  1150  011E                     	;# 
  1151  011E                     	;# 
  1152  011E                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  011F                     	;# 
  1157  011F                     	;# 
  1158  018C                     	;# 
  1159  018D                     	;# 
  1160  018E                     	;# 
  1161  018F                     	;# 
  1162  0190                     	;# 
  1163  0191                     	;# 
  1164  0192                     	;# 
  1165  0196                     	;# 
  1166  0197                     	;# 
  1167  0198                     	;# 
  1168  0199                     	;# 
  1169  019A                     	;# 
  1170  019B                     	;# 
  1171  019C                     	;# 
  1172  020C                     	;# 
  1173  020D                     	;# 
  1174  020E                     	;# 
  1175  020F                     	;# 
  1176  020F                     	;# 
  1177  0210                     	;# 
  1178  0210                     	;# 
  1179  0211                     	;# 
  1180  0211                     	;# 
  1181  0212                     	;# 
  1182  0213                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0216                     	;# 
  1187  0216                     	;# 
  1188  0217                     	;# 
  1189  0217                     	;# 
  1190  0218                     	;# 
  1191  0219                     	;# 
  1192  021A                     	;# 
  1193  021B                     	;# 
  1194  021B                     	;# 
  1195  021C                     	;# 
  1196  021C                     	;# 
  1197  021D                     	;# 
  1198  021D                     	;# 
  1199  021E                     	;# 
  1200  021F                     	;# 
  1201  028C                     	;# 
  1202  028C                     	;# 
  1203  028D                     	;# 
  1204  028D                     	;# 
  1205  028E                     	;# 
  1206  028F                     	;# 
  1207  0290                     	;# 
  1208  0290                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0292                     	;# 
  1212  0293                     	;# 
  1213  0293                     	;# 
  1214  0294                     	;# 
  1215  0295                     	;# 
  1216  0296                     	;# 
  1217  0296                     	;# 
  1218  0297                     	;# 
  1219  0298                     	;# 
  1220  0298                     	;# 
  1221  0299                     	;# 
  1222  0299                     	;# 
  1223  029A                     	;# 
  1224  029B                     	;# 
  1225  029C                     	;# 
  1226  029C                     	;# 
  1227  029D                     	;# 
  1228  030C                     	;# 
  1229  030C                     	;# 
  1230  030D                     	;# 
  1231  030E                     	;# 
  1232  030F                     	;# 
  1233  0310                     	;# 
  1234  0310                     	;# 
  1235  0311                     	;# 
  1236  0312                     	;# 
  1237  0313                     	;# 
  1238  0314                     	;# 
  1239  0314                     	;# 
  1240  0315                     	;# 
  1241  0316                     	;# 
  1242  0317                     	;# 
  1243  0318                     	;# 
  1244  0318                     	;# 
  1245  0319                     	;# 
  1246  031A                     	;# 
  1247  031B                     	;# 
  1248  031C                     	;# 
  1249  031C                     	;# 
  1250  031D                     	;# 
  1251  031E                     	;# 
  1252  031F                     	;# 
  1253  038C                     	;# 
  1254  038D                     	;# 
  1255  038E                     	;# 
  1256  0390                     	;# 
  1257  0391                     	;# 
  1258  0392                     	;# 
  1259  040C                     	;# 
  1260  040D                     	;# 
  1261  040E                     	;# 
  1262  040F                     	;# 
  1263  0410                     	;# 
  1264  0411                     	;# 
  1265  0416                     	;# 
  1266  0416                     	;# 
  1267  0417                     	;# 
  1268  0418                     	;# 
  1269  0418                     	;# 
  1270  0419                     	;# 
  1271  041A                     	;# 
  1272  041A                     	;# 
  1273  041B                     	;# 
  1274  041C                     	;# 
  1275  041C                     	;# 
  1276  041D                     	;# 
  1277  041E                     	;# 
  1278  041F                     	;# 
  1279  048C                     	;# 
  1280  048C                     	;# 
  1281  048D                     	;# 
  1282  048E                     	;# 
  1283  048F                     	;# 
  1284  048F                     	;# 
  1285  0490                     	;# 
  1286  0491                     	;# 
  1287  0492                     	;# 
  1288  0492                     	;# 
  1289  0493                     	;# 
  1290  0494                     	;# 
  1291  0495                     	;# 
  1292  0495                     	;# 
  1293  0496                     	;# 
  1294  0497                     	;# 
  1295  0498                     	;# 
  1296  0499                     	;# 
  1297  049A                     	;# 
  1298  049B                     	;# 
  1299  049C                     	;# 
  1300  049D                     	;# 
  1301  050C                     	;# 
  1302  050C                     	;# 
  1303  050D                     	;# 
  1304  050E                     	;# 
  1305  050F                     	;# 
  1306  050F                     	;# 
  1307  0510                     	;# 
  1308  0511                     	;# 
  1309  0512                     	;# 
  1310  0512                     	;# 
  1311  0513                     	;# 
  1312  0514                     	;# 
  1313  0515                     	;# 
  1314  0515                     	;# 
  1315  0516                     	;# 
  1316  0517                     	;# 
  1317  0518                     	;# 
  1318  0519                     	;# 
  1319  051A                     	;# 
  1320  051B                     	;# 
  1321  051C                     	;# 
  1322  051D                     	;# 
  1323  058C                     	;# 
  1324  058C                     	;# 
  1325  058D                     	;# 
  1326  058E                     	;# 
  1327  058F                     	;# 
  1328  058F                     	;# 
  1329  0590                     	;# 
  1330  0591                     	;# 
  1331  0592                     	;# 
  1332  0593                     	;# 
  1333  060C                     	;# 
  1334  060D                     	;# 
  1335  060E                     	;# 
  1336  060F                     	;# 
  1337  0610                     	;# 
  1338  0611                     	;# 
  1339  0612                     	;# 
  1340  0613                     	;# 
  1341  0614                     	;# 
  1342  0616                     	;# 
  1343  0617                     	;# 
  1344  0618                     	;# 
  1345  0619                     	;# 
  1346  061A                     	;# 
  1347  061B                     	;# 
  1348  061C                     	;# 
  1349  061D                     	;# 
  1350  061E                     	;# 
  1351  068C                     	;# 
  1352  068D                     	;# 
  1353  068E                     	;# 
  1354  068F                     	;# 
  1355  0690                     	;# 
  1356  0691                     	;# 
  1357  0692                     	;# 
  1358  0693                     	;# 
  1359  0694                     	;# 
  1360  070C                     	;# 
  1361  070D                     	;# 
  1362  070E                     	;# 
  1363  070F                     	;# 
  1364  0710                     	;# 
  1365  0711                     	;# 
  1366  0712                     	;# 
  1367  0713                     	;# 
  1368  0714                     	;# 
  1369  0716                     	;# 
  1370  0717                     	;# 
  1371  0718                     	;# 
  1372  0719                     	;# 
  1373  071A                     	;# 
  1374  071B                     	;# 
  1375  071C                     	;# 
  1376  071D                     	;# 
  1377  071E                     	;# 
  1378  0796                     	;# 
  1379  0797                     	;# 
  1380  0798                     	;# 
  1381  0799                     	;# 
  1382  079A                     	;# 
  1383  079B                     	;# 
  1384  080C                     	;# 
  1385  080D                     	;# 
  1386  080E                     	;# 
  1387  080F                     	;# 
  1388  0810                     	;# 
  1389  0811                     	;# 
  1390  0812                     	;# 
  1391  0813                     	;# 
  1392  0814                     	;# 
  1393  081A                     	;# 
  1394  081B                     	;# 
  1395  081C                     	;# 
  1396  081D                     	;# 
  1397  081E                     	;# 
  1398  081F                     	;# 
  1399  088C                     	;# 
  1400  088D                     	;# 
  1401  088E                     	;# 
  1402  088F                     	;# 
  1403  0890                     	;# 
  1404  0891                     	;# 
  1405  0892                     	;# 
  1406  0893                     	;# 
  1407  0895                     	;# 
  1408  0896                     	;# 
  1409  0897                     	;# 
  1410  0898                     	;# 
  1411  0899                     	;# 
  1412  089A                     	;# 
  1413  089B                     	;# 
  1414  090C                     	;# 
  1415  090E                     	;# 
  1416  090F                     	;# 
  1417  091F                     	;# 
  1418  091F                     	;# 
  1419  098F                     	;# 
  1420  098F                     	;# 
  1421  0990                     	;# 
  1422  0991                     	;# 
  1423  0992                     	;# 
  1424  0993                     	;# 
  1425  0994                     	;# 
  1426  0995                     	;# 
  1427  0996                     	;# 
  1428  0997                     	;# 
  1429  0E0F                     	;# 
  1430  0E10                     	;# 
  1431  0E11                     	;# 
  1432  0E12                     	;# 
  1433  0E13                     	;# 
  1434  0E14                     	;# 
  1435  0E15                     	;# 
  1436  0E16                     	;# 
  1437  0E17                     	;# 
  1438  0E18                     	;# 
  1439  0E19                     	;# 
  1440  0E1A                     	;# 
  1441  0E1B                     	;# 
  1442  0E1C                     	;# 
  1443  0E1D                     	;# 
  1444  0E1E                     	;# 
  1445  0E1F                     	;# 
  1446  0E20                     	;# 
  1447  0E21                     	;# 
  1448  0E22                     	;# 
  1449  0E23                     	;# 
  1450  0E24                     	;# 
  1451  0E25                     	;# 
  1452  0E26                     	;# 
  1453  0E27                     	;# 
  1454  0E28                     	;# 
  1455  0E29                     	;# 
  1456  0E2A                     	;# 
  1457  0E2B                     	;# 
  1458  0E2C                     	;# 
  1459  0E2D                     	;# 
  1460  0E2E                     	;# 
  1461  0E2F                     	;# 
  1462  0E30                     	;# 
  1463  0E31                     	;# 
  1464  0E32                     	;# 
  1465  0E33                     	;# 
  1466  0E34                     	;# 
  1467  0E35                     	;# 
  1468  0E36                     	;# 
  1469  0E37                     	;# 
  1470  0E8F                     	;# 
  1471  0E90                     	;# 
  1472  0E91                     	;# 
  1473  0E92                     	;# 
  1474  0E93                     	;# 
  1475  0E94                     	;# 
  1476  0E95                     	;# 
  1477  0E96                     	;# 
  1478  0E97                     	;# 
  1479  0E9C                     	;# 
  1480  0E9D                     	;# 
  1481  0E9E                     	;# 
  1482  0EA1                     	;# 
  1483  0EA2                     	;# 
  1484  0EA3                     	;# 
  1485  0EA4                     	;# 
  1486  0EA5                     	;# 
  1487  0EA9                     	;# 
  1488  0EAA                     	;# 
  1489  0EAB                     	;# 
  1490  0EAC                     	;# 
  1491  0EB1                     	;# 
  1492  0EB2                     	;# 
  1493  0EB3                     	;# 
  1494  0EB8                     	;# 
  1495  0EB9                     	;# 
  1496  0EBA                     	;# 
  1497  0EBB                     	;# 
  1498  0EBC                     	;# 
  1499  0EBD                     	;# 
  1500  0EBE                     	;# 
  1501  0EC3                     	;# 
  1502  0EC5                     	;# 
  1503  0EC6                     	;# 
  1504  0EC7                     	;# 
  1505  0EC8                     	;# 
  1506  0EC9                     	;# 
  1507  0ECA                     	;# 
  1508  0ECB                     	;# 
  1509  0ECC                     	;# 
  1510  0F10                     	;# 
  1511  0F11                     	;# 
  1512  0F12                     	;# 
  1513  0F13                     	;# 
  1514  0F14                     	;# 
  1515  0F15                     	;# 
  1516  0F16                     	;# 
  1517  0F17                     	;# 
  1518  0F18                     	;# 
  1519  0F19                     	;# 
  1520  0F1A                     	;# 
  1521  0F1B                     	;# 
  1522  0F1C                     	;# 
  1523  0F1D                     	;# 
  1524  0F1E                     	;# 
  1525  0F1F                     	;# 
  1526  0F20                     	;# 
  1527  0F21                     	;# 
  1528  0F22                     	;# 
  1529  0F23                     	;# 
  1530  0F24                     	;# 
  1531  0F25                     	;# 
  1532  0F26                     	;# 
  1533  0F27                     	;# 
  1534  0F38                     	;# 
  1535  0F39                     	;# 
  1536  0F3A                     	;# 
  1537  0F3B                     	;# 
  1538  0F3C                     	;# 
  1539  0F3D                     	;# 
  1540  0F3E                     	;# 
  1541  0F3F                     	;# 
  1542  0F40                     	;# 
  1543  0F41                     	;# 
  1544  0F43                     	;# 
  1545  0F44                     	;# 
  1546  0F45                     	;# 
  1547  0F46                     	;# 
  1548  0F47                     	;# 
  1549  0F48                     	;# 
  1550  0F49                     	;# 
  1551  0F4A                     	;# 
  1552  0F4B                     	;# 
  1553  0F4C                     	;# 
  1554  0F4E                     	;# 
  1555  0F4F                     	;# 
  1556  0F50                     	;# 
  1557  0F51                     	;# 
  1558  0F52                     	;# 
  1559  0F53                     	;# 
  1560  0F54                     	;# 
  1561  0F55                     	;# 
  1562  0F56                     	;# 
  1563  0F57                     	;# 
  1564  0F65                     	;# 
  1565  0F68                     	;# 
  1566  0F69                     	;# 
  1567  0F6A                     	;# 
  1568  0F6B                     	;# 
  1569  0FE4                     	;# 
  1570  0FE5                     	;# 
  1571  0FE6                     	;# 
  1572  0FE7                     	;# 
  1573  0FE8                     	;# 
  1574  0FE9                     	;# 
  1575  0FEA                     	;# 
  1576  0FEB                     	;# 
  1577  0FED                     	;# 
  1578  0FEE                     	;# 
  1579  0FEF                     	;# 
  1580  0000                     	;# 
  1581  0001                     	;# 
  1582  0002                     	;# 
  1583  0003                     	;# 
  1584  0004                     	;# 
  1585  0005                     	;# 
  1586  0006                     	;# 
  1587  0007                     	;# 
  1588  0008                     	;# 
  1589  0009                     	;# 
  1590  000A                     	;# 
  1591  000B                     	;# 
  1592  000C                     	;# 
  1593  000D                     	;# 
  1594  000E                     	;# 
  1595  0010                     	;# 
  1596  0011                     	;# 
  1597  0012                     	;# 
  1598  0013                     	;# 
  1599  0016                     	;# 
  1600  0017                     	;# 
  1601  0018                     	;# 
  1602  001C                     	;# 
  1603  001C                     	;# 
  1604  001D                     	;# 
  1605  001D                     	;# 
  1606  001E                     	;# 
  1607  001F                     	;# 
  1608  008C                     	;# 
  1609  008C                     	;# 
  1610  008D                     	;# 
  1611  008E                     	;# 
  1612  008E                     	;# 
  1613  008F                     	;# 
  1614  0090                     	;# 
  1615  0090                     	;# 
  1616  0091                     	;# 
  1617  0093                     	;# 
  1618  0094                     	;# 
  1619  0095                     	;# 
  1620  0096                     	;# 
  1621  0097                     	;# 
  1622  0098                     	;# 
  1623  0099                     	;# 
  1624  009A                     	;# 
  1625  009B                     	;# 
  1626  009C                     	;# 
  1627  009D                     	;# 
  1628  009E                     	;# 
  1629  010C                     	;# 
  1630  010D                     	;# 
  1631  010E                     	;# 
  1632  010E                     	;# 
  1633  010F                     	;# 
  1634  0110                     	;# 
  1635  0110                     	;# 
  1636  0111                     	;# 
  1637  0112                     	;# 
  1638  0112                     	;# 
  1639  0113                     	;# 
  1640  0114                     	;# 
  1641  0114                     	;# 
  1642  0115                     	;# 
  1643  0116                     	;# 
  1644  0116                     	;# 
  1645  0117                     	;# 
  1646  0119                     	;# 
  1647  0119                     	;# 
  1648  0119                     	;# 
  1649  011A                     	;# 
  1650  011A                     	;# 
  1651  011A                     	;# 
  1652  011B                     	;# 
  1653  011B                     	;# 
  1654  011B                     	;# 
  1655  011B                     	;# 
  1656  011B                     	;# 
  1657  011C                     	;# 
  1658  011C                     	;# 
  1659  011C                     	;# 
  1660  011D                     	;# 
  1661  011D                     	;# 
  1662  011D                     	;# 
  1663  011E                     	;# 
  1664  011E                     	;# 
  1665  011E                     	;# 
  1666  011F                     	;# 
  1667  011F                     	;# 
  1668  011F                     	;# 
  1669  011F                     	;# 
  1670  011F                     	;# 
  1671  018C                     	;# 
  1672  018D                     	;# 
  1673  018E                     	;# 
  1674  018F                     	;# 
  1675  0190                     	;# 
  1676  0191                     	;# 
  1677  0192                     	;# 
  1678  0196                     	;# 
  1679  0197                     	;# 
  1680  0198                     	;# 
  1681  0199                     	;# 
  1682  019A                     	;# 
  1683  019B                     	;# 
  1684  019C                     	;# 
  1685  020C                     	;# 
  1686  020D                     	;# 
  1687  020E                     	;# 
  1688  020F                     	;# 
  1689  020F                     	;# 
  1690  0210                     	;# 
  1691  0210                     	;# 
  1692  0211                     	;# 
  1693  0211                     	;# 
  1694  0212                     	;# 
  1695  0213                     	;# 
  1696  0214                     	;# 
  1697  0215                     	;# 
  1698  0215                     	;# 
  1699  0216                     	;# 
  1700  0216                     	;# 
  1701  0217                     	;# 
  1702  0217                     	;# 
  1703  0218                     	;# 
  1704  0219                     	;# 
  1705  021A                     	;# 
  1706  021B                     	;# 
  1707  021B                     	;# 
  1708  021C                     	;# 
  1709  021C                     	;# 
  1710  021D                     	;# 
  1711  021D                     	;# 
  1712  021E                     	;# 
  1713  021F                     	;# 
  1714  028C                     	;# 
  1715  028C                     	;# 
  1716  028D                     	;# 
  1717  028D                     	;# 
  1718  028E                     	;# 
  1719  028F                     	;# 
  1720  0290                     	;# 
  1721  0290                     	;# 
  1722  0291                     	;# 
  1723  0292                     	;# 
  1724  0292                     	;# 
  1725  0293                     	;# 
  1726  0293                     	;# 
  1727  0294                     	;# 
  1728  0295                     	;# 
  1729  0296                     	;# 
  1730  0296                     	;# 
  1731  0297                     	;# 
  1732  0298                     	;# 
  1733  0298                     	;# 
  1734  0299                     	;# 
  1735  0299                     	;# 
  1736  029A                     	;# 
  1737  029B                     	;# 
  1738  029C                     	;# 
  1739  029C                     	;# 
  1740  029D                     	;# 
  1741  030C                     	;# 
  1742  030C                     	;# 
  1743  030D                     	;# 
  1744  030E                     	;# 
  1745  030F                     	;# 
  1746  0310                     	;# 
  1747  0310                     	;# 
  1748  0311                     	;# 
  1749  0312                     	;# 
  1750  0313                     	;# 
  1751  0314                     	;# 
  1752  0314                     	;# 
  1753  0315                     	;# 
  1754  0316                     	;# 
  1755  0317                     	;# 
  1756  0318                     	;# 
  1757  0318                     	;# 
  1758  0319                     	;# 
  1759  031A                     	;# 
  1760  031B                     	;# 
  1761  031C                     	;# 
  1762  031C                     	;# 
  1763  031D                     	;# 
  1764  031E                     	;# 
  1765  031F                     	;# 
  1766  038C                     	;# 
  1767  038D                     	;# 
  1768  038E                     	;# 
  1769  0390                     	;# 
  1770  0391                     	;# 
  1771  0392                     	;# 
  1772  040C                     	;# 
  1773  040D                     	;# 
  1774  040E                     	;# 
  1775  040F                     	;# 
  1776  0410                     	;# 
  1777  0411                     	;# 
  1778  0416                     	;# 
  1779  0416                     	;# 
  1780  0417                     	;# 
  1781  0418                     	;# 
  1782  0418                     	;# 
  1783  0419                     	;# 
  1784  041A                     	;# 
  1785  041A                     	;# 
  1786  041B                     	;# 
  1787  041C                     	;# 
  1788  041C                     	;# 
  1789  041D                     	;# 
  1790  041E                     	;# 
  1791  041F                     	;# 
  1792  048C                     	;# 
  1793  048C                     	;# 
  1794  048D                     	;# 
  1795  048E                     	;# 
  1796  048F                     	;# 
  1797  048F                     	;# 
  1798  0490                     	;# 
  1799  0491                     	;# 
  1800  0492                     	;# 
  1801  0492                     	;# 
  1802  0493                     	;# 
  1803  0494                     	;# 
  1804  0495                     	;# 
  1805  0495                     	;# 
  1806  0496                     	;# 
  1807  0497                     	;# 
  1808  0498                     	;# 
  1809  0499                     	;# 
  1810  049A                     	;# 
  1811  049B                     	;# 
  1812  049C                     	;# 
  1813  049D                     	;# 
  1814  050C                     	;# 
  1815  050C                     	;# 
  1816  050D                     	;# 
  1817  050E                     	;# 
  1818  050F                     	;# 
  1819  050F                     	;# 
  1820  0510                     	;# 
  1821  0511                     	;# 
  1822  0512                     	;# 
  1823  0512                     	;# 
  1824  0513                     	;# 
  1825  0514                     	;# 
  1826  0515                     	;# 
  1827  0515                     	;# 
  1828  0516                     	;# 
  1829  0517                     	;# 
  1830  0518                     	;# 
  1831  0519                     	;# 
  1832  051A                     	;# 
  1833  051B                     	;# 
  1834  051C                     	;# 
  1835  051D                     	;# 
  1836  058C                     	;# 
  1837  058C                     	;# 
  1838  058D                     	;# 
  1839  058E                     	;# 
  1840  058F                     	;# 
  1841  058F                     	;# 
  1842  0590                     	;# 
  1843  0591                     	;# 
  1844  0592                     	;# 
  1845  0593                     	;# 
  1846  060C                     	;# 
  1847  060D                     	;# 
  1848  060E                     	;# 
  1849  060F                     	;# 
  1850  0610                     	;# 
  1851  0611                     	;# 
  1852  0612                     	;# 
  1853  0613                     	;# 
  1854  0614                     	;# 
  1855  0616                     	;# 
  1856  0617                     	;# 
  1857  0618                     	;# 
  1858  0619                     	;# 
  1859  061A                     	;# 
  1860  061B                     	;# 
  1861  061C                     	;# 
  1862  061D                     	;# 
  1863  061E                     	;# 
  1864  068C                     	;# 
  1865  068D                     	;# 
  1866  068E                     	;# 
  1867  068F                     	;# 
  1868  0690                     	;# 
  1869  0691                     	;# 
  1870  0692                     	;# 
  1871  0693                     	;# 
  1872  0694                     	;# 
  1873  070C                     	;# 
  1874  070D                     	;# 
  1875  070E                     	;# 
  1876  070F                     	;# 
  1877  0710                     	;# 
  1878  0711                     	;# 
  1879  0712                     	;# 
  1880  0713                     	;# 
  1881  0714                     	;# 
  1882  0716                     	;# 
  1883  0717                     	;# 
  1884  0718                     	;# 
  1885  0719                     	;# 
  1886  071A                     	;# 
  1887  071B                     	;# 
  1888  071C                     	;# 
  1889  071D                     	;# 
  1890  071E                     	;# 
  1891  0796                     	;# 
  1892  0797                     	;# 
  1893  0798                     	;# 
  1894  0799                     	;# 
  1895  079A                     	;# 
  1896  079B                     	;# 
  1897  080C                     	;# 
  1898  080D                     	;# 
  1899  080E                     	;# 
  1900  080F                     	;# 
  1901  0810                     	;# 
  1902  0811                     	;# 
  1903  0812                     	;# 
  1904  0813                     	;# 
  1905  0814                     	;# 
  1906  081A                     	;# 
  1907  081B                     	;# 
  1908  081C                     	;# 
  1909  081D                     	;# 
  1910  081E                     	;# 
  1911  081F                     	;# 
  1912  088C                     	;# 
  1913  088D                     	;# 
  1914  088E                     	;# 
  1915  088F                     	;# 
  1916  0890                     	;# 
  1917  0891                     	;# 
  1918  0892                     	;# 
  1919  0893                     	;# 
  1920  0895                     	;# 
  1921  0896                     	;# 
  1922  0897                     	;# 
  1923  0898                     	;# 
  1924  0899                     	;# 
  1925  089A                     	;# 
  1926  089B                     	;# 
  1927  090C                     	;# 
  1928  090E                     	;# 
  1929  090F                     	;# 
  1930  091F                     	;# 
  1931  091F                     	;# 
  1932  098F                     	;# 
  1933  098F                     	;# 
  1934  0990                     	;# 
  1935  0991                     	;# 
  1936  0992                     	;# 
  1937  0993                     	;# 
  1938  0994                     	;# 
  1939  0995                     	;# 
  1940  0996                     	;# 
  1941  0997                     	;# 
  1942  0E0F                     	;# 
  1943  0E10                     	;# 
  1944  0E11                     	;# 
  1945  0E12                     	;# 
  1946  0E13                     	;# 
  1947  0E14                     	;# 
  1948  0E15                     	;# 
  1949  0E16                     	;# 
  1950  0E17                     	;# 
  1951  0E18                     	;# 
  1952  0E19                     	;# 
  1953  0E1A                     	;# 
  1954  0E1B                     	;# 
  1955  0E1C                     	;# 
  1956  0E1D                     	;# 
  1957  0E1E                     	;# 
  1958  0E1F                     	;# 
  1959  0E20                     	;# 
  1960  0E21                     	;# 
  1961  0E22                     	;# 
  1962  0E23                     	;# 
  1963  0E24                     	;# 
  1964  0E25                     	;# 
  1965  0E26                     	;# 
  1966  0E27                     	;# 
  1967  0E28                     	;# 
  1968  0E29                     	;# 
  1969  0E2A                     	;# 
  1970  0E2B                     	;# 
  1971  0E2C                     	;# 
  1972  0E2D                     	;# 
  1973  0E2E                     	;# 
  1974  0E2F                     	;# 
  1975  0E30                     	;# 
  1976  0E31                     	;# 
  1977  0E32                     	;# 
  1978  0E33                     	;# 
  1979  0E34                     	;# 
  1980  0E35                     	;# 
  1981  0E36                     	;# 
  1982  0E37                     	;# 
  1983  0E8F                     	;# 
  1984  0E90                     	;# 
  1985  0E91                     	;# 
  1986  0E92                     	;# 
  1987  0E93                     	;# 
  1988  0E94                     	;# 
  1989  0E95                     	;# 
  1990  0E96                     	;# 
  1991  0E97                     	;# 
  1992  0E9C                     	;# 
  1993  0E9D                     	;# 
  1994  0E9E                     	;# 
  1995  0EA1                     	;# 
  1996  0EA2                     	;# 
  1997  0EA3                     	;# 
  1998  0EA4                     	;# 
  1999  0EA5                     	;# 
  2000  0EA9                     	;# 
  2001  0EAA                     	;# 
  2002  0EAB                     	;# 
  2003  0EAC                     	;# 
  2004  0EB1                     	;# 
  2005  0EB2                     	;# 
  2006  0EB3                     	;# 
  2007  0EB8                     	;# 
  2008  0EB9                     	;# 
  2009  0EBA                     	;# 
  2010  0EBB                     	;# 
  2011  0EBC                     	;# 
  2012  0EBD                     	;# 
  2013  0EBE                     	;# 
  2014  0EC3                     	;# 
  2015  0EC5                     	;# 
  2016  0EC6                     	;# 
  2017  0EC7                     	;# 
  2018  0EC8                     	;# 
  2019  0EC9                     	;# 
  2020  0ECA                     	;# 
  2021  0ECB                     	;# 
  2022  0ECC                     	;# 
  2023  0F10                     	;# 
  2024  0F11                     	;# 
  2025  0F12                     	;# 
  2026  0F13                     	;# 
  2027  0F14                     	;# 
  2028  0F15                     	;# 
  2029  0F16                     	;# 
  2030  0F17                     	;# 
  2031  0F18                     	;# 
  2032  0F19                     	;# 
  2033  0F1A                     	;# 
  2034  0F1B                     	;# 
  2035  0F1C                     	;# 
  2036  0F1D                     	;# 
  2037  0F1E                     	;# 
  2038  0F1F                     	;# 
  2039  0F20                     	;# 
  2040  0F21                     	;# 
  2041  0F22                     	;# 
  2042  0F23                     	;# 
  2043  0F24                     	;# 
  2044  0F25                     	;# 
  2045  0F26                     	;# 
  2046  0F27                     	;# 
  2047  0F38                     	;# 
  2048  0F39                     	;# 
  2049  0F3A                     	;# 
  2050  0F3B                     	;# 
  2051  0F3C                     	;# 
  2052  0F3D                     	;# 
  2053  0F3E                     	;# 
  2054  0F3F                     	;# 
  2055  0F40                     	;# 
  2056  0F41                     	;# 
  2057  0F43                     	;# 
  2058  0F44                     	;# 
  2059  0F45                     	;# 
  2060  0F46                     	;# 
  2061  0F47                     	;# 
  2062  0F48                     	;# 
  2063  0F49                     	;# 
  2064  0F4A                     	;# 
  2065  0F4B                     	;# 
  2066  0F4C                     	;# 
  2067  0F4E                     	;# 
  2068  0F4F                     	;# 
  2069  0F50                     	;# 
  2070  0F51                     	;# 
  2071  0F52                     	;# 
  2072  0F53                     	;# 
  2073  0F54                     	;# 
  2074  0F55                     	;# 
  2075  0F56                     	;# 
  2076  0F57                     	;# 
  2077  0F65                     	;# 
  2078  0F68                     	;# 
  2079  0F69                     	;# 
  2080  0F6A                     	;# 
  2081  0F6B                     	;# 
  2082  0FE4                     	;# 
  2083  0FE5                     	;# 
  2084  0FE6                     	;# 
  2085  0FE7                     	;# 
  2086  0FE8                     	;# 
  2087  0FE9                     	;# 
  2088  0FEA                     	;# 
  2089  0FEB                     	;# 
  2090  0FED                     	;# 
  2091  0FEE                     	;# 
  2092  0FEF                     	;# 
  2093  0000                     	;# 
  2094  0001                     	;# 
  2095  0002                     	;# 
  2096  0003                     	;# 
  2097  0004                     	;# 
  2098  0005                     	;# 
  2099  0006                     	;# 
  2100  0007                     	;# 
  2101  0008                     	;# 
  2102  0009                     	;# 
  2103  000A                     	;# 
  2104  000B                     	;# 
  2105  000C                     	;# 
  2106  000D                     	;# 
  2107  000E                     	;# 
  2108  0010                     	;# 
  2109  0011                     	;# 
  2110  0012                     	;# 
  2111  0013                     	;# 
  2112  0016                     	;# 
  2113  0017                     	;# 
  2114  0018                     	;# 
  2115  001C                     	;# 
  2116  001C                     	;# 
  2117  001D                     	;# 
  2118  001D                     	;# 
  2119  001E                     	;# 
  2120  001F                     	;# 
  2121  008C                     	;# 
  2122  008C                     	;# 
  2123  008D                     	;# 
  2124  008E                     	;# 
  2125  008E                     	;# 
  2126  008F                     	;# 
  2127  0090                     	;# 
  2128  0090                     	;# 
  2129  0091                     	;# 
  2130  0093                     	;# 
  2131  0094                     	;# 
  2132  0095                     	;# 
  2133  0096                     	;# 
  2134  0097                     	;# 
  2135  0098                     	;# 
  2136  0099                     	;# 
  2137  009A                     	;# 
  2138  009B                     	;# 
  2139  009C                     	;# 
  2140  009D                     	;# 
  2141  009E                     	;# 
  2142  010C                     	;# 
  2143  010D                     	;# 
  2144  010E                     	;# 
  2145  010E                     	;# 
  2146  010F                     	;# 
  2147  0110                     	;# 
  2148  0110                     	;# 
  2149  0111                     	;# 
  2150  0112                     	;# 
  2151  0112                     	;# 
  2152  0113                     	;# 
  2153  0114                     	;# 
  2154  0114                     	;# 
  2155  0115                     	;# 
  2156  0116                     	;# 
  2157  0116                     	;# 
  2158  0117                     	;# 
  2159  0119                     	;# 
  2160  0119                     	;# 
  2161  0119                     	;# 
  2162  011A                     	;# 
  2163  011A                     	;# 
  2164  011A                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011B                     	;# 
  2169  011B                     	;# 
  2170  011C                     	;# 
  2171  011C                     	;# 
  2172  011C                     	;# 
  2173  011D                     	;# 
  2174  011D                     	;# 
  2175  011D                     	;# 
  2176  011E                     	;# 
  2177  011E                     	;# 
  2178  011E                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  011F                     	;# 
  2183  011F                     	;# 
  2184  018C                     	;# 
  2185  018D                     	;# 
  2186  018E                     	;# 
  2187  018F                     	;# 
  2188  0190                     	;# 
  2189  0191                     	;# 
  2190  0192                     	;# 
  2191  0196                     	;# 
  2192  0197                     	;# 
  2193  0198                     	;# 
  2194  0199                     	;# 
  2195  019A                     	;# 
  2196  019B                     	;# 
  2197  019C                     	;# 
  2198  020C                     	;# 
  2199  020D                     	;# 
  2200  020E                     	;# 
  2201  020F                     	;# 
  2202  020F                     	;# 
  2203  0210                     	;# 
  2204  0210                     	;# 
  2205  0211                     	;# 
  2206  0211                     	;# 
  2207  0212                     	;# 
  2208  0213                     	;# 
  2209  0214                     	;# 
  2210  0215                     	;# 
  2211  0215                     	;# 
  2212  0216                     	;# 
  2213  0216                     	;# 
  2214  0217                     	;# 
  2215  0217                     	;# 
  2216  0218                     	;# 
  2217  0219                     	;# 
  2218  021A                     	;# 
  2219  021B                     	;# 
  2220  021B                     	;# 
  2221  021C                     	;# 
  2222  021C                     	;# 
  2223  021D                     	;# 
  2224  021D                     	;# 
  2225  021E                     	;# 
  2226  021F                     	;# 
  2227  028C                     	;# 
  2228  028C                     	;# 
  2229  028D                     	;# 
  2230  028D                     	;# 
  2231  028E                     	;# 
  2232  028F                     	;# 
  2233  0290                     	;# 
  2234  0290                     	;# 
  2235  0291                     	;# 
  2236  0292                     	;# 
  2237  0292                     	;# 
  2238  0293                     	;# 
  2239  0293                     	;# 
  2240  0294                     	;# 
  2241  0295                     	;# 
  2242  0296                     	;# 
  2243  0296                     	;# 
  2244  0297                     	;# 
  2245  0298                     	;# 
  2246  0298                     	;# 
  2247  0299                     	;# 
  2248  0299                     	;# 
  2249  029A                     	;# 
  2250  029B                     	;# 
  2251  029C                     	;# 
  2252  029C                     	;# 
  2253  029D                     	;# 
  2254  030C                     	;# 
  2255  030C                     	;# 
  2256  030D                     	;# 
  2257  030E                     	;# 
  2258  030F                     	;# 
  2259  0310                     	;# 
  2260  0310                     	;# 
  2261  0311                     	;# 
  2262  0312                     	;# 
  2263  0313                     	;# 
  2264  0314                     	;# 
  2265  0314                     	;# 
  2266  0315                     	;# 
  2267  0316                     	;# 
  2268  0317                     	;# 
  2269  0318                     	;# 
  2270  0318                     	;# 
  2271  0319                     	;# 
  2272  031A                     	;# 
  2273  031B                     	;# 
  2274  031C                     	;# 
  2275  031C                     	;# 
  2276  031D                     	;# 
  2277  031E                     	;# 
  2278  031F                     	;# 
  2279  038C                     	;# 
  2280  038D                     	;# 
  2281  038E                     	;# 
  2282  0390                     	;# 
  2283  0391                     	;# 
  2284  0392                     	;# 
  2285  040C                     	;# 
  2286  040D                     	;# 
  2287  040E                     	;# 
  2288  040F                     	;# 
  2289  0410                     	;# 
  2290  0411                     	;# 
  2291  0416                     	;# 
  2292  0416                     	;# 
  2293  0417                     	;# 
  2294  0418                     	;# 
  2295  0418                     	;# 
  2296  0419                     	;# 
  2297  041A                     	;# 
  2298  041A                     	;# 
  2299  041B                     	;# 
  2300  041C                     	;# 
  2301  041C                     	;# 
  2302  041D                     	;# 
  2303  041E                     	;# 
  2304  041F                     	;# 
  2305  048C                     	;# 
  2306  048C                     	;# 
  2307  048D                     	;# 
  2308  048E                     	;# 
  2309  048F                     	;# 
  2310  048F                     	;# 
  2311  0490                     	;# 
  2312  0491                     	;# 
  2313  0492                     	;# 
  2314  0492                     	;# 
  2315  0493                     	;# 
  2316  0494                     	;# 
  2317  0495                     	;# 
  2318  0495                     	;# 
  2319  0496                     	;# 
  2320  0497                     	;# 
  2321  0498                     	;# 
  2322  0499                     	;# 
  2323  049A                     	;# 
  2324  049B                     	;# 
  2325  049C                     	;# 
  2326  049D                     	;# 
  2327  050C                     	;# 
  2328  050C                     	;# 
  2329  050D                     	;# 
  2330  050E                     	;# 
  2331  050F                     	;# 
  2332  050F                     	;# 
  2333  0510                     	;# 
  2334  0511                     	;# 
  2335  0512                     	;# 
  2336  0512                     	;# 
  2337  0513                     	;# 
  2338  0514                     	;# 
  2339  0515                     	;# 
  2340  0515                     	;# 
  2341  0516                     	;# 
  2342  0517                     	;# 
  2343  0518                     	;# 
  2344  0519                     	;# 
  2345  051A                     	;# 
  2346  051B                     	;# 
  2347  051C                     	;# 
  2348  051D                     	;# 
  2349  058C                     	;# 
  2350  058C                     	;# 
  2351  058D                     	;# 
  2352  058E                     	;# 
  2353  058F                     	;# 
  2354  058F                     	;# 
  2355  0590                     	;# 
  2356  0591                     	;# 
  2357  0592                     	;# 
  2358  0593                     	;# 
  2359  060C                     	;# 
  2360  060D                     	;# 
  2361  060E                     	;# 
  2362  060F                     	;# 
  2363  0610                     	;# 
  2364  0611                     	;# 
  2365  0612                     	;# 
  2366  0613                     	;# 
  2367  0614                     	;# 
  2368  0616                     	;# 
  2369  0617                     	;# 
  2370  0618                     	;# 
  2371  0619                     	;# 
  2372  061A                     	;# 
  2373  061B                     	;# 
  2374  061C                     	;# 
  2375  061D                     	;# 
  2376  061E                     	;# 
  2377  068C                     	;# 
  2378  068D                     	;# 
  2379  068E                     	;# 
  2380  068F                     	;# 
  2381  0690                     	;# 
  2382  0691                     	;# 
  2383  0692                     	;# 
  2384  0693                     	;# 
  2385  0694                     	;# 
  2386  070C                     	;# 
  2387  070D                     	;# 
  2388  070E                     	;# 
  2389  070F                     	;# 
  2390  0710                     	;# 
  2391  0711                     	;# 
  2392  0712                     	;# 
  2393  0713                     	;# 
  2394  0714                     	;# 
  2395  0716                     	;# 
  2396  0717                     	;# 
  2397  0718                     	;# 
  2398  0719                     	;# 
  2399  071A                     	;# 
  2400  071B                     	;# 
  2401  071C                     	;# 
  2402  071D                     	;# 
  2403  071E                     	;# 
  2404  0796                     	;# 
  2405  0797                     	;# 
  2406  0798                     	;# 
  2407  0799                     	;# 
  2408  079A                     	;# 
  2409  079B                     	;# 
  2410  080C                     	;# 
  2411  080D                     	;# 
  2412  080E                     	;# 
  2413  080F                     	;# 
  2414  0810                     	;# 
  2415  0811                     	;# 
  2416  0812                     	;# 
  2417  0813                     	;# 
  2418  0814                     	;# 
  2419  081A                     	;# 
  2420  081B                     	;# 
  2421  081C                     	;# 
  2422  081D                     	;# 
  2423  081E                     	;# 
  2424  081F                     	;# 
  2425  088C                     	;# 
  2426  088D                     	;# 
  2427  088E                     	;# 
  2428  088F                     	;# 
  2429  0890                     	;# 
  2430  0891                     	;# 
  2431  0892                     	;# 
  2432  0893                     	;# 
  2433  0895                     	;# 
  2434  0896                     	;# 
  2435  0897                     	;# 
  2436  0898                     	;# 
  2437  0899                     	;# 
  2438  089A                     	;# 
  2439  089B                     	;# 
  2440  090C                     	;# 
  2441  090E                     	;# 
  2442  090F                     	;# 
  2443  091F                     	;# 
  2444  091F                     	;# 
  2445  098F                     	;# 
  2446  098F                     	;# 
  2447  0990                     	;# 
  2448  0991                     	;# 
  2449  0992                     	;# 
  2450  0993                     	;# 
  2451  0994                     	;# 
  2452  0995                     	;# 
  2453  0996                     	;# 
  2454  0997                     	;# 
  2455  0E0F                     	;# 
  2456  0E10                     	;# 
  2457  0E11                     	;# 
  2458  0E12                     	;# 
  2459  0E13                     	;# 
  2460  0E14                     	;# 
  2461  0E15                     	;# 
  2462  0E16                     	;# 
  2463  0E17                     	;# 
  2464  0E18                     	;# 
  2465  0E19                     	;# 
  2466  0E1A                     	;# 
  2467  0E1B                     	;# 
  2468  0E1C                     	;# 
  2469  0E1D                     	;# 
  2470  0E1E                     	;# 
  2471  0E1F                     	;# 
  2472  0E20                     	;# 
  2473  0E21                     	;# 
  2474  0E22                     	;# 
  2475  0E23                     	;# 
  2476  0E24                     	;# 
  2477  0E25                     	;# 
  2478  0E26                     	;# 
  2479  0E27                     	;# 
  2480  0E28                     	;# 
  2481  0E29                     	;# 
  2482  0E2A                     	;# 
  2483  0E2B                     	;# 
  2484  0E2C                     	;# 
  2485  0E2D                     	;# 
  2486  0E2E                     	;# 
  2487  0E2F                     	;# 
  2488  0E30                     	;# 
  2489  0E31                     	;# 
  2490  0E32                     	;# 
  2491  0E33                     	;# 
  2492  0E34                     	;# 
  2493  0E35                     	;# 
  2494  0E36                     	;# 
  2495  0E37                     	;# 
  2496  0E8F                     	;# 
  2497  0E90                     	;# 
  2498  0E91                     	;# 
  2499  0E92                     	;# 
  2500  0E93                     	;# 
  2501  0E94                     	;# 
  2502  0E95                     	;# 
  2503  0E96                     	;# 
  2504  0E97                     	;# 
  2505  0E9C                     	;# 
  2506  0E9D                     	;# 
  2507  0E9E                     	;# 
  2508  0EA1                     	;# 
  2509  0EA2                     	;# 
  2510  0EA3                     	;# 
  2511  0EA4                     	;# 
  2512  0EA5                     	;# 
  2513  0EA9                     	;# 
  2514  0EAA                     	;# 
  2515  0EAB                     	;# 
  2516  0EAC                     	;# 
  2517  0EB1                     	;# 
  2518  0EB2                     	;# 
  2519  0EB3                     	;# 
  2520  0EB8                     	;# 
  2521  0EB9                     	;# 
  2522  0EBA                     	;# 
  2523  0EBB                     	;# 
  2524  0EBC                     	;# 
  2525  0EBD                     	;# 
  2526  0EBE                     	;# 
  2527  0EC3                     	;# 
  2528  0EC5                     	;# 
  2529  0EC6                     	;# 
  2530  0EC7                     	;# 
  2531  0EC8                     	;# 
  2532  0EC9                     	;# 
  2533  0ECA                     	;# 
  2534  0ECB                     	;# 
  2535  0ECC                     	;# 
  2536  0F10                     	;# 
  2537  0F11                     	;# 
  2538  0F12                     	;# 
  2539  0F13                     	;# 
  2540  0F14                     	;# 
  2541  0F15                     	;# 
  2542  0F16                     	;# 
  2543  0F17                     	;# 
  2544  0F18                     	;# 
  2545  0F19                     	;# 
  2546  0F1A                     	;# 
  2547  0F1B                     	;# 
  2548  0F1C                     	;# 
  2549  0F1D                     	;# 
  2550  0F1E                     	;# 
  2551  0F1F                     	;# 
  2552  0F20                     	;# 
  2553  0F21                     	;# 
  2554  0F22                     	;# 
  2555  0F23                     	;# 
  2556  0F24                     	;# 
  2557  0F25                     	;# 
  2558  0F26                     	;# 
  2559  0F27                     	;# 
  2560  0F38                     	;# 
  2561  0F39                     	;# 
  2562  0F3A                     	;# 
  2563  0F3B                     	;# 
  2564  0F3C                     	;# 
  2565  0F3D                     	;# 
  2566  0F3E                     	;# 
  2567  0F3F                     	;# 
  2568  0F40                     	;# 
  2569  0F41                     	;# 
  2570  0F43                     	;# 
  2571  0F44                     	;# 
  2572  0F45                     	;# 
  2573  0F46                     	;# 
  2574  0F47                     	;# 
  2575  0F48                     	;# 
  2576  0F49                     	;# 
  2577  0F4A                     	;# 
  2578  0F4B                     	;# 
  2579  0F4C                     	;# 
  2580  0F4E                     	;# 
  2581  0F4F                     	;# 
  2582  0F50                     	;# 
  2583  0F51                     	;# 
  2584  0F52                     	;# 
  2585  0F53                     	;# 
  2586  0F54                     	;# 
  2587  0F55                     	;# 
  2588  0F56                     	;# 
  2589  0F57                     	;# 
  2590  0F65                     	;# 
  2591  0F68                     	;# 
  2592  0F69                     	;# 
  2593  0F6A                     	;# 
  2594  0F6B                     	;# 
  2595  0FE4                     	;# 
  2596  0FE5                     	;# 
  2597  0FE6                     	;# 
  2598  0FE7                     	;# 
  2599  0FE8                     	;# 
  2600  0FE9                     	;# 
  2601  0FEA                     	;# 
  2602  0FEB                     	;# 
  2603  0FED                     	;# 
  2604  0FEE                     	;# 
  2605  0FEF                     	;# 
  2606  0000                     	;# 
  2607  0001                     	;# 
  2608  0002                     	;# 
  2609  0003                     	;# 
  2610  0004                     	;# 
  2611  0005                     	;# 
  2612  0006                     	;# 
  2613  0007                     	;# 
  2614  0008                     	;# 
  2615  0009                     	;# 
  2616  000A                     	;# 
  2617  000B                     	;# 
  2618  000C                     	;# 
  2619  000D                     	;# 
  2620  000E                     	;# 
  2621  0010                     	;# 
  2622  0011                     	;# 
  2623  0012                     	;# 
  2624  0013                     	;# 
  2625  0016                     	;# 
  2626  0017                     	;# 
  2627  0018                     	;# 
  2628  001C                     	;# 
  2629  001C                     	;# 
  2630  001D                     	;# 
  2631  001D                     	;# 
  2632  001E                     	;# 
  2633  001F                     	;# 
  2634  008C                     	;# 
  2635  008C                     	;# 
  2636  008D                     	;# 
  2637  008E                     	;# 
  2638  008E                     	;# 
  2639  008F                     	;# 
  2640  0090                     	;# 
  2641  0090                     	;# 
  2642  0091                     	;# 
  2643  0093                     	;# 
  2644  0094                     	;# 
  2645  0095                     	;# 
  2646  0096                     	;# 
  2647  0097                     	;# 
  2648  0098                     	;# 
  2649  0099                     	;# 
  2650  009A                     	;# 
  2651  009B                     	;# 
  2652  009C                     	;# 
  2653  009D                     	;# 
  2654  009E                     	;# 
  2655  010C                     	;# 
  2656  010D                     	;# 
  2657  010E                     	;# 
  2658  010E                     	;# 
  2659  010F                     	;# 
  2660  0110                     	;# 
  2661  0110                     	;# 
  2662  0111                     	;# 
  2663  0112                     	;# 
  2664  0112                     	;# 
  2665  0113                     	;# 
  2666  0114                     	;# 
  2667  0114                     	;# 
  2668  0115                     	;# 
  2669  0116                     	;# 
  2670  0116                     	;# 
  2671  0117                     	;# 
  2672  0119                     	;# 
  2673  0119                     	;# 
  2674  0119                     	;# 
  2675  011A                     	;# 
  2676  011A                     	;# 
  2677  011A                     	;# 
  2678  011B                     	;# 
  2679  011B                     	;# 
  2680  011B                     	;# 
  2681  011B                     	;# 
  2682  011B                     	;# 
  2683  011C                     	;# 
  2684  011C                     	;# 
  2685  011C                     	;# 
  2686  011D                     	;# 
  2687  011D                     	;# 
  2688  011D                     	;# 
  2689  011E                     	;# 
  2690  011E                     	;# 
  2691  011E                     	;# 
  2692  011F                     	;# 
  2693  011F                     	;# 
  2694  011F                     	;# 
  2695  011F                     	;# 
  2696  011F                     	;# 
  2697  018C                     	;# 
  2698  018D                     	;# 
  2699  018E                     	;# 
  2700  018F                     	;# 
  2701  0190                     	;# 
  2702  0191                     	;# 
  2703  0192                     	;# 
  2704  0196                     	;# 
  2705  0197                     	;# 
  2706  0198                     	;# 
  2707  0199                     	;# 
  2708  019A                     	;# 
  2709  019B                     	;# 
  2710  019C                     	;# 
  2711  020C                     	;# 
  2712  020D                     	;# 
  2713  020E                     	;# 
  2714  020F                     	;# 
  2715  020F                     	;# 
  2716  0210                     	;# 
  2717  0210                     	;# 
  2718  0211                     	;# 
  2719  0211                     	;# 
  2720  0212                     	;# 
  2721  0213                     	;# 
  2722  0214                     	;# 
  2723  0215                     	;# 
  2724  0215                     	;# 
  2725  0216                     	;# 
  2726  0216                     	;# 
  2727  0217                     	;# 
  2728  0217                     	;# 
  2729  0218                     	;# 
  2730  0219                     	;# 
  2731  021A                     	;# 
  2732  021B                     	;# 
  2733  021B                     	;# 
  2734  021C                     	;# 
  2735  021C                     	;# 
  2736  021D                     	;# 
  2737  021D                     	;# 
  2738  021E                     	;# 
  2739  021F                     	;# 
  2740  028C                     	;# 
  2741  028C                     	;# 
  2742  028D                     	;# 
  2743  028D                     	;# 
  2744  028E                     	;# 
  2745  028F                     	;# 
  2746  0290                     	;# 
  2747  0290                     	;# 
  2748  0291                     	;# 
  2749  0292                     	;# 
  2750  0292                     	;# 
  2751  0293                     	;# 
  2752  0293                     	;# 
  2753  0294                     	;# 
  2754  0295                     	;# 
  2755  0296                     	;# 
  2756  0296                     	;# 
  2757  0297                     	;# 
  2758  0298                     	;# 
  2759  0298                     	;# 
  2760  0299                     	;# 
  2761  0299                     	;# 
  2762  029A                     	;# 
  2763  029B                     	;# 
  2764  029C                     	;# 
  2765  029C                     	;# 
  2766  029D                     	;# 
  2767  030C                     	;# 
  2768  030C                     	;# 
  2769  030D                     	;# 
  2770  030E                     	;# 
  2771  030F                     	;# 
  2772  0310                     	;# 
  2773  0310                     	;# 
  2774  0311                     	;# 
  2775  0312                     	;# 
  2776  0313                     	;# 
  2777  0314                     	;# 
  2778  0314                     	;# 
  2779  0315                     	;# 
  2780  0316                     	;# 
  2781  0317                     	;# 
  2782  0318                     	;# 
  2783  0318                     	;# 
  2784  0319                     	;# 
  2785  031A                     	;# 
  2786  031B                     	;# 
  2787  031C                     	;# 
  2788  031C                     	;# 
  2789  031D                     	;# 
  2790  031E                     	;# 
  2791  031F                     	;# 
  2792  038C                     	;# 
  2793  038D                     	;# 
  2794  038E                     	;# 
  2795  0390                     	;# 
  2796  0391                     	;# 
  2797  0392                     	;# 
  2798  040C                     	;# 
  2799  040D                     	;# 
  2800  040E                     	;# 
  2801  040F                     	;# 
  2802  0410                     	;# 
  2803  0411                     	;# 
  2804  0416                     	;# 
  2805  0416                     	;# 
  2806  0417                     	;# 
  2807  0418                     	;# 
  2808  0418                     	;# 
  2809  0419                     	;# 
  2810  041A                     	;# 
  2811  041A                     	;# 
  2812  041B                     	;# 
  2813  041C                     	;# 
  2814  041C                     	;# 
  2815  041D                     	;# 
  2816  041E                     	;# 
  2817  041F                     	;# 
  2818  048C                     	;# 
  2819  048C                     	;# 
  2820  048D                     	;# 
  2821  048E                     	;# 
  2822  048F                     	;# 
  2823  048F                     	;# 
  2824  0490                     	;# 
  2825  0491                     	;# 
  2826  0492                     	;# 
  2827  0492                     	;# 
  2828  0493                     	;# 
  2829  0494                     	;# 
  2830  0495                     	;# 
  2831  0495                     	;# 
  2832  0496                     	;# 
  2833  0497                     	;# 
  2834  0498                     	;# 
  2835  0499                     	;# 
  2836  049A                     	;# 
  2837  049B                     	;# 
  2838  049C                     	;# 
  2839  049D                     	;# 
  2840  050C                     	;# 
  2841  050C                     	;# 
  2842  050D                     	;# 
  2843  050E                     	;# 
  2844  050F                     	;# 
  2845  050F                     	;# 
  2846  0510                     	;# 
  2847  0511                     	;# 
  2848  0512                     	;# 
  2849  0512                     	;# 
  2850  0513                     	;# 
  2851  0514                     	;# 
  2852  0515                     	;# 
  2853  0515                     	;# 
  2854  0516                     	;# 
  2855  0517                     	;# 
  2856  0518                     	;# 
  2857  0519                     	;# 
  2858  051A                     	;# 
  2859  051B                     	;# 
  2860  051C                     	;# 
  2861  051D                     	;# 
  2862  058C                     	;# 
  2863  058C                     	;# 
  2864  058D                     	;# 
  2865  058E                     	;# 
  2866  058F                     	;# 
  2867  058F                     	;# 
  2868  0590                     	;# 
  2869  0591                     	;# 
  2870  0592                     	;# 
  2871  0593                     	;# 
  2872  060C                     	;# 
  2873  060D                     	;# 
  2874  060E                     	;# 
  2875  060F                     	;# 
  2876  0610                     	;# 
  2877  0611                     	;# 
  2878  0612                     	;# 
  2879  0613                     	;# 
  2880  0614                     	;# 
  2881  0616                     	;# 
  2882  0617                     	;# 
  2883  0618                     	;# 
  2884  0619                     	;# 
  2885  061A                     	;# 
  2886  061B                     	;# 
  2887  061C                     	;# 
  2888  061D                     	;# 
  2889  061E                     	;# 
  2890  068C                     	;# 
  2891  068D                     	;# 
  2892  068E                     	;# 
  2893  068F                     	;# 
  2894  0690                     	;# 
  2895  0691                     	;# 
  2896  0692                     	;# 
  2897  0693                     	;# 
  2898  0694                     	;# 
  2899  070C                     	;# 
  2900  070D                     	;# 
  2901  070E                     	;# 
  2902  070F                     	;# 
  2903  0710                     	;# 
  2904  0711                     	;# 
  2905  0712                     	;# 
  2906  0713                     	;# 
  2907  0714                     	;# 
  2908  0716                     	;# 
  2909  0717                     	;# 
  2910  0718                     	;# 
  2911  0719                     	;# 
  2912  071A                     	;# 
  2913  071B                     	;# 
  2914  071C                     	;# 
  2915  071D                     	;# 
  2916  071E                     	;# 
  2917  0796                     	;# 
  2918  0797                     	;# 
  2919  0798                     	;# 
  2920  0799                     	;# 
  2921  079A                     	;# 
  2922  079B                     	;# 
  2923  080C                     	;# 
  2924  080D                     	;# 
  2925  080E                     	;# 
  2926  080F                     	;# 
  2927  0810                     	;# 
  2928  0811                     	;# 
  2929  0812                     	;# 
  2930  0813                     	;# 
  2931  0814                     	;# 
  2932  081A                     	;# 
  2933  081B                     	;# 
  2934  081C                     	;# 
  2935  081D                     	;# 
  2936  081E                     	;# 
  2937  081F                     	;# 
  2938  088C                     	;# 
  2939  088D                     	;# 
  2940  088E                     	;# 
  2941  088F                     	;# 
  2942  0890                     	;# 
  2943  0891                     	;# 
  2944  0892                     	;# 
  2945  0893                     	;# 
  2946  0895                     	;# 
  2947  0896                     	;# 
  2948  0897                     	;# 
  2949  0898                     	;# 
  2950  0899                     	;# 
  2951  089A                     	;# 
  2952  089B                     	;# 
  2953  090C                     	;# 
  2954  090E                     	;# 
  2955  090F                     	;# 
  2956  091F                     	;# 
  2957  091F                     	;# 
  2958  098F                     	;# 
  2959  098F                     	;# 
  2960  0990                     	;# 
  2961  0991                     	;# 
  2962  0992                     	;# 
  2963  0993                     	;# 
  2964  0994                     	;# 
  2965  0995                     	;# 
  2966  0996                     	;# 
  2967  0997                     	;# 
  2968  0E0F                     	;# 
  2969  0E10                     	;# 
  2970  0E11                     	;# 
  2971  0E12                     	;# 
  2972  0E13                     	;# 
  2973  0E14                     	;# 
  2974  0E15                     	;# 
  2975  0E16                     	;# 
  2976  0E17                     	;# 
  2977  0E18                     	;# 
  2978  0E19                     	;# 
  2979  0E1A                     	;# 
  2980  0E1B                     	;# 
  2981  0E1C                     	;# 
  2982  0E1D                     	;# 
  2983  0E1E                     	;# 
  2984  0E1F                     	;# 
  2985  0E20                     	;# 
  2986  0E21                     	;# 
  2987  0E22                     	;# 
  2988  0E23                     	;# 
  2989  0E24                     	;# 
  2990  0E25                     	;# 
  2991  0E26                     	;# 
  2992  0E27                     	;# 
  2993  0E28                     	;# 
  2994  0E29                     	;# 
  2995  0E2A                     	;# 
  2996  0E2B                     	;# 
  2997  0E2C                     	;# 
  2998  0E2D                     	;# 
  2999  0E2E                     	;# 
  3000  0E2F                     	;# 
  3001  0E30                     	;# 
  3002  0E31                     	;# 
  3003  0E32                     	;# 
  3004  0E33                     	;# 
  3005  0E34                     	;# 
  3006  0E35                     	;# 
  3007  0E36                     	;# 
  3008  0E37                     	;# 
  3009  0E8F                     	;# 
  3010  0E90                     	;# 
  3011  0E91                     	;# 
  3012  0E92                     	;# 
  3013  0E93                     	;# 
  3014  0E94                     	;# 
  3015  0E95                     	;# 
  3016  0E96                     	;# 
  3017  0E97                     	;# 
  3018  0E9C                     	;# 
  3019  0E9D                     	;# 
  3020  0E9E                     	;# 
  3021  0EA1                     	;# 
  3022  0EA2                     	;# 
  3023  0EA3                     	;# 
  3024  0EA4                     	;# 
  3025  0EA5                     	;# 
  3026  0EA9                     	;# 
  3027  0EAA                     	;# 
  3028  0EAB                     	;# 
  3029  0EAC                     	;# 
  3030  0EB1                     	;# 
  3031  0EB2                     	;# 
  3032  0EB3                     	;# 
  3033  0EB8                     	;# 
  3034  0EB9                     	;# 
  3035  0EBA                     	;# 
  3036  0EBB                     	;# 
  3037  0EBC                     	;# 
  3038  0EBD                     	;# 
  3039  0EBE                     	;# 
  3040  0EC3                     	;# 
  3041  0EC5                     	;# 
  3042  0EC6                     	;# 
  3043  0EC7                     	;# 
  3044  0EC8                     	;# 
  3045  0EC9                     	;# 
  3046  0ECA                     	;# 
  3047  0ECB                     	;# 
  3048  0ECC                     	;# 
  3049  0F10                     	;# 
  3050  0F11                     	;# 
  3051  0F12                     	;# 
  3052  0F13                     	;# 
  3053  0F14                     	;# 
  3054  0F15                     	;# 
  3055  0F16                     	;# 
  3056  0F17                     	;# 
  3057  0F18                     	;# 
  3058  0F19                     	;# 
  3059  0F1A                     	;# 
  3060  0F1B                     	;# 
  3061  0F1C                     	;# 
  3062  0F1D                     	;# 
  3063  0F1E                     	;# 
  3064  0F1F                     	;# 
  3065  0F20                     	;# 
  3066  0F21                     	;# 
  3067  0F22                     	;# 
  3068  0F23                     	;# 
  3069  0F24                     	;# 
  3070  0F25                     	;# 
  3071  0F26                     	;# 
  3072  0F27                     	;# 
  3073  0F38                     	;# 
  3074  0F39                     	;# 
  3075  0F3A                     	;# 
  3076  0F3B                     	;# 
  3077  0F3C                     	;# 
  3078  0F3D                     	;# 
  3079  0F3E                     	;# 
  3080  0F3F                     	;# 
  3081  0F40                     	;# 
  3082  0F41                     	;# 
  3083  0F43                     	;# 
  3084  0F44                     	;# 
  3085  0F45                     	;# 
  3086  0F46                     	;# 
  3087  0F47                     	;# 
  3088  0F48                     	;# 
  3089  0F49                     	;# 
  3090  0F4A                     	;# 
  3091  0F4B                     	;# 
  3092  0F4C                     	;# 
  3093  0F4E                     	;# 
  3094  0F4F                     	;# 
  3095  0F50                     	;# 
  3096  0F51                     	;# 
  3097  0F52                     	;# 
  3098  0F53                     	;# 
  3099  0F54                     	;# 
  3100  0F55                     	;# 
  3101  0F56                     	;# 
  3102  0F57                     	;# 
  3103  0F65                     	;# 
  3104  0F68                     	;# 
  3105  0F69                     	;# 
  3106  0F6A                     	;# 
  3107  0F6B                     	;# 
  3108  0FE4                     	;# 
  3109  0FE5                     	;# 
  3110  0FE6                     	;# 
  3111  0FE7                     	;# 
  3112  0FE8                     	;# 
  3113  0FE9                     	;# 
  3114  0FEA                     	;# 
  3115  0FEB                     	;# 
  3116  0FED                     	;# 
  3117  0FEE                     	;# 
  3118  0FEF                     	;# 
  3119  0000                     	;# 
  3120  0001                     	;# 
  3121  0002                     	;# 
  3122  0003                     	;# 
  3123  0004                     	;# 
  3124  0005                     	;# 
  3125  0006                     	;# 
  3126  0007                     	;# 
  3127  0008                     	;# 
  3128  0009                     	;# 
  3129  000A                     	;# 
  3130  000B                     	;# 
  3131  000C                     	;# 
  3132  000D                     	;# 
  3133  000E                     	;# 
  3134  0010                     	;# 
  3135  0011                     	;# 
  3136  0012                     	;# 
  3137  0013                     	;# 
  3138  0016                     	;# 
  3139  0017                     	;# 
  3140  0018                     	;# 
  3141  001C                     	;# 
  3142  001C                     	;# 
  3143  001D                     	;# 
  3144  001D                     	;# 
  3145  001E                     	;# 
  3146  001F                     	;# 
  3147  008C                     	;# 
  3148  008C                     	;# 
  3149  008D                     	;# 
  3150  008E                     	;# 
  3151  008E                     	;# 
  3152  008F                     	;# 
  3153  0090                     	;# 
  3154  0090                     	;# 
  3155  0091                     	;# 
  3156  0093                     	;# 
  3157  0094                     	;# 
  3158  0095                     	;# 
  3159  0096                     	;# 
  3160  0097                     	;# 
  3161  0098                     	;# 
  3162  0099                     	;# 
  3163  009A                     	;# 
  3164  009B                     	;# 
  3165  009C                     	;# 
  3166  009D                     	;# 
  3167  009E                     	;# 
  3168  010C                     	;# 
  3169  010D                     	;# 
  3170  010E                     	;# 
  3171  010E                     	;# 
  3172  010F                     	;# 
  3173  0110                     	;# 
  3174  0110                     	;# 
  3175  0111                     	;# 
  3176  0112                     	;# 
  3177  0112                     	;# 
  3178  0113                     	;# 
  3179  0114                     	;# 
  3180  0114                     	;# 
  3181  0115                     	;# 
  3182  0116                     	;# 
  3183  0116                     	;# 
  3184  0117                     	;# 
  3185  0119                     	;# 
  3186  0119                     	;# 
  3187  0119                     	;# 
  3188  011A                     	;# 
  3189  011A                     	;# 
  3190  011A                     	;# 
  3191  011B                     	;# 
  3192  011B                     	;# 
  3193  011B                     	;# 
  3194  011B                     	;# 
  3195  011B                     	;# 
  3196  011C                     	;# 
  3197  011C                     	;# 
  3198  011C                     	;# 
  3199  011D                     	;# 
  3200  011D                     	;# 
  3201  011D                     	;# 
  3202  011E                     	;# 
  3203  011E                     	;# 
  3204  011E                     	;# 
  3205  011F                     	;# 
  3206  011F                     	;# 
  3207  011F                     	;# 
  3208  011F                     	;# 
  3209  011F                     	;# 
  3210  018C                     	;# 
  3211  018D                     	;# 
  3212  018E                     	;# 
  3213  018F                     	;# 
  3214  0190                     	;# 
  3215  0191                     	;# 
  3216  0192                     	;# 
  3217  0196                     	;# 
  3218  0197                     	;# 
  3219  0198                     	;# 
  3220  0199                     	;# 
  3221  019A                     	;# 
  3222  019B                     	;# 
  3223  019C                     	;# 
  3224  020C                     	;# 
  3225  020D                     	;# 
  3226  020E                     	;# 
  3227  020F                     	;# 
  3228  020F                     	;# 
  3229  0210                     	;# 
  3230  0210                     	;# 
  3231  0211                     	;# 
  3232  0211                     	;# 
  3233  0212                     	;# 
  3234  0213                     	;# 
  3235  0214                     	;# 
  3236  0215                     	;# 
  3237  0215                     	;# 
  3238  0216                     	;# 
  3239  0216                     	;# 
  3240  0217                     	;# 
  3241  0217                     	;# 
  3242  0218                     	;# 
  3243  0219                     	;# 
  3244  021A                     	;# 
  3245  021B                     	;# 
  3246  021B                     	;# 
  3247  021C                     	;# 
  3248  021C                     	;# 
  3249  021D                     	;# 
  3250  021D                     	;# 
  3251  021E                     	;# 
  3252  021F                     	;# 
  3253  028C                     	;# 
  3254  028C                     	;# 
  3255  028D                     	;# 
  3256  028D                     	;# 
  3257  028E                     	;# 
  3258  028F                     	;# 
  3259  0290                     	;# 
  3260  0290                     	;# 
  3261  0291                     	;# 
  3262  0292                     	;# 
  3263  0292                     	;# 
  3264  0293                     	;# 
  3265  0293                     	;# 
  3266  0294                     	;# 
  3267  0295                     	;# 
  3268  0296                     	;# 
  3269  0296                     	;# 
  3270  0297                     	;# 
  3271  0298                     	;# 
  3272  0298                     	;# 
  3273  0299                     	;# 
  3274  0299                     	;# 
  3275  029A                     	;# 
  3276  029B                     	;# 
  3277  029C                     	;# 
  3278  029C                     	;# 
  3279  029D                     	;# 
  3280  030C                     	;# 
  3281  030C                     	;# 
  3282  030D                     	;# 
  3283  030E                     	;# 
  3284  030F                     	;# 
  3285  0310                     	;# 
  3286  0310                     	;# 
  3287  0311                     	;# 
  3288  0312                     	;# 
  3289  0313                     	;# 
  3290  0314                     	;# 
  3291  0314                     	;# 
  3292  0315                     	;# 
  3293  0316                     	;# 
  3294  0317                     	;# 
  3295  0318                     	;# 
  3296  0318                     	;# 
  3297  0319                     	;# 
  3298  031A                     	;# 
  3299  031B                     	;# 
  3300  031C                     	;# 
  3301  031C                     	;# 
  3302  031D                     	;# 
  3303  031E                     	;# 
  3304  031F                     	;# 
  3305  038C                     	;# 
  3306  038D                     	;# 
  3307  038E                     	;# 
  3308  0390                     	;# 
  3309  0391                     	;# 
  3310  0392                     	;# 
  3311  040C                     	;# 
  3312  040D                     	;# 
  3313  040E                     	;# 
  3314  040F                     	;# 
  3315  0410                     	;# 
  3316  0411                     	;# 
  3317  0416                     	;# 
  3318  0416                     	;# 
  3319  0417                     	;# 
  3320  0418                     	;# 
  3321  0418                     	;# 
  3322  0419                     	;# 
  3323  041A                     	;# 
  3324  041A                     	;# 
  3325  041B                     	;# 
  3326  041C                     	;# 
  3327  041C                     	;# 
  3328  041D                     	;# 
  3329  041E                     	;# 
  3330  041F                     	;# 
  3331  048C                     	;# 
  3332  048C                     	;# 
  3333  048D                     	;# 
  3334  048E                     	;# 
  3335  048F                     	;# 
  3336  048F                     	;# 
  3337  0490                     	;# 
  3338  0491                     	;# 
  3339  0492                     	;# 
  3340  0492                     	;# 
  3341  0493                     	;# 
  3342  0494                     	;# 
  3343  0495                     	;# 
  3344  0495                     	;# 
  3345  0496                     	;# 
  3346  0497                     	;# 
  3347  0498                     	;# 
  3348  0499                     	;# 
  3349  049A                     	;# 
  3350  049B                     	;# 
  3351  049C                     	;# 
  3352  049D                     	;# 
  3353  050C                     	;# 
  3354  050C                     	;# 
  3355  050D                     	;# 
  3356  050E                     	;# 
  3357  050F                     	;# 
  3358  050F                     	;# 
  3359  0510                     	;# 
  3360  0511                     	;# 
  3361  0512                     	;# 
  3362  0512                     	;# 
  3363  0513                     	;# 
  3364  0514                     	;# 
  3365  0515                     	;# 
  3366  0515                     	;# 
  3367  0516                     	;# 
  3368  0517                     	;# 
  3369  0518                     	;# 
  3370  0519                     	;# 
  3371  051A                     	;# 
  3372  051B                     	;# 
  3373  051C                     	;# 
  3374  051D                     	;# 
  3375  058C                     	;# 
  3376  058C                     	;# 
  3377  058D                     	;# 
  3378  058E                     	;# 
  3379  058F                     	;# 
  3380  058F                     	;# 
  3381  0590                     	;# 
  3382  0591                     	;# 
  3383  0592                     	;# 
  3384  0593                     	;# 
  3385  060C                     	;# 
  3386  060D                     	;# 
  3387  060E                     	;# 
  3388  060F                     	;# 
  3389  0610                     	;# 
  3390  0611                     	;# 
  3391  0612                     	;# 
  3392  0613                     	;# 
  3393  0614                     	;# 
  3394  0616                     	;# 
  3395  0617                     	;# 
  3396  0618                     	;# 
  3397  0619                     	;# 
  3398  061A                     	;# 
  3399  061B                     	;# 
  3400  061C                     	;# 
  3401  061D                     	;# 
  3402  061E                     	;# 
  3403  068C                     	;# 
  3404  068D                     	;# 
  3405  068E                     	;# 
  3406  068F                     	;# 
  3407  0690                     	;# 
  3408  0691                     	;# 
  3409  0692                     	;# 
  3410  0693                     	;# 
  3411  0694                     	;# 
  3412  070C                     	;# 
  3413  070D                     	;# 
  3414  070E                     	;# 
  3415  070F                     	;# 
  3416  0710                     	;# 
  3417  0711                     	;# 
  3418  0712                     	;# 
  3419  0713                     	;# 
  3420  0714                     	;# 
  3421  0716                     	;# 
  3422  0717                     	;# 
  3423  0718                     	;# 
  3424  0719                     	;# 
  3425  071A                     	;# 
  3426  071B                     	;# 
  3427  071C                     	;# 
  3428  071D                     	;# 
  3429  071E                     	;# 
  3430  0796                     	;# 
  3431  0797                     	;# 
  3432  0798                     	;# 
  3433  0799                     	;# 
  3434  079A                     	;# 
  3435  079B                     	;# 
  3436  080C                     	;# 
  3437  080D                     	;# 
  3438  080E                     	;# 
  3439  080F                     	;# 
  3440  0810                     	;# 
  3441  0811                     	;# 
  3442  0812                     	;# 
  3443  0813                     	;# 
  3444  0814                     	;# 
  3445  081A                     	;# 
  3446  081B                     	;# 
  3447  081C                     	;# 
  3448  081D                     	;# 
  3449  081E                     	;# 
  3450  081F                     	;# 
  3451  088C                     	;# 
  3452  088D                     	;# 
  3453  088E                     	;# 
  3454  088F                     	;# 
  3455  0890                     	;# 
  3456  0891                     	;# 
  3457  0892                     	;# 
  3458  0893                     	;# 
  3459  0895                     	;# 
  3460  0896                     	;# 
  3461  0897                     	;# 
  3462  0898                     	;# 
  3463  0899                     	;# 
  3464  089A                     	;# 
  3465  089B                     	;# 
  3466  090C                     	;# 
  3467  090E                     	;# 
  3468  090F                     	;# 
  3469  091F                     	;# 
  3470  091F                     	;# 
  3471  098F                     	;# 
  3472  098F                     	;# 
  3473  0990                     	;# 
  3474  0991                     	;# 
  3475  0992                     	;# 
  3476  0993                     	;# 
  3477  0994                     	;# 
  3478  0995                     	;# 
  3479  0996                     	;# 
  3480  0997                     	;# 
  3481  0E0F                     	;# 
  3482  0E10                     	;# 
  3483  0E11                     	;# 
  3484  0E12                     	;# 
  3485  0E13                     	;# 
  3486  0E14                     	;# 
  3487  0E15                     	;# 
  3488  0E16                     	;# 
  3489  0E17                     	;# 
  3490  0E18                     	;# 
  3491  0E19                     	;# 
  3492  0E1A                     	;# 
  3493  0E1B                     	;# 
  3494  0E1C                     	;# 
  3495  0E1D                     	;# 
  3496  0E1E                     	;# 
  3497  0E1F                     	;# 
  3498  0E20                     	;# 
  3499  0E21                     	;# 
  3500  0E22                     	;# 
  3501  0E23                     	;# 
  3502  0E24                     	;# 
  3503  0E25                     	;# 
  3504  0E26                     	;# 
  3505  0E27                     	;# 
  3506  0E28                     	;# 
  3507  0E29                     	;# 
  3508  0E2A                     	;# 
  3509  0E2B                     	;# 
  3510  0E2C                     	;# 
  3511  0E2D                     	;# 
  3512  0E2E                     	;# 
  3513  0E2F                     	;# 
  3514  0E30                     	;# 
  3515  0E31                     	;# 
  3516  0E32                     	;# 
  3517  0E33                     	;# 
  3518  0E34                     	;# 
  3519  0E35                     	;# 
  3520  0E36                     	;# 
  3521  0E37                     	;# 
  3522  0E8F                     	;# 
  3523  0E90                     	;# 
  3524  0E91                     	;# 
  3525  0E92                     	;# 
  3526  0E93                     	;# 
  3527  0E94                     	;# 
  3528  0E95                     	;# 
  3529  0E96                     	;# 
  3530  0E97                     	;# 
  3531  0E9C                     	;# 
  3532  0E9D                     	;# 
  3533  0E9E                     	;# 
  3534  0EA1                     	;# 
  3535  0EA2                     	;# 
  3536  0EA3                     	;# 
  3537  0EA4                     	;# 
  3538  0EA5                     	;# 
  3539  0EA9                     	;# 
  3540  0EAA                     	;# 
  3541  0EAB                     	;# 
  3542  0EAC                     	;# 
  3543  0EB1                     	;# 
  3544  0EB2                     	;# 
  3545  0EB3                     	;# 
  3546  0EB8                     	;# 
  3547  0EB9                     	;# 
  3548  0EBA                     	;# 
  3549  0EBB                     	;# 
  3550  0EBC                     	;# 
  3551  0EBD                     	;# 
  3552  0EBE                     	;# 
  3553  0EC3                     	;# 
  3554  0EC5                     	;# 
  3555  0EC6                     	;# 
  3556  0EC7                     	;# 
  3557  0EC8                     	;# 
  3558  0EC9                     	;# 
  3559  0ECA                     	;# 
  3560  0ECB                     	;# 
  3561  0ECC                     	;# 
  3562  0F10                     	;# 
  3563  0F11                     	;# 
  3564  0F12                     	;# 
  3565  0F13                     	;# 
  3566  0F14                     	;# 
  3567  0F15                     	;# 
  3568  0F16                     	;# 
  3569  0F17                     	;# 
  3570  0F18                     	;# 
  3571  0F19                     	;# 
  3572  0F1A                     	;# 
  3573  0F1B                     	;# 
  3574  0F1C                     	;# 
  3575  0F1D                     	;# 
  3576  0F1E                     	;# 
  3577  0F1F                     	;# 
  3578  0F20                     	;# 
  3579  0F21                     	;# 
  3580  0F22                     	;# 
  3581  0F23                     	;# 
  3582  0F24                     	;# 
  3583  0F25                     	;# 
  3584  0F26                     	;# 
  3585  0F27                     	;# 
  3586  0F38                     	;# 
  3587  0F39                     	;# 
  3588  0F3A                     	;# 
  3589  0F3B                     	;# 
  3590  0F3C                     	;# 
  3591  0F3D                     	;# 
  3592  0F3E                     	;# 
  3593  0F3F                     	;# 
  3594  0F40                     	;# 
  3595  0F41                     	;# 
  3596  0F43                     	;# 
  3597  0F44                     	;# 
  3598  0F45                     	;# 
  3599  0F46                     	;# 
  3600  0F47                     	;# 
  3601  0F48                     	;# 
  3602  0F49                     	;# 
  3603  0F4A                     	;# 
  3604  0F4B                     	;# 
  3605  0F4C                     	;# 
  3606  0F4E                     	;# 
  3607  0F4F                     	;# 
  3608  0F50                     	;# 
  3609  0F51                     	;# 
  3610  0F52                     	;# 
  3611  0F53                     	;# 
  3612  0F54                     	;# 
  3613  0F55                     	;# 
  3614  0F56                     	;# 
  3615  0F57                     	;# 
  3616  0F65                     	;# 
  3617  0F68                     	;# 
  3618  0F69                     	;# 
  3619  0F6A                     	;# 
  3620  0F6B                     	;# 
  3621  0FE4                     	;# 
  3622  0FE5                     	;# 
  3623  0FE6                     	;# 
  3624  0FE7                     	;# 
  3625  0FE8                     	;# 
  3626  0FE9                     	;# 
  3627  0FEA                     	;# 
  3628  0FEB                     	;# 
  3629  0FED                     	;# 
  3630  0FEE                     	;# 
  3631  0FEF                     	;# 
  3632  0000                     	;# 
  3633  0001                     	;# 
  3634  0002                     	;# 
  3635  0003                     	;# 
  3636  0004                     	;# 
  3637  0005                     	;# 
  3638  0006                     	;# 
  3639  0007                     	;# 
  3640  0008                     	;# 
  3641  0009                     	;# 
  3642  000A                     	;# 
  3643  000B                     	;# 
  3644  000C                     	;# 
  3645  000D                     	;# 
  3646  000E                     	;# 
  3647  0010                     	;# 
  3648  0011                     	;# 
  3649  0012                     	;# 
  3650  0013                     	;# 
  3651  0016                     	;# 
  3652  0017                     	;# 
  3653  0018                     	;# 
  3654  001C                     	;# 
  3655  001C                     	;# 
  3656  001D                     	;# 
  3657  001D                     	;# 
  3658  001E                     	;# 
  3659  001F                     	;# 
  3660  008C                     	;# 
  3661  008C                     	;# 
  3662  008D                     	;# 
  3663  008E                     	;# 
  3664  008E                     	;# 
  3665  008F                     	;# 
  3666  0090                     	;# 
  3667  0090                     	;# 
  3668  0091                     	;# 
  3669  0093                     	;# 
  3670  0094                     	;# 
  3671  0095                     	;# 
  3672  0096                     	;# 
  3673  0097                     	;# 
  3674  0098                     	;# 
  3675  0099                     	;# 
  3676  009A                     	;# 
  3677  009B                     	;# 
  3678  009C                     	;# 
  3679  009D                     	;# 
  3680  009E                     	;# 
  3681  010C                     	;# 
  3682  010D                     	;# 
  3683  010E                     	;# 
  3684  010E                     	;# 
  3685  010F                     	;# 
  3686  0110                     	;# 
  3687  0110                     	;# 
  3688  0111                     	;# 
  3689  0112                     	;# 
  3690  0112                     	;# 
  3691  0113                     	;# 
  3692  0114                     	;# 
  3693  0114                     	;# 
  3694  0115                     	;# 
  3695  0116                     	;# 
  3696  0116                     	;# 
  3697  0117                     	;# 
  3698  0119                     	;# 
  3699  0119                     	;# 
  3700  0119                     	;# 
  3701  011A                     	;# 
  3702  011A                     	;# 
  3703  011A                     	;# 
  3704  011B                     	;# 
  3705  011B                     	;# 
  3706  011B                     	;# 
  3707  011B                     	;# 
  3708  011B                     	;# 
  3709  011C                     	;# 
  3710  011C                     	;# 
  3711  011C                     	;# 
  3712  011D                     	;# 
  3713  011D                     	;# 
  3714  011D                     	;# 
  3715  011E                     	;# 
  3716  011E                     	;# 
  3717  011E                     	;# 
  3718  011F                     	;# 
  3719  011F                     	;# 
  3720  011F                     	;# 
  3721  011F                     	;# 
  3722  011F                     	;# 
  3723  018C                     	;# 
  3724  018D                     	;# 
  3725  018E                     	;# 
  3726  018F                     	;# 
  3727  0190                     	;# 
  3728  0191                     	;# 
  3729  0192                     	;# 
  3730  0196                     	;# 
  3731  0197                     	;# 
  3732  0198                     	;# 
  3733  0199                     	;# 
  3734  019A                     	;# 
  3735  019B                     	;# 
  3736  019C                     	;# 
  3737  020C                     	;# 
  3738  020D                     	;# 
  3739  020E                     	;# 
  3740  020F                     	;# 
  3741  020F                     	;# 
  3742  0210                     	;# 
  3743  0210                     	;# 
  3744  0211                     	;# 
  3745  0211                     	;# 
  3746  0212                     	;# 
  3747  0213                     	;# 
  3748  0214                     	;# 
  3749  0215                     	;# 
  3750  0215                     	;# 
  3751  0216                     	;# 
  3752  0216                     	;# 
  3753  0217                     	;# 
  3754  0217                     	;# 
  3755  0218                     	;# 
  3756  0219                     	;# 
  3757  021A                     	;# 
  3758  021B                     	;# 
  3759  021B                     	;# 
  3760  021C                     	;# 
  3761  021C                     	;# 
  3762  021D                     	;# 
  3763  021D                     	;# 
  3764  021E                     	;# 
  3765  021F                     	;# 
  3766  028C                     	;# 
  3767  028C                     	;# 
  3768  028D                     	;# 
  3769  028D                     	;# 
  3770  028E                     	;# 
  3771  028F                     	;# 
  3772  0290                     	;# 
  3773  0290                     	;# 
  3774  0291                     	;# 
  3775  0292                     	;# 
  3776  0292                     	;# 
  3777  0293                     	;# 
  3778  0293                     	;# 
  3779  0294                     	;# 
  3780  0295                     	;# 
  3781  0296                     	;# 
  3782  0296                     	;# 
  3783  0297                     	;# 
  3784  0298                     	;# 
  3785  0298                     	;# 
  3786  0299                     	;# 
  3787  0299                     	;# 
  3788  029A                     	;# 
  3789  029B                     	;# 
  3790  029C                     	;# 
  3791  029C                     	;# 
  3792  029D                     	;# 
  3793  030C                     	;# 
  3794  030C                     	;# 
  3795  030D                     	;# 
  3796  030E                     	;# 
  3797  030F                     	;# 
  3798  0310                     	;# 
  3799  0310                     	;# 
  3800  0311                     	;# 
  3801  0312                     	;# 
  3802  0313                     	;# 
  3803  0314                     	;# 
  3804  0314                     	;# 
  3805  0315                     	;# 
  3806  0316                     	;# 
  3807  0317                     	;# 
  3808  0318                     	;# 
  3809  0318                     	;# 
  3810  0319                     	;# 
  3811  031A                     	;# 
  3812  031B                     	;# 
  3813  031C                     	;# 
  3814  031C                     	;# 
  3815  031D                     	;# 
  3816  031E                     	;# 
  3817  031F                     	;# 
  3818  038C                     	;# 
  3819  038D                     	;# 
  3820  038E                     	;# 
  3821  0390                     	;# 
  3822  0391                     	;# 
  3823  0392                     	;# 
  3824  040C                     	;# 
  3825  040D                     	;# 
  3826  040E                     	;# 
  3827  040F                     	;# 
  3828  0410                     	;# 
  3829  0411                     	;# 
  3830  0416                     	;# 
  3831  0416                     	;# 
  3832  0417                     	;# 
  3833  0418                     	;# 
  3834  0418                     	;# 
  3835  0419                     	;# 
  3836  041A                     	;# 
  3837  041A                     	;# 
  3838  041B                     	;# 
  3839  041C                     	;# 
  3840  041C                     	;# 
  3841  041D                     	;# 
  3842  041E                     	;# 
  3843  041F                     	;# 
  3844  048C                     	;# 
  3845  048C                     	;# 
  3846  048D                     	;# 
  3847  048E                     	;# 
  3848  048F                     	;# 
  3849  048F                     	;# 
  3850  0490                     	;# 
  3851  0491                     	;# 
  3852  0492                     	;# 
  3853  0492                     	;# 
  3854  0493                     	;# 
  3855  0494                     	;# 
  3856  0495                     	;# 
  3857  0495                     	;# 
  3858  0496                     	;# 
  3859  0497                     	;# 
  3860  0498                     	;# 
  3861  0499                     	;# 
  3862  049A                     	;# 
  3863  049B                     	;# 
  3864  049C                     	;# 
  3865  049D                     	;# 
  3866  050C                     	;# 
  3867  050C                     	;# 
  3868  050D                     	;# 
  3869  050E                     	;# 
  3870  050F                     	;# 
  3871  050F                     	;# 
  3872  0510                     	;# 
  3873  0511                     	;# 
  3874  0512                     	;# 
  3875  0512                     	;# 
  3876  0513                     	;# 
  3877  0514                     	;# 
  3878  0515                     	;# 
  3879  0515                     	;# 
  3880  0516                     	;# 
  3881  0517                     	;# 
  3882  0518                     	;# 
  3883  0519                     	;# 
  3884  051A                     	;# 
  3885  051B                     	;# 
  3886  051C                     	;# 
  3887  051D                     	;# 
  3888  058C                     	;# 
  3889  058C                     	;# 
  3890  058D                     	;# 
  3891  058E                     	;# 
  3892  058F                     	;# 
  3893  058F                     	;# 
  3894  0590                     	;# 
  3895  0591                     	;# 
  3896  0592                     	;# 
  3897  0593                     	;# 
  3898  060C                     	;# 
  3899  060D                     	;# 
  3900  060E                     	;# 
  3901  060F                     	;# 
  3902  0610                     	;# 
  3903  0611                     	;# 
  3904  0612                     	;# 
  3905  0613                     	;# 
  3906  0614                     	;# 
  3907  0616                     	;# 
  3908  0617                     	;# 
  3909  0618                     	;# 
  3910  0619                     	;# 
  3911  061A                     	;# 
  3912  061B                     	;# 
  3913  061C                     	;# 
  3914  061D                     	;# 
  3915  061E                     	;# 
  3916  068C                     	;# 
  3917  068D                     	;# 
  3918  068E                     	;# 
  3919  068F                     	;# 
  3920  0690                     	;# 
  3921  0691                     	;# 
  3922  0692                     	;# 
  3923  0693                     	;# 
  3924  0694                     	;# 
  3925  070C                     	;# 
  3926  070D                     	;# 
  3927  070E                     	;# 
  3928  070F                     	;# 
  3929  0710                     	;# 
  3930  0711                     	;# 
  3931  0712                     	;# 
  3932  0713                     	;# 
  3933  0714                     	;# 
  3934  0716                     	;# 
  3935  0717                     	;# 
  3936  0718                     	;# 
  3937  0719                     	;# 
  3938  071A                     	;# 
  3939  071B                     	;# 
  3940  071C                     	;# 
  3941  071D                     	;# 
  3942  071E                     	;# 
  3943  0796                     	;# 
  3944  0797                     	;# 
  3945  0798                     	;# 
  3946  0799                     	;# 
  3947  079A                     	;# 
  3948  079B                     	;# 
  3949  080C                     	;# 
  3950  080D                     	;# 
  3951  080E                     	;# 
  3952  080F                     	;# 
  3953  0810                     	;# 
  3954  0811                     	;# 
  3955  0812                     	;# 
  3956  0813                     	;# 
  3957  0814                     	;# 
  3958  081A                     	;# 
  3959  081B                     	;# 
  3960  081C                     	;# 
  3961  081D                     	;# 
  3962  081E                     	;# 
  3963  081F                     	;# 
  3964  088C                     	;# 
  3965  088D                     	;# 
  3966  088E                     	;# 
  3967  088F                     	;# 
  3968  0890                     	;# 
  3969  0891                     	;# 
  3970  0892                     	;# 
  3971  0893                     	;# 
  3972  0895                     	;# 
  3973  0896                     	;# 
  3974  0897                     	;# 
  3975  0898                     	;# 
  3976  0899                     	;# 
  3977  089A                     	;# 
  3978  089B                     	;# 
  3979  090C                     	;# 
  3980  090E                     	;# 
  3981  090F                     	;# 
  3982  091F                     	;# 
  3983  091F                     	;# 
  3984  098F                     	;# 
  3985  098F                     	;# 
  3986  0990                     	;# 
  3987  0991                     	;# 
  3988  0992                     	;# 
  3989  0993                     	;# 
  3990  0994                     	;# 
  3991  0995                     	;# 
  3992  0996                     	;# 
  3993  0997                     	;# 
  3994  0E0F                     	;# 
  3995  0E10                     	;# 
  3996  0E11                     	;# 
  3997  0E12                     	;# 
  3998  0E13                     	;# 
  3999  0E14                     	;# 
  4000  0E15                     	;# 
  4001  0E16                     	;# 
  4002  0E17                     	;# 
  4003  0E18                     	;# 
  4004  0E19                     	;# 
  4005  0E1A                     	;# 
  4006  0E1B                     	;# 
  4007  0E1C                     	;# 
  4008  0E1D                     	;# 
  4009  0E1E                     	;# 
  4010  0E1F                     	;# 
  4011  0E20                     	;# 
  4012  0E21                     	;# 
  4013  0E22                     	;# 
  4014  0E23                     	;# 
  4015  0E24                     	;# 
  4016  0E25                     	;# 
  4017  0E26                     	;# 
  4018  0E27                     	;# 
  4019  0E28                     	;# 
  4020  0E29                     	;# 
  4021  0E2A                     	;# 
  4022  0E2B                     	;# 
  4023  0E2C                     	;# 
  4024  0E2D                     	;# 
  4025  0E2E                     	;# 
  4026  0E2F                     	;# 
  4027  0E30                     	;# 
  4028  0E31                     	;# 
  4029  0E32                     	;# 
  4030  0E33                     	;# 
  4031  0E34                     	;# 
  4032  0E35                     	;# 
  4033  0E36                     	;# 
  4034  0E37                     	;# 
  4035  0E8F                     	;# 
  4036  0E90                     	;# 
  4037  0E91                     	;# 
  4038  0E92                     	;# 
  4039  0E93                     	;# 
  4040  0E94                     	;# 
  4041  0E95                     	;# 
  4042  0E96                     	;# 
  4043  0E97                     	;# 
  4044  0E9C                     	;# 
  4045  0E9D                     	;# 
  4046  0E9E                     	;# 
  4047  0EA1                     	;# 
  4048  0EA2                     	;# 
  4049  0EA3                     	;# 
  4050  0EA4                     	;# 
  4051  0EA5                     	;# 
  4052  0EA9                     	;# 
  4053  0EAA                     	;# 
  4054  0EAB                     	;# 
  4055  0EAC                     	;# 
  4056  0EB1                     	;# 
  4057  0EB2                     	;# 
  4058  0EB3                     	;# 
  4059  0EB8                     	;# 
  4060  0EB9                     	;# 
  4061  0EBA                     	;# 
  4062  0EBB                     	;# 
  4063  0EBC                     	;# 
  4064  0EBD                     	;# 
  4065  0EBE                     	;# 
  4066  0EC3                     	;# 
  4067  0EC5                     	;# 
  4068  0EC6                     	;# 
  4069  0EC7                     	;# 
  4070  0EC8                     	;# 
  4071  0EC9                     	;# 
  4072  0ECA                     	;# 
  4073  0ECB                     	;# 
  4074  0ECC                     	;# 
  4075  0F10                     	;# 
  4076  0F11                     	;# 
  4077  0F12                     	;# 
  4078  0F13                     	;# 
  4079  0F14                     	;# 
  4080  0F15                     	;# 
  4081  0F16                     	;# 
  4082  0F17                     	;# 
  4083  0F18                     	;# 
  4084  0F19                     	;# 
  4085  0F1A                     	;# 
  4086  0F1B                     	;# 
  4087  0F1C                     	;# 
  4088  0F1D                     	;# 
  4089  0F1E                     	;# 
  4090  0F1F                     	;# 
  4091  0F20                     	;# 
  4092  0F21                     	;# 
  4093  0F22                     	;# 
  4094  0F23                     	;# 
  4095  0F24                     	;# 
  4096  0F25                     	;# 
  4097  0F26                     	;# 
  4098  0F27                     	;# 
  4099  0F38                     	;# 
  4100  0F39                     	;# 
  4101  0F3A                     	;# 
  4102  0F3B                     	;# 
  4103  0F3C                     	;# 
  4104  0F3D                     	;# 
  4105  0F3E                     	;# 
  4106  0F3F                     	;# 
  4107  0F40                     	;# 
  4108  0F41                     	;# 
  4109  0F43                     	;# 
  4110  0F44                     	;# 
  4111  0F45                     	;# 
  4112  0F46                     	;# 
  4113  0F47                     	;# 
  4114  0F48                     	;# 
  4115  0F49                     	;# 
  4116  0F4A                     	;# 
  4117  0F4B                     	;# 
  4118  0F4C                     	;# 
  4119  0F4E                     	;# 
  4120  0F4F                     	;# 
  4121  0F50                     	;# 
  4122  0F51                     	;# 
  4123  0F52                     	;# 
  4124  0F53                     	;# 
  4125  0F54                     	;# 
  4126  0F55                     	;# 
  4127  0F56                     	;# 
  4128  0F57                     	;# 
  4129  0F65                     	;# 
  4130  0F68                     	;# 
  4131  0F69                     	;# 
  4132  0F6A                     	;# 
  4133  0F6B                     	;# 
  4134  0FE4                     	;# 
  4135  0FE5                     	;# 
  4136  0FE6                     	;# 
  4137  0FE7                     	;# 
  4138  0FE8                     	;# 
  4139  0FE9                     	;# 
  4140  0FEA                     	;# 
  4141  0FEB                     	;# 
  4142  0FED                     	;# 
  4143  0FEE                     	;# 
  4144  0FEF                     	;# 
  4145                           
  4146                           	psect	stringtext
  4147  0406                     __pstringtext:	
  4148  0406                     _dpowers:	
  4149  0406  3401               	retlw	1
  4150  0407  3400               	retlw	0
  4151  0408  340A               	retlw	10
  4152  0409  3400               	retlw	0
  4153  040A  3464               	retlw	100
  4154  040B  3400               	retlw	0
  4155  040C  34E8               	retlw	232
  4156  040D  3403               	retlw	3
  4157  040E  3410               	retlw	16
  4158  040F  3427               	retlw	39
  4159  0410                     __end_of_dpowers:	
  4160  000B                     _INTCONbits	set	11
  4161  0016                     _LATA	set	22
  4162  0016                     _LATAbits	set	22
  4163  0017                     _LATB	set	23
  4164  0018                     _LATC	set	24
  4165  0011                     _TRISA	set	17
  4166  0012                     _TRISB	set	18
  4167  0013                     _TRISC	set	19
  4168  005F                     _GIE	set	95
  4169  011F                     _BAUD1CON	set	287
  4170  0119                     _RC1REG	set	281
  4171  011D                     _RC1STA	set	285
  4172  011D                     _RC1STAbits	set	285
  4173  011C                     _SP1BRGH	set	284
  4174  011B                     _SP1BRGL	set	283
  4175  011A                     _TX1REG	set	282
  4176  011E                     _TX1STA	set	286
  4177  0197                     _SSP2ADD	set	407
  4178  0196                     _SSP2BUF	set	406
  4179  019A                     _SSP2CON1	set	410
  4180  019A                     _SSP2CON1bits	set	410
  4181  019B                     _SSP2CON2bits	set	411
  4182  019C                     _SSP2CON3	set	412
  4183  0199                     _SSP2STAT	set	409
  4184  0293                     _PR4	set	659
  4185  0299                     _PR6	set	665
  4186  0296                     _T4CLKCON	set	662
  4187  0294                     _T4CON	set	660
  4188  0294                     _T4CONbits	set	660
  4189  0295                     _T4HLT	set	661
  4190  0295                     _T4HLTbits	set	661
  4191  0293                     _T4PR	set	659
  4192  0297                     _T4RST	set	663
  4193  0297                     _T4RSTbits	set	663
  4194  0292                     _T4TMR	set	658
  4195  029C                     _T6CLKCON	set	668
  4196  029A                     _T6CON	set	666
  4197  029A                     _T6CONbits	set	666
  4198  029B                     _T6HLT	set	667
  4199  029B                     _T6HLTbits	set	667
  4200  0299                     _T6PR	set	665
  4201  029D                     _T6RST	set	669
  4202  029D                     _T6RSTbits	set	669
  4203  0298                     _T6TMR	set	664
  4204  0292                     _TMR4	set	658
  4205  0298                     _TMR6	set	664
  4206  0719                     _PIE3bits	set	1817
  4207  070F                     _PIR3bits	set	1807
  4208  0710                     _PIR4bits	set	1808
  4209  088D                     _OSCCON1	set	2189
  4210  088F                     _OSCCON3	set	2191
  4211  0891                     _OSCEN	set	2193
  4212  0893                     _OSCFRQ	set	2195
  4213  0892                     _OSCTUNE	set	2194
  4214  0E8F                     _PPSLOCK	set	3727
  4215  0E8F                     _PPSLOCKbits	set	3727
  4216  0ECB                     _RXPPSbits	set	3787
  4217  0EC8                     _SSP2CLKPPSbits	set	3784
  4218  0EC9                     _SSP2DATPPSbits	set	3785
  4219  0E9D                     _T4AINPPSbits	set	3741
  4220  0E9E                     _T6AINPPSbits	set	3742
  4221  0F38                     _ANSELA	set	3896
  4222  0F43                     _ANSELB	set	3907
  4223  0F4E                     _ANSELC	set	3918
  4224  0F3A                     _ODCONA	set	3898
  4225  0F45                     _ODCONB	set	3909
  4226  0F50                     _ODCONC	set	3920
  4227  0F20                     _RC0PPS	set	3872
  4228  0F23                     _RC3PPS	set	3875
  4229  0F24                     _RC4PPS	set	3876
  4230  0F26                     _RC6PPS	set	3878
  4231  0F39                     _WPUA	set	3897
  4232  0F44                     _WPUB	set	3908
  4233  0F4F                     _WPUC	set	3919
  4234  0F65                     _WPUE	set	3941
  4235  0410                     STR_4:	
  4236  0410  3455               	retlw	85	;'U'
  4237  0411  346E               	retlw	110	;'n'
  4238  0412  3472               	retlw	114	;'r'
  4239  0413  3465               	retlw	101	;'e'
  4240  0414  3463               	retlw	99	;'c'
  4241  0415  346F               	retlw	111	;'o'
  4242  0416  3467               	retlw	103	;'g'
  4243  0417  346E               	retlw	110	;'n'
  4244  0418  3469               	retlw	105	;'i'
  4245  0419  347A               	retlw	122	;'z'
  4246  041A  3465               	retlw	101	;'e'
  4247  041B  3464               	retlw	100	;'d'
  4248  041C  3420               	retlw	32	;' '
  4249  041D  3469               	retlw	105	;'i'
  4250  041E  346E               	retlw	110	;'n'
  4251  041F  3470               	retlw	112	;'p'
  4252  0420  3475               	retlw	117	;'u'
  4253  0421  3474               	retlw	116	;'t'
  4254  0422  3420               	retlw	32	;' '
  4255  0423  343A               	retlw	58	;':'
  4256  0424  3420               	retlw	32	;' '
  4257  0425  3400               	retlw	0
  4258  0426                     STR_2:	
  4259  0426  3425               	retlw	37	;'%'
  4260  0427  3464               	retlw	100	;'d'
  4261  0428  342E               	retlw	46	;'.'
  4262  0429  3425               	retlw	37	;'%'
  4263  042A  3464               	retlw	100	;'d'
  4264  042B  3400               	retlw	0
  4265  042C                     STR_1:	
  4266  042C  340A               	retlw	10
  4267  042D  3400               	retlw	0
  4268  042C                     
  4269                           ; #config settings
  4270  0000                     
  4271                           	psect	cinit
  4272  0022                     start_initialization:	
  4273  0022                     __initialization:	
  4274                           
  4275                           ; Clear objects allocated to COMMON
  4276  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  4277  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4278  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4279  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4280  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4281  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4282  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4283                           
  4284                           ; Clear objects allocated to BANK0
  4285  0029  3043               	movlw	low __pbssBANK0
  4286  002A  0084               	movwf	4
  4287  002B  3000               	movlw	high __pbssBANK0
  4288  002C  0085               	movwf	5
  4289  002D  301E               	movlw	30
  4290  002E  3185  255B         	fcall	clear_ram0
  4291  0030                     end_of_initialization:	
  4292                           ;End of C runtime variable initialization code
  4293                           
  4294  0030                     __end_of__initialization:	
  4295  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4296  0031  0020               	movlb	0
  4297  0032  3182  2A27         	ljmp	_main	;jump to C main() function
  4298                           
  4299                           	psect	bssCOMMON
  4300  0070                     __pbssCOMMON:	
  4301  0070                     I2C2_ISR@i2c_bytes_left:	
  4302  0070                     	ds	1
  4303  0071                     I2C2_ISR@pi2c_buf_ptr:	
  4304  0071                     	ds	1
  4305  0072                     _i2c2_trb_count:	
  4306  0072                     	ds	1
  4307  0073                     _p_i2c2_current:	
  4308  0073                     	ds	1
  4309  0074                     _p_i2c2_trb_current:	
  4310  0074                     	ds	1
  4311  0075                     I2C2_ISR@i2c_address:	
  4312  0075                     	ds	2
  4313                           
  4314                           	psect	bssBANK0
  4315  0043                     __pbssBANK0:	
  4316  0043                     _i2c2_object:	
  4317  0043                     	ds	5
  4318  0048                     _TMR4_InterruptHandler:	
  4319  0048                     	ds	2
  4320  004A                     _TMR6_InterruptHandler:	
  4321  004A                     	ds	2
  4322  004C                     I2C2_ISR@i2c_10bit_address_restart:	
  4323  004C                     	ds	1
  4324  004D                     _i2c2_state:	
  4325  004D                     	ds	1
  4326  004E                     EMC1001_Read@trb:	
  4327  004E                     	ds	8
  4328  0056                     I2C2_MasterRead@trBlock:	
  4329  0056                     	ds	4
  4330  005A                     I2C2_MasterWrite@trBlock:	
  4331  005A                     	ds	4
  4332  005E                     _i2c2_tr_queue:	
  4333  005E                     	ds	3
  4334                           
  4335                           	psect	clrtext
  4336  055B                     clear_ram0:	
  4337                           ;	Called with FSR0 containing the base address, and
  4338                           ;	WREG with the size to clear
  4339                           
  4340  055B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4341  055C                     clrloop0:	
  4342  055C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4343  055D  3101               	addfsr 0,1
  4344  055E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4345  055F  2D5C               	goto	clrloop0	;have we reached the end yet?
  4346  0560  3400               	retlw	0	;all done for this memory range, return
  4347                           
  4348                           	psect	cstackCOMMON
  4349  0077                     __pcstackCOMMON:	
  4350  0077                     ?_PIN_MANAGER_Initialize:	
  4351  0077                     ?_OSCILLATOR_Initialize:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0077                     ?_I2C2_Initialize:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0077                     ?_TMR4_Initialize:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0077                     ?_I2C2_BusCollisionISR:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0077                     ??_I2C2_BusCollisionISR:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0077                     ?_I2C2_ISR:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0077                     ?_I2C2_Stop:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0077                     ??_I2C2_Stop:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0077                     ?_I2C2_FunctionComplete:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0077                     ??_I2C2_FunctionComplete:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0077                     ?_TMR4_HasOverflowOccured:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0077                     ?_TMR4_Start:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0077                     ?_EUSART_Initialize:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0077                     ?_EUSART_Read:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0077                     ?_EUSART_Write:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0077                     ?_putch:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0077                     ?_TMR6_Initialize:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0077                     ?_TMR6_Start:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0077                     ?_TMR6_Stop:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0077                     ?_SYSTEM_Initialize:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0077                     ?_INTERRUPT_InterruptManager:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0077                     ?_main:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417                           
  4418                           ; 1 bytes @ 0x0
  4419  0077                     	ds	1
  4420  0078                     I2C2_Stop@completion_code:	
  4421                           
  4422                           ; 1 bytes @ 0x1
  4423  0078                     	ds	1
  4424  0079                     ??_I2C2_ISR:	
  4425                           
  4426                           ; 1 bytes @ 0x2
  4427  0079                     	ds	4
  4428  007D                     ??_INTERRUPT_InterruptManager:	
  4429                           
  4430                           ; 1 bytes @ 0x6
  4431  007D                     	ds	1
  4432                           
  4433                           	psect	cstackBANK0
  4434  0020                     __pcstackBANK0:	
  4435  0020                     ??_PIN_MANAGER_Initialize:	
  4436  0020                     ??_OSCILLATOR_Initialize:	
  4437                           ; 1 bytes @ 0x0
  4438                           
  4439  0020                     ??_I2C2_Initialize:	
  4440                           ; 1 bytes @ 0x0
  4441                           
  4442  0020                     ??_TMR4_Initialize:	
  4443                           ; 1 bytes @ 0x0
  4444                           
  4445  0020                     ?_I2C2_MasterWriteTRBBuild:	
  4446                           ; 1 bytes @ 0x0
  4447                           
  4448  0020                     ?_I2C2_MasterTRBInsert:	
  4449                           ; 1 bytes @ 0x0
  4450                           
  4451  0020                     ?_I2C2_MasterReadTRBBuild:	
  4452                           ; 1 bytes @ 0x0
  4453                           
  4454  0020                     ??_TMR4_HasOverflowOccured:	
  4455                           ; 1 bytes @ 0x0
  4456                           
  4457  0020                     ??_TMR4_Start:	
  4458                           ; 1 bytes @ 0x0
  4459                           
  4460  0020                     ??_EUSART_Initialize:	
  4461                           ; 1 bytes @ 0x0
  4462                           
  4463  0020                     ??_EUSART_Read:	
  4464                           ; 1 bytes @ 0x0
  4465                           
  4466  0020                     ??_EUSART_Write:	
  4467                           ; 1 bytes @ 0x0
  4468                           
  4469  0020                     ??_TMR6_Initialize:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0020                     ??_TMR6_Start:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0020                     ??_TMR6_Stop:	
  4476                           ; 1 bytes @ 0x0
  4477                           
  4478  0020                     ?___wmul:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481  0020                     ?___lwdiv:	
  4482                           ; 2 bytes @ 0x0
  4483                           
  4484  0020                     EUSART_Write@txData:	
  4485                           ; 2 bytes @ 0x0
  4486                           
  4487  0020                     PIN_MANAGER_Initialize@state:	
  4488                           ; 1 bytes @ 0x0
  4489                           
  4490  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  4491                           ; 1 bytes @ 0x0
  4492                           
  4493  0020                     I2C2_MasterReadTRBBuild@pdata:	
  4494                           ; 1 bytes @ 0x0
  4495                           
  4496  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  4497                           ; 1 bytes @ 0x0
  4498                           
  4499  0020                     TMR4_HasOverflowOccured@status:	
  4500                           ; 1 bytes @ 0x0
  4501                           
  4502  0020                     ___wmul@multiplier:	
  4503                           ; 1 bytes @ 0x0
  4504                           
  4505  0020                     ___lwdiv@divisor:	
  4506                           ; 2 bytes @ 0x0
  4507                           
  4508                           
  4509                           ; 2 bytes @ 0x0
  4510  0020                     	ds	1
  4511  0021                     ??_putch:	
  4512  0021                     ??_SYSTEM_Initialize:	
  4513                           ; 1 bytes @ 0x1
  4514                           
  4515  0021                     putch@txData:	
  4516                           ; 1 bytes @ 0x1
  4517                           
  4518  0021                     I2C2_MasterTRBInsert@pflag:	
  4519                           ; 1 bytes @ 0x1
  4520                           
  4521  0021                     I2C2_MasterReadTRBBuild@length:	
  4522                           ; 1 bytes @ 0x1
  4523                           
  4524  0021                     I2C2_MasterWriteTRBBuild@length:	
  4525                           ; 1 bytes @ 0x1
  4526                           
  4527                           
  4528                           ; 1 bytes @ 0x1
  4529  0021                     	ds	1
  4530  0022                     ??_I2C2_MasterTRBInsert:	
  4531  0022                     I2C2_MasterReadTRBBuild@address:	
  4532                           ; 1 bytes @ 0x2
  4533                           
  4534  0022                     I2C2_MasterWriteTRBBuild@address:	
  4535                           ; 2 bytes @ 0x2
  4536                           
  4537  0022                     ___wmul@multiplicand:	
  4538                           ; 2 bytes @ 0x2
  4539                           
  4540  0022                     ___lwdiv@dividend:	
  4541                           ; 2 bytes @ 0x2
  4542                           
  4543                           
  4544                           ; 2 bytes @ 0x2
  4545  0022                     	ds	1
  4546  0023                     I2C2_MasterTRBInsert@count:	
  4547                           
  4548                           ; 1 bytes @ 0x3
  4549  0023                     	ds	1
  4550  0024                     ??_I2C2_MasterWriteTRBBuild:	
  4551  0024                     ??_I2C2_MasterReadTRBBuild:	
  4552                           ; 1 bytes @ 0x4
  4553                           
  4554  0024                     ??___wmul:	
  4555                           ; 1 bytes @ 0x4
  4556                           
  4557  0024                     ??___lwdiv:	
  4558                           ; 1 bytes @ 0x4
  4559                           
  4560  0024                     ___wmul@product:	
  4561                           ; 1 bytes @ 0x4
  4562                           
  4563                           
  4564                           ; 2 bytes @ 0x4
  4565  0024                     	ds	1
  4566  0025                     ___lwdiv@quotient:	
  4567                           
  4568                           ; 2 bytes @ 0x5
  4569  0025                     	ds	1
  4570  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  4571  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  4572                           ; 1 bytes @ 0x6
  4573                           
  4574                           
  4575                           ; 1 bytes @ 0x6
  4576  0026                     	ds	1
  4577  0027                     ?_EMC1001_Read:	
  4578  0027                     EMC1001_Read@pData:	
  4579                           ; 1 bytes @ 0x7
  4580                           
  4581  0027                     ___lwdiv@counter:	
  4582                           ; 1 bytes @ 0x7
  4583                           
  4584                           
  4585                           ; 1 bytes @ 0x7
  4586  0027                     	ds	1
  4587  0028                     ??_EMC1001_Read:	
  4588  0028                     ?___lwmod:	
  4589                           ; 1 bytes @ 0x8
  4590                           
  4591  0028                     ___lwmod@divisor:	
  4592                           ; 2 bytes @ 0x8
  4593                           
  4594                           
  4595                           ; 2 bytes @ 0x8
  4596  0028                     	ds	2
  4597  002A                     EMC1001_Read@reg:	
  4598  002A                     ___lwmod@dividend:	
  4599                           ; 1 bytes @ 0xA
  4600                           
  4601                           
  4602                           ; 2 bytes @ 0xA
  4603  002A                     	ds	1
  4604  002B                     EMC1001_Read@status:	
  4605                           
  4606                           ; 1 bytes @ 0xB
  4607  002B                     	ds	1
  4608  002C                     ??___lwmod:	
  4609                           
  4610                           ; 1 bytes @ 0xC
  4611  002C                     	ds	1
  4612  002D                     ___lwmod@counter:	
  4613                           
  4614                           ; 1 bytes @ 0xD
  4615  002D                     	ds	1
  4616  002E                     ?_printf:	
  4617  002E                     printf@f:	
  4618                           ; 2 bytes @ 0xE
  4619                           
  4620                           
  4621                           ; 2 bytes @ 0xE
  4622  002E                     	ds	6
  4623  0034                     ??_printf:	
  4624                           
  4625                           ; 1 bytes @ 0x14
  4626  0034                     	ds	4
  4627  0038                     printf@ap:	
  4628                           
  4629                           ; 1 bytes @ 0x18
  4630  0038                     	ds	1
  4631  0039                     printf@flag:	
  4632                           
  4633                           ; 1 bytes @ 0x19
  4634  0039                     	ds	1
  4635  003A                     printf@prec:	
  4636                           
  4637                           ; 1 bytes @ 0x1A
  4638  003A                     	ds	1
  4639  003B                     printf@val:	
  4640                           
  4641                           ; 2 bytes @ 0x1B
  4642  003B                     	ds	2
  4643  003D                     printf@c:	
  4644                           
  4645                           ; 1 bytes @ 0x1D
  4646  003D                     	ds	1
  4647  003E                     ??_main:	
  4648                           
  4649                           ; 1 bytes @ 0x1E
  4650  003E                     	ds	2
  4651  0040                     main@data:	
  4652                           
  4653                           ; 1 bytes @ 0x20
  4654  0040                     	ds	1
  4655  0041                     main@temp:	
  4656                           
  4657                           ; 1 bytes @ 0x21
  4658  0041                     	ds	1
  4659  0042                     main@templo:	
  4660                           
  4661                           ; 1 bytes @ 0x22
  4662  0042                     	ds	1
  4663                           
  4664                           	psect	maintext
  4665  0227                     __pmaintext:	
  4666 ;;
  4667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4668 ;;
  4669 ;; *************** function _main *****************
  4670 ;; Defined at:
  4671 ;;		line 22 in file "main.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  templo          1   34[BANK0 ] unsigned char 
  4676 ;;  temp            1   33[BANK0 ] char 
  4677 ;;  data            1   32[BANK0 ] unsigned char 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : B1F/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;Total ram usage:        5 bytes
  4692 ;; Hardware stack levels required when called:    6
  4693 ;; This function calls:
  4694 ;;		_EMC1001_Read
  4695 ;;		_EUSART_Read
  4696 ;;		_EUSART_Write
  4697 ;;		_SYSTEM_Initialize
  4698 ;;		_TMR4_HasOverflowOccured
  4699 ;;		_TMR6_Start
  4700 ;;		_TMR6_Stop
  4701 ;;		___wmul
  4702 ;;		_printf
  4703 ;; This function is called by:
  4704 ;;		Startup code after reset
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _main
  4710  0227                     _main:	
  4711                           
  4712                           ;main.c: 24: uint8_t data;
  4713                           ;main.c: 25: int8_t temp;
  4714                           ;main.c: 26: uint8_t templo;
  4715                           ;main.c: 27: SYSTEM_Initialize();
  4716                           
  4717                           ;incstack = 0
  4718                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4719  0227  3184  24EF  3182   	fcall	_SYSTEM_Initialize
  4720                           
  4721                           ;main.c: 28: (INTCONbits.GIE = 1);
  4722  022A  178B               	bsf	11,7	;volatile
  4723                           
  4724                           ;main.c: 29: (INTCONbits.PEIE = 1);
  4725  022B  170B               	bsf	11,6	;volatile
  4726  022C                     l404:	
  4727                           ;main.c: 31: while (1)
  4728                           
  4729                           
  4730                           ;main.c: 32: {
  4731                           ;main.c: 33: if (TMR4_HasOverflowOccured())
  4732  022C  3185  2513  3182   	fcall	_TMR4_HasOverflowOccured
  4733  022F  3A00               	xorlw	0
  4734  0230  1903               	skipnz
  4735  0231  2A2C               	goto	l404
  4736                           
  4737                           ;main.c: 34: {
  4738                           ;main.c: 35: do { LATAbits.LATA2 = 1; } while(0);
  4739  0232  0020               	movlb	0	; select bank0
  4740  0233  1516               	bsf	22,2	;volatile
  4741                           
  4742                           ;main.c: 36: data = EUSART_Read();
  4743  0234  3184  24DA  3182   	fcall	_EUSART_Read
  4744  0237  0020               	movlb	0	; select bank0
  4745  0238  00BE               	movwf	??_main
  4746  0239  083E               	movf	??_main,w
  4747  023A  00C0               	movwf	main@data
  4748                           
  4749                           ;main.c: 37: if (data == 'G' && T6TMR == 0x00)
  4750  023B  3047               	movlw	71
  4751  023C  0640               	xorwf	main@data,w
  4752  023D  1D03               	btfss	3,2
  4753  023E  2AA4               	goto	l2340
  4754  023F  0025               	movlb	5	; select bank5
  4755  0240  0818               	movf	24,w	;volatile
  4756  0241  1D03               	btfss	3,2
  4757  0242  2AA4               	goto	l2340
  4758                           
  4759                           ;main.c: 38: {
  4760                           ;main.c: 39: TMR6_Start();
  4761  0243  3185  256B  3182   	fcall	_TMR6_Start
  4762                           
  4763                           ;main.c: 40: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4764  0246  1003               	clrc
  4765  0247  0020               	movlb	0	; select bank0
  4766  0248  1C16               	btfss	22,0	;volatile
  4767  0249  1403               	setc
  4768  024A  1C03               	btfss	3,0
  4769  024B  2A4F               	goto	u1790
  4770  024C  0020               	movlb	0	; select bank0
  4771  024D  1416               	bsf	22,0	;volatile
  4772  024E  2A51               	goto	l2322
  4773  024F                     u1790:	
  4774  024F  0020               	movlb	0	; select bank0
  4775  0250  1016               	bcf	22,0	;volatile
  4776  0251                     l2322:	
  4777                           
  4778                           ;main.c: 41: printf("\n");
  4779  0251  302C               	movlw	low (STR_1| (0+32768))
  4780  0252  00AE               	movwf	printf@f
  4781  0253  3084               	movlw	high (STR_1| (0+32768))
  4782  0254  00AF               	movwf	printf@f+1
  4783  0255  3181  216F  3182   	fcall	_printf
  4784                           
  4785                           ;main.c: 42: EUSART_Write(0x0D);
  4786  0258  300D               	movlw	13
  4787  0259  3185  2548  3182   	fcall	_EUSART_Write
  4788                           
  4789                           ;main.c: 44: if (EMC1001_Read(0, (uint8_t*)&temp))
  4790  025C  3041               	movlw	(low (main@temp| 0))& (0+255)
  4791  025D  0020               	movlb	0	; select bank0
  4792  025E  00BE               	movwf	??_main
  4793  025F  083E               	movf	??_main,w
  4794  0260  00A7               	movwf	EMC1001_Read@pData
  4795  0261  3000               	movlw	0
  4796  0262  3183  2368  3182   	fcall	_EMC1001_Read
  4797  0265  3A00               	xorlw	0
  4798  0266  1903               	skipnz
  4799  0267  2ACC               	goto	L1
  4800                           
  4801                           ;main.c: 45: {
  4802                           ;main.c: 46: EMC1001_Read(2, &templo);
  4803  0268  3042               	movlw	(low (main@templo| 0))& (0+255)
  4804  0269  0020               	movlb	0	; select bank0
  4805  026A  00BE               	movwf	??_main
  4806  026B  083E               	movf	??_main,w
  4807  026C  00A7               	movwf	EMC1001_Read@pData
  4808  026D  3002               	movlw	2
  4809  026E  3183  2368  3182   	fcall	_EMC1001_Read
  4810                           
  4811                           ;main.c: 47: templo = templo >> 6;
  4812  0271  0020               	movlb	0	; select bank0
  4813  0272  0842               	movf	main@templo,w
  4814  0273  00BE               	movwf	??_main
  4815  0274  3006               	movlw	6
  4816  0275                     u1825:	
  4817  0275  36BE               	lsrf	??_main,f
  4818  0276  0B89               	decfsz	9,f
  4819  0277  2A75               	goto	u1825
  4820  0278  083E               	movf	??_main,w
  4821  0279  00BF               	movwf	??_main+1
  4822  027A  083F               	movf	??_main+1,w
  4823  027B  00C2               	movwf	main@templo
  4824                           
  4825                           ;main.c: 48: if (temp < 0) templo = 3-templo;
  4826  027C  1FC1               	btfss	main@temp,7
  4827  027D  2A84               	goto	l2336
  4828  027E  0342               	decf	main@templo,w
  4829  027F  3AFF               	xorlw	255
  4830  0280  3E03               	addlw	3
  4831  0281  00BE               	movwf	??_main
  4832  0282  083E               	movf	??_main,w
  4833  0283  00C2               	movwf	main@templo
  4834  0284                     l2336:	
  4835                           
  4836                           ;main.c: 49: printf("%d.%d", temp, templo*25);
  4837  0284  3026               	movlw	low (STR_2| (0+32768))
  4838  0285  00AE               	movwf	printf@f
  4839  0286  3084               	movlw	high (STR_2| (0+32768))
  4840  0287  00AF               	movwf	printf@f+1
  4841  0288  0841               	movf	main@temp,w
  4842  0289  00B0               	movwf	?_printf+2
  4843  028A  01B1               	clrf	?_printf+3
  4844  028B  1BB0               	btfsc	?_printf+2,7
  4845  028C  03B1               	decf	?_printf+3,f
  4846  028D  0842               	movf	main@templo,w
  4847  028E  00BE               	movwf	??_main
  4848  028F  01BF               	clrf	??_main+1
  4849  0290  083E               	movf	??_main,w
  4850  0291  00A0               	movwf	___wmul@multiplier
  4851  0292  083F               	movf	??_main+1,w
  4852  0293  00A1               	movwf	___wmul@multiplier+1
  4853  0294  3019               	movlw	25
  4854  0295  00A2               	movwf	___wmul@multiplicand
  4855  0296  3000               	movlw	0
  4856  0297  00A3               	movwf	___wmul@multiplicand+1
  4857  0298  3184  2476  3182   	fcall	___wmul
  4858  029B  0020               	movlb	0	; select bank0
  4859  029C  0821               	movf	?___wmul+1,w
  4860  029D  00B3               	movwf	?_printf+5
  4861  029E  0820               	movf	?___wmul,w
  4862  029F  00B2               	movwf	?_printf+4
  4863  02A0  3181  216F  3182   	fcall	_printf
  4864  02A3  2ACC               	goto	L1
  4865  02A4                     l2340:	
  4866                           ;main.c: 52: }
  4867                           
  4868                           ;main.c: 50: }
  4869                           ;main.c: 51: TMR6_Stop();
  4870                           
  4871                           
  4872                           ;main.c: 53: else if (data != 0x00 && T6TMR == 0x00)
  4873  02A4  0020               	movlb	0	; select bank0
  4874  02A5  0840               	movf	main@data,w
  4875  02A6  1903               	btfsc	3,2
  4876  02A7  2ACF               	goto	l2358
  4877  02A8  0025               	movlb	5	; select bank5
  4878  02A9  0818               	movf	24,w	;volatile
  4879  02AA  1D03               	btfss	3,2
  4880  02AB  2ACF               	goto	l2358
  4881                           
  4882                           ;main.c: 54: {
  4883                           ;main.c: 55: TMR6_Start();
  4884  02AC  3185  256B  3182   	fcall	_TMR6_Start
  4885                           
  4886                           ;main.c: 56: printf("\n");
  4887  02AF  302C               	movlw	low (STR_1| (0+32768))
  4888  02B0  0020               	movlb	0	; select bank0
  4889  02B1  00AE               	movwf	printf@f
  4890  02B2  3084               	movlw	high (STR_1| (0+32768))
  4891  02B3  00AF               	movwf	printf@f+1
  4892  02B4  3181  216F  3182   	fcall	_printf
  4893                           
  4894                           ;main.c: 57: EUSART_Write(0x0D);
  4895  02B7  300D               	movlw	13
  4896  02B8  3185  2548  3182   	fcall	_EUSART_Write
  4897                           
  4898                           ;main.c: 58: printf("Unrecognized input : ");
  4899  02BB  3010               	movlw	low (STR_4| (0+32768))
  4900  02BC  0020               	movlb	0	; select bank0
  4901  02BD  00AE               	movwf	printf@f
  4902  02BE  3084               	movlw	high (STR_4| (0+32768))
  4903  02BF  00AF               	movwf	printf@f+1
  4904  02C0  3181  216F  3182   	fcall	_printf
  4905                           
  4906                           ;main.c: 59: EUSART_Write(data);
  4907  02C3  0020               	movlb	0	; select bank0
  4908  02C4  0840               	movf	main@data,w
  4909  02C5  3185  2548  3182   	fcall	_EUSART_Write
  4910                           
  4911                           ;main.c: 60: EUSART_Write(0x0D);
  4912  02C8  300D               	movlw	13
  4913  02C9  3185  2548  3182   	fcall	_EUSART_Write
  4914  02CC                     L1:	
  4915                           
  4916                           ;main.c: 61: TMR6_Stop();
  4917  02CC  3185  2567  3182   	fcall	_TMR6_Stop
  4918  02CF                     l2358:	
  4919                           ;main.c: 62: }
  4920                           ;main.c: 63: do { LATAbits.LATA2 = 0; } while(0);
  4921                           
  4922  02CF  0020               	movlb	0	; select bank0
  4923  02D0  1116               	bcf	22,2	;volatile
  4924  02D1  2A2C               	goto	l404
  4925  02D2                     __end_of_main:	
  4926                           
  4927                           	psect	text1
  4928  016F                     __ptext1:	
  4929 ;; *************** function _printf *****************
  4930 ;; Defined at:
  4931 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4934 ;;		 -> STR_4(22), STR_3(2), STR_2(6), STR_1(2), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  tmpval          4    0        struct .
  4937 ;;  val             2   27[BANK0 ] unsigned int 
  4938 ;;  cp              2    0        PTR const unsigned char 
  4939 ;;  len             2    0        unsigned int 
  4940 ;;  c               1   29[BANK0 ] char 
  4941 ;;  prec            1   26[BANK0 ] char 
  4942 ;;  flag            1   25[BANK0 ] unsigned char 
  4943 ;;  ap              1   24[BANK0 ] PTR void [1]
  4944 ;;		 -> ?_printf(2), 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2   14[BANK0 ] int 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:       16 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    5
  4961 ;; This function calls:
  4962 ;;		___lwdiv
  4963 ;;		___lwmod
  4964 ;;		_putch
  4965 ;; This function is called by:
  4966 ;;		_main
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           
  4971                           ;psect for function _printf
  4972  016F                     _printf:	
  4973                           
  4974                           ;doprnt.c: 466: va_list ap;
  4975                           ;doprnt.c: 499: signed char c;
  4976                           ;doprnt.c: 506: signed char prec;
  4977                           ;doprnt.c: 508: unsigned char flag;
  4978                           ;doprnt.c: 523: union {
  4979                           ;doprnt.c: 524: unsigned long vd;
  4980                           ;doprnt.c: 525: double integ;
  4981                           ;doprnt.c: 526: } tmpval;
  4982                           ;doprnt.c: 528: unsigned int val;
  4983                           ;doprnt.c: 529: unsigned len;
  4984                           ;doprnt.c: 530: const char * cp;
  4985                           ;doprnt.c: 533: *ap = __va_start();
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4989  016F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4990  0170  0020               	movlb	0	; select bank0
  4991  0171  00B4               	movwf	??_printf
  4992  0172  0834               	movf	??_printf,w
  4993  0173  00B8               	movwf	printf@ap
  4994  0174                     l2282:	
  4995                           ;doprnt.c: 536: while(c = *f++) {
  4996                           
  4997  0174  0020               	movlb	0	; select bank0
  4998  0175  082F               	movf	printf@f+1,w
  4999  0176  00B5               	movwf	??_printf+1
  5000  0177  082E               	movf	printf@f,w
  5001  0178  00B4               	movwf	??_printf
  5002  0179  0AAE               	incf	printf@f,f
  5003  017A  1903               	skipnz
  5004  017B  0AAF               	incf	printf@f+1,f
  5005  017C  0834               	movf	??_printf,w
  5006  017D  0084               	movwf	4
  5007  017E  0835               	movf	??_printf+1,w
  5008  017F  0085               	movwf	5
  5009  0180  0800               	movf	0,w	;code access
  5010  0181  00B6               	movwf	??_printf+2
  5011  0182  0836               	movf	??_printf+2,w
  5012  0183  00BD               	movwf	printf@c
  5013  0184  083D               	movf	printf@c,w
  5014  0185  1903               	btfsc	3,2
  5015  0186  0008               	return
  5016                           
  5017                           ;doprnt.c: 538: if(c != '%')
  5018  0187  3025               	movlw	37
  5019  0188  063D               	xorwf	printf@c,w
  5020  0189  1903               	btfsc	3,2
  5021  018A  2990               	goto	l2242
  5022                           
  5023                           ;doprnt.c: 540: {
  5024                           ;doprnt.c: 541: (putch(c) );
  5025  018B  083D               	movf	printf@c,w
  5026  018C  3185  2561  3181   	fcall	_putch
  5027                           
  5028                           ;doprnt.c: 542: continue;
  5029  018F  2974               	goto	l2282
  5030  0190                     l2242:	
  5031                           
  5032                           ;doprnt.c: 543: }
  5033                           ;doprnt.c: 548: flag = 0;
  5034  0190  0020               	movlb	0	; select bank0
  5035  0191  01B9               	clrf	printf@flag
  5036                           
  5037                           ;doprnt.c: 822: }
  5038                           
  5039                           ;doprnt.c: 813: continue;
  5040                           
  5041                           ;doprnt.c: 802: default:
  5042                           
  5043                           ;doprnt.c: 698: case 'i':
  5044                           ;doprnt.c: 699: break;
  5045                           
  5046                           ;doprnt.c: 697: case 'd':
  5047                           
  5048                           ;doprnt.c: 638: goto alldone;
  5049                           
  5050                           ;doprnt.c: 637: case 0:
  5051                           
  5052                           ;doprnt.c: 635: switch(c = *f++) {
  5053  0192  082F               	movf	printf@f+1,w
  5054  0193  00B5               	movwf	??_printf+1
  5055  0194  082E               	movf	printf@f,w
  5056  0195  00B4               	movwf	??_printf
  5057  0196  0AAE               	incf	printf@f,f
  5058  0197  1903               	skipnz
  5059  0198  0AAF               	incf	printf@f+1,f
  5060  0199  0834               	movf	??_printf,w
  5061  019A  0084               	movwf	4
  5062  019B  0835               	movf	??_printf+1,w
  5063  019C  0085               	movwf	5
  5064  019D  0800               	movf	0,w	;code access
  5065  019E  00BD               	movwf	printf@c
  5066                           
  5067                           ; Switch size 1, requested type "space"
  5068                           ; Number of cases is 3, Range of values is 0 to 105
  5069                           ; switch strategies available:
  5070                           ; Name         Instructions Cycles
  5071                           ; simple_byte           10     6 (average)
  5072                           ; direct_byte          218     6 (fixed)
  5073                           ; jumptable            260     6 (fixed)
  5074                           ;	Chosen strategy is simple_byte
  5075  019F  3A00               	xorlw	0	; case 0
  5076  01A0  1903               	skipnz
  5077  01A1  2A26               	goto	l520
  5078  01A2  3A64               	xorlw	100	; case 100
  5079  01A3  1903               	skipnz
  5080  01A4  29A9               	goto	l2248
  5081  01A5  3A0D               	xorlw	13	; case 105
  5082  01A6  1903               	skipnz
  5083  01A7  29A9               	goto	l2248
  5084  01A8  2974               	goto	l2282
  5085  01A9                     l2248:	
  5086                           
  5087                           ;doprnt.c: 1253: {
  5088                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5089  01A9  0838               	movf	printf@ap,w
  5090  01AA  0086               	movwf	6
  5091  01AB  0187               	clrf	7
  5092  01AC  3F40               	moviw [0]fsr1
  5093  01AD  00BB               	movwf	printf@val
  5094  01AE  3F41               	moviw [1]fsr1
  5095  01AF  00BC               	movwf	printf@val+1
  5096  01B0  3002               	movlw	2
  5097  01B1  00B4               	movwf	??_printf
  5098  01B2  0834               	movf	??_printf,w
  5099  01B3  07B8               	addwf	printf@ap,f
  5100                           
  5101                           ;doprnt.c: 1261: if((int)val < 0) {
  5102  01B4  1FBC               	btfss	printf@val+1,7
  5103  01B5  29BF               	goto	l2258
  5104                           
  5105                           ;doprnt.c: 1262: flag |= 0x03;
  5106  01B6  3003               	movlw	3
  5107  01B7  00B4               	movwf	??_printf
  5108  01B8  0834               	movf	??_printf,w
  5109  01B9  04B9               	iorwf	printf@flag,f
  5110                           
  5111                           ;doprnt.c: 1263: val = -val;
  5112  01BA  09BB               	comf	printf@val,f
  5113  01BB  09BC               	comf	printf@val+1,f
  5114  01BC  0ABB               	incf	printf@val,f
  5115  01BD  1903               	skipnz
  5116  01BE  0ABC               	incf	printf@val+1,f
  5117  01BF                     l2258:	
  5118                           
  5119                           ;doprnt.c: 1264: }
  5120                           ;doprnt.c: 1266: }
  5121                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5122  01BF  01BD               	clrf	printf@c
  5123  01C0  0ABD               	incf	printf@c,f
  5124  01C1  3005               	movlw	5
  5125  01C2  063D               	xorwf	printf@c,w
  5126  01C3  1903               	btfsc	3,2
  5127  01C4  29E4               	goto	l2270
  5128  01C5                     l2264:	
  5129                           
  5130                           ;doprnt.c: 1306: if(val < dpowers[c])
  5131  01C5  083D               	movf	printf@c,w
  5132  01C6  00B4               	movwf	??_printf
  5133  01C7  01B5               	clrf	??_printf+1
  5134  01C8  35B4               	lslf	??_printf,f
  5135  01C9  0DB5               	rlf	??_printf+1,f
  5136  01CA  3006               	movlw	low (_dpowers| (0+32768))
  5137  01CB  0734               	addwf	??_printf,w
  5138  01CC  0084               	movwf	4
  5139  01CD  3084               	movlw	high (_dpowers| (0+32768))
  5140  01CE  3D35               	addwfc	??_printf+1,w
  5141  01CF  0085               	movwf	5
  5142  01D0  3F00               	moviw [0]fsr0
  5143  01D1  00B6               	movwf	??_printf+2
  5144  01D2  3F01               	moviw [1]fsr0
  5145  01D3  00B7               	movwf	??_printf+3
  5146  01D4  0837               	movf	??_printf+3,w
  5147  01D5  023C               	subwf	printf@val+1,w
  5148  01D6  1D03               	skipz
  5149  01D7  29DA               	goto	u1675
  5150  01D8  0836               	movf	??_printf+2,w
  5151  01D9  023B               	subwf	printf@val,w
  5152  01DA                     u1675:	
  5153  01DA  1C03               	btfss	3,0
  5154  01DB  29E4               	goto	l2270
  5155                           
  5156                           ;doprnt.c: 1307: break;
  5157  01DC  3001               	movlw	1
  5158  01DD  00B4               	movwf	??_printf
  5159  01DE  0834               	movf	??_printf,w
  5160  01DF  07BD               	addwf	printf@c,f
  5161  01E0  3005               	movlw	5
  5162  01E1  063D               	xorwf	printf@c,w
  5163  01E2  1D03               	btfss	3,2
  5164  01E3  29C5               	goto	l2264
  5165  01E4                     l2270:	
  5166                           
  5167                           ;doprnt.c: 1422: {
  5168                           ;doprnt.c: 1438: if(flag & 0x03)
  5169  01E4  0839               	movf	printf@flag,w
  5170  01E5  3903               	andlw	3
  5171  01E6  1903               	btfsc	3,2
  5172  01E7  29EC               	goto	l2274
  5173                           
  5174                           ;doprnt.c: 1439: (putch('-') );
  5175  01E8  302D               	movlw	45
  5176  01E9  3185  2561  3181   	fcall	_putch
  5177  01EC                     l2274:	
  5178                           
  5179                           ;doprnt.c: 1469: }
  5180                           ;doprnt.c: 1472: prec = c;
  5181  01EC  0020               	movlb	0	; select bank0
  5182  01ED  083D               	movf	printf@c,w
  5183  01EE  00B4               	movwf	??_printf
  5184  01EF  0834               	movf	??_printf,w
  5185  01F0  00BA               	movwf	printf@prec
  5186  01F1                     l2280:	
  5187                           ;doprnt.c: 1474: while(prec--) {
  5188                           
  5189  01F1  30FF               	movlw	255
  5190  01F2  0020               	movlb	0	; select bank0
  5191  01F3  00B4               	movwf	??_printf
  5192  01F4  0834               	movf	??_printf,w
  5193  01F5  07BA               	addwf	printf@prec,f
  5194  01F6  0A3A               	incf	printf@prec,w
  5195  01F7  1903               	btfsc	3,2
  5196  01F8  2974               	goto	l2282
  5197                           
  5198                           ;doprnt.c: 1478: {
  5199                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5200  01F9  300A               	movlw	10
  5201  01FA  00A8               	movwf	___lwmod@divisor
  5202  01FB  3000               	movlw	0
  5203  01FC  00A9               	movwf	___lwmod@divisor+1
  5204  01FD  083A               	movf	printf@prec,w
  5205  01FE  00B4               	movwf	??_printf
  5206  01FF  01B5               	clrf	??_printf+1
  5207  0200  35B4               	lslf	??_printf,f
  5208  0201  0DB5               	rlf	??_printf+1,f
  5209  0202  3006               	movlw	low (_dpowers| (0+32768))
  5210  0203  0734               	addwf	??_printf,w
  5211  0204  0084               	movwf	4
  5212  0205  3084               	movlw	high (_dpowers| (0+32768))
  5213  0206  3D35               	addwfc	??_printf+1,w
  5214  0207  0085               	movwf	5
  5215  0208  3F00               	moviw [0]fsr0
  5216  0209  00A0               	movwf	___lwdiv@divisor
  5217  020A  3F01               	moviw [1]fsr0
  5218  020B  00A1               	movwf	___lwdiv@divisor+1
  5219  020C  083C               	movf	printf@val+1,w
  5220  020D  00A3               	movwf	___lwdiv@dividend+1
  5221  020E  083B               	movf	printf@val,w
  5222  020F  00A2               	movwf	___lwdiv@dividend
  5223  0210  3183  23A4  3181   	fcall	___lwdiv
  5224  0213  0020               	movlb	0	; select bank0
  5225  0214  0821               	movf	?___lwdiv+1,w
  5226  0215  00AB               	movwf	___lwmod@dividend+1
  5227  0216  0820               	movf	?___lwdiv,w
  5228  0217  00AA               	movwf	___lwmod@dividend
  5229  0218  3183  23D9  3181   	fcall	___lwmod
  5230  021B  0020               	movlb	0	; select bank0
  5231  021C  0828               	movf	?___lwmod,w
  5232  021D  3E30               	addlw	48
  5233  021E  00B6               	movwf	??_printf+2
  5234  021F  0836               	movf	??_printf+2,w
  5235  0220  00BD               	movwf	printf@c
  5236                           
  5237                           ;doprnt.c: 1523: }
  5238                           ;doprnt.c: 1524: (putch(c) );
  5239  0221  083D               	movf	printf@c,w
  5240  0222  3185  2561  3181   	fcall	_putch
  5241  0225  29F1               	goto	l2280
  5242  0226                     l520:	
  5243                           ;doprnt.c: 1540: return 0;
  5244                           ;	Return value of _printf is never used
  5245                           
  5246                           ;doprnt.c: 1525: }
  5247                           ;doprnt.c: 1533: }
  5248                           ;doprnt.c: 1535: alldone:
  5249                           
  5250  0226  0008               	return
  5251  0227                     __end_of_printf:	
  5252                           
  5253                           	psect	text2
  5254  0561                     __ptext2:	
  5255 ;; *************** function _putch *****************
  5256 ;; Defined at:
  5257 ;;		line 111 in file "mcc_generated_files/eusart.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  txData          1    wreg     unsigned char 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  txData          1    1[BANK0 ] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, pclath, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;Total ram usage:        1 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:    4
  5278 ;; This function calls:
  5279 ;;		_EUSART_Write
  5280 ;; This function is called by:
  5281 ;;		_printf
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _putch
  5287  0561                     _putch:	
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5291                           ;putch@txData stored from wreg
  5292  0561  0020               	movlb	0	; select bank0
  5293  0562  00A1               	movwf	putch@txData
  5294                           
  5295                           ;eusart.c: 113: EUSART_Write(txData);
  5296  0563  0821               	movf	putch@txData,w
  5297  0564  3185  2548         	fcall	_EUSART_Write
  5298  0566  0008               	return
  5299  0567                     __end_of_putch:	
  5300                           
  5301                           	psect	text3
  5302  0548                     __ptext3:	
  5303 ;; *************** function _EUSART_Write *****************
  5304 ;; Defined at:
  5305 ;;		line 97 in file "mcc_generated_files/eusart.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  txData          1    wreg     unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  txData          1    0[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:        1 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    3
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_putch
  5330 ;;		_main
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _EUSART_Write
  5336  0548                     _EUSART_Write:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _EUSART_Write: [wreg]
  5340                           ;EUSART_Write@txData stored from wreg
  5341  0548  0020               	movlb	0	; select bank0
  5342  0549  00A0               	movwf	EUSART_Write@txData
  5343  054A                     l35:	
  5344                           ;eusart.c: 100: {
  5345                           
  5346                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5347                           
  5348  054A  002E               	movlb	14	; select bank14
  5349  054B  1E0F               	btfss	15,4	;volatile
  5350  054C  2D4A               	goto	l35
  5351                           
  5352                           ;eusart.c: 101: }
  5353                           ;eusart.c: 103: TX1REG = txData;
  5354  054D  0020               	movlb	0	; select bank0
  5355  054E  0820               	movf	EUSART_Write@txData,w
  5356  054F  0022               	movlb	2	; select bank2
  5357  0550  009A               	movwf	26	;volatile
  5358  0551  0008               	return
  5359  0552                     __end_of_EUSART_Write:	
  5360                           
  5361                           	psect	text4
  5362  03D9                     __ptext4:	
  5363 ;; *************** function ___lwmod *****************
  5364 ;; Defined at:
  5365 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  divisor         2    8[BANK0 ] unsigned int 
  5368 ;;  dividend        2   10[BANK0 ] unsigned int 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  counter         1   13[BANK0 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2    8[BANK0 ] unsigned int 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;Total ram usage:        6 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    3
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_printf
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function ___lwmod
  5396  03D9                     ___lwmod:	
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5400  03D9  0020               	movlb	0	; select bank0
  5401  03DA  0828               	movf	___lwmod@divisor,w
  5402  03DB  0429               	iorwf	___lwmod@divisor+1,w
  5403  03DC  1903               	btfsc	3,2
  5404  03DD  2C01               	goto	l1770
  5405  03DE  01AD               	clrf	___lwmod@counter
  5406  03DF  0AAD               	incf	___lwmod@counter,f
  5407  03E0                     l1760:	
  5408  03E0  1BA9               	btfsc	___lwmod@divisor+1,7
  5409  03E1  2BEC               	goto	l1762
  5410  03E2  3001               	movlw	1
  5411  03E3                     u975:	
  5412  03E3  35A8               	lslf	___lwmod@divisor,f
  5413  03E4  0DA9               	rlf	___lwmod@divisor+1,f
  5414  03E5  0B89               	decfsz	9,f
  5415  03E6  2BE3               	goto	u975
  5416  03E7  3001               	movlw	1
  5417  03E8  00AC               	movwf	??___lwmod
  5418  03E9  082C               	movf	??___lwmod,w
  5419  03EA  07AD               	addwf	___lwmod@counter,f
  5420  03EB  2BE0               	goto	l1760
  5421  03EC                     l1762:	
  5422  03EC  0829               	movf	___lwmod@divisor+1,w
  5423  03ED  022B               	subwf	___lwmod@dividend+1,w
  5424  03EE  1D03               	skipz
  5425  03EF  2BF2               	goto	u995
  5426  03F0  0828               	movf	___lwmod@divisor,w
  5427  03F1  022A               	subwf	___lwmod@dividend,w
  5428  03F2                     u995:	
  5429  03F2  1C03               	skipc
  5430  03F3  2BF8               	goto	l1766
  5431  03F4  0828               	movf	___lwmod@divisor,w
  5432  03F5  02AA               	subwf	___lwmod@dividend,f
  5433  03F6  0829               	movf	___lwmod@divisor+1,w
  5434  03F7  3BAB               	subwfb	___lwmod@dividend+1,f
  5435  03F8                     l1766:	
  5436  03F8  3001               	movlw	1
  5437  03F9                     u1005:	
  5438  03F9  36A9               	lsrf	___lwmod@divisor+1,f
  5439  03FA  0CA8               	rrf	___lwmod@divisor,f
  5440  03FB  0B89               	decfsz	9,f
  5441  03FC  2BF9               	goto	u1005
  5442  03FD  3001               	movlw	1
  5443  03FE  02AD               	subwf	___lwmod@counter,f
  5444  03FF  1D03               	btfss	3,2
  5445  0400  2BEC               	goto	l1762
  5446  0401                     l1770:	
  5447  0401  082B               	movf	___lwmod@dividend+1,w
  5448  0402  00A9               	movwf	?___lwmod+1
  5449  0403  082A               	movf	___lwmod@dividend,w
  5450  0404  00A8               	movwf	?___lwmod
  5451  0405  0008               	return
  5452  0406                     __end_of___lwmod:	
  5453                           
  5454                           	psect	text5
  5455  03A4                     __ptext5:	
  5456 ;; *************** function ___lwdiv *****************
  5457 ;; Defined at:
  5458 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  divisor         2    0[BANK0 ] unsigned int 
  5461 ;;  dividend        2    2[BANK0 ] unsigned int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  quotient        2    5[BANK0 ] unsigned int 
  5464 ;;  counter         1    7[BANK0 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  2    0[BANK0 ] unsigned int 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:        8 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    3
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_printf
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function ___lwdiv
  5490  03A4                     ___lwdiv:	
  5491                           
  5492                           ;incstack = 0
  5493                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5494  03A4  0020               	movlb	0	; select bank0
  5495  03A5  01A5               	clrf	___lwdiv@quotient
  5496  03A6  01A6               	clrf	___lwdiv@quotient+1
  5497  03A7  0820               	movf	___lwdiv@divisor,w
  5498  03A8  0421               	iorwf	___lwdiv@divisor+1,w
  5499  03A9  1903               	btfsc	3,2
  5500  03AA  2BD4               	goto	l1748
  5501  03AB  01A7               	clrf	___lwdiv@counter
  5502  03AC  0AA7               	incf	___lwdiv@counter,f
  5503  03AD                     l1736:	
  5504  03AD  1BA1               	btfsc	___lwdiv@divisor+1,7
  5505  03AE  2BB9               	goto	l1738
  5506  03AF  3001               	movlw	1
  5507  03B0                     u905:	
  5508  03B0  35A0               	lslf	___lwdiv@divisor,f
  5509  03B1  0DA1               	rlf	___lwdiv@divisor+1,f
  5510  03B2  0B89               	decfsz	9,f
  5511  03B3  2BB0               	goto	u905
  5512  03B4  3001               	movlw	1
  5513  03B5  00A4               	movwf	??___lwdiv
  5514  03B6  0824               	movf	??___lwdiv,w
  5515  03B7  07A7               	addwf	___lwdiv@counter,f
  5516  03B8  2BAD               	goto	l1736
  5517  03B9                     l1738:	
  5518  03B9  3001               	movlw	1
  5519  03BA                     u925:	
  5520  03BA  35A5               	lslf	___lwdiv@quotient,f
  5521  03BB  0DA6               	rlf	___lwdiv@quotient+1,f
  5522  03BC  0B89               	decfsz	9,f
  5523  03BD  2BBA               	goto	u925
  5524  03BE  0821               	movf	___lwdiv@divisor+1,w
  5525  03BF  0223               	subwf	___lwdiv@dividend+1,w
  5526  03C0  1D03               	skipz
  5527  03C1  2BC4               	goto	u935
  5528  03C2  0820               	movf	___lwdiv@divisor,w
  5529  03C3  0222               	subwf	___lwdiv@dividend,w
  5530  03C4                     u935:	
  5531  03C4  1C03               	skipc
  5532  03C5  2BCB               	goto	l1744
  5533  03C6  0820               	movf	___lwdiv@divisor,w
  5534  03C7  02A2               	subwf	___lwdiv@dividend,f
  5535  03C8  0821               	movf	___lwdiv@divisor+1,w
  5536  03C9  3BA3               	subwfb	___lwdiv@dividend+1,f
  5537  03CA  1425               	bsf	___lwdiv@quotient,0
  5538  03CB                     l1744:	
  5539  03CB  3001               	movlw	1
  5540  03CC                     u945:	
  5541  03CC  36A1               	lsrf	___lwdiv@divisor+1,f
  5542  03CD  0CA0               	rrf	___lwdiv@divisor,f
  5543  03CE  0B89               	decfsz	9,f
  5544  03CF  2BCC               	goto	u945
  5545  03D0  3001               	movlw	1
  5546  03D1  02A7               	subwf	___lwdiv@counter,f
  5547  03D2  1D03               	btfss	3,2
  5548  03D3  2BB9               	goto	l1738
  5549  03D4                     l1748:	
  5550  03D4  0826               	movf	___lwdiv@quotient+1,w
  5551  03D5  00A1               	movwf	?___lwdiv+1
  5552  03D6  0825               	movf	___lwdiv@quotient,w
  5553  03D7  00A0               	movwf	?___lwdiv
  5554  03D8  0008               	return
  5555  03D9                     __end_of___lwdiv:	
  5556                           
  5557                           	psect	text6
  5558  0476                     __ptext6:	
  5559 ;; *************** function ___wmul *****************
  5560 ;; Defined at:
  5561 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5564 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  product         2    4[BANK0 ] unsigned int 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    0[BANK0 ] unsigned int 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5576 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;Total ram usage:        6 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    3
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_main
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function ___wmul
  5592  0476                     ___wmul:	
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5596  0476  0020               	movlb	0	; select bank0
  5597  0477  01A4               	clrf	___wmul@product
  5598  0478  01A5               	clrf	___wmul@product+1
  5599  0479                     l2286:	
  5600  0479  1C20               	btfss	___wmul@multiplier,0
  5601  047A  2C7F               	goto	l602
  5602  047B  0822               	movf	___wmul@multiplicand,w
  5603  047C  07A4               	addwf	___wmul@product,f
  5604  047D  0823               	movf	___wmul@multiplicand+1,w
  5605  047E  3DA5               	addwfc	___wmul@product+1,f
  5606  047F                     l602:	
  5607  047F  3001               	movlw	1
  5608  0480                     u1735:	
  5609  0480  35A2               	lslf	___wmul@multiplicand,f
  5610  0481  0DA3               	rlf	___wmul@multiplicand+1,f
  5611  0482  0B89               	decfsz	9,f
  5612  0483  2C80               	goto	u1735
  5613  0484  3001               	movlw	1
  5614  0485                     u1745:	
  5615  0485  36A1               	lsrf	___wmul@multiplier+1,f
  5616  0486  0CA0               	rrf	___wmul@multiplier,f
  5617  0487  0B89               	decfsz	9,f
  5618  0488  2C85               	goto	u1745
  5619  0489  0820               	movf	___wmul@multiplier,w
  5620  048A  0421               	iorwf	___wmul@multiplier+1,w
  5621  048B  1D03               	btfss	3,2
  5622  048C  2C79               	goto	l2286
  5623  048D  0825               	movf	___wmul@product+1,w
  5624  048E  00A1               	movwf	?___wmul+1
  5625  048F  0824               	movf	___wmul@product,w
  5626  0490  00A0               	movwf	?___wmul
  5627  0491  0008               	return
  5628  0492                     __end_of___wmul:	
  5629                           
  5630                           	psect	text7
  5631  0567                     __ptext7:	
  5632 ;; *************** function _TMR6_Stop *****************
  5633 ;; Defined at:
  5634 ;;		line 115 in file "mcc_generated_files/tmr6.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		status,2
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    3
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_main
  5659 ;;		_TMR6_StopTimer
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _TMR6_Stop
  5665  0567                     _TMR6_Stop:	
  5666                           
  5667                           ;tmr6.c: 118: T6CONbits.TMR6ON = 0;
  5668                           
  5669                           ;incstack = 0
  5670                           ; Regs used in _TMR6_Stop: [status,2]
  5671  0567  0025               	movlb	5	; select bank5
  5672  0568  139A               	bcf	26,7	;volatile
  5673                           
  5674                           ;tmr6.c: 119: T6TMR = 0x00;
  5675  0569  0198               	clrf	24	;volatile
  5676  056A  0008               	return
  5677  056B                     __end_of_TMR6_Stop:	
  5678                           
  5679                           	psect	text8
  5680  056B                     __ptext8:	
  5681 ;; *************** function _TMR6_Start *****************
  5682 ;; Defined at:
  5683 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		None
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    3
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_main
  5708 ;;		_TMR6_StartTimer
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           
  5713                           ;psect for function _TMR6_Start
  5714  056B                     _TMR6_Start:	
  5715                           
  5716                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5717                           
  5718                           ;incstack = 0
  5719                           ; Regs used in _TMR6_Start: []
  5720  056B  0025               	movlb	5	; select bank5
  5721  056C  179A               	bsf	26,7	;volatile
  5722  056D  0008               	return
  5723  056E                     __end_of_TMR6_Start:	
  5724                           
  5725                           	psect	text9
  5726  0513                     __ptext9:	
  5727 ;; *************** function _TMR4_HasOverflowOccured *****************
  5728 ;; Defined at:
  5729 ;;		line 161 in file "mcc_generated_files/tmr4.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  status          1    0[BANK0 ] unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      unsigned char 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;Total ram usage:        1 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    3
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _TMR4_HasOverflowOccured
  5759  0513                     _TMR4_HasOverflowOccured:	
  5760                           
  5761                           ;tmr4.c: 164: bool status = PIR4bits.TMR4IF;
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _TMR4_HasOverflowOccured: [wreg+status,2+status,0]
  5765  0513  3000               	movlw	0
  5766  0514  002E               	movlb	14	; select bank14
  5767  0515  1990               	btfsc	16,3	;volatile
  5768  0516  3001               	movlw	1
  5769  0517  0020               	movlb	0	; select bank0
  5770  0518  00A0               	movwf	TMR4_HasOverflowOccured@status
  5771                           
  5772                           ;tmr4.c: 165: if(status)
  5773  0519  0820               	movf	TMR4_HasOverflowOccured@status,w
  5774  051A  1903               	btfsc	3,2
  5775  051B  2D1E               	goto	l2232
  5776                           
  5777                           ;tmr4.c: 166: {
  5778                           ;tmr4.c: 168: PIR4bits.TMR4IF = 0;
  5779  051C  002E               	movlb	14	; select bank14
  5780  051D  1190               	bcf	16,3	;volatile
  5781  051E                     l2232:	
  5782                           
  5783                           ;tmr4.c: 169: }
  5784                           ;tmr4.c: 170: return status;
  5785  051E  0020               	movlb	0	; select bank0
  5786  051F  0820               	movf	TMR4_HasOverflowOccured@status,w
  5787  0520  0008               	return
  5788  0521                     __end_of_TMR4_HasOverflowOccured:	
  5789                           
  5790                           	psect	text10
  5791  04EF                     __ptext10:	
  5792 ;; *************** function _SYSTEM_Initialize *****************
  5793 ;; Defined at:
  5794 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    5
  5815 ;; This function calls:
  5816 ;;		_EUSART_Initialize
  5817 ;;		_I2C2_Initialize
  5818 ;;		_OSCILLATOR_Initialize
  5819 ;;		_PIN_MANAGER_Initialize
  5820 ;;		_TMR4_Initialize
  5821 ;;		_TMR6_Initialize
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function _SYSTEM_Initialize
  5829  04EF                     _SYSTEM_Initialize:	
  5830                           
  5831                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5835  04EF  3182  22D2  3184   	fcall	_PIN_MANAGER_Initialize
  5836                           
  5837                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5838  04F2  3185  2552  3184   	fcall	_OSCILLATOR_Initialize
  5839                           
  5840                           ;mcc.c: 87: I2C2_Initialize();
  5841  04F5  3184  2492  3184   	fcall	_I2C2_Initialize
  5842                           
  5843                           ;mcc.c: 88: TMR4_Initialize();
  5844  04F8  3185  2521  3184   	fcall	_TMR4_Initialize
  5845                           
  5846                           ;mcc.c: 89: TMR6_Initialize();
  5847  04FB  3185  252F  3184   	fcall	_TMR6_Initialize
  5848                           
  5849                           ;mcc.c: 90: EUSART_Initialize();
  5850  04FE  3185  253C         	fcall	_EUSART_Initialize
  5851  0500  0008               	return
  5852  0501                     __end_of_SYSTEM_Initialize:	
  5853                           
  5854                           	psect	text11
  5855  052F                     __ptext11:	
  5856 ;; *************** function _TMR6_Initialize *****************
  5857 ;; Defined at:
  5858 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    3
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_SYSTEM_Initialize
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _TMR6_Initialize
  5888  052F                     _TMR6_Initialize:	
  5889                           
  5890                           ;tmr6.c: 68: T6CON = 0x79;
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  5894  052F  3079               	movlw	121
  5895  0530  0025               	movlb	5	; select bank5
  5896  0531  009A               	movwf	26	;volatile
  5897                           
  5898                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5899  0532  3004               	movlw	4
  5900  0533  009C               	movwf	28	;volatile
  5901                           
  5902                           ;tmr6.c: 74: T6HLT = 0x00;
  5903  0534  019B               	clrf	27	;volatile
  5904                           
  5905                           ;tmr6.c: 77: T6RST = 0x00;
  5906  0535  019D               	clrf	29	;volatile
  5907                           
  5908                           ;tmr6.c: 80: T6PR = 0x2F;
  5909  0536  302F               	movlw	47
  5910  0537  0099               	movwf	25	;volatile
  5911                           
  5912                           ;tmr6.c: 83: T6TMR = 0x00;
  5913  0538  0198               	clrf	24	;volatile
  5914                           
  5915                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5916  0539  002E               	movlb	14	; select bank14
  5917  053A  1290               	bcf	16,5	;volatile
  5918  053B  0008               	return
  5919  053C                     __end_of_TMR6_Initialize:	
  5920                           
  5921                           	psect	text12
  5922  0521                     __ptext12:	
  5923 ;; *************** function _TMR4_Initialize *****************
  5924 ;; Defined at:
  5925 ;;		line 63 in file "mcc_generated_files/tmr4.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, pclath, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    4
  5946 ;; This function calls:
  5947 ;;		_TMR4_Start
  5948 ;; This function is called by:
  5949 ;;		_SYSTEM_Initialize
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           
  5954                           ;psect for function _TMR4_Initialize
  5955  0521                     _TMR4_Initialize:	
  5956                           
  5957                           ;tmr4.c: 68: T4CON = 0x00;
  5958                           
  5959                           ;incstack = 0
  5960                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5961  0521  0025               	movlb	5	; select bank5
  5962  0522  0194               	clrf	20	;volatile
  5963                           
  5964                           ;tmr4.c: 71: T4CLKCON = 0x04;
  5965  0523  3004               	movlw	4
  5966  0524  0096               	movwf	22	;volatile
  5967                           
  5968                           ;tmr4.c: 74: T4HLT = 0x00;
  5969  0525  0195               	clrf	21	;volatile
  5970                           
  5971                           ;tmr4.c: 77: T4RST = 0x00;
  5972  0526  0197               	clrf	23	;volatile
  5973                           
  5974                           ;tmr4.c: 80: T4PR = 0xFF;
  5975  0527  30FF               	movlw	255
  5976  0528  0093               	movwf	19	;volatile
  5977                           
  5978                           ;tmr4.c: 83: T4TMR = 0x00;
  5979  0529  0192               	clrf	18	;volatile
  5980                           
  5981                           ;tmr4.c: 86: PIR4bits.TMR4IF = 0;
  5982  052A  002E               	movlb	14	; select bank14
  5983  052B  1190               	bcf	16,3	;volatile
  5984                           
  5985                           ;tmr4.c: 89: TMR4_Start();
  5986  052C  3185  256E         	fcall	_TMR4_Start
  5987  052E  0008               	return
  5988  052F                     __end_of_TMR4_Initialize:	
  5989                           
  5990                           	psect	text13
  5991  056E                     __ptext13:	
  5992 ;; *************** function _TMR4_Start *****************
  5993 ;; Defined at:
  5994 ;;		line 104 in file "mcc_generated_files/tmr4.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		None
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    3
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_TMR4_Initialize
  6019 ;;		_TMR4_StartTimer
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _TMR4_Start
  6025  056E                     _TMR4_Start:	
  6026                           
  6027                           ;tmr4.c: 107: T4CONbits.TMR4ON = 1;
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _TMR4_Start: []
  6031  056E  0025               	movlb	5	; select bank5
  6032  056F  1794               	bsf	20,7	;volatile
  6033  0570  0008               	return
  6034  0571                     __end_of_TMR4_Start:	
  6035                           
  6036                           	psect	text14
  6037  02D2                     __ptext14:	
  6038 ;; *************** function _PIN_MANAGER_Initialize *****************
  6039 ;; Defined at:
  6040 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  state           1    0[BANK0 ] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        1 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    3
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_SYSTEM_Initialize
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _PIN_MANAGER_Initialize
  6070  02D2                     _PIN_MANAGER_Initialize:	
  6071                           
  6072                           ;pin_manager.c: 56: LATA = 0x00;
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  6076  02D2  0020               	movlb	0	; select bank0
  6077  02D3  0196               	clrf	22	;volatile
  6078                           
  6079                           ;pin_manager.c: 57: LATB = 0x00;
  6080  02D4  0197               	clrf	23	;volatile
  6081                           
  6082                           ;pin_manager.c: 58: LATC = 0x00;
  6083  02D5  0198               	clrf	24	;volatile
  6084                           
  6085                           ;pin_manager.c: 63: TRISA = 0xF0;
  6086  02D6  30F0               	movlw	240
  6087  02D7  0091               	movwf	17	;volatile
  6088                           
  6089                           ;pin_manager.c: 64: TRISB = 0xFF;
  6090  02D8  30FF               	movlw	255
  6091  02D9  0092               	movwf	18	;volatile
  6092                           
  6093                           ;pin_manager.c: 65: TRISC = 0xBE;
  6094  02DA  30BE               	movlw	190
  6095  02DB  0093               	movwf	19	;volatile
  6096                           
  6097                           ;pin_manager.c: 70: ANSELC = 0xC5;
  6098  02DC  30C5               	movlw	197
  6099  02DD  003E               	movlb	30	; select bank30
  6100  02DE  00CE               	movwf	78	;volatile
  6101                           
  6102                           ;pin_manager.c: 71: ANSELB = 0x7F;
  6103  02DF  307F               	movlw	127
  6104  02E0  00C3               	movwf	67	;volatile
  6105                           
  6106                           ;pin_manager.c: 72: ANSELA = 0xD0;
  6107  02E1  30D0               	movlw	208
  6108  02E2  00B8               	movwf	56	;volatile
  6109                           
  6110                           ;pin_manager.c: 77: WPUE = 0x00;
  6111  02E3  01E5               	clrf	101	;volatile
  6112                           
  6113                           ;pin_manager.c: 78: WPUB = 0x00;
  6114  02E4  01C4               	clrf	68	;volatile
  6115                           
  6116                           ;pin_manager.c: 79: WPUA = 0x00;
  6117  02E5  01B9               	clrf	57	;volatile
  6118                           
  6119                           ;pin_manager.c: 80: WPUC = 0x00;
  6120  02E6  01CF               	clrf	79	;volatile
  6121                           
  6122                           ;pin_manager.c: 85: ODCONA = 0x00;
  6123  02E7  01BA               	clrf	58	;volatile
  6124                           
  6125                           ;pin_manager.c: 86: ODCONB = 0x00;
  6126  02E8  01C5               	clrf	69	;volatile
  6127                           
  6128                           ;pin_manager.c: 87: ODCONC = 0x00;
  6129  02E9  01D0               	clrf	80	;volatile
  6130                           
  6131                           ;pin_manager.c: 94: bool state = GIE;
  6132  02EA  3000               	movlw	0
  6133  02EB  1B8B               	btfsc	11,7	;volatile
  6134  02EC  3001               	movlw	1
  6135  02ED  0020               	movlb	0	; select bank0
  6136  02EE  00A0               	movwf	PIN_MANAGER_Initialize@state
  6137                           
  6138                           ;pin_manager.c: 95: GIE = 0;
  6139  02EF  138B               	bcf	11,7	;volatile
  6140                           
  6141                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  6142  02F0  3055               	movlw	85
  6143  02F1  003D               	movlb	29	; select bank29
  6144  02F2  008F               	movwf	15	;volatile
  6145                           
  6146                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  6147  02F3  30AA               	movlw	170
  6148  02F4  008F               	movwf	15	;volatile
  6149                           
  6150                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  6151  02F5  100F               	bcf	15,0	;volatile
  6152                           
  6153                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  6154  02F6  081E               	movf	30,w	;volatile
  6155  02F7  39E0               	andlw	-32
  6156  02F8  380F               	iorlw	15
  6157  02F9  009E               	movwf	30	;volatile
  6158                           
  6159                           ;pin_manager.c: 101: T4AINPPSbits.T4AINPPS = 0x15;
  6160  02FA  081D               	movf	29,w	;volatile
  6161  02FB  39E0               	andlw	-32
  6162  02FC  3815               	iorlw	21
  6163  02FD  009D               	movwf	29	;volatile
  6164                           
  6165                           ;pin_manager.c: 102: RC0PPS = 0x10;
  6166  02FE  3010               	movlw	16
  6167  02FF  003E               	movlb	30	; select bank30
  6168  0300  00A0               	movwf	32	;volatile
  6169                           
  6170                           ;pin_manager.c: 103: RXPPSbits.RXPPS = 0x11;
  6171  0301  003D               	movlb	29	; select bank29
  6172  0302  084B               	movf	75,w	;volatile
  6173  0303  39E0               	andlw	-32
  6174  0304  3811               	iorlw	17
  6175  0305  00CB               	movwf	75	;volatile
  6176                           
  6177                           ;pin_manager.c: 104: RC3PPS = 0x17;
  6178  0306  3017               	movlw	23
  6179  0307  003E               	movlb	30	; select bank30
  6180  0308  00A3               	movwf	35	;volatile
  6181                           
  6182                           ;pin_manager.c: 105: RC4PPS = 0x16;
  6183  0309  3016               	movlw	22
  6184  030A  00A4               	movwf	36	;volatile
  6185                           
  6186                           ;pin_manager.c: 106: RC6PPS = 0x10;
  6187  030B  3010               	movlw	16
  6188  030C  00A6               	movwf	38	;volatile
  6189                           
  6190                           ;pin_manager.c: 107: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  6191  030D  003D               	movlb	29	; select bank29
  6192  030E  0849               	movf	73,w	;volatile
  6193  030F  39E0               	andlw	-32
  6194  0310  3813               	iorlw	19
  6195  0311  00C9               	movwf	73	;volatile
  6196                           
  6197                           ;pin_manager.c: 108: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  6198  0312  0848               	movf	72,w	;volatile
  6199  0313  39E0               	andlw	-32
  6200  0314  3814               	iorlw	20
  6201  0315  00C8               	movwf	72	;volatile
  6202                           
  6203                           ;pin_manager.c: 110: PPSLOCK = 0x55;
  6204  0316  3055               	movlw	85
  6205  0317  008F               	movwf	15	;volatile
  6206                           
  6207                           ;pin_manager.c: 111: PPSLOCK = 0xAA;
  6208  0318  30AA               	movlw	170
  6209  0319  008F               	movwf	15	;volatile
  6210                           
  6211                           ;pin_manager.c: 112: PPSLOCKbits.PPSLOCKED = 0x01;
  6212  031A  140F               	bsf	15,0	;volatile
  6213                           
  6214                           ;pin_manager.c: 114: GIE = state;
  6215  031B  0020               	movlb	0	; select bank0
  6216  031C  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  6217  031D  2B20               	goto	u1570
  6218  031E  178B               	bsf	11,7	;volatile
  6219  031F  0008               	return
  6220  0320                     u1570:	
  6221  0320  138B               	bcf	11,7	;volatile
  6222  0321  0008               	return
  6223  0322                     __end_of_PIN_MANAGER_Initialize:	
  6224                           
  6225                           	psect	text15
  6226  0552                     __ptext15:	
  6227 ;; *************** function _OSCILLATOR_Initialize *****************
  6228 ;; Defined at:
  6229 ;;		line 93 in file "mcc_generated_files/mcc.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;Total ram usage:        0 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    3
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_SYSTEM_Initialize
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function _OSCILLATOR_Initialize
  6259  0552                     _OSCILLATOR_Initialize:	
  6260                           
  6261                           ;mcc.c: 96: OSCCON1 = 0x10;
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6265  0552  3010               	movlw	16
  6266  0553  0031               	movlb	17	; select bank17
  6267  0554  008D               	movwf	13	;volatile
  6268                           
  6269                           ;mcc.c: 98: OSCCON3 = 0x00;
  6270  0555  018F               	clrf	15	;volatile
  6271                           
  6272                           ;mcc.c: 100: OSCEN = 0x00;
  6273  0556  0191               	clrf	17	;volatile
  6274                           
  6275                           ;mcc.c: 102: OSCFRQ = 0x05;
  6276  0557  3005               	movlw	5
  6277  0558  0093               	movwf	19	;volatile
  6278                           
  6279                           ;mcc.c: 104: OSCTUNE = 0x00;
  6280  0559  0192               	clrf	18	;volatile
  6281  055A  0008               	return
  6282  055B                     __end_of_OSCILLATOR_Initialize:	
  6283                           
  6284                           	psect	text16
  6285  0492                     __ptext16:	
  6286 ;; *************** function _I2C2_Initialize *****************
  6287 ;; Defined at:
  6288 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        1 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_SYSTEM_Initialize
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           
  6317                           ;psect for function _I2C2_Initialize
  6318  0492                     _I2C2_Initialize:	
  6319                           
  6320                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  6321                           
  6322                           ;incstack = 0
  6323                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  6324  0492  305E               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6325  0493  0020               	movlb	0	; select bank0
  6326  0494  00A0               	movwf	??_I2C2_Initialize
  6327  0495  0820               	movf	??_I2C2_Initialize,w
  6328  0496  00C4               	movwf	low ((_i2c2_object| 0+1))
  6329                           
  6330                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  6331  0497  305E               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6332  0498  00A0               	movwf	??_I2C2_Initialize
  6333  0499  0820               	movf	??_I2C2_Initialize,w
  6334  049A  00C3               	movwf	_i2c2_object
  6335                           
  6336                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  6337  049B  14C5               	bsf	_i2c2_object+2,1
  6338                           
  6339                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  6340  049C  1045               	bcf	_i2c2_object+2,0
  6341                           
  6342                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  6343  049D  01C7               	clrf	_i2c2_object+4
  6344                           
  6345                           ;i2c2.c: 208: SSP2STAT = 0x80;
  6346  049E  3080               	movlw	128
  6347  049F  0023               	movlb	3	; select bank3
  6348  04A0  0099               	movwf	25	;volatile
  6349                           
  6350                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  6351  04A1  3028               	movlw	40
  6352  04A2  009A               	movwf	26	;volatile
  6353                           
  6354                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  6355  04A3  019C               	clrf	28	;volatile
  6356                           
  6357                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  6358  04A4  309F               	movlw	159
  6359  04A5  0097               	movwf	23	;volatile
  6360                           
  6361                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  6362  04A6  002E               	movlb	14	; select bank14
  6363  04A7  110F               	bcf	15,2	;volatile
  6364                           
  6365                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  6366  04A8  1519               	bsf	25,2	;volatile
  6367  04A9  0008               	return
  6368  04AA                     __end_of_I2C2_Initialize:	
  6369                           
  6370                           	psect	text17
  6371  053C                     __ptext17:	
  6372 ;; *************** function _EUSART_Initialize *****************
  6373 ;; Defined at:
  6374 ;;		line 56 in file "mcc_generated_files/eusart.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;Total ram usage:        0 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    3
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_SYSTEM_Initialize
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           
  6403                           ;psect for function _EUSART_Initialize
  6404  053C                     _EUSART_Initialize:	
  6405                           
  6406                           ;eusart.c: 61: BAUD1CON = 0x08;
  6407                           
  6408                           ;incstack = 0
  6409                           ; Regs used in _EUSART_Initialize: [wreg]
  6410  053C  3008               	movlw	8
  6411  053D  0022               	movlb	2	; select bank2
  6412  053E  009F               	movwf	31	;volatile
  6413                           
  6414                           ;eusart.c: 64: RC1STA = 0x90;
  6415  053F  3090               	movlw	144
  6416  0540  009D               	movwf	29	;volatile
  6417                           
  6418                           ;eusart.c: 67: TX1STA = 0x24;
  6419  0541  3024               	movlw	36
  6420  0542  009E               	movwf	30	;volatile
  6421                           
  6422                           ;eusart.c: 70: SP1BRGL = 0x40;
  6423  0543  3040               	movlw	64
  6424  0544  009B               	movwf	27	;volatile
  6425                           
  6426                           ;eusart.c: 73: SP1BRGH = 0x03;
  6427  0545  3003               	movlw	3
  6428  0546  009C               	movwf	28	;volatile
  6429  0547  0008               	return
  6430  0548                     __end_of_EUSART_Initialize:	
  6431                           
  6432                           	psect	text18
  6433  04DA                     __ptext18:	
  6434 ;; *************** function _EUSART_Read *****************
  6435 ;; Defined at:
  6436 ;;		line 78 in file "mcc_generated_files/eusart.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      unsigned char 
  6443 ;; Registers used:
  6444 ;;		wreg, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    3
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_main
  6461 ;;		_getch
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _EUSART_Read
  6467  04DA                     _EUSART_Read:	
  6468                           
  6469                           ;incstack = 0
  6470                           ; Regs used in _EUSART_Read: [wreg+status,0]
  6471                           ;eusart.c: 80: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  6472  04DA  1003               	clrc
  6473  04DB  0020               	movlb	0	; select bank0
  6474  04DC  1C96               	btfss	22,1	;volatile
  6475  04DD  1403               	setc
  6476  04DE  1C03               	btfss	3,0
  6477  04DF  2CE3               	goto	u1590
  6478  04E0  0020               	movlb	0	; select bank0
  6479  04E1  1496               	bsf	22,1	;volatile
  6480  04E2  2CE5               	goto	l28
  6481  04E3                     u1590:	
  6482  04E3  0020               	movlb	0	; select bank0
  6483  04E4  1096               	bcf	22,1	;volatile
  6484  04E5                     l28:	
  6485                           ;eusart.c: 82: {
  6486                           
  6487                           ;eusart.c: 81: while(!PIR3bits.RCIF)
  6488                           
  6489  04E5  002E               	movlb	14	; select bank14
  6490  04E6  1E8F               	btfss	15,5	;volatile
  6491  04E7  2CE5               	goto	l28
  6492                           
  6493                           ;eusart.c: 83: }
  6494                           ;eusart.c: 86: if(1 == RC1STAbits.OERR)
  6495  04E8  0022               	movlb	2	; select bank2
  6496  04E9  1C9D               	btfss	29,1	;volatile
  6497  04EA  2CED               	goto	l2214
  6498                           
  6499                           ;eusart.c: 87: {
  6500                           ;eusart.c: 90: RC1STAbits.CREN = 0;
  6501  04EB  121D               	bcf	29,4	;volatile
  6502                           
  6503                           ;eusart.c: 91: RC1STAbits.CREN = 1;
  6504  04EC  161D               	bsf	29,4	;volatile
  6505  04ED                     l2214:	
  6506                           
  6507                           ;eusart.c: 92: }
  6508                           ;eusart.c: 94: return RC1REG;
  6509  04ED  0819               	movf	25,w	;volatile
  6510  04EE  0008               	return
  6511  04EF                     __end_of_EUSART_Read:	
  6512                           
  6513                           	psect	text19
  6514  0368                     __ptext19:	
  6515 ;; *************** function _EMC1001_Read *****************
  6516 ;; Defined at:
  6517 ;;		line 8 in file "main.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  reg             1    wreg     unsigned char 
  6520 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  6521 ;;		 -> main@templo(1), main@temp(1), 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  reg             1   10[BANK0 ] unsigned char 
  6524 ;;  status          1   11[BANK0 ] enum E13638
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      unsigned char 
  6527 ;; Registers used:
  6528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6534 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;Total ram usage:        5 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    4
  6541 ;; This function calls:
  6542 ;;		_I2C2_MasterReadTRBBuild
  6543 ;;		_I2C2_MasterTRBInsert
  6544 ;;		_I2C2_MasterWriteTRBBuild
  6545 ;; This function is called by:
  6546 ;;		_main
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           
  6551                           ;psect for function _EMC1001_Read
  6552  0368                     _EMC1001_Read:	
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6556                           ;EMC1001_Read@reg stored from wreg
  6557  0368  0020               	movlb	0	; select bank0
  6558  0369  00AA               	movwf	EMC1001_Read@reg
  6559                           
  6560                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  6561  036A  3002               	movlw	2
  6562  036B  00A8               	movwf	??_EMC1001_Read
  6563  036C  0828               	movf	??_EMC1001_Read,w
  6564  036D  00AB               	movwf	EMC1001_Read@status
  6565                           
  6566                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  6567                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  6568  036E  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  6569  036F  00A8               	movwf	??_EMC1001_Read
  6570  0370  0828               	movf	??_EMC1001_Read,w
  6571  0371  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  6572  0372  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  6573  0373  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  6574  0374  3038               	movlw	56
  6575  0375  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  6576  0376  3000               	movlw	0
  6577  0377  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  6578  0378  304E               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6579  0379  3184  2456  3183   	fcall	_I2C2_MasterWriteTRBBuild
  6580                           
  6581                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  6582  037C  0020               	movlb	0	; select bank0
  6583  037D  0827               	movf	EMC1001_Read@pData,w
  6584  037E  00A8               	movwf	??_EMC1001_Read
  6585  037F  0828               	movf	??_EMC1001_Read,w
  6586  0380  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  6587  0381  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  6588  0382  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  6589  0383  3038               	movlw	56
  6590  0384  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  6591  0385  3000               	movlw	0
  6592  0386  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  6593  0387  3052               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  6594  0388  3184  242E  3183   	fcall	_I2C2_MasterReadTRBBuild
  6595                           
  6596                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  6597  038B  304E               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  6598  038C  0020               	movlb	0	; select bank0
  6599  038D  00A8               	movwf	??_EMC1001_Read
  6600  038E  0828               	movf	??_EMC1001_Read,w
  6601  038F  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  6602  0390  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  6603  0391  00A9               	movwf	??_EMC1001_Read+1
  6604  0392  0829               	movf	??_EMC1001_Read+1,w
  6605  0393  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  6606  0394  3002               	movlw	2
  6607  0395  3183  2322  3183   	fcall	_I2C2_MasterTRBInsert
  6608  0398                     l1940:	
  6609                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  6610                           
  6611  0398  3002               	movlw	2
  6612  0399  0020               	movlb	0	; select bank0
  6613  039A  062B               	xorwf	EMC1001_Read@status,w
  6614  039B  1903               	btfsc	3,2
  6615  039C  2B98               	goto	l1940
  6616                           
  6617                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  6618  039D  082B               	movf	EMC1001_Read@status,w
  6619  039E  1D03               	btfss	3,2
  6620  039F  2BA2               	goto	u1230
  6621  03A0  3001               	movlw	1
  6622  03A1  0008               	return
  6623  03A2                     u1230:	
  6624  03A2  3000               	movlw	0
  6625  03A3  0008               	return
  6626  03A4                     __end_of_EMC1001_Read:	
  6627                           
  6628                           	psect	text20
  6629  0456                     __ptext20:	
  6630 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  6631 ;; Defined at:
  6632 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  ptrb            1    wreg     PTR struct .
  6635 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6636 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6637 ;;		 -> EMC1001_Read@reg(1), 
  6638 ;;  length          1    1[BANK0 ] unsigned char 
  6639 ;;  address         2    2[BANK0 ] unsigned int 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6642 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;Total ram usage:        7 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    3
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_EMC1001_Read
  6663 ;;		_I2C2_MasterWrite
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _I2C2_MasterWriteTRBBuild
  6669  0456                     _I2C2_MasterWriteTRBBuild:	
  6670                           
  6671                           ;incstack = 0
  6672                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6673                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  6674  0456  0020               	movlb	0	; select bank0
  6675  0457  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  6676                           
  6677                           ;i2c2.c: 713: ptrb->address = address << 1;
  6678  0458  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  6679  0459  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  6680  045A  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  6681  045B  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6682  045C  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  6683  045D  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  6684  045E  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6685  045F  0086               	movwf	6
  6686  0460  0187               	clrf	7
  6687  0461  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6688  0462  3FC0               	movwi [0]fsr1
  6689  0463  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  6690  0464  3FC1               	movwi [1]fsr1
  6691                           
  6692                           ;i2c2.c: 714: ptrb->length = length;
  6693  0465  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  6694  0466  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6695  0467  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6696  0468  3E02               	addlw	2
  6697  0469  0086               	movwf	6
  6698  046A  0187               	clrf	7
  6699  046B  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6700  046C  0081               	movwf	1
  6701                           
  6702                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  6703  046D  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  6704  046E  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  6705  046F  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  6706  0470  3E03               	addlw	3
  6707  0471  0086               	movwf	6
  6708  0472  0187               	clrf	7
  6709  0473  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  6710  0474  0081               	movwf	1
  6711  0475  0008               	return
  6712  0476                     __end_of_I2C2_MasterWriteTRBBuild:	
  6713                           
  6714                           	psect	text21
  6715  0322                     __ptext21:	
  6716 ;; *************** function _I2C2_MasterTRBInsert *****************
  6717 ;; Defined at:
  6718 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  count           1    wreg     unsigned char 
  6721 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6722 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  6723 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  6724 ;;		 -> EMC1001_Read@status(1), 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  count           1    3[BANK0 ] unsigned char 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;Total ram usage:        4 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    3
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_EMC1001_Read
  6747 ;;		_I2C2_MasterWrite
  6748 ;;		_I2C2_MasterRead
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _I2C2_MasterTRBInsert
  6754  0322                     _I2C2_MasterTRBInsert:	
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  6758                           ;I2C2_MasterTRBInsert@count stored from wreg
  6759  0322  0020               	movlb	0	; select bank0
  6760  0323  00A3               	movwf	I2C2_MasterTRBInsert@count
  6761                           
  6762                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  6763  0324  1845               	btfsc	_i2c2_object+2,0
  6764  0325  2B56               	goto	l1716
  6765                           
  6766                           ;i2c2.c: 649: {
  6767                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  6768  0326  3002               	movlw	2
  6769  0327  00A2               	movwf	??_I2C2_MasterTRBInsert
  6770  0328  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6771  0329  0086               	movwf	6
  6772  032A  0187               	clrf	7
  6773  032B  0822               	movf	??_I2C2_MasterTRBInsert,w
  6774  032C  0081               	movwf	1
  6775                           
  6776                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  6777  032D  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  6778  032E  00A2               	movwf	??_I2C2_MasterTRBInsert
  6779  032F  0A43               	incf	_i2c2_object,w
  6780  0330  0086               	movwf	6
  6781  0331  0187               	clrf	7
  6782  0332  0822               	movf	??_I2C2_MasterTRBInsert,w
  6783  0333  0081               	movwf	1
  6784                           
  6785                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  6786  0334  0823               	movf	I2C2_MasterTRBInsert@count,w
  6787  0335  00A2               	movwf	??_I2C2_MasterTRBInsert
  6788  0336  0843               	movf	_i2c2_object,w
  6789  0337  0086               	movwf	6
  6790  0338  0187               	clrf	7
  6791  0339  0822               	movf	??_I2C2_MasterTRBInsert,w
  6792  033A  0081               	movwf	1
  6793                           
  6794                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  6795  033B  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6796  033C  00A2               	movwf	??_I2C2_MasterTRBInsert
  6797  033D  0843               	movf	_i2c2_object,w
  6798  033E  3E02               	addlw	2
  6799  033F  0086               	movwf	6
  6800  0340  0187               	clrf	7
  6801  0341  0822               	movf	??_I2C2_MasterTRBInsert,w
  6802  0342  0081               	movwf	1
  6803                           
  6804                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  6805  0343  3003               	movlw	3
  6806  0344  00A2               	movwf	??_I2C2_MasterTRBInsert
  6807  0345  0822               	movf	??_I2C2_MasterTRBInsert,w
  6808  0346  07C3               	addwf	_i2c2_object,f
  6809                           
  6810                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  6811  0347  0843               	movf	_i2c2_object,w
  6812  0348  3A61               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6813  0349  1D03               	skipz
  6814  034A  2B4F               	goto	l1712
  6815                           
  6816                           ;i2c2.c: 659: {
  6817                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  6818  034B  305E               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6819  034C  00A2               	movwf	??_I2C2_MasterTRBInsert
  6820  034D  0822               	movf	??_I2C2_MasterTRBInsert,w
  6821  034E  00C3               	movwf	_i2c2_object
  6822  034F                     l1712:	
  6823                           
  6824                           ;i2c2.c: 662: }
  6825                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  6826  034F  10C5               	bcf	_i2c2_object+2,1
  6827                           
  6828                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  6829  0350  0844               	movf	low ((_i2c2_object| 0+1)),w
  6830  0351  0643               	xorwf	_i2c2_object,w
  6831  0352  1D03               	skipz
  6832  0353  2B5B               	goto	l1718
  6833                           
  6834                           ;i2c2.c: 670: {
  6835                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  6836  0354  1445               	bsf	_i2c2_object+2,0
  6837                           
  6838                           ;i2c2.c: 673: }
  6839                           ;i2c2.c: 675: }
  6840  0355  2B5B               	goto	l1718
  6841  0356                     l1716:	
  6842                           
  6843                           ;i2c2.c: 676: else
  6844                           ;i2c2.c: 677: {
  6845                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6846  0356  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6847  0357  0086               	movwf	6
  6848  0358  0187               	clrf	7
  6849  0359  0181               	clrf	1
  6850  035A  0A81               	incf	1,f
  6851  035B                     l1718:	
  6852                           
  6853                           ;i2c2.c: 679: }
  6854                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6855  035B  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6856  035C  0086               	movwf	6
  6857  035D  0187               	clrf	7
  6858  035E  3002               	movlw	2
  6859  035F  0601               	xorwf	1,w
  6860  0360  1D03               	btfss	3,2
  6861  0361  0008               	return
  6862  0362                     l1722:	
  6863                           ;i2c2.c: 683: {
  6864                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6865                           
  6866  0362  084D               	movf	_i2c2_state,w
  6867  0363  1D03               	btfss	3,2
  6868  0364  2B62               	goto	l1722
  6869                           
  6870                           ;i2c2.c: 685: {
  6871                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6872  0365  002E               	movlb	14	; select bank14
  6873  0366  150F               	bsf	15,2	;volatile
  6874  0367  0008               	return
  6875  0368                     __end_of_I2C2_MasterTRBInsert:	
  6876                           
  6877                           	psect	text22
  6878  042E                     __ptext22:	
  6879 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6880 ;; Defined at:
  6881 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  ptrb            1    wreg     PTR struct .
  6884 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6885 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6886 ;;		 -> main@templo(1), main@temp(1), 
  6887 ;;  length          1    1[BANK0 ] unsigned char 
  6888 ;;  address         2    2[BANK0 ] unsigned int 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6891 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      void 
  6894 ;; Registers used:
  6895 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;Total ram usage:        7 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    3
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_EMC1001_Read
  6912 ;;		_I2C2_MasterRead
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _I2C2_MasterReadTRBBuild
  6918  042E                     _I2C2_MasterReadTRBBuild:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6922                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6923  042E  0020               	movlb	0	; select bank0
  6924  042F  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6925                           
  6926                           ;i2c2.c: 700: ptrb->address = address << 1;
  6927  0430  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6928  0431  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6929  0432  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6930  0433  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6931  0434  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6932  0435  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6933  0436  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6934  0437  0086               	movwf	6
  6935  0438  0187               	clrf	7
  6936  0439  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6937  043A  3FC0               	movwi [0]fsr1
  6938  043B  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6939  043C  3FC1               	movwi [1]fsr1
  6940                           
  6941                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6942  043D  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6943  043E  0086               	movwf	6
  6944  043F  0187               	clrf	7
  6945  0440  3001               	movlw	1
  6946  0441  0481               	iorwf	1,f
  6947  0442  3141               	addfsr 1,1
  6948  0443  3000               	movlw	0
  6949  0444  0481               	iorwf	1,f
  6950                           
  6951                           ;i2c2.c: 703: ptrb->length = length;
  6952  0445  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6953  0446  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6954  0447  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6955  0448  3E02               	addlw	2
  6956  0449  0086               	movwf	6
  6957  044A  0187               	clrf	7
  6958  044B  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6959  044C  0081               	movwf	1
  6960                           
  6961                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6962  044D  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6963  044E  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6964  044F  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6965  0450  3E03               	addlw	3
  6966  0451  0086               	movwf	6
  6967  0452  0187               	clrf	7
  6968  0453  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6969  0454  0081               	movwf	1
  6970  0455  0008               	return
  6971  0456                     __end_of_I2C2_MasterReadTRBBuild:	
  6972                           
  6973                           	psect	intentry
  6974  0004                     __pintentry:	
  6975 ;; *************** function _INTERRUPT_InterruptManager *****************
  6976 ;; Defined at:
  6977 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        1 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    2
  6998 ;; This function calls:
  6999 ;;		_I2C2_BusCollisionISR
  7000 ;;		_I2C2_ISR
  7001 ;; This function is called by:
  7002 ;;		Interrupt level 1
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006  0004                     _INTERRUPT_InterruptManager:	
  7007                           
  7008                           ;incstack = 0
  7009  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7010                           
  7011                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7012  0005  3180               	pagesel	$
  7013  0006  0020               	movlb	0	; select bank0
  7014  0007  087F               	movf	127,w
  7015  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  7016                           
  7017                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  7018  0009  1F0B               	btfss	11,6	;volatile
  7019  000A  2813               	goto	i1l216
  7020  000B  002E               	movlb	14	; select bank14
  7021  000C  1999               	btfsc	25,3	;volatile
  7022  000D  1D8F               	btfss	15,3	;volatile
  7023  000E  2813               	goto	i1l216
  7024                           
  7025                           ;interrupt_manager.c: 55: {
  7026                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  7027  000F  3185  2571  3180   	fcall	_I2C2_BusCollisionISR
  7028                           
  7029                           ;interrupt_manager.c: 57: }
  7030  0012  281B               	goto	i1l220
  7031  0013                     i1l216:	
  7032                           
  7033                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  7034  0013  1F0B               	btfss	11,6	;volatile
  7035  0014  281B               	goto	i1l220
  7036  0015  002E               	movlb	14	; select bank14
  7037  0016  1919               	btfsc	25,2	;volatile
  7038  0017  1D0F               	btfss	15,2	;volatile
  7039  0018  281B               	goto	i1l220
  7040                           
  7041                           ;interrupt_manager.c: 59: {
  7042                           ;interrupt_manager.c: 60: I2C2_ISR();
  7043  0019  3180  2034         	fcall	_I2C2_ISR
  7044  001B                     i1l220:	
  7045                           ;interrupt_manager.c: 62: else
  7046                           ;interrupt_manager.c: 63: {
  7047                           
  7048                           ;interrupt_manager.c: 61: }
  7049                           
  7050  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  7051  001C  0020               	movlb	0	; select bank0
  7052  001D  00FF               	movwf	127
  7053  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7054  001F  0009               	retfie
  7055  0020                     __end_of_INTERRUPT_InterruptManager:	
  7056                           
  7057                           	psect	text24
  7058  0034                     __ptext24:	
  7059 ;; *************** function _I2C2_ISR *****************
  7060 ;; Defined at:
  7061 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;Total ram usage:        4 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    1
  7082 ;; This function calls:
  7083 ;;		_I2C2_FunctionComplete
  7084 ;;		_I2C2_Stop
  7085 ;; This function is called by:
  7086 ;;		_INTERRUPT_InterruptManager
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function _I2C2_ISR
  7092  0034                     _I2C2_ISR:	
  7093                           
  7094                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  7095                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  7096                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  7097                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  7098                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  7099                           
  7100                           ;incstack = 0
  7101                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7102  0034  002E               	movlb	14	; select bank14
  7103  0035  110F               	bcf	15,2	;volatile
  7104                           
  7105                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  7106  0036  0023               	movlb	3	; select bank3
  7107  0037  1F9A               	btfss	26,7	;volatile
  7108  0038  2963               	goto	i1l1926
  7109                           
  7110                           ;i2c2.c: 246: {
  7111                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  7112  0039  139A               	bcf	26,7	;volatile
  7113                           
  7114                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  7115  003A  0020               	movlb	0	; select bank0
  7116  003B  01CD               	clrf	_i2c2_state
  7117                           
  7118                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  7119  003C  0873               	movf	_p_i2c2_current,w
  7120  003D  3E02               	addlw	2
  7121  003E  0086               	movwf	6
  7122  003F  0187               	clrf	7
  7123  0040  0801               	movf	1,w
  7124  0041  0086               	movwf	6
  7125  0042  0187               	clrf	7
  7126  0043  0181               	clrf	1
  7127  0044  0A81               	incf	1,f
  7128                           
  7129                           ;i2c2.c: 253: p_i2c2_current = (0);
  7130  0045  01F3               	clrf	_p_i2c2_current
  7131                           
  7132                           ;i2c2.c: 255: return;
  7133  0046  0008               	return
  7134  0047                     i1l280:	
  7135                           ;i2c2.c: 260: {
  7136                           ;i2c2.c: 261: case S_MASTER_IDLE:
  7137                           
  7138                           ;i2c2.c: 256: }
  7139                           ;i2c2.c: 259: switch(i2c2_state)
  7140                           
  7141                           
  7142                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  7143  0047  18C5               	btfsc	_i2c2_object+2,1
  7144  0048  0008               	return
  7145                           
  7146                           ;i2c2.c: 264: {
  7147                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  7148  0049  0844               	movf	low ((_i2c2_object| 0+1)),w
  7149  004A  00F9               	movwf	??_I2C2_ISR
  7150  004B  0879               	movf	??_I2C2_ISR,w
  7151  004C  00F3               	movwf	_p_i2c2_current
  7152                           
  7153                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  7154  004D  0844               	movf	low ((_i2c2_object| 0+1)),w
  7155  004E  0086               	movwf	6
  7156  004F  0187               	clrf	7
  7157  0050  0801               	movf	1,w
  7158  0051  00F9               	movwf	??_I2C2_ISR
  7159  0052  0879               	movf	??_I2C2_ISR,w
  7160  0053  00F2               	movwf	_i2c2_trb_count
  7161                           
  7162                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  7163  0054  0844               	movf	low ((_i2c2_object| 0+1)),w
  7164  0055  0086               	movwf	6
  7165  0056  0187               	clrf	7
  7166  0057  3F41               	moviw [1]fsr1
  7167  0058  00F4               	movwf	_p_i2c2_trb_current
  7168                           
  7169                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  7170  0059  3003               	movlw	3
  7171  005A  00F9               	movwf	??_I2C2_ISR
  7172  005B  0879               	movf	??_I2C2_ISR,w
  7173  005C  07C4               	addwf	low ((_i2c2_object| 0+1)),f
  7174                           
  7175                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  7176  005D  0844               	movf	low ((_i2c2_object| 0+1)),w
  7177  005E  3A61               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  7178  005F  1D03               	skipz
  7179  0060  2865               	goto	i1l1814
  7180                           
  7181                           ;i2c2.c: 274: {
  7182                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  7183  0061  305E               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  7184  0062  00F9               	movwf	??_I2C2_ISR
  7185  0063  0879               	movf	??_I2C2_ISR,w
  7186  0064  00C4               	movwf	low ((_i2c2_object| 0+1))
  7187  0065                     i1l1814:	
  7188                           
  7189                           ;i2c2.c: 277: }
  7190                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  7191  0065  1045               	bcf	_i2c2_object+2,0
  7192                           
  7193                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  7194  0066  0844               	movf	low ((_i2c2_object| 0+1)),w
  7195  0067  0643               	xorwf	_i2c2_object,w
  7196  0068  1903               	btfsc	3,2
  7197                           
  7198                           ;i2c2.c: 285: {
  7199                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  7200  0069  14C5               	bsf	_i2c2_object+2,1
  7201                           
  7202                           ;i2c2.c: 288: }
  7203                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  7204  006A  0023               	movlb	3	; select bank3
  7205  006B  141B               	bsf	27,0	;volatile
  7206                           
  7207                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  7208  006C  3002               	movlw	2
  7209  006D  00F9               	movwf	??_I2C2_ISR
  7210  006E  0879               	movf	??_I2C2_ISR,w
  7211  006F  0020               	movlb	0	; select bank0
  7212  0070  00CD               	movwf	_i2c2_state
  7213                           
  7214                           ;i2c2.c: 295: }
  7215                           ;i2c2.c: 297: break;
  7216  0071  0008               	return
  7217  0072                     i1l285:	
  7218                           ;i2c2.c: 299: case S_MASTER_RESTART:
  7219                           
  7220                           
  7221                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  7222  0072  0023               	movlb	3	; select bank3
  7223  0073  149B               	bsf	27,1	;volatile
  7224                           
  7225                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  7226  0074  3002               	movlw	2
  7227  0075  00F9               	movwf	??_I2C2_ISR
  7228  0076  0879               	movf	??_I2C2_ISR,w
  7229  0077  0020               	movlb	0	; select bank0
  7230  0078  00CD               	movwf	_i2c2_state
  7231                           
  7232                           ;i2c2.c: 309: break;
  7233  0079  0008               	return
  7234  007A                     i1l286:	
  7235                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7236                           
  7237                           
  7238                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  7239  007A  0023               	movlb	3	; select bank3
  7240  007B  1F1B               	btfss	27,6	;volatile
  7241  007C  2886               	goto	i1l1826
  7242                           
  7243                           ;i2c2.c: 314: {
  7244                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  7245  007D  3001               	movlw	1
  7246  007E  00F9               	movwf	??_I2C2_ISR
  7247  007F  0879               	movf	??_I2C2_ISR,w
  7248  0080  0020               	movlb	0	; select bank0
  7249  0081  07C7               	addwf	_i2c2_object+4,f
  7250                           
  7251                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7252  0082  3004               	movlw	4
  7253  0083  3184  24C2         	fcall	_I2C2_Stop
  7254                           
  7255                           ;i2c2.c: 317: }
  7256  0085  0008               	return
  7257  0086                     i1l1826:	
  7258                           
  7259                           ;i2c2.c: 318: else
  7260                           ;i2c2.c: 319: {
  7261                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  7262  0086  0876               	movf	I2C2_ISR@i2c_address+1,w
  7263  0087  00FA               	movwf	??_I2C2_ISR+1
  7264  0088  0875               	movf	I2C2_ISR@i2c_address,w
  7265  0089  00F9               	movwf	??_I2C2_ISR
  7266  008A  36FA               	lsrf	??_I2C2_ISR+1,f
  7267  008B  0CF9               	rrf	??_I2C2_ISR,f
  7268  008C  0879               	movf	??_I2C2_ISR,w
  7269  008D  0023               	movlb	3	; select bank3
  7270  008E  0096               	movwf	22	;volatile
  7271                           
  7272                           ;i2c2.c: 324: if(i2c_address & 0x01)
  7273  008F  1C75               	btfss	I2C2_ISR@i2c_address,0
  7274  0090  2897               	goto	i1l1832
  7275                           
  7276                           ;i2c2.c: 325: {
  7277                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  7278  0091  300B               	movlw	11
  7279  0092  00F9               	movwf	??_I2C2_ISR
  7280  0093  0879               	movf	??_I2C2_ISR,w
  7281  0094  0020               	movlb	0	; select bank0
  7282  0095  00CD               	movwf	_i2c2_state
  7283                           
  7284                           ;i2c2.c: 329: }
  7285  0096  0008               	return
  7286  0097                     i1l1832:	
  7287                           
  7288                           ;i2c2.c: 330: else
  7289                           ;i2c2.c: 331: {
  7290                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  7291  0097  3003               	movlw	3
  7292  0098  00F9               	movwf	??_I2C2_ISR
  7293  0099  0879               	movf	??_I2C2_ISR,w
  7294  009A  0020               	movlb	0	; select bank0
  7295  009B  00CD               	movwf	_i2c2_state
  7296                           
  7297                           ;i2c2.c: 334: }
  7298                           ;i2c2.c: 335: }
  7299                           ;i2c2.c: 337: break;
  7300  009C  0008               	return
  7301  009D                     i1l291:	
  7302                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  7303                           
  7304                           
  7305                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  7306  009D  0023               	movlb	3	; select bank3
  7307  009E  1F1B               	btfss	27,6	;volatile
  7308  009F  28A9               	goto	i1l292
  7309                           
  7310                           ;i2c2.c: 342: {
  7311                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  7312  00A0  3001               	movlw	1
  7313  00A1  00F9               	movwf	??_I2C2_ISR
  7314  00A2  0879               	movf	??_I2C2_ISR,w
  7315  00A3  0020               	movlb	0	; select bank0
  7316  00A4  07C7               	addwf	_i2c2_object+4,f
  7317                           
  7318                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7319  00A5  3004               	movlw	4
  7320  00A6  3184  24C2         	fcall	_I2C2_Stop
  7321                           
  7322                           ;i2c2.c: 345: }
  7323  00A8  0008               	return
  7324  00A9                     i1l292:	
  7325                           
  7326                           ;i2c2.c: 346: else
  7327                           ;i2c2.c: 347: {
  7328                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  7329  00A9  149B               	bsf	27,1	;volatile
  7330                           
  7331                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7332  00AA  0876               	movf	I2C2_ISR@i2c_address+1,w
  7333  00AB  00FA               	movwf	??_I2C2_ISR+1
  7334  00AC  0875               	movf	I2C2_ISR@i2c_address,w
  7335  00AD  00F9               	movwf	??_I2C2_ISR
  7336  00AE  087A               	movf	??_I2C2_ISR+1,w
  7337  00AF  00F9               	movwf	??_I2C2_ISR
  7338  00B0  01FA               	clrf	??_I2C2_ISR+1
  7339  00B1  3006               	movlw	6
  7340  00B2  0579               	andwf	??_I2C2_ISR,w
  7341  00B3  00FB               	movwf	??_I2C2_ISR+2
  7342  00B4  3000               	movlw	0
  7343  00B5  057A               	andwf	??_I2C2_ISR+1,w
  7344  00B6  00FC               	movwf	??_I2C2_ISR+3
  7345  00B7  30F0               	movlw	240
  7346  00B8  047B               	iorwf	??_I2C2_ISR+2,w
  7347  00B9  00F5               	movwf	I2C2_ISR@i2c_address
  7348  00BA  3000               	movlw	0
  7349  00BB  047C               	iorwf	??_I2C2_ISR+3,w
  7350  00BC  00F6               	movwf	I2C2_ISR@i2c_address+1
  7351                           
  7352                           ;i2c2.c: 357: i2c_address |= 0x0001;
  7353  00BD  1475               	bsf	I2C2_ISR@i2c_address,0
  7354                           
  7355                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  7356  00BE  0020               	movlb	0	; select bank0
  7357  00BF  01CC               	clrf	I2C2_ISR@i2c_10bit_address_restart
  7358  00C0  0ACC               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  7359                           
  7360                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  7361  00C1  3002               	movlw	2
  7362  00C2  00F9               	movwf	??_I2C2_ISR
  7363  00C3  0879               	movf	??_I2C2_ISR,w
  7364  00C4  00CD               	movwf	_i2c2_state
  7365                           
  7366                           ;i2c2.c: 364: }
  7367                           ;i2c2.c: 366: break;
  7368  00C5  0008               	return
  7369  00C6                     i1l1846:	
  7370                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  7371                           
  7372                           
  7373                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  7374  00C6  034C               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  7375  00C7  1903               	btfsc	3,2
  7376  00C8  28DA               	goto	i1l1866
  7377                           
  7378                           ;i2c2.c: 382: {
  7379                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  7380  00C9  0874               	movf	_p_i2c2_trb_current,w
  7381  00CA  0086               	movwf	6
  7382  00CB  0187               	clrf	7
  7383  00CC  3F40               	moviw [0]fsr1
  7384  00CD  00F5               	movwf	I2C2_ISR@i2c_address
  7385  00CE  3F41               	moviw [1]fsr1
  7386  00CF  00F6               	movwf	I2C2_ISR@i2c_address+1
  7387                           
  7388                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  7389  00D0  0874               	movf	_p_i2c2_trb_current,w
  7390  00D1  0086               	movwf	6
  7391  00D2  0187               	clrf	7
  7392  00D3  3F43               	moviw [3]fsr1
  7393  00D4  00F1               	movwf	I2C2_ISR@pi2c_buf_ptr
  7394                           
  7395                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  7396  00D5  0874               	movf	_p_i2c2_trb_current,w
  7397  00D6  0086               	movwf	6
  7398  00D7  0187               	clrf	7
  7399  00D8  3F42               	moviw [2]fsr1
  7400  00D9  00F0               	movwf	I2C2_ISR@i2c_bytes_left
  7401  00DA                     i1l1866:	
  7402                           ;i2c2.c: 407: }
  7403                           ;i2c2.c: 408: }
  7404                           
  7405                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  7406                           
  7407                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  7408                           
  7409                           ;i2c2.c: 400: else
  7410                           ;i2c2.c: 401: {
  7411                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  7412                           
  7413                           ;i2c2.c: 399: }
  7414                           
  7415                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  7416                           
  7417                           ;i2c2.c: 393: {
  7418                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  7419                           
  7420                           ;i2c2.c: 391: {
  7421                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  7422                           
  7423                           ;i2c2.c: 387: }
  7424                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  7425                           
  7426                           
  7427                           ;i2c2.c: 409: else
  7428                           ;i2c2.c: 410: {
  7429                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  7430  00DA  0875               	movf	I2C2_ISR@i2c_address,w
  7431  00DB  0023               	movlb	3	; select bank3
  7432  00DC  0096               	movwf	22	;volatile
  7433                           
  7434                           ;i2c2.c: 413: if(i2c_address & 0x01)
  7435  00DD  1C75               	btfss	I2C2_ISR@i2c_address,0
  7436  00DE  28E5               	goto	i1l1872
  7437                           
  7438                           ;i2c2.c: 414: {
  7439                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  7440  00DF  3005               	movlw	5
  7441  00E0  00F9               	movwf	??_I2C2_ISR
  7442  00E1  0879               	movf	??_I2C2_ISR,w
  7443  00E2  0020               	movlb	0	; select bank0
  7444  00E3  00CD               	movwf	_i2c2_state
  7445                           
  7446                           ;i2c2.c: 417: }
  7447  00E4  0008               	return
  7448  00E5                     i1l1872:	
  7449                           
  7450                           ;i2c2.c: 418: else
  7451                           ;i2c2.c: 419: {
  7452                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  7453  00E5  3003               	movlw	3
  7454  00E6  00F9               	movwf	??_I2C2_ISR
  7455  00E7  0879               	movf	??_I2C2_ISR,w
  7456  00E8  0020               	movlb	0	; select bank0
  7457  00E9  00CD               	movwf	_i2c2_state
  7458                           
  7459                           ;i2c2.c: 422: }
  7460                           ;i2c2.c: 423: }
  7461                           ;i2c2.c: 424: break;
  7462  00EA  0008               	return
  7463  00EB                     i1l302:	
  7464                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  7465                           
  7466                           
  7467                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  7468  00EB  0023               	movlb	3	; select bank3
  7469  00EC  1F1B               	btfss	27,6	;volatile
  7470  00ED  28F9               	goto	i1l1880
  7471                           
  7472                           ;i2c2.c: 430: {
  7473                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  7474  00EE  3001               	movlw	1
  7475  00EF  00F9               	movwf	??_I2C2_ISR
  7476  00F0  0879               	movf	??_I2C2_ISR,w
  7477  00F1  0020               	movlb	0	; select bank0
  7478  00F2  07C7               	addwf	_i2c2_object+4,f
  7479                           
  7480                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  7481  00F3  0023               	movlb	3	; select bank3
  7482  00F4  131B               	bcf	27,6	;volatile
  7483                           
  7484                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  7485  00F5  3005               	movlw	5
  7486  00F6  3184  24C2         	fcall	_I2C2_Stop
  7487                           
  7488                           ;i2c2.c: 440: }
  7489  00F8  0008               	return
  7490  00F9                     i1l1880:	
  7491                           
  7492                           ;i2c2.c: 441: else
  7493                           ;i2c2.c: 442: {
  7494                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  7495  00F9  3001               	movlw	1
  7496  00FA  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  7497  00FB  0A70               	incf	I2C2_ISR@i2c_bytes_left,w
  7498  00FC  1D03               	btfss	3,2
  7499  00FD  2912               	goto	i1l1888
  7500                           
  7501                           ;i2c2.c: 445: {
  7502                           ;i2c2.c: 449: p_i2c2_trb_current++;
  7503  00FE  3004               	movlw	4
  7504  00FF  00F9               	movwf	??_I2C2_ISR
  7505  0100  0879               	movf	??_I2C2_ISR,w
  7506  0101  07F4               	addwf	_p_i2c2_trb_current,f
  7507                           
  7508                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  7509  0102  3001               	movlw	1
  7510  0103  02F2               	subwf	_i2c2_trb_count,f
  7511  0104  1D03               	btfss	3,2
  7512  0105  290A               	goto	i1l306
  7513                           
  7514                           ;i2c2.c: 453: {
  7515                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7516  0106  3000               	movlw	0
  7517  0107  3184  24C2         	fcall	_I2C2_Stop
  7518                           
  7519                           ;i2c2.c: 455: }
  7520  0109  0008               	return
  7521  010A                     i1l306:	
  7522                           
  7523                           ;i2c2.c: 456: else
  7524                           ;i2c2.c: 457: {
  7525                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  7526  010A  0023               	movlb	3	; select bank3
  7527  010B  149B               	bsf	27,1	;volatile
  7528                           
  7529                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  7530  010C  3002               	movlw	2
  7531  010D  00F9               	movwf	??_I2C2_ISR
  7532  010E  0879               	movf	??_I2C2_ISR,w
  7533  010F  0020               	movlb	0	; select bank0
  7534  0110  00CD               	movwf	_i2c2_state
  7535                           
  7536                           ;i2c2.c: 469: }
  7537                           ;i2c2.c: 470: }
  7538  0111  0008               	return
  7539  0112                     i1l1888:	
  7540                           
  7541                           ;i2c2.c: 471: else
  7542                           ;i2c2.c: 472: {
  7543                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  7544  0112  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7545  0113  0086               	movwf	6
  7546  0114  0187               	clrf	7
  7547  0115  0801               	movf	1,w
  7548  0116  0023               	movlb	3	; select bank3
  7549  0117  0096               	movwf	22	;volatile
  7550  0118  3001               	movlw	1
  7551  0119  00F9               	movwf	??_I2C2_ISR
  7552  011A  0879               	movf	??_I2C2_ISR,w
  7553  011B  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7554                           
  7555                           ;i2c2.c: 475: }
  7556                           ;i2c2.c: 476: }
  7557                           ;i2c2.c: 477: break;
  7558  011C  0008               	return
  7559  011D                     i1l309:	
  7560                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  7561                           
  7562                           
  7563                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  7564  011D  0023               	movlb	3	; select bank3
  7565  011E  1F1B               	btfss	27,6	;volatile
  7566  011F  292B               	goto	i1l310
  7567                           
  7568                           ;i2c2.c: 483: {
  7569                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  7570  0120  3001               	movlw	1
  7571  0121  00F9               	movwf	??_I2C2_ISR
  7572  0122  0879               	movf	??_I2C2_ISR,w
  7573  0123  0020               	movlb	0	; select bank0
  7574  0124  07C7               	addwf	_i2c2_object+4,f
  7575                           
  7576                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7577  0125  3004               	movlw	4
  7578  0126  3184  24C2         	fcall	_I2C2_Stop
  7579                           
  7580                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  7581  0128  0023               	movlb	3	; select bank3
  7582  0129  131B               	bcf	27,6	;volatile
  7583                           
  7584                           ;i2c2.c: 493: }
  7585  012A  0008               	return
  7586  012B                     i1l310:	
  7587                           
  7588                           ;i2c2.c: 494: else
  7589                           ;i2c2.c: 495: {
  7590                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  7591  012B  159B               	bsf	27,3	;volatile
  7592                           
  7593                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7594  012C  3008               	movlw	8
  7595  012D  00F9               	movwf	??_I2C2_ISR
  7596  012E  0879               	movf	??_I2C2_ISR,w
  7597  012F  0020               	movlb	0	; select bank0
  7598  0130  00CD               	movwf	_i2c2_state
  7599                           
  7600                           ;i2c2.c: 498: }
  7601                           ;i2c2.c: 499: break;
  7602  0131  0008               	return
  7603  0132                     i1l1900:	
  7604                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  7605                           
  7606                           
  7607                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  7608  0132  3008               	movlw	8
  7609  0133  00F9               	movwf	??_I2C2_ISR
  7610  0134  0879               	movf	??_I2C2_ISR,w
  7611  0135  00CD               	movwf	_i2c2_state
  7612                           
  7613                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  7614  0136  0023               	movlb	3	; select bank3
  7615  0137  159B               	bsf	27,3	;volatile
  7616                           
  7617                           ;i2c2.c: 511: break;
  7618  0138  0008               	return
  7619  0139                     i1l1904:	
  7620                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  7621                           
  7622                           
  7623                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  7624  0139  0023               	movlb	3	; select bank3
  7625  013A  0816               	movf	22,w	;volatile
  7626  013B  00F9               	movwf	??_I2C2_ISR
  7627  013C  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  7628  013D  0086               	movwf	6
  7629  013E  0187               	clrf	7
  7630  013F  0879               	movf	??_I2C2_ISR,w
  7631  0140  0081               	movwf	1
  7632  0141  3001               	movlw	1
  7633  0142  00F9               	movwf	??_I2C2_ISR
  7634  0143  0879               	movf	??_I2C2_ISR,w
  7635  0144  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  7636                           
  7637                           ;i2c2.c: 519: if(--i2c_bytes_left)
  7638  0145  3001               	movlw	1
  7639  0146  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  7640  0147  1903               	btfsc	3,2
  7641  0148  2950               	goto	i1l314
  7642                           
  7643                           ;i2c2.c: 520: {
  7644                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  7645  0149  129B               	bcf	27,5	;volatile
  7646                           
  7647                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  7648  014A  3006               	movlw	6
  7649  014B  00F9               	movwf	??_I2C2_ISR
  7650  014C  0879               	movf	??_I2C2_ISR,w
  7651  014D  0020               	movlb	0	; select bank0
  7652  014E  00CD               	movwf	_i2c2_state
  7653                           
  7654                           ;i2c2.c: 530: }
  7655  014F  2953               	goto	i1l1916
  7656  0150                     i1l314:	
  7657                           
  7658                           ;i2c2.c: 531: else
  7659                           ;i2c2.c: 532: {
  7660                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  7661  0150  169B               	bsf	27,5	;volatile
  7662                           
  7663                           ;i2c2.c: 538: I2C2_FunctionComplete();
  7664  0151  3185  2501         	fcall	_I2C2_FunctionComplete
  7665  0153                     i1l1916:	
  7666                           
  7667                           ;i2c2.c: 539: }
  7668                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  7669  0153  0023               	movlb	3	; select bank3
  7670  0154  161B               	bsf	27,4	;volatile
  7671                           
  7672                           ;i2c2.c: 543: break;
  7673  0155  0008               	return
  7674  0156                     i1l1918:	
  7675                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  7676                           
  7677                           
  7678                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  7679                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7680  0156  3000               	movlw	0
  7681  0157  3184  24C2         	fcall	_I2C2_Stop
  7682                           
  7683                           ;i2c2.c: 550: break;
  7684  0159  0008               	return
  7685  015A                     i1l1920:	
  7686                           ;i2c2.c: 552: default:
  7687                           
  7688                           
  7689                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  7690  015A  3001               	movlw	1
  7691  015B  00F9               	movwf	??_I2C2_ISR
  7692  015C  0879               	movf	??_I2C2_ISR,w
  7693  015D  0020               	movlb	0	; select bank0
  7694  015E  07C7               	addwf	_i2c2_object+4,f
  7695                           
  7696                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  7697  015F  3006               	movlw	6
  7698  0160  3184  24C2         	fcall	_I2C2_Stop
  7699                           
  7700                           ;i2c2.c: 560: }
  7701                           
  7702                           ;i2c2.c: 558: break;
  7703  0162  0008               	return
  7704  0163                     i1l1926:	
  7705  0163  0020               	movlb	0	; select bank0
  7706  0164  084D               	movf	_i2c2_state,w
  7707                           
  7708                           ; Switch size 1, requested type "space"
  7709                           ; Number of cases is 11, Range of values is 0 to 11
  7710                           ; switch strategies available:
  7711                           ; Name         Instructions Cycles
  7712                           ; direct_byte           30     6 (fixed)
  7713                           ; simple_byte           34    18 (average)
  7714                           ; jumptable            260     6 (fixed)
  7715                           ;	Chosen strategy is direct_byte
  7716  0165  0084               	movwf	4
  7717  0166  300C               	movlw	12
  7718  0167  0204               	subwf	4,w
  7719  0168  1803               	skipnc
  7720  0169  295A               	goto	i1l1920
  7721  016A  3184               	movlp	high i1S2382
  7722  016B  3504               	lslf	4,w
  7723  016C  3EAA               	addlw	low i1S2382
  7724  016D  0082               	movwf	2
  7725  016E  0008               	return
  7726  016F                     __end_of_I2C2_ISR:	
  7727                           
  7728                           	psect	swtext1
  7729  04AA                     __pswtext1:	
  7730  04AA                     i1S2382:	
  7731  04AA  3180  2847         	ljmp	i1l280
  7732  04AC  3180  2872         	ljmp	i1l285
  7733  04AE  3180  28C6         	ljmp	i1l1846
  7734  04B0  3180  28EB         	ljmp	i1l302
  7735  04B2  3181  2956         	ljmp	i1l1918
  7736  04B4  3181  291D         	ljmp	i1l309
  7737  04B6  3181  2932         	ljmp	i1l1900
  7738  04B8  3181  2956         	ljmp	i1l1918
  7739  04BA  3181  2939         	ljmp	i1l1904
  7740  04BC  3181  295A         	ljmp	i1l1920
  7741  04BE  3180  287A         	ljmp	i1l286
  7742  04C0  3180  289D         	ljmp	i1l291
  7743                           
  7744                           	psect	text25
  7745  04C2                     __ptext25:	
  7746 ;; *************** function _I2C2_Stop *****************
  7747 ;; Defined at:
  7748 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  completion_c    1    wreg     enum E13560
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  completion_c    1    1[COMMON] enum E13560
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;Total ram usage:        2 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_I2C2_ISR
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function _I2C2_Stop
  7777  04C2                     _I2C2_Stop:	
  7778                           
  7779                           ;incstack = 0
  7780                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  7781                           ;I2C2_Stop@completion_code stored from wreg
  7782  04C2  00F8               	movwf	I2C2_Stop@completion_code
  7783                           
  7784                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  7785  04C3  0023               	movlb	3	; select bank3
  7786  04C4  151B               	bsf	27,2	;volatile
  7787                           
  7788                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  7789  04C5  0873               	movf	_p_i2c2_current,w
  7790  04C6  3E02               	addlw	2
  7791  04C7  0086               	movwf	6
  7792  04C8  0187               	clrf	7
  7793  04C9  0801               	movf	1,w
  7794  04CA  1903               	btfsc	3,2
  7795  04CB  2CD7               	goto	i1l1694
  7796                           
  7797                           ;i2c2.c: 588: {
  7798                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  7799  04CC  0878               	movf	I2C2_Stop@completion_code,w
  7800  04CD  00F7               	movwf	??_I2C2_Stop
  7801  04CE  0873               	movf	_p_i2c2_current,w
  7802  04CF  3E02               	addlw	2
  7803  04D0  0086               	movwf	6
  7804  04D1  0187               	clrf	7
  7805  04D2  0801               	movf	1,w
  7806  04D3  0086               	movwf	6
  7807  04D4  0187               	clrf	7
  7808  04D5  0877               	movf	??_I2C2_Stop,w
  7809  04D6  0081               	movwf	1
  7810  04D7                     i1l1694:	
  7811                           
  7812                           ;i2c2.c: 591: }
  7813                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  7814  04D7  0020               	movlb	0	; select bank0
  7815  04D8  01CD               	clrf	_i2c2_state
  7816  04D9  0008               	return
  7817  04DA                     __end_of_I2C2_Stop:	
  7818                           
  7819                           	psect	text26
  7820  0501                     __ptext26:	
  7821 ;; *************** function _I2C2_FunctionComplete *****************
  7822 ;; Defined at:
  7823 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;Total ram usage:        1 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_I2C2_ISR
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _I2C2_FunctionComplete
  7852  0501                     _I2C2_FunctionComplete:	
  7853                           
  7854                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7858  0501  3004               	movlw	4
  7859  0502  00F7               	movwf	??_I2C2_FunctionComplete
  7860  0503  0877               	movf	??_I2C2_FunctionComplete,w
  7861  0504  07F4               	addwf	_p_i2c2_trb_current,f
  7862                           
  7863                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7864  0505  3001               	movlw	1
  7865  0506  02F2               	subwf	_i2c2_trb_count,f
  7866  0507  1D03               	btfss	3,2
  7867  0508  2D0F               	goto	i1l321
  7868                           
  7869                           ;i2c2.c: 571: {
  7870                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7871  0509  3004               	movlw	4
  7872  050A  00F7               	movwf	??_I2C2_FunctionComplete
  7873  050B  0877               	movf	??_I2C2_FunctionComplete,w
  7874  050C  0020               	movlb	0	; select bank0
  7875  050D  00CD               	movwf	_i2c2_state
  7876                           
  7877                           ;i2c2.c: 573: }
  7878  050E  0008               	return
  7879  050F                     i1l321:	
  7880                           
  7881                           ;i2c2.c: 574: else
  7882                           ;i2c2.c: 575: {
  7883                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7884  050F  0020               	movlb	0	; select bank0
  7885  0510  01CD               	clrf	_i2c2_state
  7886  0511  0ACD               	incf	_i2c2_state,f
  7887  0512  0008               	return
  7888  0513                     __end_of_I2C2_FunctionComplete:	
  7889                           
  7890                           	psect	text27
  7891  0571                     __ptext27:	
  7892 ;; *************** function _I2C2_BusCollisionISR *****************
  7893 ;; Defined at:
  7894 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		None
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_INTERRUPT_InterruptManager
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           
  7922                           ;psect for function _I2C2_BusCollisionISR
  7923  0571                     _I2C2_BusCollisionISR:	
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _I2C2_BusCollisionISR: []
  7927  0571  0008               	return
  7928  0572                     __end_of_I2C2_BusCollisionISR:	
  7929  007E                     btemp	set	126	;btemp
  7930  007E                     int$flags	set	126
  7931  007E                     wtemp	set	126
  7932  007E                     wtemp0	set	126
  7933  0080                     wtemp1	set	128
  7934  0082                     wtemp2	set	130
  7935  0084                     wtemp3	set	132
  7936  0086                     wtemp4	set	134
  7937  0088                     wtemp5	set	136
  7938  007F                     wtemp6	set	127
  7939  007E                     ttemp	set	126
  7940  007E                     ttemp0	set	126
  7941  0081                     ttemp1	set	129
  7942  0084                     ttemp2	set	132
  7943  0087                     ttemp3	set	135
  7944  007F                     ttemp4	set	127
  7945  007E                     ltemp	set	126
  7946  007E                     ltemp0	set	126
  7947  0082                     ltemp1	set	130
  7948  0086                     ltemp2	set	134
  7949  0080                     ltemp3	set	128


Data Sizes:
    Strings     30
    Constant    10
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     35      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(COMMON[2]), 
		 -> NULL(NULL[0]), 

    S599$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S611$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S611$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S622$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S622$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4208
                                             30 BANK0      5     5      0
                       _EMC1001_Read
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
            _TMR4_HasOverflowOccured
                         _TMR6_Start
                          _TMR6_Stop
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1510
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR6_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_HasOverflowOccured                              1     1      0      65
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR4_Initialize
       _TMR4_Start
     _TMR6_Initialize
   _TMR4_HasOverflowOccured
   _TMR6_Start
   _TMR6_Stop
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 20:50:25 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l35 054A  
                                 l28 04E5                  ___wmul@multiplicand 0022  
     I2C2_MasterReadTRBBuild@address 0022                                  l404 022C  
                                l520 0226                                  l602 047F  
                                _GIE 005F                                  _PR4 0293  
                       __CFG_CPD$OFF 0000                                  _PR6 0299  
                  EMC1001_Read@pData 0027                                  u905 03B0  
                                u925 03BA                                  u935 03C4  
                                u945 03CC                                  u975 03E3  
                                u995 03F2                __size_of_EMC1001_Read 003C  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       ?_EUSART_Read 0077                         __CFG_LVP$OFF 0000  
                       __CFG_ZCD$OFF 0000                     __end_of_I2C2_ISR 016F  
                               l2214 04ED                                 l2232 051E  
                               l2242 0190                                 l2322 0251  
                               l2340 02A4                                 l2270 01E4  
                               l1712 034F                                 l2280 01F1  
                               l2264 01C5                                 l2248 01A9  
                               l2336 0284                                 l1722 0362  
                               l2274 01EC                                 l2258 01BF  
                               l2282 0174                                 l1716 0356  
                               l1718 035B                                 l2286 0479  
                               l2358 02CF                                 l1744 03CB  
                               l1736 03AD                                 l1760 03E0  
                               l1738 03B9                                 l1762 03EC  
                               l1770 0401                                 l1940 0398  
                               l1748 03D4                                 l1766 03F8  
                               STR_1 042C                                 STR_2 0426  
                               STR_3 042C                                 STR_4 0410  
                               u1005 03F9                                 u1230 03A2  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u1570 0320  
                               u1590 04E3                                 u1735 0480  
                               u1745 0485                                 u1825 0275  
                               _T4PR 0293                                 u1675 01DA  
                               u1790 024F                                 _T6PR 0299  
                               _TMR4 0292                                 _TMR6 0298  
            _TMR4_HasOverflowOccured 0513                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0227  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E          I2C2_MasterReadTRBBuild@ptrb 0026  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 0368                           _i2c2_state 004D  
                      ?_EUSART_Write 0077       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 055B              _I2C2_MasterReadTRBBuild 042E  
                              ?_main 0077                        __CFG_WDTE$OFF 0000  
                  __end_of_I2C2_Stop 04DA                                _T4CON 0294  
                              _T6CON 029A                                _T4HLT 0295  
                    __end_of___lwdiv 03D9                                _T6HLT 029B  
                              i1l220 001B       __size_of_I2C2_FunctionComplete 0012  
                              i1l310 012B                                i1l302 00EB  
                              i1l216 0013                                i1l321 050F  
                              i1l314 0150                                i1l306 010A  
                              i1l309 011D                                i1l280 0047  
                    __end_of___lwmod 0406                                i1l291 009D  
                              i1l292 00A9                                _T4TMR 0292  
                              i1l285 0072                                i1l286 007A  
                              _T4RST 0297                                _T6TMR 0298  
                              _T6RST 029D        __end_of_I2C2_FunctionComplete 0513  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 0521                      __end_of_dpowers 0410  
                 __size_of_TMR6_Stop 0004                          ?_TMR4_Start 0077  
                              _putch 0561                          ?_TMR6_Start 0077  
       I2C2_MasterReadTRBBuild@pdata 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 02D2               ??_I2C2_MasterTRBInsert 0022  
                     ??_EUSART_Write 0020          ?_INTERRUPT_InterruptManager 0077  
   __end_of_I2C2_MasterWriteTRBBuild 0476                               ??_main 003E  
                        _i2c2_object 0043                      _TMR6_Initialize 052F  
          ??_TMR4_HasOverflowOccured 0020                               i1S2382 04AA  
                             _ANSELA 0F38                               ?_putch 0077  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                             _RC1REG 0119                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24         __end_of_I2C2_BusCollisionISR 0572  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _RC6PPS 0F26                               _ODCONC 0F50  
                             i1l1900 0132                               i1l1814 0065  
                             i1l1920 015A                               i1l1904 0139  
                             i1l1832 0097                               i1l1826 0086  
                             i1l1916 0153                               i1l1694 04D7  
                             i1l1918 0156                               i1l1846 00C6  
                             i1l1926 0163                               i1l1880 00F9  
                             i1l1872 00E5                               i1l1866 00DA  
                             i1l1888 0112                       __CFG_WDTCCS$SC 0000  
                             _OSCFRQ 0893                               _TX1REG 011A  
                             _TX1STA 011E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0476                       _p_i2c2_current 0073  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                  __end_of_TMR6_Stop 056B                            ??___lwdiv 0024  
                          ??___lwmod 002C                  __size_of_TMR4_Start 0003  
            __end_of_TMR4_Initialize 052F                            ?_I2C2_ISR 0077  
                __size_of_TMR6_Start 0003             I2C2_Stop@completion_code 0078  
                             _printf 016F        I2C2_MasterReadTRBBuild@length 0021  
               __size_of_EUSART_Read 0015                    _SYSTEM_Initialize 04EF  
            __end_of__initialization 0030                   ?_SYSTEM_Initialize 0077  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 004E  
                     __pcstackCOMMON 0077                  ??_SYSTEM_Initialize 0021  
                     _i2c2_trb_count 0072                        __end_of_putch 0567  
                         ??_I2C2_ISR 0079              __end_of_TMR6_Initialize 053C  
           _I2C2_MasterWriteTRBBuild 0456         I2C2_MasterWriteTRBBuild@ptrb 0026  
          __end_of_SYSTEM_Initialize 0501                              ??_putch 0021  
                         __pbssBANK0 0043                 __end_of_EUSART_Write 0552  
              _TMR4_InterruptHandler 0048                           __pmaintext 0227  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                     ?_TMR4_Initialize 0077  
                     _SSP2DATPPSbits 0EC9                 _I2C2_BusCollisionISR 0571  
                            ?_printf 002E                         _T4AINPPSbits 0E9D  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 004C                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 04C2  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                         ??_TMR4_Start 0020  
                       ??_TMR6_Start 0020                      _I2C2_Initialize 0492  
             I2C2_MasterRead@trBlock 0056                         _T6AINPPSbits 0E9E  
               __CFG_SCANE$available 0000                      __size_of___wmul 001C  
                            ___lwdiv 03A4                              ___lwmod 03D9  
              ?_I2C2_BusCollisionISR 0077                   __end_of_TMR4_Start 0571  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 056E  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 016F  
                            __ptext2 0561                              __ptext3 0548  
                            __ptext4 03D9                              __ptext5 03A4  
                            __ptext6 0476                              __ptext7 0567  
                            __ptext8 056B                              __ptext9 0513  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 00B8  
                            _dpowers 0406                _OSCILLATOR_Initialize 0552  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0020  
                         ?_I2C2_Stop 0077                _I2C2_FunctionComplete 0501  
                          _T6CONbits 029A                            _T4HLTbits 0295  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 0012  
                            clrloop0 055C                 end_of_initialization 0030  
                          _T4RSTbits 0297                            _T6RSTbits 029D  
                  _EUSART_Initialize 053C                   ?_EUSART_Initialize 0077  
                 _p_i2c2_trb_current 0074                              printf@c 003D  
                            printf@f 002E               I2C2_ISR@i2c_bytes_left 0070  
                       __pstringtext 0406        __size_of_I2C2_MasterTRBInsert 0046  
              __CFG_WDTCPS$WDTCPS_31 0000                  ??_EUSART_Initialize 0020  
                          _TMR6_Stop 0567                    __size_of_I2C2_ISR 013B  
            __end_of_I2C2_Initialize 04AA                __size_of_EUSART_Write 000A  
                   __CFG_FEXTOSC$OFF 0000                            _RXPPSbits 0ECB  
          __end_of_EUSART_Initialize 0548                           main@templo 0042  
             ??_I2C2_BusCollisionISR 0077           ??_I2C2_MasterWriteTRBBuild 0024  
                     __end_of___wmul 0492                         _EUSART_Write 0548  
             ?_OSCILLATOR_Initialize 0077                           ?_TMR6_Stop 0077  
           ?_TMR4_HasOverflowOccured 0077                       __end_of_printf 0227  
             ?_I2C2_FunctionComplete 0077                  start_initialization 0022  
                        ??_I2C2_Stop 0077      __size_of_PIN_MANAGER_Initialize 0050  
                      ??_EUSART_Read 0020                          putch@txData 0021  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0071                             ??_printf 0034  
                        __pbssCOMMON 0070                     ?_I2C2_Initialize 0077  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 005E           __size_of_EUSART_Initialize 000C  
                __end_of_EUSART_Read 04EF                _TMR6_InterruptHandler 004A  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 02D2  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028      __end_of_TMR4_HasOverflowOccured 0521  
                           _I2C2_ISR 0034         ??_INTERRUPT_InterruptManager 007D  
                          __pswtext1 04AA                          ??_TMR6_Stop 0020  
                           _BAUD1CON 011F             __size_of_TMR4_Initialize 000E  
                   ___lwdiv@quotient 0025                 __CFG_RSTOSC$HFINTPLL 0000  
                           _T4CLKCON 0296                       __size_of_putch 0006  
                           _T6CLKCON 029C      __end_of_I2C2_MasterReadTRBBuild 0456  
                     ___wmul@product 0024                             _LATAbits 0016  
                          clear_ram0 055B                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR3bits 070F  
                           _PIR4bits 0710                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 0039                           printf@prec 003A  
      TMR4_HasOverflowOccured@status 0020             __size_of_TMR6_Initialize 000D  
                        _EUSART_Read 04DA         __end_of_I2C2_MasterTRBInsert 0368  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
            ??_I2C2_FunctionComplete 0077                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 04EF  
                           __ptext11 052F                             __ptext20 0456  
                           __ptext12 0521                             __ptext21 0322  
                           __ptext13 056E                             __ptext22 042E  
                           __ptext14 02D2                             __ptext15 0552  
                           __ptext24 0034                             __ptext16 0492  
                           __ptext25 04C2                             __ptext17 053C  
                           __ptext26 0501                             __ptext18 04DA  
                           __ptext27 0571                             __ptext19 0368  
               __end_of_EMC1001_Read 03A4                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B     __size_of_TMR4_HasOverflowOccured 000E  
                  ??_TMR4_Initialize 0020                        __size_of_main 00AB  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0020  
         _INTERRUPT_InterruptManager 0004                             main@data 0040  
                          printf@val 003B              I2C2_MasterWrite@trBlock 005A  
                           main@temp 0041        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0075  
            ?_PIN_MANAGER_Initialize 0077                    ??_TMR6_Initialize 0020  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 0038                 _I2C2_MasterTRBInsert 0322  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                         _TMR4_Start 056E                           _TMR6_Start 056B  
                 EUSART_Write@txData 0020       __end_of_PIN_MANAGER_Initialize 0322  
           __size_of_I2C2_Initialize 0018                   __size_of_I2C2_Stop 0018  
