

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 19:30:16 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  0010                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  001C                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001D                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  008C                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  008E                     	;# 
    71  008F                     	;# 
    72  0090                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0093                     	;# 
    76  0094                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  0110                     	;# 
    93  0110                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0112                     	;# 
    97  0113                     	;# 
    98  0114                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0119                     	;# 
   105  0119                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011A                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011C                     	;# 
   116  011C                     	;# 
   117  011C                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  011E                     	;# 
   123  011E                     	;# 
   124  011F                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  018F                     	;# 
   133  0190                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0198                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  020F                     	;# 
   147  020F                     	;# 
   148  0210                     	;# 
   149  0210                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0218                     	;# 
   162  0219                     	;# 
   163  021A                     	;# 
   164  021B                     	;# 
   165  021B                     	;# 
   166  021C                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  028C                     	;# 
   173  028C                     	;# 
   174  028D                     	;# 
   175  028D                     	;# 
   176  028E                     	;# 
   177  028F                     	;# 
   178  0290                     	;# 
   179  0290                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0292                     	;# 
   183  0293                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0296                     	;# 
   188  0296                     	;# 
   189  0297                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029C                     	;# 
   198  029D                     	;# 
   199  030C                     	;# 
   200  030C                     	;# 
   201  030D                     	;# 
   202  030E                     	;# 
   203  030F                     	;# 
   204  0310                     	;# 
   205  0310                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  0314                     	;# 
   210  0314                     	;# 
   211  0315                     	;# 
   212  0316                     	;# 
   213  0317                     	;# 
   214  0318                     	;# 
   215  0318                     	;# 
   216  0319                     	;# 
   217  031A                     	;# 
   218  031B                     	;# 
   219  031C                     	;# 
   220  031C                     	;# 
   221  031D                     	;# 
   222  031E                     	;# 
   223  031F                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  0390                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  040C                     	;# 
   231  040D                     	;# 
   232  040E                     	;# 
   233  040F                     	;# 
   234  0410                     	;# 
   235  0411                     	;# 
   236  0416                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  0418                     	;# 
   240  0418                     	;# 
   241  0419                     	;# 
   242  041A                     	;# 
   243  041A                     	;# 
   244  041B                     	;# 
   245  041C                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  041F                     	;# 
   250  048C                     	;# 
   251  048C                     	;# 
   252  048D                     	;# 
   253  048E                     	;# 
   254  048F                     	;# 
   255  048F                     	;# 
   256  0490                     	;# 
   257  0491                     	;# 
   258  0492                     	;# 
   259  0492                     	;# 
   260  0493                     	;# 
   261  0494                     	;# 
   262  0495                     	;# 
   263  0495                     	;# 
   264  0496                     	;# 
   265  0497                     	;# 
   266  0498                     	;# 
   267  0499                     	;# 
   268  049A                     	;# 
   269  049B                     	;# 
   270  049C                     	;# 
   271  049D                     	;# 
   272  050C                     	;# 
   273  050C                     	;# 
   274  050D                     	;# 
   275  050E                     	;# 
   276  050F                     	;# 
   277  050F                     	;# 
   278  0510                     	;# 
   279  0511                     	;# 
   280  0512                     	;# 
   281  0512                     	;# 
   282  0513                     	;# 
   283  0514                     	;# 
   284  0515                     	;# 
   285  0515                     	;# 
   286  0516                     	;# 
   287  0517                     	;# 
   288  0518                     	;# 
   289  0519                     	;# 
   290  051A                     	;# 
   291  051B                     	;# 
   292  051C                     	;# 
   293  051D                     	;# 
   294  058C                     	;# 
   295  058C                     	;# 
   296  058D                     	;# 
   297  058E                     	;# 
   298  058F                     	;# 
   299  058F                     	;# 
   300  0590                     	;# 
   301  0591                     	;# 
   302  0592                     	;# 
   303  0593                     	;# 
   304  060C                     	;# 
   305  060D                     	;# 
   306  060E                     	;# 
   307  060F                     	;# 
   308  0610                     	;# 
   309  0611                     	;# 
   310  0612                     	;# 
   311  0613                     	;# 
   312  0614                     	;# 
   313  0616                     	;# 
   314  0617                     	;# 
   315  0618                     	;# 
   316  0619                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  061D                     	;# 
   321  061E                     	;# 
   322  068C                     	;# 
   323  068D                     	;# 
   324  068E                     	;# 
   325  068F                     	;# 
   326  0690                     	;# 
   327  0691                     	;# 
   328  0692                     	;# 
   329  0693                     	;# 
   330  0694                     	;# 
   331  070C                     	;# 
   332  070D                     	;# 
   333  070E                     	;# 
   334  070F                     	;# 
   335  0710                     	;# 
   336  0711                     	;# 
   337  0712                     	;# 
   338  0713                     	;# 
   339  0714                     	;# 
   340  0716                     	;# 
   341  0717                     	;# 
   342  0718                     	;# 
   343  0719                     	;# 
   344  071A                     	;# 
   345  071B                     	;# 
   346  071C                     	;# 
   347  071D                     	;# 
   348  071E                     	;# 
   349  0796                     	;# 
   350  0797                     	;# 
   351  0798                     	;# 
   352  0799                     	;# 
   353  079A                     	;# 
   354  079B                     	;# 
   355  080C                     	;# 
   356  080D                     	;# 
   357  080E                     	;# 
   358  080F                     	;# 
   359  0810                     	;# 
   360  0811                     	;# 
   361  0812                     	;# 
   362  0813                     	;# 
   363  0814                     	;# 
   364  081A                     	;# 
   365  081B                     	;# 
   366  081C                     	;# 
   367  081D                     	;# 
   368  081E                     	;# 
   369  081F                     	;# 
   370  088C                     	;# 
   371  088D                     	;# 
   372  088E                     	;# 
   373  088F                     	;# 
   374  0890                     	;# 
   375  0891                     	;# 
   376  0892                     	;# 
   377  0893                     	;# 
   378  0895                     	;# 
   379  0896                     	;# 
   380  0897                     	;# 
   381  0898                     	;# 
   382  0899                     	;# 
   383  089A                     	;# 
   384  089B                     	;# 
   385  090C                     	;# 
   386  090E                     	;# 
   387  090F                     	;# 
   388  091F                     	;# 
   389  091F                     	;# 
   390  098F                     	;# 
   391  098F                     	;# 
   392  0990                     	;# 
   393  0991                     	;# 
   394  0992                     	;# 
   395  0993                     	;# 
   396  0994                     	;# 
   397  0995                     	;# 
   398  0996                     	;# 
   399  0997                     	;# 
   400  0E0F                     	;# 
   401  0E10                     	;# 
   402  0E11                     	;# 
   403  0E12                     	;# 
   404  0E13                     	;# 
   405  0E14                     	;# 
   406  0E15                     	;# 
   407  0E16                     	;# 
   408  0E17                     	;# 
   409  0E18                     	;# 
   410  0E19                     	;# 
   411  0E1A                     	;# 
   412  0E1B                     	;# 
   413  0E1C                     	;# 
   414  0E1D                     	;# 
   415  0E1E                     	;# 
   416  0E1F                     	;# 
   417  0E20                     	;# 
   418  0E21                     	;# 
   419  0E22                     	;# 
   420  0E23                     	;# 
   421  0E24                     	;# 
   422  0E25                     	;# 
   423  0E26                     	;# 
   424  0E27                     	;# 
   425  0E28                     	;# 
   426  0E29                     	;# 
   427  0E2A                     	;# 
   428  0E2B                     	;# 
   429  0E2C                     	;# 
   430  0E2D                     	;# 
   431  0E2E                     	;# 
   432  0E2F                     	;# 
   433  0E30                     	;# 
   434  0E31                     	;# 
   435  0E32                     	;# 
   436  0E33                     	;# 
   437  0E34                     	;# 
   438  0E35                     	;# 
   439  0E36                     	;# 
   440  0E37                     	;# 
   441  0E8F                     	;# 
   442  0E90                     	;# 
   443  0E91                     	;# 
   444  0E92                     	;# 
   445  0E93                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E96                     	;# 
   449  0E97                     	;# 
   450  0E9C                     	;# 
   451  0E9D                     	;# 
   452  0E9E                     	;# 
   453  0EA1                     	;# 
   454  0EA2                     	;# 
   455  0EA3                     	;# 
   456  0EA4                     	;# 
   457  0EA5                     	;# 
   458  0EA9                     	;# 
   459  0EAA                     	;# 
   460  0EAB                     	;# 
   461  0EAC                     	;# 
   462  0EB1                     	;# 
   463  0EB2                     	;# 
   464  0EB3                     	;# 
   465  0EB8                     	;# 
   466  0EB9                     	;# 
   467  0EBA                     	;# 
   468  0EBB                     	;# 
   469  0EBC                     	;# 
   470  0EBD                     	;# 
   471  0EBE                     	;# 
   472  0EC3                     	;# 
   473  0EC5                     	;# 
   474  0EC6                     	;# 
   475  0EC7                     	;# 
   476  0EC8                     	;# 
   477  0EC9                     	;# 
   478  0ECA                     	;# 
   479  0ECB                     	;# 
   480  0ECC                     	;# 
   481  0F10                     	;# 
   482  0F11                     	;# 
   483  0F12                     	;# 
   484  0F13                     	;# 
   485  0F14                     	;# 
   486  0F15                     	;# 
   487  0F16                     	;# 
   488  0F17                     	;# 
   489  0F18                     	;# 
   490  0F19                     	;# 
   491  0F1A                     	;# 
   492  0F1B                     	;# 
   493  0F1C                     	;# 
   494  0F1D                     	;# 
   495  0F1E                     	;# 
   496  0F1F                     	;# 
   497  0F20                     	;# 
   498  0F21                     	;# 
   499  0F22                     	;# 
   500  0F23                     	;# 
   501  0F24                     	;# 
   502  0F25                     	;# 
   503  0F26                     	;# 
   504  0F27                     	;# 
   505  0F38                     	;# 
   506  0F39                     	;# 
   507  0F3A                     	;# 
   508  0F3B                     	;# 
   509  0F3C                     	;# 
   510  0F3D                     	;# 
   511  0F3E                     	;# 
   512  0F3F                     	;# 
   513  0F40                     	;# 
   514  0F41                     	;# 
   515  0F43                     	;# 
   516  0F44                     	;# 
   517  0F45                     	;# 
   518  0F46                     	;# 
   519  0F47                     	;# 
   520  0F48                     	;# 
   521  0F49                     	;# 
   522  0F4A                     	;# 
   523  0F4B                     	;# 
   524  0F4C                     	;# 
   525  0F4E                     	;# 
   526  0F4F                     	;# 
   527  0F50                     	;# 
   528  0F51                     	;# 
   529  0F52                     	;# 
   530  0F53                     	;# 
   531  0F54                     	;# 
   532  0F55                     	;# 
   533  0F56                     	;# 
   534  0F57                     	;# 
   535  0F65                     	;# 
   536  0F68                     	;# 
   537  0F69                     	;# 
   538  0F6A                     	;# 
   539  0F6B                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  001C                     	;# 
   574  001C                     	;# 
   575  001D                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  008E                     	;# 
   584  008F                     	;# 
   585  0090                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  010E                     	;# 
   604  010F                     	;# 
   605  0110                     	;# 
   606  0110                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0112                     	;# 
   610  0113                     	;# 
   611  0114                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0116                     	;# 
   616  0117                     	;# 
   617  0119                     	;# 
   618  0119                     	;# 
   619  0119                     	;# 
   620  011A                     	;# 
   621  011A                     	;# 
   622  011A                     	;# 
   623  011B                     	;# 
   624  011B                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011B                     	;# 
   628  011C                     	;# 
   629  011C                     	;# 
   630  011C                     	;# 
   631  011D                     	;# 
   632  011D                     	;# 
   633  011D                     	;# 
   634  011E                     	;# 
   635  011E                     	;# 
   636  011E                     	;# 
   637  011F                     	;# 
   638  011F                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  011F                     	;# 
   642  018C                     	;# 
   643  018D                     	;# 
   644  018E                     	;# 
   645  018F                     	;# 
   646  0190                     	;# 
   647  0191                     	;# 
   648  0192                     	;# 
   649  0196                     	;# 
   650  0197                     	;# 
   651  0198                     	;# 
   652  0199                     	;# 
   653  019A                     	;# 
   654  019B                     	;# 
   655  019C                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  020E                     	;# 
   659  020F                     	;# 
   660  020F                     	;# 
   661  0210                     	;# 
   662  0210                     	;# 
   663  0211                     	;# 
   664  0211                     	;# 
   665  0212                     	;# 
   666  0213                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  0218                     	;# 
   675  0219                     	;# 
   676  021A                     	;# 
   677  021B                     	;# 
   678  021B                     	;# 
   679  021C                     	;# 
   680  021C                     	;# 
   681  021D                     	;# 
   682  021D                     	;# 
   683  021E                     	;# 
   684  021F                     	;# 
   685  028C                     	;# 
   686  028C                     	;# 
   687  028D                     	;# 
   688  028D                     	;# 
   689  028E                     	;# 
   690  028F                     	;# 
   691  0290                     	;# 
   692  0290                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0292                     	;# 
   696  0293                     	;# 
   697  0293                     	;# 
   698  0294                     	;# 
   699  0295                     	;# 
   700  0296                     	;# 
   701  0296                     	;# 
   702  0297                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  0299                     	;# 
   707  029A                     	;# 
   708  029B                     	;# 
   709  029C                     	;# 
   710  029C                     	;# 
   711  029D                     	;# 
   712  030C                     	;# 
   713  030C                     	;# 
   714  030D                     	;# 
   715  030E                     	;# 
   716  030F                     	;# 
   717  0310                     	;# 
   718  0310                     	;# 
   719  0311                     	;# 
   720  0312                     	;# 
   721  0313                     	;# 
   722  0314                     	;# 
   723  0314                     	;# 
   724  0315                     	;# 
   725  0316                     	;# 
   726  0317                     	;# 
   727  0318                     	;# 
   728  0318                     	;# 
   729  0319                     	;# 
   730  031A                     	;# 
   731  031B                     	;# 
   732  031C                     	;# 
   733  031C                     	;# 
   734  031D                     	;# 
   735  031E                     	;# 
   736  031F                     	;# 
   737  038C                     	;# 
   738  038D                     	;# 
   739  038E                     	;# 
   740  0390                     	;# 
   741  0391                     	;# 
   742  0392                     	;# 
   743  040C                     	;# 
   744  040D                     	;# 
   745  040E                     	;# 
   746  040F                     	;# 
   747  0410                     	;# 
   748  0411                     	;# 
   749  0416                     	;# 
   750  0416                     	;# 
   751  0417                     	;# 
   752  0418                     	;# 
   753  0418                     	;# 
   754  0419                     	;# 
   755  041A                     	;# 
   756  041A                     	;# 
   757  041B                     	;# 
   758  041C                     	;# 
   759  041C                     	;# 
   760  041D                     	;# 
   761  041E                     	;# 
   762  041F                     	;# 
   763  048C                     	;# 
   764  048C                     	;# 
   765  048D                     	;# 
   766  048E                     	;# 
   767  048F                     	;# 
   768  048F                     	;# 
   769  0490                     	;# 
   770  0491                     	;# 
   771  0492                     	;# 
   772  0492                     	;# 
   773  0493                     	;# 
   774  0494                     	;# 
   775  0495                     	;# 
   776  0495                     	;# 
   777  0496                     	;# 
   778  0497                     	;# 
   779  0498                     	;# 
   780  0499                     	;# 
   781  049A                     	;# 
   782  049B                     	;# 
   783  049C                     	;# 
   784  049D                     	;# 
   785  050C                     	;# 
   786  050C                     	;# 
   787  050D                     	;# 
   788  050E                     	;# 
   789  050F                     	;# 
   790  050F                     	;# 
   791  0510                     	;# 
   792  0511                     	;# 
   793  0512                     	;# 
   794  0512                     	;# 
   795  0513                     	;# 
   796  0514                     	;# 
   797  0515                     	;# 
   798  0515                     	;# 
   799  0516                     	;# 
   800  0517                     	;# 
   801  0518                     	;# 
   802  0519                     	;# 
   803  051A                     	;# 
   804  051B                     	;# 
   805  051C                     	;# 
   806  051D                     	;# 
   807  058C                     	;# 
   808  058C                     	;# 
   809  058D                     	;# 
   810  058E                     	;# 
   811  058F                     	;# 
   812  058F                     	;# 
   813  0590                     	;# 
   814  0591                     	;# 
   815  0592                     	;# 
   816  0593                     	;# 
   817  060C                     	;# 
   818  060D                     	;# 
   819  060E                     	;# 
   820  060F                     	;# 
   821  0610                     	;# 
   822  0611                     	;# 
   823  0612                     	;# 
   824  0613                     	;# 
   825  0614                     	;# 
   826  0616                     	;# 
   827  0617                     	;# 
   828  0618                     	;# 
   829  0619                     	;# 
   830  061A                     	;# 
   831  061B                     	;# 
   832  061C                     	;# 
   833  061D                     	;# 
   834  061E                     	;# 
   835  068C                     	;# 
   836  068D                     	;# 
   837  068E                     	;# 
   838  068F                     	;# 
   839  0690                     	;# 
   840  0691                     	;# 
   841  0692                     	;# 
   842  0693                     	;# 
   843  0694                     	;# 
   844  070C                     	;# 
   845  070D                     	;# 
   846  070E                     	;# 
   847  070F                     	;# 
   848  0710                     	;# 
   849  0711                     	;# 
   850  0712                     	;# 
   851  0713                     	;# 
   852  0714                     	;# 
   853  0716                     	;# 
   854  0717                     	;# 
   855  0718                     	;# 
   856  0719                     	;# 
   857  071A                     	;# 
   858  071B                     	;# 
   859  071C                     	;# 
   860  071D                     	;# 
   861  071E                     	;# 
   862  0796                     	;# 
   863  0797                     	;# 
   864  0798                     	;# 
   865  0799                     	;# 
   866  079A                     	;# 
   867  079B                     	;# 
   868  080C                     	;# 
   869  080D                     	;# 
   870  080E                     	;# 
   871  080F                     	;# 
   872  0810                     	;# 
   873  0811                     	;# 
   874  0812                     	;# 
   875  0813                     	;# 
   876  0814                     	;# 
   877  081A                     	;# 
   878  081B                     	;# 
   879  081C                     	;# 
   880  081D                     	;# 
   881  081E                     	;# 
   882  081F                     	;# 
   883  088C                     	;# 
   884  088D                     	;# 
   885  088E                     	;# 
   886  088F                     	;# 
   887  0890                     	;# 
   888  0891                     	;# 
   889  0892                     	;# 
   890  0893                     	;# 
   891  0895                     	;# 
   892  0896                     	;# 
   893  0897                     	;# 
   894  0898                     	;# 
   895  0899                     	;# 
   896  089A                     	;# 
   897  089B                     	;# 
   898  090C                     	;# 
   899  090E                     	;# 
   900  090F                     	;# 
   901  091F                     	;# 
   902  091F                     	;# 
   903  098F                     	;# 
   904  098F                     	;# 
   905  0990                     	;# 
   906  0991                     	;# 
   907  0992                     	;# 
   908  0993                     	;# 
   909  0994                     	;# 
   910  0995                     	;# 
   911  0996                     	;# 
   912  0997                     	;# 
   913  0E0F                     	;# 
   914  0E10                     	;# 
   915  0E11                     	;# 
   916  0E12                     	;# 
   917  0E13                     	;# 
   918  0E14                     	;# 
   919  0E15                     	;# 
   920  0E16                     	;# 
   921  0E17                     	;# 
   922  0E18                     	;# 
   923  0E19                     	;# 
   924  0E1A                     	;# 
   925  0E1B                     	;# 
   926  0E1C                     	;# 
   927  0E1D                     	;# 
   928  0E1E                     	;# 
   929  0E1F                     	;# 
   930  0E20                     	;# 
   931  0E21                     	;# 
   932  0E22                     	;# 
   933  0E23                     	;# 
   934  0E24                     	;# 
   935  0E25                     	;# 
   936  0E26                     	;# 
   937  0E27                     	;# 
   938  0E28                     	;# 
   939  0E29                     	;# 
   940  0E2A                     	;# 
   941  0E2B                     	;# 
   942  0E2C                     	;# 
   943  0E2D                     	;# 
   944  0E2E                     	;# 
   945  0E2F                     	;# 
   946  0E30                     	;# 
   947  0E31                     	;# 
   948  0E32                     	;# 
   949  0E33                     	;# 
   950  0E34                     	;# 
   951  0E35                     	;# 
   952  0E36                     	;# 
   953  0E37                     	;# 
   954  0E8F                     	;# 
   955  0E90                     	;# 
   956  0E91                     	;# 
   957  0E92                     	;# 
   958  0E93                     	;# 
   959  0E94                     	;# 
   960  0E95                     	;# 
   961  0E96                     	;# 
   962  0E97                     	;# 
   963  0E9C                     	;# 
   964  0E9D                     	;# 
   965  0E9E                     	;# 
   966  0EA1                     	;# 
   967  0EA2                     	;# 
   968  0EA3                     	;# 
   969  0EA4                     	;# 
   970  0EA5                     	;# 
   971  0EA9                     	;# 
   972  0EAA                     	;# 
   973  0EAB                     	;# 
   974  0EAC                     	;# 
   975  0EB1                     	;# 
   976  0EB2                     	;# 
   977  0EB3                     	;# 
   978  0EB8                     	;# 
   979  0EB9                     	;# 
   980  0EBA                     	;# 
   981  0EBB                     	;# 
   982  0EBC                     	;# 
   983  0EBD                     	;# 
   984  0EBE                     	;# 
   985  0EC3                     	;# 
   986  0EC5                     	;# 
   987  0EC6                     	;# 
   988  0EC7                     	;# 
   989  0EC8                     	;# 
   990  0EC9                     	;# 
   991  0ECA                     	;# 
   992  0ECB                     	;# 
   993  0ECC                     	;# 
   994  0F10                     	;# 
   995  0F11                     	;# 
   996  0F12                     	;# 
   997  0F13                     	;# 
   998  0F14                     	;# 
   999  0F15                     	;# 
  1000  0F16                     	;# 
  1001  0F17                     	;# 
  1002  0F18                     	;# 
  1003  0F19                     	;# 
  1004  0F1A                     	;# 
  1005  0F1B                     	;# 
  1006  0F1C                     	;# 
  1007  0F1D                     	;# 
  1008  0F1E                     	;# 
  1009  0F1F                     	;# 
  1010  0F20                     	;# 
  1011  0F21                     	;# 
  1012  0F22                     	;# 
  1013  0F23                     	;# 
  1014  0F24                     	;# 
  1015  0F25                     	;# 
  1016  0F26                     	;# 
  1017  0F27                     	;# 
  1018  0F38                     	;# 
  1019  0F39                     	;# 
  1020  0F3A                     	;# 
  1021  0F3B                     	;# 
  1022  0F3C                     	;# 
  1023  0F3D                     	;# 
  1024  0F3E                     	;# 
  1025  0F3F                     	;# 
  1026  0F40                     	;# 
  1027  0F41                     	;# 
  1028  0F43                     	;# 
  1029  0F44                     	;# 
  1030  0F45                     	;# 
  1031  0F46                     	;# 
  1032  0F47                     	;# 
  1033  0F48                     	;# 
  1034  0F49                     	;# 
  1035  0F4A                     	;# 
  1036  0F4B                     	;# 
  1037  0F4C                     	;# 
  1038  0F4E                     	;# 
  1039  0F4F                     	;# 
  1040  0F50                     	;# 
  1041  0F51                     	;# 
  1042  0F52                     	;# 
  1043  0F53                     	;# 
  1044  0F54                     	;# 
  1045  0F55                     	;# 
  1046  0F56                     	;# 
  1047  0F57                     	;# 
  1048  0F65                     	;# 
  1049  0F68                     	;# 
  1050  0F69                     	;# 
  1051  0F6A                     	;# 
  1052  0F6B                     	;# 
  1053  0FE4                     	;# 
  1054  0FE5                     	;# 
  1055  0FE6                     	;# 
  1056  0FE7                     	;# 
  1057  0FE8                     	;# 
  1058  0FE9                     	;# 
  1059  0FEA                     	;# 
  1060  0FEB                     	;# 
  1061  0FED                     	;# 
  1062  0FEE                     	;# 
  1063  0FEF                     	;# 
  1064  0000                     	;# 
  1065  0001                     	;# 
  1066  0002                     	;# 
  1067  0003                     	;# 
  1068  0004                     	;# 
  1069  0005                     	;# 
  1070  0006                     	;# 
  1071  0007                     	;# 
  1072  0008                     	;# 
  1073  0009                     	;# 
  1074  000A                     	;# 
  1075  000B                     	;# 
  1076  000C                     	;# 
  1077  000D                     	;# 
  1078  000E                     	;# 
  1079  0010                     	;# 
  1080  0011                     	;# 
  1081  0012                     	;# 
  1082  0013                     	;# 
  1083  0016                     	;# 
  1084  0017                     	;# 
  1085  0018                     	;# 
  1086  001C                     	;# 
  1087  001C                     	;# 
  1088  001D                     	;# 
  1089  001D                     	;# 
  1090  001E                     	;# 
  1091  001F                     	;# 
  1092  008C                     	;# 
  1093  008C                     	;# 
  1094  008D                     	;# 
  1095  008E                     	;# 
  1096  008E                     	;# 
  1097  008F                     	;# 
  1098  0090                     	;# 
  1099  0090                     	;# 
  1100  0091                     	;# 
  1101  0093                     	;# 
  1102  0094                     	;# 
  1103  0095                     	;# 
  1104  0096                     	;# 
  1105  0097                     	;# 
  1106  0098                     	;# 
  1107  0099                     	;# 
  1108  009A                     	;# 
  1109  009B                     	;# 
  1110  009C                     	;# 
  1111  009D                     	;# 
  1112  009E                     	;# 
  1113  010C                     	;# 
  1114  010D                     	;# 
  1115  010E                     	;# 
  1116  010E                     	;# 
  1117  010F                     	;# 
  1118  0110                     	;# 
  1119  0110                     	;# 
  1120  0111                     	;# 
  1121  0112                     	;# 
  1122  0112                     	;# 
  1123  0113                     	;# 
  1124  0114                     	;# 
  1125  0114                     	;# 
  1126  0115                     	;# 
  1127  0116                     	;# 
  1128  0116                     	;# 
  1129  0117                     	;# 
  1130  0119                     	;# 
  1131  0119                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011A                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011C                     	;# 
  1142  011C                     	;# 
  1143  011C                     	;# 
  1144  011D                     	;# 
  1145  011D                     	;# 
  1146  011D                     	;# 
  1147  011E                     	;# 
  1148  011E                     	;# 
  1149  011E                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  018C                     	;# 
  1156  018D                     	;# 
  1157  018E                     	;# 
  1158  018F                     	;# 
  1159  0190                     	;# 
  1160  0191                     	;# 
  1161  0192                     	;# 
  1162  0196                     	;# 
  1163  0197                     	;# 
  1164  0198                     	;# 
  1165  0199                     	;# 
  1166  019A                     	;# 
  1167  019B                     	;# 
  1168  019C                     	;# 
  1169  020C                     	;# 
  1170  020D                     	;# 
  1171  020E                     	;# 
  1172  020F                     	;# 
  1173  020F                     	;# 
  1174  0210                     	;# 
  1175  0210                     	;# 
  1176  0211                     	;# 
  1177  0211                     	;# 
  1178  0212                     	;# 
  1179  0213                     	;# 
  1180  0214                     	;# 
  1181  0215                     	;# 
  1182  0215                     	;# 
  1183  0216                     	;# 
  1184  0216                     	;# 
  1185  0217                     	;# 
  1186  0217                     	;# 
  1187  0218                     	;# 
  1188  0219                     	;# 
  1189  021A                     	;# 
  1190  021B                     	;# 
  1191  021B                     	;# 
  1192  021C                     	;# 
  1193  021C                     	;# 
  1194  021D                     	;# 
  1195  021D                     	;# 
  1196  021E                     	;# 
  1197  021F                     	;# 
  1198  028C                     	;# 
  1199  028C                     	;# 
  1200  028D                     	;# 
  1201  028D                     	;# 
  1202  028E                     	;# 
  1203  028F                     	;# 
  1204  0290                     	;# 
  1205  0290                     	;# 
  1206  0291                     	;# 
  1207  0292                     	;# 
  1208  0292                     	;# 
  1209  0293                     	;# 
  1210  0293                     	;# 
  1211  0294                     	;# 
  1212  0295                     	;# 
  1213  0296                     	;# 
  1214  0296                     	;# 
  1215  0297                     	;# 
  1216  0298                     	;# 
  1217  0298                     	;# 
  1218  0299                     	;# 
  1219  0299                     	;# 
  1220  029A                     	;# 
  1221  029B                     	;# 
  1222  029C                     	;# 
  1223  029C                     	;# 
  1224  029D                     	;# 
  1225  030C                     	;# 
  1226  030C                     	;# 
  1227  030D                     	;# 
  1228  030E                     	;# 
  1229  030F                     	;# 
  1230  0310                     	;# 
  1231  0310                     	;# 
  1232  0311                     	;# 
  1233  0312                     	;# 
  1234  0313                     	;# 
  1235  0314                     	;# 
  1236  0314                     	;# 
  1237  0315                     	;# 
  1238  0316                     	;# 
  1239  0317                     	;# 
  1240  0318                     	;# 
  1241  0318                     	;# 
  1242  0319                     	;# 
  1243  031A                     	;# 
  1244  031B                     	;# 
  1245  031C                     	;# 
  1246  031C                     	;# 
  1247  031D                     	;# 
  1248  031E                     	;# 
  1249  031F                     	;# 
  1250  038C                     	;# 
  1251  038D                     	;# 
  1252  038E                     	;# 
  1253  0390                     	;# 
  1254  0391                     	;# 
  1255  0392                     	;# 
  1256  040C                     	;# 
  1257  040D                     	;# 
  1258  040E                     	;# 
  1259  040F                     	;# 
  1260  0410                     	;# 
  1261  0411                     	;# 
  1262  0416                     	;# 
  1263  0416                     	;# 
  1264  0417                     	;# 
  1265  0418                     	;# 
  1266  0418                     	;# 
  1267  0419                     	;# 
  1268  041A                     	;# 
  1269  041A                     	;# 
  1270  041B                     	;# 
  1271  041C                     	;# 
  1272  041C                     	;# 
  1273  041D                     	;# 
  1274  041E                     	;# 
  1275  041F                     	;# 
  1276  048C                     	;# 
  1277  048C                     	;# 
  1278  048D                     	;# 
  1279  048E                     	;# 
  1280  048F                     	;# 
  1281  048F                     	;# 
  1282  0490                     	;# 
  1283  0491                     	;# 
  1284  0492                     	;# 
  1285  0492                     	;# 
  1286  0493                     	;# 
  1287  0494                     	;# 
  1288  0495                     	;# 
  1289  0495                     	;# 
  1290  0496                     	;# 
  1291  0497                     	;# 
  1292  0498                     	;# 
  1293  0499                     	;# 
  1294  049A                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  050C                     	;# 
  1299  050C                     	;# 
  1300  050D                     	;# 
  1301  050E                     	;# 
  1302  050F                     	;# 
  1303  050F                     	;# 
  1304  0510                     	;# 
  1305  0511                     	;# 
  1306  0512                     	;# 
  1307  0512                     	;# 
  1308  0513                     	;# 
  1309  0514                     	;# 
  1310  0515                     	;# 
  1311  0515                     	;# 
  1312  0516                     	;# 
  1313  0517                     	;# 
  1314  0518                     	;# 
  1315  0519                     	;# 
  1316  051A                     	;# 
  1317  051B                     	;# 
  1318  051C                     	;# 
  1319  051D                     	;# 
  1320  058C                     	;# 
  1321  058C                     	;# 
  1322  058D                     	;# 
  1323  058E                     	;# 
  1324  058F                     	;# 
  1325  058F                     	;# 
  1326  0590                     	;# 
  1327  0591                     	;# 
  1328  0592                     	;# 
  1329  0593                     	;# 
  1330  060C                     	;# 
  1331  060D                     	;# 
  1332  060E                     	;# 
  1333  060F                     	;# 
  1334  0610                     	;# 
  1335  0611                     	;# 
  1336  0612                     	;# 
  1337  0613                     	;# 
  1338  0614                     	;# 
  1339  0616                     	;# 
  1340  0617                     	;# 
  1341  0618                     	;# 
  1342  0619                     	;# 
  1343  061A                     	;# 
  1344  061B                     	;# 
  1345  061C                     	;# 
  1346  061D                     	;# 
  1347  061E                     	;# 
  1348  068C                     	;# 
  1349  068D                     	;# 
  1350  068E                     	;# 
  1351  068F                     	;# 
  1352  0690                     	;# 
  1353  0691                     	;# 
  1354  0692                     	;# 
  1355  0693                     	;# 
  1356  0694                     	;# 
  1357  070C                     	;# 
  1358  070D                     	;# 
  1359  070E                     	;# 
  1360  070F                     	;# 
  1361  0710                     	;# 
  1362  0711                     	;# 
  1363  0712                     	;# 
  1364  0713                     	;# 
  1365  0714                     	;# 
  1366  0716                     	;# 
  1367  0717                     	;# 
  1368  0718                     	;# 
  1369  0719                     	;# 
  1370  071A                     	;# 
  1371  071B                     	;# 
  1372  071C                     	;# 
  1373  071D                     	;# 
  1374  071E                     	;# 
  1375  0796                     	;# 
  1376  0797                     	;# 
  1377  0798                     	;# 
  1378  0799                     	;# 
  1379  079A                     	;# 
  1380  079B                     	;# 
  1381  080C                     	;# 
  1382  080D                     	;# 
  1383  080E                     	;# 
  1384  080F                     	;# 
  1385  0810                     	;# 
  1386  0811                     	;# 
  1387  0812                     	;# 
  1388  0813                     	;# 
  1389  0814                     	;# 
  1390  081A                     	;# 
  1391  081B                     	;# 
  1392  081C                     	;# 
  1393  081D                     	;# 
  1394  081E                     	;# 
  1395  081F                     	;# 
  1396  088C                     	;# 
  1397  088D                     	;# 
  1398  088E                     	;# 
  1399  088F                     	;# 
  1400  0890                     	;# 
  1401  0891                     	;# 
  1402  0892                     	;# 
  1403  0893                     	;# 
  1404  0895                     	;# 
  1405  0896                     	;# 
  1406  0897                     	;# 
  1407  0898                     	;# 
  1408  0899                     	;# 
  1409  089A                     	;# 
  1410  089B                     	;# 
  1411  090C                     	;# 
  1412  090E                     	;# 
  1413  090F                     	;# 
  1414  091F                     	;# 
  1415  091F                     	;# 
  1416  098F                     	;# 
  1417  098F                     	;# 
  1418  0990                     	;# 
  1419  0991                     	;# 
  1420  0992                     	;# 
  1421  0993                     	;# 
  1422  0994                     	;# 
  1423  0995                     	;# 
  1424  0996                     	;# 
  1425  0997                     	;# 
  1426  0E0F                     	;# 
  1427  0E10                     	;# 
  1428  0E11                     	;# 
  1429  0E12                     	;# 
  1430  0E13                     	;# 
  1431  0E14                     	;# 
  1432  0E15                     	;# 
  1433  0E16                     	;# 
  1434  0E17                     	;# 
  1435  0E18                     	;# 
  1436  0E19                     	;# 
  1437  0E1A                     	;# 
  1438  0E1B                     	;# 
  1439  0E1C                     	;# 
  1440  0E1D                     	;# 
  1441  0E1E                     	;# 
  1442  0E1F                     	;# 
  1443  0E20                     	;# 
  1444  0E21                     	;# 
  1445  0E22                     	;# 
  1446  0E23                     	;# 
  1447  0E24                     	;# 
  1448  0E25                     	;# 
  1449  0E26                     	;# 
  1450  0E27                     	;# 
  1451  0E28                     	;# 
  1452  0E29                     	;# 
  1453  0E2A                     	;# 
  1454  0E2B                     	;# 
  1455  0E2C                     	;# 
  1456  0E2D                     	;# 
  1457  0E2E                     	;# 
  1458  0E2F                     	;# 
  1459  0E30                     	;# 
  1460  0E31                     	;# 
  1461  0E32                     	;# 
  1462  0E33                     	;# 
  1463  0E34                     	;# 
  1464  0E35                     	;# 
  1465  0E36                     	;# 
  1466  0E37                     	;# 
  1467  0E8F                     	;# 
  1468  0E90                     	;# 
  1469  0E91                     	;# 
  1470  0E92                     	;# 
  1471  0E93                     	;# 
  1472  0E94                     	;# 
  1473  0E95                     	;# 
  1474  0E96                     	;# 
  1475  0E97                     	;# 
  1476  0E9C                     	;# 
  1477  0E9D                     	;# 
  1478  0E9E                     	;# 
  1479  0EA1                     	;# 
  1480  0EA2                     	;# 
  1481  0EA3                     	;# 
  1482  0EA4                     	;# 
  1483  0EA5                     	;# 
  1484  0EA9                     	;# 
  1485  0EAA                     	;# 
  1486  0EAB                     	;# 
  1487  0EAC                     	;# 
  1488  0EB1                     	;# 
  1489  0EB2                     	;# 
  1490  0EB3                     	;# 
  1491  0EB8                     	;# 
  1492  0EB9                     	;# 
  1493  0EBA                     	;# 
  1494  0EBB                     	;# 
  1495  0EBC                     	;# 
  1496  0EBD                     	;# 
  1497  0EBE                     	;# 
  1498  0EC3                     	;# 
  1499  0EC5                     	;# 
  1500  0EC6                     	;# 
  1501  0EC7                     	;# 
  1502  0EC8                     	;# 
  1503  0EC9                     	;# 
  1504  0ECA                     	;# 
  1505  0ECB                     	;# 
  1506  0ECC                     	;# 
  1507  0F10                     	;# 
  1508  0F11                     	;# 
  1509  0F12                     	;# 
  1510  0F13                     	;# 
  1511  0F14                     	;# 
  1512  0F15                     	;# 
  1513  0F16                     	;# 
  1514  0F17                     	;# 
  1515  0F18                     	;# 
  1516  0F19                     	;# 
  1517  0F1A                     	;# 
  1518  0F1B                     	;# 
  1519  0F1C                     	;# 
  1520  0F1D                     	;# 
  1521  0F1E                     	;# 
  1522  0F1F                     	;# 
  1523  0F20                     	;# 
  1524  0F21                     	;# 
  1525  0F22                     	;# 
  1526  0F23                     	;# 
  1527  0F24                     	;# 
  1528  0F25                     	;# 
  1529  0F26                     	;# 
  1530  0F27                     	;# 
  1531  0F38                     	;# 
  1532  0F39                     	;# 
  1533  0F3A                     	;# 
  1534  0F3B                     	;# 
  1535  0F3C                     	;# 
  1536  0F3D                     	;# 
  1537  0F3E                     	;# 
  1538  0F3F                     	;# 
  1539  0F40                     	;# 
  1540  0F41                     	;# 
  1541  0F43                     	;# 
  1542  0F44                     	;# 
  1543  0F45                     	;# 
  1544  0F46                     	;# 
  1545  0F47                     	;# 
  1546  0F48                     	;# 
  1547  0F49                     	;# 
  1548  0F4A                     	;# 
  1549  0F4B                     	;# 
  1550  0F4C                     	;# 
  1551  0F4E                     	;# 
  1552  0F4F                     	;# 
  1553  0F50                     	;# 
  1554  0F51                     	;# 
  1555  0F52                     	;# 
  1556  0F53                     	;# 
  1557  0F54                     	;# 
  1558  0F55                     	;# 
  1559  0F56                     	;# 
  1560  0F57                     	;# 
  1561  0F65                     	;# 
  1562  0F68                     	;# 
  1563  0F69                     	;# 
  1564  0F6A                     	;# 
  1565  0F6B                     	;# 
  1566  0FE4                     	;# 
  1567  0FE5                     	;# 
  1568  0FE6                     	;# 
  1569  0FE7                     	;# 
  1570  0FE8                     	;# 
  1571  0FE9                     	;# 
  1572  0FEA                     	;# 
  1573  0FEB                     	;# 
  1574  0FED                     	;# 
  1575  0FEE                     	;# 
  1576  0FEF                     	;# 
  1577  0000                     	;# 
  1578  0001                     	;# 
  1579  0002                     	;# 
  1580  0003                     	;# 
  1581  0004                     	;# 
  1582  0005                     	;# 
  1583  0006                     	;# 
  1584  0007                     	;# 
  1585  0008                     	;# 
  1586  0009                     	;# 
  1587  000A                     	;# 
  1588  000B                     	;# 
  1589  000C                     	;# 
  1590  000D                     	;# 
  1591  000E                     	;# 
  1592  0010                     	;# 
  1593  0011                     	;# 
  1594  0012                     	;# 
  1595  0013                     	;# 
  1596  0016                     	;# 
  1597  0017                     	;# 
  1598  0018                     	;# 
  1599  001C                     	;# 
  1600  001C                     	;# 
  1601  001D                     	;# 
  1602  001D                     	;# 
  1603  001E                     	;# 
  1604  001F                     	;# 
  1605  008C                     	;# 
  1606  008C                     	;# 
  1607  008D                     	;# 
  1608  008E                     	;# 
  1609  008E                     	;# 
  1610  008F                     	;# 
  1611  0090                     	;# 
  1612  0090                     	;# 
  1613  0091                     	;# 
  1614  0093                     	;# 
  1615  0094                     	;# 
  1616  0095                     	;# 
  1617  0096                     	;# 
  1618  0097                     	;# 
  1619  0098                     	;# 
  1620  0099                     	;# 
  1621  009A                     	;# 
  1622  009B                     	;# 
  1623  009C                     	;# 
  1624  009D                     	;# 
  1625  009E                     	;# 
  1626  010C                     	;# 
  1627  010D                     	;# 
  1628  010E                     	;# 
  1629  010E                     	;# 
  1630  010F                     	;# 
  1631  0110                     	;# 
  1632  0110                     	;# 
  1633  0111                     	;# 
  1634  0112                     	;# 
  1635  0112                     	;# 
  1636  0113                     	;# 
  1637  0114                     	;# 
  1638  0114                     	;# 
  1639  0115                     	;# 
  1640  0116                     	;# 
  1641  0116                     	;# 
  1642  0117                     	;# 
  1643  0119                     	;# 
  1644  0119                     	;# 
  1645  0119                     	;# 
  1646  011A                     	;# 
  1647  011A                     	;# 
  1648  011A                     	;# 
  1649  011B                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011B                     	;# 
  1654  011C                     	;# 
  1655  011C                     	;# 
  1656  011C                     	;# 
  1657  011D                     	;# 
  1658  011D                     	;# 
  1659  011D                     	;# 
  1660  011E                     	;# 
  1661  011E                     	;# 
  1662  011E                     	;# 
  1663  011F                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  011F                     	;# 
  1668  018C                     	;# 
  1669  018D                     	;# 
  1670  018E                     	;# 
  1671  018F                     	;# 
  1672  0190                     	;# 
  1673  0191                     	;# 
  1674  0192                     	;# 
  1675  0196                     	;# 
  1676  0197                     	;# 
  1677  0198                     	;# 
  1678  0199                     	;# 
  1679  019A                     	;# 
  1680  019B                     	;# 
  1681  019C                     	;# 
  1682  020C                     	;# 
  1683  020D                     	;# 
  1684  020E                     	;# 
  1685  020F                     	;# 
  1686  020F                     	;# 
  1687  0210                     	;# 
  1688  0210                     	;# 
  1689  0211                     	;# 
  1690  0211                     	;# 
  1691  0212                     	;# 
  1692  0213                     	;# 
  1693  0214                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0216                     	;# 
  1697  0216                     	;# 
  1698  0217                     	;# 
  1699  0217                     	;# 
  1700  0218                     	;# 
  1701  0219                     	;# 
  1702  021A                     	;# 
  1703  021B                     	;# 
  1704  021B                     	;# 
  1705  021C                     	;# 
  1706  021C                     	;# 
  1707  021D                     	;# 
  1708  021D                     	;# 
  1709  021E                     	;# 
  1710  021F                     	;# 
  1711  028C                     	;# 
  1712  028C                     	;# 
  1713  028D                     	;# 
  1714  028D                     	;# 
  1715  028E                     	;# 
  1716  028F                     	;# 
  1717  0290                     	;# 
  1718  0290                     	;# 
  1719  0291                     	;# 
  1720  0292                     	;# 
  1721  0292                     	;# 
  1722  0293                     	;# 
  1723  0293                     	;# 
  1724  0294                     	;# 
  1725  0295                     	;# 
  1726  0296                     	;# 
  1727  0296                     	;# 
  1728  0297                     	;# 
  1729  0298                     	;# 
  1730  0298                     	;# 
  1731  0299                     	;# 
  1732  0299                     	;# 
  1733  029A                     	;# 
  1734  029B                     	;# 
  1735  029C                     	;# 
  1736  029C                     	;# 
  1737  029D                     	;# 
  1738  030C                     	;# 
  1739  030C                     	;# 
  1740  030D                     	;# 
  1741  030E                     	;# 
  1742  030F                     	;# 
  1743  0310                     	;# 
  1744  0310                     	;# 
  1745  0311                     	;# 
  1746  0312                     	;# 
  1747  0313                     	;# 
  1748  0314                     	;# 
  1749  0314                     	;# 
  1750  0315                     	;# 
  1751  0316                     	;# 
  1752  0317                     	;# 
  1753  0318                     	;# 
  1754  0318                     	;# 
  1755  0319                     	;# 
  1756  031A                     	;# 
  1757  031B                     	;# 
  1758  031C                     	;# 
  1759  031C                     	;# 
  1760  031D                     	;# 
  1761  031E                     	;# 
  1762  031F                     	;# 
  1763  038C                     	;# 
  1764  038D                     	;# 
  1765  038E                     	;# 
  1766  0390                     	;# 
  1767  0391                     	;# 
  1768  0392                     	;# 
  1769  040C                     	;# 
  1770  040D                     	;# 
  1771  040E                     	;# 
  1772  040F                     	;# 
  1773  0410                     	;# 
  1774  0411                     	;# 
  1775  0416                     	;# 
  1776  0416                     	;# 
  1777  0417                     	;# 
  1778  0418                     	;# 
  1779  0418                     	;# 
  1780  0419                     	;# 
  1781  041A                     	;# 
  1782  041A                     	;# 
  1783  041B                     	;# 
  1784  041C                     	;# 
  1785  041C                     	;# 
  1786  041D                     	;# 
  1787  041E                     	;# 
  1788  041F                     	;# 
  1789  048C                     	;# 
  1790  048C                     	;# 
  1791  048D                     	;# 
  1792  048E                     	;# 
  1793  048F                     	;# 
  1794  048F                     	;# 
  1795  0490                     	;# 
  1796  0491                     	;# 
  1797  0492                     	;# 
  1798  0492                     	;# 
  1799  0493                     	;# 
  1800  0494                     	;# 
  1801  0495                     	;# 
  1802  0495                     	;# 
  1803  0496                     	;# 
  1804  0497                     	;# 
  1805  0498                     	;# 
  1806  0499                     	;# 
  1807  049A                     	;# 
  1808  049B                     	;# 
  1809  049C                     	;# 
  1810  049D                     	;# 
  1811  050C                     	;# 
  1812  050C                     	;# 
  1813  050D                     	;# 
  1814  050E                     	;# 
  1815  050F                     	;# 
  1816  050F                     	;# 
  1817  0510                     	;# 
  1818  0511                     	;# 
  1819  0512                     	;# 
  1820  0512                     	;# 
  1821  0513                     	;# 
  1822  0514                     	;# 
  1823  0515                     	;# 
  1824  0515                     	;# 
  1825  0516                     	;# 
  1826  0517                     	;# 
  1827  0518                     	;# 
  1828  0519                     	;# 
  1829  051A                     	;# 
  1830  051B                     	;# 
  1831  051C                     	;# 
  1832  051D                     	;# 
  1833  058C                     	;# 
  1834  058C                     	;# 
  1835  058D                     	;# 
  1836  058E                     	;# 
  1837  058F                     	;# 
  1838  058F                     	;# 
  1839  0590                     	;# 
  1840  0591                     	;# 
  1841  0592                     	;# 
  1842  0593                     	;# 
  1843  060C                     	;# 
  1844  060D                     	;# 
  1845  060E                     	;# 
  1846  060F                     	;# 
  1847  0610                     	;# 
  1848  0611                     	;# 
  1849  0612                     	;# 
  1850  0613                     	;# 
  1851  0614                     	;# 
  1852  0616                     	;# 
  1853  0617                     	;# 
  1854  0618                     	;# 
  1855  0619                     	;# 
  1856  061A                     	;# 
  1857  061B                     	;# 
  1858  061C                     	;# 
  1859  061D                     	;# 
  1860  061E                     	;# 
  1861  068C                     	;# 
  1862  068D                     	;# 
  1863  068E                     	;# 
  1864  068F                     	;# 
  1865  0690                     	;# 
  1866  0691                     	;# 
  1867  0692                     	;# 
  1868  0693                     	;# 
  1869  0694                     	;# 
  1870  070C                     	;# 
  1871  070D                     	;# 
  1872  070E                     	;# 
  1873  070F                     	;# 
  1874  0710                     	;# 
  1875  0711                     	;# 
  1876  0712                     	;# 
  1877  0713                     	;# 
  1878  0714                     	;# 
  1879  0716                     	;# 
  1880  0717                     	;# 
  1881  0718                     	;# 
  1882  0719                     	;# 
  1883  071A                     	;# 
  1884  071B                     	;# 
  1885  071C                     	;# 
  1886  071D                     	;# 
  1887  071E                     	;# 
  1888  0796                     	;# 
  1889  0797                     	;# 
  1890  0798                     	;# 
  1891  0799                     	;# 
  1892  079A                     	;# 
  1893  079B                     	;# 
  1894  080C                     	;# 
  1895  080D                     	;# 
  1896  080E                     	;# 
  1897  080F                     	;# 
  1898  0810                     	;# 
  1899  0811                     	;# 
  1900  0812                     	;# 
  1901  0813                     	;# 
  1902  0814                     	;# 
  1903  081A                     	;# 
  1904  081B                     	;# 
  1905  081C                     	;# 
  1906  081D                     	;# 
  1907  081E                     	;# 
  1908  081F                     	;# 
  1909  088C                     	;# 
  1910  088D                     	;# 
  1911  088E                     	;# 
  1912  088F                     	;# 
  1913  0890                     	;# 
  1914  0891                     	;# 
  1915  0892                     	;# 
  1916  0893                     	;# 
  1917  0895                     	;# 
  1918  0896                     	;# 
  1919  0897                     	;# 
  1920  0898                     	;# 
  1921  0899                     	;# 
  1922  089A                     	;# 
  1923  089B                     	;# 
  1924  090C                     	;# 
  1925  090E                     	;# 
  1926  090F                     	;# 
  1927  091F                     	;# 
  1928  091F                     	;# 
  1929  098F                     	;# 
  1930  098F                     	;# 
  1931  0990                     	;# 
  1932  0991                     	;# 
  1933  0992                     	;# 
  1934  0993                     	;# 
  1935  0994                     	;# 
  1936  0995                     	;# 
  1937  0996                     	;# 
  1938  0997                     	;# 
  1939  0E0F                     	;# 
  1940  0E10                     	;# 
  1941  0E11                     	;# 
  1942  0E12                     	;# 
  1943  0E13                     	;# 
  1944  0E14                     	;# 
  1945  0E15                     	;# 
  1946  0E16                     	;# 
  1947  0E17                     	;# 
  1948  0E18                     	;# 
  1949  0E19                     	;# 
  1950  0E1A                     	;# 
  1951  0E1B                     	;# 
  1952  0E1C                     	;# 
  1953  0E1D                     	;# 
  1954  0E1E                     	;# 
  1955  0E1F                     	;# 
  1956  0E20                     	;# 
  1957  0E21                     	;# 
  1958  0E22                     	;# 
  1959  0E23                     	;# 
  1960  0E24                     	;# 
  1961  0E25                     	;# 
  1962  0E26                     	;# 
  1963  0E27                     	;# 
  1964  0E28                     	;# 
  1965  0E29                     	;# 
  1966  0E2A                     	;# 
  1967  0E2B                     	;# 
  1968  0E2C                     	;# 
  1969  0E2D                     	;# 
  1970  0E2E                     	;# 
  1971  0E2F                     	;# 
  1972  0E30                     	;# 
  1973  0E31                     	;# 
  1974  0E32                     	;# 
  1975  0E33                     	;# 
  1976  0E34                     	;# 
  1977  0E35                     	;# 
  1978  0E36                     	;# 
  1979  0E37                     	;# 
  1980  0E8F                     	;# 
  1981  0E90                     	;# 
  1982  0E91                     	;# 
  1983  0E92                     	;# 
  1984  0E93                     	;# 
  1985  0E94                     	;# 
  1986  0E95                     	;# 
  1987  0E96                     	;# 
  1988  0E97                     	;# 
  1989  0E9C                     	;# 
  1990  0E9D                     	;# 
  1991  0E9E                     	;# 
  1992  0EA1                     	;# 
  1993  0EA2                     	;# 
  1994  0EA3                     	;# 
  1995  0EA4                     	;# 
  1996  0EA5                     	;# 
  1997  0EA9                     	;# 
  1998  0EAA                     	;# 
  1999  0EAB                     	;# 
  2000  0EAC                     	;# 
  2001  0EB1                     	;# 
  2002  0EB2                     	;# 
  2003  0EB3                     	;# 
  2004  0EB8                     	;# 
  2005  0EB9                     	;# 
  2006  0EBA                     	;# 
  2007  0EBB                     	;# 
  2008  0EBC                     	;# 
  2009  0EBD                     	;# 
  2010  0EBE                     	;# 
  2011  0EC3                     	;# 
  2012  0EC5                     	;# 
  2013  0EC6                     	;# 
  2014  0EC7                     	;# 
  2015  0EC8                     	;# 
  2016  0EC9                     	;# 
  2017  0ECA                     	;# 
  2018  0ECB                     	;# 
  2019  0ECC                     	;# 
  2020  0F10                     	;# 
  2021  0F11                     	;# 
  2022  0F12                     	;# 
  2023  0F13                     	;# 
  2024  0F14                     	;# 
  2025  0F15                     	;# 
  2026  0F16                     	;# 
  2027  0F17                     	;# 
  2028  0F18                     	;# 
  2029  0F19                     	;# 
  2030  0F1A                     	;# 
  2031  0F1B                     	;# 
  2032  0F1C                     	;# 
  2033  0F1D                     	;# 
  2034  0F1E                     	;# 
  2035  0F1F                     	;# 
  2036  0F20                     	;# 
  2037  0F21                     	;# 
  2038  0F22                     	;# 
  2039  0F23                     	;# 
  2040  0F24                     	;# 
  2041  0F25                     	;# 
  2042  0F26                     	;# 
  2043  0F27                     	;# 
  2044  0F38                     	;# 
  2045  0F39                     	;# 
  2046  0F3A                     	;# 
  2047  0F3B                     	;# 
  2048  0F3C                     	;# 
  2049  0F3D                     	;# 
  2050  0F3E                     	;# 
  2051  0F3F                     	;# 
  2052  0F40                     	;# 
  2053  0F41                     	;# 
  2054  0F43                     	;# 
  2055  0F44                     	;# 
  2056  0F45                     	;# 
  2057  0F46                     	;# 
  2058  0F47                     	;# 
  2059  0F48                     	;# 
  2060  0F49                     	;# 
  2061  0F4A                     	;# 
  2062  0F4B                     	;# 
  2063  0F4C                     	;# 
  2064  0F4E                     	;# 
  2065  0F4F                     	;# 
  2066  0F50                     	;# 
  2067  0F51                     	;# 
  2068  0F52                     	;# 
  2069  0F53                     	;# 
  2070  0F54                     	;# 
  2071  0F55                     	;# 
  2072  0F56                     	;# 
  2073  0F57                     	;# 
  2074  0F65                     	;# 
  2075  0F68                     	;# 
  2076  0F69                     	;# 
  2077  0F6A                     	;# 
  2078  0F6B                     	;# 
  2079  0FE4                     	;# 
  2080  0FE5                     	;# 
  2081  0FE6                     	;# 
  2082  0FE7                     	;# 
  2083  0FE8                     	;# 
  2084  0FE9                     	;# 
  2085  0FEA                     	;# 
  2086  0FEB                     	;# 
  2087  0FED                     	;# 
  2088  0FEE                     	;# 
  2089  0FEF                     	;# 
  2090  0000                     	;# 
  2091  0001                     	;# 
  2092  0002                     	;# 
  2093  0003                     	;# 
  2094  0004                     	;# 
  2095  0005                     	;# 
  2096  0006                     	;# 
  2097  0007                     	;# 
  2098  0008                     	;# 
  2099  0009                     	;# 
  2100  000A                     	;# 
  2101  000B                     	;# 
  2102  000C                     	;# 
  2103  000D                     	;# 
  2104  000E                     	;# 
  2105  0010                     	;# 
  2106  0011                     	;# 
  2107  0012                     	;# 
  2108  0013                     	;# 
  2109  0016                     	;# 
  2110  0017                     	;# 
  2111  0018                     	;# 
  2112  001C                     	;# 
  2113  001C                     	;# 
  2114  001D                     	;# 
  2115  001D                     	;# 
  2116  001E                     	;# 
  2117  001F                     	;# 
  2118  008C                     	;# 
  2119  008C                     	;# 
  2120  008D                     	;# 
  2121  008E                     	;# 
  2122  008E                     	;# 
  2123  008F                     	;# 
  2124  0090                     	;# 
  2125  0090                     	;# 
  2126  0091                     	;# 
  2127  0093                     	;# 
  2128  0094                     	;# 
  2129  0095                     	;# 
  2130  0096                     	;# 
  2131  0097                     	;# 
  2132  0098                     	;# 
  2133  0099                     	;# 
  2134  009A                     	;# 
  2135  009B                     	;# 
  2136  009C                     	;# 
  2137  009D                     	;# 
  2138  009E                     	;# 
  2139  010C                     	;# 
  2140  010D                     	;# 
  2141  010E                     	;# 
  2142  010E                     	;# 
  2143  010F                     	;# 
  2144  0110                     	;# 
  2145  0110                     	;# 
  2146  0111                     	;# 
  2147  0112                     	;# 
  2148  0112                     	;# 
  2149  0113                     	;# 
  2150  0114                     	;# 
  2151  0114                     	;# 
  2152  0115                     	;# 
  2153  0116                     	;# 
  2154  0116                     	;# 
  2155  0117                     	;# 
  2156  0119                     	;# 
  2157  0119                     	;# 
  2158  0119                     	;# 
  2159  011A                     	;# 
  2160  011A                     	;# 
  2161  011A                     	;# 
  2162  011B                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011C                     	;# 
  2168  011C                     	;# 
  2169  011C                     	;# 
  2170  011D                     	;# 
  2171  011D                     	;# 
  2172  011D                     	;# 
  2173  011E                     	;# 
  2174  011E                     	;# 
  2175  011E                     	;# 
  2176  011F                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  018C                     	;# 
  2182  018D                     	;# 
  2183  018E                     	;# 
  2184  018F                     	;# 
  2185  0190                     	;# 
  2186  0191                     	;# 
  2187  0192                     	;# 
  2188  0196                     	;# 
  2189  0197                     	;# 
  2190  0198                     	;# 
  2191  0199                     	;# 
  2192  019A                     	;# 
  2193  019B                     	;# 
  2194  019C                     	;# 
  2195  020C                     	;# 
  2196  020D                     	;# 
  2197  020E                     	;# 
  2198  020F                     	;# 
  2199  020F                     	;# 
  2200  0210                     	;# 
  2201  0210                     	;# 
  2202  0211                     	;# 
  2203  0211                     	;# 
  2204  0212                     	;# 
  2205  0213                     	;# 
  2206  0214                     	;# 
  2207  0215                     	;# 
  2208  0215                     	;# 
  2209  0216                     	;# 
  2210  0216                     	;# 
  2211  0217                     	;# 
  2212  0217                     	;# 
  2213  0218                     	;# 
  2214  0219                     	;# 
  2215  021A                     	;# 
  2216  021B                     	;# 
  2217  021B                     	;# 
  2218  021C                     	;# 
  2219  021C                     	;# 
  2220  021D                     	;# 
  2221  021D                     	;# 
  2222  021E                     	;# 
  2223  021F                     	;# 
  2224  028C                     	;# 
  2225  028C                     	;# 
  2226  028D                     	;# 
  2227  028D                     	;# 
  2228  028E                     	;# 
  2229  028F                     	;# 
  2230  0290                     	;# 
  2231  0290                     	;# 
  2232  0291                     	;# 
  2233  0292                     	;# 
  2234  0292                     	;# 
  2235  0293                     	;# 
  2236  0293                     	;# 
  2237  0294                     	;# 
  2238  0295                     	;# 
  2239  0296                     	;# 
  2240  0296                     	;# 
  2241  0297                     	;# 
  2242  0298                     	;# 
  2243  0298                     	;# 
  2244  0299                     	;# 
  2245  0299                     	;# 
  2246  029A                     	;# 
  2247  029B                     	;# 
  2248  029C                     	;# 
  2249  029C                     	;# 
  2250  029D                     	;# 
  2251  030C                     	;# 
  2252  030C                     	;# 
  2253  030D                     	;# 
  2254  030E                     	;# 
  2255  030F                     	;# 
  2256  0310                     	;# 
  2257  0310                     	;# 
  2258  0311                     	;# 
  2259  0312                     	;# 
  2260  0313                     	;# 
  2261  0314                     	;# 
  2262  0314                     	;# 
  2263  0315                     	;# 
  2264  0316                     	;# 
  2265  0317                     	;# 
  2266  0318                     	;# 
  2267  0318                     	;# 
  2268  0319                     	;# 
  2269  031A                     	;# 
  2270  031B                     	;# 
  2271  031C                     	;# 
  2272  031C                     	;# 
  2273  031D                     	;# 
  2274  031E                     	;# 
  2275  031F                     	;# 
  2276  038C                     	;# 
  2277  038D                     	;# 
  2278  038E                     	;# 
  2279  0390                     	;# 
  2280  0391                     	;# 
  2281  0392                     	;# 
  2282  040C                     	;# 
  2283  040D                     	;# 
  2284  040E                     	;# 
  2285  040F                     	;# 
  2286  0410                     	;# 
  2287  0411                     	;# 
  2288  0416                     	;# 
  2289  0416                     	;# 
  2290  0417                     	;# 
  2291  0418                     	;# 
  2292  0418                     	;# 
  2293  0419                     	;# 
  2294  041A                     	;# 
  2295  041A                     	;# 
  2296  041B                     	;# 
  2297  041C                     	;# 
  2298  041C                     	;# 
  2299  041D                     	;# 
  2300  041E                     	;# 
  2301  041F                     	;# 
  2302  048C                     	;# 
  2303  048C                     	;# 
  2304  048D                     	;# 
  2305  048E                     	;# 
  2306  048F                     	;# 
  2307  048F                     	;# 
  2308  0490                     	;# 
  2309  0491                     	;# 
  2310  0492                     	;# 
  2311  0492                     	;# 
  2312  0493                     	;# 
  2313  0494                     	;# 
  2314  0495                     	;# 
  2315  0495                     	;# 
  2316  0496                     	;# 
  2317  0497                     	;# 
  2318  0498                     	;# 
  2319  0499                     	;# 
  2320  049A                     	;# 
  2321  049B                     	;# 
  2322  049C                     	;# 
  2323  049D                     	;# 
  2324  050C                     	;# 
  2325  050C                     	;# 
  2326  050D                     	;# 
  2327  050E                     	;# 
  2328  050F                     	;# 
  2329  050F                     	;# 
  2330  0510                     	;# 
  2331  0511                     	;# 
  2332  0512                     	;# 
  2333  0512                     	;# 
  2334  0513                     	;# 
  2335  0514                     	;# 
  2336  0515                     	;# 
  2337  0515                     	;# 
  2338  0516                     	;# 
  2339  0517                     	;# 
  2340  0518                     	;# 
  2341  0519                     	;# 
  2342  051A                     	;# 
  2343  051B                     	;# 
  2344  051C                     	;# 
  2345  051D                     	;# 
  2346  058C                     	;# 
  2347  058C                     	;# 
  2348  058D                     	;# 
  2349  058E                     	;# 
  2350  058F                     	;# 
  2351  058F                     	;# 
  2352  0590                     	;# 
  2353  0591                     	;# 
  2354  0592                     	;# 
  2355  0593                     	;# 
  2356  060C                     	;# 
  2357  060D                     	;# 
  2358  060E                     	;# 
  2359  060F                     	;# 
  2360  0610                     	;# 
  2361  0611                     	;# 
  2362  0612                     	;# 
  2363  0613                     	;# 
  2364  0614                     	;# 
  2365  0616                     	;# 
  2366  0617                     	;# 
  2367  0618                     	;# 
  2368  0619                     	;# 
  2369  061A                     	;# 
  2370  061B                     	;# 
  2371  061C                     	;# 
  2372  061D                     	;# 
  2373  061E                     	;# 
  2374  068C                     	;# 
  2375  068D                     	;# 
  2376  068E                     	;# 
  2377  068F                     	;# 
  2378  0690                     	;# 
  2379  0691                     	;# 
  2380  0692                     	;# 
  2381  0693                     	;# 
  2382  0694                     	;# 
  2383  070C                     	;# 
  2384  070D                     	;# 
  2385  070E                     	;# 
  2386  070F                     	;# 
  2387  0710                     	;# 
  2388  0711                     	;# 
  2389  0712                     	;# 
  2390  0713                     	;# 
  2391  0714                     	;# 
  2392  0716                     	;# 
  2393  0717                     	;# 
  2394  0718                     	;# 
  2395  0719                     	;# 
  2396  071A                     	;# 
  2397  071B                     	;# 
  2398  071C                     	;# 
  2399  071D                     	;# 
  2400  071E                     	;# 
  2401  0796                     	;# 
  2402  0797                     	;# 
  2403  0798                     	;# 
  2404  0799                     	;# 
  2405  079A                     	;# 
  2406  079B                     	;# 
  2407  080C                     	;# 
  2408  080D                     	;# 
  2409  080E                     	;# 
  2410  080F                     	;# 
  2411  0810                     	;# 
  2412  0811                     	;# 
  2413  0812                     	;# 
  2414  0813                     	;# 
  2415  0814                     	;# 
  2416  081A                     	;# 
  2417  081B                     	;# 
  2418  081C                     	;# 
  2419  081D                     	;# 
  2420  081E                     	;# 
  2421  081F                     	;# 
  2422  088C                     	;# 
  2423  088D                     	;# 
  2424  088E                     	;# 
  2425  088F                     	;# 
  2426  0890                     	;# 
  2427  0891                     	;# 
  2428  0892                     	;# 
  2429  0893                     	;# 
  2430  0895                     	;# 
  2431  0896                     	;# 
  2432  0897                     	;# 
  2433  0898                     	;# 
  2434  0899                     	;# 
  2435  089A                     	;# 
  2436  089B                     	;# 
  2437  090C                     	;# 
  2438  090E                     	;# 
  2439  090F                     	;# 
  2440  091F                     	;# 
  2441  091F                     	;# 
  2442  098F                     	;# 
  2443  098F                     	;# 
  2444  0990                     	;# 
  2445  0991                     	;# 
  2446  0992                     	;# 
  2447  0993                     	;# 
  2448  0994                     	;# 
  2449  0995                     	;# 
  2450  0996                     	;# 
  2451  0997                     	;# 
  2452  0E0F                     	;# 
  2453  0E10                     	;# 
  2454  0E11                     	;# 
  2455  0E12                     	;# 
  2456  0E13                     	;# 
  2457  0E14                     	;# 
  2458  0E15                     	;# 
  2459  0E16                     	;# 
  2460  0E17                     	;# 
  2461  0E18                     	;# 
  2462  0E19                     	;# 
  2463  0E1A                     	;# 
  2464  0E1B                     	;# 
  2465  0E1C                     	;# 
  2466  0E1D                     	;# 
  2467  0E1E                     	;# 
  2468  0E1F                     	;# 
  2469  0E20                     	;# 
  2470  0E21                     	;# 
  2471  0E22                     	;# 
  2472  0E23                     	;# 
  2473  0E24                     	;# 
  2474  0E25                     	;# 
  2475  0E26                     	;# 
  2476  0E27                     	;# 
  2477  0E28                     	;# 
  2478  0E29                     	;# 
  2479  0E2A                     	;# 
  2480  0E2B                     	;# 
  2481  0E2C                     	;# 
  2482  0E2D                     	;# 
  2483  0E2E                     	;# 
  2484  0E2F                     	;# 
  2485  0E30                     	;# 
  2486  0E31                     	;# 
  2487  0E32                     	;# 
  2488  0E33                     	;# 
  2489  0E34                     	;# 
  2490  0E35                     	;# 
  2491  0E36                     	;# 
  2492  0E37                     	;# 
  2493  0E8F                     	;# 
  2494  0E90                     	;# 
  2495  0E91                     	;# 
  2496  0E92                     	;# 
  2497  0E93                     	;# 
  2498  0E94                     	;# 
  2499  0E95                     	;# 
  2500  0E96                     	;# 
  2501  0E97                     	;# 
  2502  0E9C                     	;# 
  2503  0E9D                     	;# 
  2504  0E9E                     	;# 
  2505  0EA1                     	;# 
  2506  0EA2                     	;# 
  2507  0EA3                     	;# 
  2508  0EA4                     	;# 
  2509  0EA5                     	;# 
  2510  0EA9                     	;# 
  2511  0EAA                     	;# 
  2512  0EAB                     	;# 
  2513  0EAC                     	;# 
  2514  0EB1                     	;# 
  2515  0EB2                     	;# 
  2516  0EB3                     	;# 
  2517  0EB8                     	;# 
  2518  0EB9                     	;# 
  2519  0EBA                     	;# 
  2520  0EBB                     	;# 
  2521  0EBC                     	;# 
  2522  0EBD                     	;# 
  2523  0EBE                     	;# 
  2524  0EC3                     	;# 
  2525  0EC5                     	;# 
  2526  0EC6                     	;# 
  2527  0EC7                     	;# 
  2528  0EC8                     	;# 
  2529  0EC9                     	;# 
  2530  0ECA                     	;# 
  2531  0ECB                     	;# 
  2532  0ECC                     	;# 
  2533  0F10                     	;# 
  2534  0F11                     	;# 
  2535  0F12                     	;# 
  2536  0F13                     	;# 
  2537  0F14                     	;# 
  2538  0F15                     	;# 
  2539  0F16                     	;# 
  2540  0F17                     	;# 
  2541  0F18                     	;# 
  2542  0F19                     	;# 
  2543  0F1A                     	;# 
  2544  0F1B                     	;# 
  2545  0F1C                     	;# 
  2546  0F1D                     	;# 
  2547  0F1E                     	;# 
  2548  0F1F                     	;# 
  2549  0F20                     	;# 
  2550  0F21                     	;# 
  2551  0F22                     	;# 
  2552  0F23                     	;# 
  2553  0F24                     	;# 
  2554  0F25                     	;# 
  2555  0F26                     	;# 
  2556  0F27                     	;# 
  2557  0F38                     	;# 
  2558  0F39                     	;# 
  2559  0F3A                     	;# 
  2560  0F3B                     	;# 
  2561  0F3C                     	;# 
  2562  0F3D                     	;# 
  2563  0F3E                     	;# 
  2564  0F3F                     	;# 
  2565  0F40                     	;# 
  2566  0F41                     	;# 
  2567  0F43                     	;# 
  2568  0F44                     	;# 
  2569  0F45                     	;# 
  2570  0F46                     	;# 
  2571  0F47                     	;# 
  2572  0F48                     	;# 
  2573  0F49                     	;# 
  2574  0F4A                     	;# 
  2575  0F4B                     	;# 
  2576  0F4C                     	;# 
  2577  0F4E                     	;# 
  2578  0F4F                     	;# 
  2579  0F50                     	;# 
  2580  0F51                     	;# 
  2581  0F52                     	;# 
  2582  0F53                     	;# 
  2583  0F54                     	;# 
  2584  0F55                     	;# 
  2585  0F56                     	;# 
  2586  0F57                     	;# 
  2587  0F65                     	;# 
  2588  0F68                     	;# 
  2589  0F69                     	;# 
  2590  0F6A                     	;# 
  2591  0F6B                     	;# 
  2592  0FE4                     	;# 
  2593  0FE5                     	;# 
  2594  0FE6                     	;# 
  2595  0FE7                     	;# 
  2596  0FE8                     	;# 
  2597  0FE9                     	;# 
  2598  0FEA                     	;# 
  2599  0FEB                     	;# 
  2600  0FED                     	;# 
  2601  0FEE                     	;# 
  2602  0FEF                     	;# 
  2603  0000                     	;# 
  2604  0001                     	;# 
  2605  0002                     	;# 
  2606  0003                     	;# 
  2607  0004                     	;# 
  2608  0005                     	;# 
  2609  0006                     	;# 
  2610  0007                     	;# 
  2611  0008                     	;# 
  2612  0009                     	;# 
  2613  000A                     	;# 
  2614  000B                     	;# 
  2615  000C                     	;# 
  2616  000D                     	;# 
  2617  000E                     	;# 
  2618  0010                     	;# 
  2619  0011                     	;# 
  2620  0012                     	;# 
  2621  0013                     	;# 
  2622  0016                     	;# 
  2623  0017                     	;# 
  2624  0018                     	;# 
  2625  001C                     	;# 
  2626  001C                     	;# 
  2627  001D                     	;# 
  2628  001D                     	;# 
  2629  001E                     	;# 
  2630  001F                     	;# 
  2631  008C                     	;# 
  2632  008C                     	;# 
  2633  008D                     	;# 
  2634  008E                     	;# 
  2635  008E                     	;# 
  2636  008F                     	;# 
  2637  0090                     	;# 
  2638  0090                     	;# 
  2639  0091                     	;# 
  2640  0093                     	;# 
  2641  0094                     	;# 
  2642  0095                     	;# 
  2643  0096                     	;# 
  2644  0097                     	;# 
  2645  0098                     	;# 
  2646  0099                     	;# 
  2647  009A                     	;# 
  2648  009B                     	;# 
  2649  009C                     	;# 
  2650  009D                     	;# 
  2651  009E                     	;# 
  2652  010C                     	;# 
  2653  010D                     	;# 
  2654  010E                     	;# 
  2655  010E                     	;# 
  2656  010F                     	;# 
  2657  0110                     	;# 
  2658  0110                     	;# 
  2659  0111                     	;# 
  2660  0112                     	;# 
  2661  0112                     	;# 
  2662  0113                     	;# 
  2663  0114                     	;# 
  2664  0114                     	;# 
  2665  0115                     	;# 
  2666  0116                     	;# 
  2667  0116                     	;# 
  2668  0117                     	;# 
  2669  0119                     	;# 
  2670  0119                     	;# 
  2671  0119                     	;# 
  2672  011A                     	;# 
  2673  011A                     	;# 
  2674  011A                     	;# 
  2675  011B                     	;# 
  2676  011B                     	;# 
  2677  011B                     	;# 
  2678  011B                     	;# 
  2679  011B                     	;# 
  2680  011C                     	;# 
  2681  011C                     	;# 
  2682  011C                     	;# 
  2683  011D                     	;# 
  2684  011D                     	;# 
  2685  011D                     	;# 
  2686  011E                     	;# 
  2687  011E                     	;# 
  2688  011E                     	;# 
  2689  011F                     	;# 
  2690  011F                     	;# 
  2691  011F                     	;# 
  2692  011F                     	;# 
  2693  011F                     	;# 
  2694  018C                     	;# 
  2695  018D                     	;# 
  2696  018E                     	;# 
  2697  018F                     	;# 
  2698  0190                     	;# 
  2699  0191                     	;# 
  2700  0192                     	;# 
  2701  0196                     	;# 
  2702  0197                     	;# 
  2703  0198                     	;# 
  2704  0199                     	;# 
  2705  019A                     	;# 
  2706  019B                     	;# 
  2707  019C                     	;# 
  2708  020C                     	;# 
  2709  020D                     	;# 
  2710  020E                     	;# 
  2711  020F                     	;# 
  2712  020F                     	;# 
  2713  0210                     	;# 
  2714  0210                     	;# 
  2715  0211                     	;# 
  2716  0211                     	;# 
  2717  0212                     	;# 
  2718  0213                     	;# 
  2719  0214                     	;# 
  2720  0215                     	;# 
  2721  0215                     	;# 
  2722  0216                     	;# 
  2723  0216                     	;# 
  2724  0217                     	;# 
  2725  0217                     	;# 
  2726  0218                     	;# 
  2727  0219                     	;# 
  2728  021A                     	;# 
  2729  021B                     	;# 
  2730  021B                     	;# 
  2731  021C                     	;# 
  2732  021C                     	;# 
  2733  021D                     	;# 
  2734  021D                     	;# 
  2735  021E                     	;# 
  2736  021F                     	;# 
  2737  028C                     	;# 
  2738  028C                     	;# 
  2739  028D                     	;# 
  2740  028D                     	;# 
  2741  028E                     	;# 
  2742  028F                     	;# 
  2743  0290                     	;# 
  2744  0290                     	;# 
  2745  0291                     	;# 
  2746  0292                     	;# 
  2747  0292                     	;# 
  2748  0293                     	;# 
  2749  0293                     	;# 
  2750  0294                     	;# 
  2751  0295                     	;# 
  2752  0296                     	;# 
  2753  0296                     	;# 
  2754  0297                     	;# 
  2755  0298                     	;# 
  2756  0298                     	;# 
  2757  0299                     	;# 
  2758  0299                     	;# 
  2759  029A                     	;# 
  2760  029B                     	;# 
  2761  029C                     	;# 
  2762  029C                     	;# 
  2763  029D                     	;# 
  2764  030C                     	;# 
  2765  030C                     	;# 
  2766  030D                     	;# 
  2767  030E                     	;# 
  2768  030F                     	;# 
  2769  0310                     	;# 
  2770  0310                     	;# 
  2771  0311                     	;# 
  2772  0312                     	;# 
  2773  0313                     	;# 
  2774  0314                     	;# 
  2775  0314                     	;# 
  2776  0315                     	;# 
  2777  0316                     	;# 
  2778  0317                     	;# 
  2779  0318                     	;# 
  2780  0318                     	;# 
  2781  0319                     	;# 
  2782  031A                     	;# 
  2783  031B                     	;# 
  2784  031C                     	;# 
  2785  031C                     	;# 
  2786  031D                     	;# 
  2787  031E                     	;# 
  2788  031F                     	;# 
  2789  038C                     	;# 
  2790  038D                     	;# 
  2791  038E                     	;# 
  2792  0390                     	;# 
  2793  0391                     	;# 
  2794  0392                     	;# 
  2795  040C                     	;# 
  2796  040D                     	;# 
  2797  040E                     	;# 
  2798  040F                     	;# 
  2799  0410                     	;# 
  2800  0411                     	;# 
  2801  0416                     	;# 
  2802  0416                     	;# 
  2803  0417                     	;# 
  2804  0418                     	;# 
  2805  0418                     	;# 
  2806  0419                     	;# 
  2807  041A                     	;# 
  2808  041A                     	;# 
  2809  041B                     	;# 
  2810  041C                     	;# 
  2811  041C                     	;# 
  2812  041D                     	;# 
  2813  041E                     	;# 
  2814  041F                     	;# 
  2815  048C                     	;# 
  2816  048C                     	;# 
  2817  048D                     	;# 
  2818  048E                     	;# 
  2819  048F                     	;# 
  2820  048F                     	;# 
  2821  0490                     	;# 
  2822  0491                     	;# 
  2823  0492                     	;# 
  2824  0492                     	;# 
  2825  0493                     	;# 
  2826  0494                     	;# 
  2827  0495                     	;# 
  2828  0495                     	;# 
  2829  0496                     	;# 
  2830  0497                     	;# 
  2831  0498                     	;# 
  2832  0499                     	;# 
  2833  049A                     	;# 
  2834  049B                     	;# 
  2835  049C                     	;# 
  2836  049D                     	;# 
  2837  050C                     	;# 
  2838  050C                     	;# 
  2839  050D                     	;# 
  2840  050E                     	;# 
  2841  050F                     	;# 
  2842  050F                     	;# 
  2843  0510                     	;# 
  2844  0511                     	;# 
  2845  0512                     	;# 
  2846  0512                     	;# 
  2847  0513                     	;# 
  2848  0514                     	;# 
  2849  0515                     	;# 
  2850  0515                     	;# 
  2851  0516                     	;# 
  2852  0517                     	;# 
  2853  0518                     	;# 
  2854  0519                     	;# 
  2855  051A                     	;# 
  2856  051B                     	;# 
  2857  051C                     	;# 
  2858  051D                     	;# 
  2859  058C                     	;# 
  2860  058C                     	;# 
  2861  058D                     	;# 
  2862  058E                     	;# 
  2863  058F                     	;# 
  2864  058F                     	;# 
  2865  0590                     	;# 
  2866  0591                     	;# 
  2867  0592                     	;# 
  2868  0593                     	;# 
  2869  060C                     	;# 
  2870  060D                     	;# 
  2871  060E                     	;# 
  2872  060F                     	;# 
  2873  0610                     	;# 
  2874  0611                     	;# 
  2875  0612                     	;# 
  2876  0613                     	;# 
  2877  0614                     	;# 
  2878  0616                     	;# 
  2879  0617                     	;# 
  2880  0618                     	;# 
  2881  0619                     	;# 
  2882  061A                     	;# 
  2883  061B                     	;# 
  2884  061C                     	;# 
  2885  061D                     	;# 
  2886  061E                     	;# 
  2887  068C                     	;# 
  2888  068D                     	;# 
  2889  068E                     	;# 
  2890  068F                     	;# 
  2891  0690                     	;# 
  2892  0691                     	;# 
  2893  0692                     	;# 
  2894  0693                     	;# 
  2895  0694                     	;# 
  2896  070C                     	;# 
  2897  070D                     	;# 
  2898  070E                     	;# 
  2899  070F                     	;# 
  2900  0710                     	;# 
  2901  0711                     	;# 
  2902  0712                     	;# 
  2903  0713                     	;# 
  2904  0714                     	;# 
  2905  0716                     	;# 
  2906  0717                     	;# 
  2907  0718                     	;# 
  2908  0719                     	;# 
  2909  071A                     	;# 
  2910  071B                     	;# 
  2911  071C                     	;# 
  2912  071D                     	;# 
  2913  071E                     	;# 
  2914  0796                     	;# 
  2915  0797                     	;# 
  2916  0798                     	;# 
  2917  0799                     	;# 
  2918  079A                     	;# 
  2919  079B                     	;# 
  2920  080C                     	;# 
  2921  080D                     	;# 
  2922  080E                     	;# 
  2923  080F                     	;# 
  2924  0810                     	;# 
  2925  0811                     	;# 
  2926  0812                     	;# 
  2927  0813                     	;# 
  2928  0814                     	;# 
  2929  081A                     	;# 
  2930  081B                     	;# 
  2931  081C                     	;# 
  2932  081D                     	;# 
  2933  081E                     	;# 
  2934  081F                     	;# 
  2935  088C                     	;# 
  2936  088D                     	;# 
  2937  088E                     	;# 
  2938  088F                     	;# 
  2939  0890                     	;# 
  2940  0891                     	;# 
  2941  0892                     	;# 
  2942  0893                     	;# 
  2943  0895                     	;# 
  2944  0896                     	;# 
  2945  0897                     	;# 
  2946  0898                     	;# 
  2947  0899                     	;# 
  2948  089A                     	;# 
  2949  089B                     	;# 
  2950  090C                     	;# 
  2951  090E                     	;# 
  2952  090F                     	;# 
  2953  091F                     	;# 
  2954  091F                     	;# 
  2955  098F                     	;# 
  2956  098F                     	;# 
  2957  0990                     	;# 
  2958  0991                     	;# 
  2959  0992                     	;# 
  2960  0993                     	;# 
  2961  0994                     	;# 
  2962  0995                     	;# 
  2963  0996                     	;# 
  2964  0997                     	;# 
  2965  0E0F                     	;# 
  2966  0E10                     	;# 
  2967  0E11                     	;# 
  2968  0E12                     	;# 
  2969  0E13                     	;# 
  2970  0E14                     	;# 
  2971  0E15                     	;# 
  2972  0E16                     	;# 
  2973  0E17                     	;# 
  2974  0E18                     	;# 
  2975  0E19                     	;# 
  2976  0E1A                     	;# 
  2977  0E1B                     	;# 
  2978  0E1C                     	;# 
  2979  0E1D                     	;# 
  2980  0E1E                     	;# 
  2981  0E1F                     	;# 
  2982  0E20                     	;# 
  2983  0E21                     	;# 
  2984  0E22                     	;# 
  2985  0E23                     	;# 
  2986  0E24                     	;# 
  2987  0E25                     	;# 
  2988  0E26                     	;# 
  2989  0E27                     	;# 
  2990  0E28                     	;# 
  2991  0E29                     	;# 
  2992  0E2A                     	;# 
  2993  0E2B                     	;# 
  2994  0E2C                     	;# 
  2995  0E2D                     	;# 
  2996  0E2E                     	;# 
  2997  0E2F                     	;# 
  2998  0E30                     	;# 
  2999  0E31                     	;# 
  3000  0E32                     	;# 
  3001  0E33                     	;# 
  3002  0E34                     	;# 
  3003  0E35                     	;# 
  3004  0E36                     	;# 
  3005  0E37                     	;# 
  3006  0E8F                     	;# 
  3007  0E90                     	;# 
  3008  0E91                     	;# 
  3009  0E92                     	;# 
  3010  0E93                     	;# 
  3011  0E94                     	;# 
  3012  0E95                     	;# 
  3013  0E96                     	;# 
  3014  0E97                     	;# 
  3015  0E9C                     	;# 
  3016  0E9D                     	;# 
  3017  0E9E                     	;# 
  3018  0EA1                     	;# 
  3019  0EA2                     	;# 
  3020  0EA3                     	;# 
  3021  0EA4                     	;# 
  3022  0EA5                     	;# 
  3023  0EA9                     	;# 
  3024  0EAA                     	;# 
  3025  0EAB                     	;# 
  3026  0EAC                     	;# 
  3027  0EB1                     	;# 
  3028  0EB2                     	;# 
  3029  0EB3                     	;# 
  3030  0EB8                     	;# 
  3031  0EB9                     	;# 
  3032  0EBA                     	;# 
  3033  0EBB                     	;# 
  3034  0EBC                     	;# 
  3035  0EBD                     	;# 
  3036  0EBE                     	;# 
  3037  0EC3                     	;# 
  3038  0EC5                     	;# 
  3039  0EC6                     	;# 
  3040  0EC7                     	;# 
  3041  0EC8                     	;# 
  3042  0EC9                     	;# 
  3043  0ECA                     	;# 
  3044  0ECB                     	;# 
  3045  0ECC                     	;# 
  3046  0F10                     	;# 
  3047  0F11                     	;# 
  3048  0F12                     	;# 
  3049  0F13                     	;# 
  3050  0F14                     	;# 
  3051  0F15                     	;# 
  3052  0F16                     	;# 
  3053  0F17                     	;# 
  3054  0F18                     	;# 
  3055  0F19                     	;# 
  3056  0F1A                     	;# 
  3057  0F1B                     	;# 
  3058  0F1C                     	;# 
  3059  0F1D                     	;# 
  3060  0F1E                     	;# 
  3061  0F1F                     	;# 
  3062  0F20                     	;# 
  3063  0F21                     	;# 
  3064  0F22                     	;# 
  3065  0F23                     	;# 
  3066  0F24                     	;# 
  3067  0F25                     	;# 
  3068  0F26                     	;# 
  3069  0F27                     	;# 
  3070  0F38                     	;# 
  3071  0F39                     	;# 
  3072  0F3A                     	;# 
  3073  0F3B                     	;# 
  3074  0F3C                     	;# 
  3075  0F3D                     	;# 
  3076  0F3E                     	;# 
  3077  0F3F                     	;# 
  3078  0F40                     	;# 
  3079  0F41                     	;# 
  3080  0F43                     	;# 
  3081  0F44                     	;# 
  3082  0F45                     	;# 
  3083  0F46                     	;# 
  3084  0F47                     	;# 
  3085  0F48                     	;# 
  3086  0F49                     	;# 
  3087  0F4A                     	;# 
  3088  0F4B                     	;# 
  3089  0F4C                     	;# 
  3090  0F4E                     	;# 
  3091  0F4F                     	;# 
  3092  0F50                     	;# 
  3093  0F51                     	;# 
  3094  0F52                     	;# 
  3095  0F53                     	;# 
  3096  0F54                     	;# 
  3097  0F55                     	;# 
  3098  0F56                     	;# 
  3099  0F57                     	;# 
  3100  0F65                     	;# 
  3101  0F68                     	;# 
  3102  0F69                     	;# 
  3103  0F6A                     	;# 
  3104  0F6B                     	;# 
  3105  0FE4                     	;# 
  3106  0FE5                     	;# 
  3107  0FE6                     	;# 
  3108  0FE7                     	;# 
  3109  0FE8                     	;# 
  3110  0FE9                     	;# 
  3111  0FEA                     	;# 
  3112  0FEB                     	;# 
  3113  0FED                     	;# 
  3114  0FEE                     	;# 
  3115  0FEF                     	;# 
  3116  0000                     	;# 
  3117  0001                     	;# 
  3118  0002                     	;# 
  3119  0003                     	;# 
  3120  0004                     	;# 
  3121  0005                     	;# 
  3122  0006                     	;# 
  3123  0007                     	;# 
  3124  0008                     	;# 
  3125  0009                     	;# 
  3126  000A                     	;# 
  3127  000B                     	;# 
  3128  000C                     	;# 
  3129  000D                     	;# 
  3130  000E                     	;# 
  3131  0010                     	;# 
  3132  0011                     	;# 
  3133  0012                     	;# 
  3134  0013                     	;# 
  3135  0016                     	;# 
  3136  0017                     	;# 
  3137  0018                     	;# 
  3138  001C                     	;# 
  3139  001C                     	;# 
  3140  001D                     	;# 
  3141  001D                     	;# 
  3142  001E                     	;# 
  3143  001F                     	;# 
  3144  008C                     	;# 
  3145  008C                     	;# 
  3146  008D                     	;# 
  3147  008E                     	;# 
  3148  008E                     	;# 
  3149  008F                     	;# 
  3150  0090                     	;# 
  3151  0090                     	;# 
  3152  0091                     	;# 
  3153  0093                     	;# 
  3154  0094                     	;# 
  3155  0095                     	;# 
  3156  0096                     	;# 
  3157  0097                     	;# 
  3158  0098                     	;# 
  3159  0099                     	;# 
  3160  009A                     	;# 
  3161  009B                     	;# 
  3162  009C                     	;# 
  3163  009D                     	;# 
  3164  009E                     	;# 
  3165  010C                     	;# 
  3166  010D                     	;# 
  3167  010E                     	;# 
  3168  010E                     	;# 
  3169  010F                     	;# 
  3170  0110                     	;# 
  3171  0110                     	;# 
  3172  0111                     	;# 
  3173  0112                     	;# 
  3174  0112                     	;# 
  3175  0113                     	;# 
  3176  0114                     	;# 
  3177  0114                     	;# 
  3178  0115                     	;# 
  3179  0116                     	;# 
  3180  0116                     	;# 
  3181  0117                     	;# 
  3182  0119                     	;# 
  3183  0119                     	;# 
  3184  0119                     	;# 
  3185  011A                     	;# 
  3186  011A                     	;# 
  3187  011A                     	;# 
  3188  011B                     	;# 
  3189  011B                     	;# 
  3190  011B                     	;# 
  3191  011B                     	;# 
  3192  011B                     	;# 
  3193  011C                     	;# 
  3194  011C                     	;# 
  3195  011C                     	;# 
  3196  011D                     	;# 
  3197  011D                     	;# 
  3198  011D                     	;# 
  3199  011E                     	;# 
  3200  011E                     	;# 
  3201  011E                     	;# 
  3202  011F                     	;# 
  3203  011F                     	;# 
  3204  011F                     	;# 
  3205  011F                     	;# 
  3206  011F                     	;# 
  3207  018C                     	;# 
  3208  018D                     	;# 
  3209  018E                     	;# 
  3210  018F                     	;# 
  3211  0190                     	;# 
  3212  0191                     	;# 
  3213  0192                     	;# 
  3214  0196                     	;# 
  3215  0197                     	;# 
  3216  0198                     	;# 
  3217  0199                     	;# 
  3218  019A                     	;# 
  3219  019B                     	;# 
  3220  019C                     	;# 
  3221  020C                     	;# 
  3222  020D                     	;# 
  3223  020E                     	;# 
  3224  020F                     	;# 
  3225  020F                     	;# 
  3226  0210                     	;# 
  3227  0210                     	;# 
  3228  0211                     	;# 
  3229  0211                     	;# 
  3230  0212                     	;# 
  3231  0213                     	;# 
  3232  0214                     	;# 
  3233  0215                     	;# 
  3234  0215                     	;# 
  3235  0216                     	;# 
  3236  0216                     	;# 
  3237  0217                     	;# 
  3238  0217                     	;# 
  3239  0218                     	;# 
  3240  0219                     	;# 
  3241  021A                     	;# 
  3242  021B                     	;# 
  3243  021B                     	;# 
  3244  021C                     	;# 
  3245  021C                     	;# 
  3246  021D                     	;# 
  3247  021D                     	;# 
  3248  021E                     	;# 
  3249  021F                     	;# 
  3250  028C                     	;# 
  3251  028C                     	;# 
  3252  028D                     	;# 
  3253  028D                     	;# 
  3254  028E                     	;# 
  3255  028F                     	;# 
  3256  0290                     	;# 
  3257  0290                     	;# 
  3258  0291                     	;# 
  3259  0292                     	;# 
  3260  0292                     	;# 
  3261  0293                     	;# 
  3262  0293                     	;# 
  3263  0294                     	;# 
  3264  0295                     	;# 
  3265  0296                     	;# 
  3266  0296                     	;# 
  3267  0297                     	;# 
  3268  0298                     	;# 
  3269  0298                     	;# 
  3270  0299                     	;# 
  3271  0299                     	;# 
  3272  029A                     	;# 
  3273  029B                     	;# 
  3274  029C                     	;# 
  3275  029C                     	;# 
  3276  029D                     	;# 
  3277  030C                     	;# 
  3278  030C                     	;# 
  3279  030D                     	;# 
  3280  030E                     	;# 
  3281  030F                     	;# 
  3282  0310                     	;# 
  3283  0310                     	;# 
  3284  0311                     	;# 
  3285  0312                     	;# 
  3286  0313                     	;# 
  3287  0314                     	;# 
  3288  0314                     	;# 
  3289  0315                     	;# 
  3290  0316                     	;# 
  3291  0317                     	;# 
  3292  0318                     	;# 
  3293  0318                     	;# 
  3294  0319                     	;# 
  3295  031A                     	;# 
  3296  031B                     	;# 
  3297  031C                     	;# 
  3298  031C                     	;# 
  3299  031D                     	;# 
  3300  031E                     	;# 
  3301  031F                     	;# 
  3302  038C                     	;# 
  3303  038D                     	;# 
  3304  038E                     	;# 
  3305  0390                     	;# 
  3306  0391                     	;# 
  3307  0392                     	;# 
  3308  040C                     	;# 
  3309  040D                     	;# 
  3310  040E                     	;# 
  3311  040F                     	;# 
  3312  0410                     	;# 
  3313  0411                     	;# 
  3314  0416                     	;# 
  3315  0416                     	;# 
  3316  0417                     	;# 
  3317  0418                     	;# 
  3318  0418                     	;# 
  3319  0419                     	;# 
  3320  041A                     	;# 
  3321  041A                     	;# 
  3322  041B                     	;# 
  3323  041C                     	;# 
  3324  041C                     	;# 
  3325  041D                     	;# 
  3326  041E                     	;# 
  3327  041F                     	;# 
  3328  048C                     	;# 
  3329  048C                     	;# 
  3330  048D                     	;# 
  3331  048E                     	;# 
  3332  048F                     	;# 
  3333  048F                     	;# 
  3334  0490                     	;# 
  3335  0491                     	;# 
  3336  0492                     	;# 
  3337  0492                     	;# 
  3338  0493                     	;# 
  3339  0494                     	;# 
  3340  0495                     	;# 
  3341  0495                     	;# 
  3342  0496                     	;# 
  3343  0497                     	;# 
  3344  0498                     	;# 
  3345  0499                     	;# 
  3346  049A                     	;# 
  3347  049B                     	;# 
  3348  049C                     	;# 
  3349  049D                     	;# 
  3350  050C                     	;# 
  3351  050C                     	;# 
  3352  050D                     	;# 
  3353  050E                     	;# 
  3354  050F                     	;# 
  3355  050F                     	;# 
  3356  0510                     	;# 
  3357  0511                     	;# 
  3358  0512                     	;# 
  3359  0512                     	;# 
  3360  0513                     	;# 
  3361  0514                     	;# 
  3362  0515                     	;# 
  3363  0515                     	;# 
  3364  0516                     	;# 
  3365  0517                     	;# 
  3366  0518                     	;# 
  3367  0519                     	;# 
  3368  051A                     	;# 
  3369  051B                     	;# 
  3370  051C                     	;# 
  3371  051D                     	;# 
  3372  058C                     	;# 
  3373  058C                     	;# 
  3374  058D                     	;# 
  3375  058E                     	;# 
  3376  058F                     	;# 
  3377  058F                     	;# 
  3378  0590                     	;# 
  3379  0591                     	;# 
  3380  0592                     	;# 
  3381  0593                     	;# 
  3382  060C                     	;# 
  3383  060D                     	;# 
  3384  060E                     	;# 
  3385  060F                     	;# 
  3386  0610                     	;# 
  3387  0611                     	;# 
  3388  0612                     	;# 
  3389  0613                     	;# 
  3390  0614                     	;# 
  3391  0616                     	;# 
  3392  0617                     	;# 
  3393  0618                     	;# 
  3394  0619                     	;# 
  3395  061A                     	;# 
  3396  061B                     	;# 
  3397  061C                     	;# 
  3398  061D                     	;# 
  3399  061E                     	;# 
  3400  068C                     	;# 
  3401  068D                     	;# 
  3402  068E                     	;# 
  3403  068F                     	;# 
  3404  0690                     	;# 
  3405  0691                     	;# 
  3406  0692                     	;# 
  3407  0693                     	;# 
  3408  0694                     	;# 
  3409  070C                     	;# 
  3410  070D                     	;# 
  3411  070E                     	;# 
  3412  070F                     	;# 
  3413  0710                     	;# 
  3414  0711                     	;# 
  3415  0712                     	;# 
  3416  0713                     	;# 
  3417  0714                     	;# 
  3418  0716                     	;# 
  3419  0717                     	;# 
  3420  0718                     	;# 
  3421  0719                     	;# 
  3422  071A                     	;# 
  3423  071B                     	;# 
  3424  071C                     	;# 
  3425  071D                     	;# 
  3426  071E                     	;# 
  3427  0796                     	;# 
  3428  0797                     	;# 
  3429  0798                     	;# 
  3430  0799                     	;# 
  3431  079A                     	;# 
  3432  079B                     	;# 
  3433  080C                     	;# 
  3434  080D                     	;# 
  3435  080E                     	;# 
  3436  080F                     	;# 
  3437  0810                     	;# 
  3438  0811                     	;# 
  3439  0812                     	;# 
  3440  0813                     	;# 
  3441  0814                     	;# 
  3442  081A                     	;# 
  3443  081B                     	;# 
  3444  081C                     	;# 
  3445  081D                     	;# 
  3446  081E                     	;# 
  3447  081F                     	;# 
  3448  088C                     	;# 
  3449  088D                     	;# 
  3450  088E                     	;# 
  3451  088F                     	;# 
  3452  0890                     	;# 
  3453  0891                     	;# 
  3454  0892                     	;# 
  3455  0893                     	;# 
  3456  0895                     	;# 
  3457  0896                     	;# 
  3458  0897                     	;# 
  3459  0898                     	;# 
  3460  0899                     	;# 
  3461  089A                     	;# 
  3462  089B                     	;# 
  3463  090C                     	;# 
  3464  090E                     	;# 
  3465  090F                     	;# 
  3466  091F                     	;# 
  3467  091F                     	;# 
  3468  098F                     	;# 
  3469  098F                     	;# 
  3470  0990                     	;# 
  3471  0991                     	;# 
  3472  0992                     	;# 
  3473  0993                     	;# 
  3474  0994                     	;# 
  3475  0995                     	;# 
  3476  0996                     	;# 
  3477  0997                     	;# 
  3478  0E0F                     	;# 
  3479  0E10                     	;# 
  3480  0E11                     	;# 
  3481  0E12                     	;# 
  3482  0E13                     	;# 
  3483  0E14                     	;# 
  3484  0E15                     	;# 
  3485  0E16                     	;# 
  3486  0E17                     	;# 
  3487  0E18                     	;# 
  3488  0E19                     	;# 
  3489  0E1A                     	;# 
  3490  0E1B                     	;# 
  3491  0E1C                     	;# 
  3492  0E1D                     	;# 
  3493  0E1E                     	;# 
  3494  0E1F                     	;# 
  3495  0E20                     	;# 
  3496  0E21                     	;# 
  3497  0E22                     	;# 
  3498  0E23                     	;# 
  3499  0E24                     	;# 
  3500  0E25                     	;# 
  3501  0E26                     	;# 
  3502  0E27                     	;# 
  3503  0E28                     	;# 
  3504  0E29                     	;# 
  3505  0E2A                     	;# 
  3506  0E2B                     	;# 
  3507  0E2C                     	;# 
  3508  0E2D                     	;# 
  3509  0E2E                     	;# 
  3510  0E2F                     	;# 
  3511  0E30                     	;# 
  3512  0E31                     	;# 
  3513  0E32                     	;# 
  3514  0E33                     	;# 
  3515  0E34                     	;# 
  3516  0E35                     	;# 
  3517  0E36                     	;# 
  3518  0E37                     	;# 
  3519  0E8F                     	;# 
  3520  0E90                     	;# 
  3521  0E91                     	;# 
  3522  0E92                     	;# 
  3523  0E93                     	;# 
  3524  0E94                     	;# 
  3525  0E95                     	;# 
  3526  0E96                     	;# 
  3527  0E97                     	;# 
  3528  0E9C                     	;# 
  3529  0E9D                     	;# 
  3530  0E9E                     	;# 
  3531  0EA1                     	;# 
  3532  0EA2                     	;# 
  3533  0EA3                     	;# 
  3534  0EA4                     	;# 
  3535  0EA5                     	;# 
  3536  0EA9                     	;# 
  3537  0EAA                     	;# 
  3538  0EAB                     	;# 
  3539  0EAC                     	;# 
  3540  0EB1                     	;# 
  3541  0EB2                     	;# 
  3542  0EB3                     	;# 
  3543  0EB8                     	;# 
  3544  0EB9                     	;# 
  3545  0EBA                     	;# 
  3546  0EBB                     	;# 
  3547  0EBC                     	;# 
  3548  0EBD                     	;# 
  3549  0EBE                     	;# 
  3550  0EC3                     	;# 
  3551  0EC5                     	;# 
  3552  0EC6                     	;# 
  3553  0EC7                     	;# 
  3554  0EC8                     	;# 
  3555  0EC9                     	;# 
  3556  0ECA                     	;# 
  3557  0ECB                     	;# 
  3558  0ECC                     	;# 
  3559  0F10                     	;# 
  3560  0F11                     	;# 
  3561  0F12                     	;# 
  3562  0F13                     	;# 
  3563  0F14                     	;# 
  3564  0F15                     	;# 
  3565  0F16                     	;# 
  3566  0F17                     	;# 
  3567  0F18                     	;# 
  3568  0F19                     	;# 
  3569  0F1A                     	;# 
  3570  0F1B                     	;# 
  3571  0F1C                     	;# 
  3572  0F1D                     	;# 
  3573  0F1E                     	;# 
  3574  0F1F                     	;# 
  3575  0F20                     	;# 
  3576  0F21                     	;# 
  3577  0F22                     	;# 
  3578  0F23                     	;# 
  3579  0F24                     	;# 
  3580  0F25                     	;# 
  3581  0F26                     	;# 
  3582  0F27                     	;# 
  3583  0F38                     	;# 
  3584  0F39                     	;# 
  3585  0F3A                     	;# 
  3586  0F3B                     	;# 
  3587  0F3C                     	;# 
  3588  0F3D                     	;# 
  3589  0F3E                     	;# 
  3590  0F3F                     	;# 
  3591  0F40                     	;# 
  3592  0F41                     	;# 
  3593  0F43                     	;# 
  3594  0F44                     	;# 
  3595  0F45                     	;# 
  3596  0F46                     	;# 
  3597  0F47                     	;# 
  3598  0F48                     	;# 
  3599  0F49                     	;# 
  3600  0F4A                     	;# 
  3601  0F4B                     	;# 
  3602  0F4C                     	;# 
  3603  0F4E                     	;# 
  3604  0F4F                     	;# 
  3605  0F50                     	;# 
  3606  0F51                     	;# 
  3607  0F52                     	;# 
  3608  0F53                     	;# 
  3609  0F54                     	;# 
  3610  0F55                     	;# 
  3611  0F56                     	;# 
  3612  0F57                     	;# 
  3613  0F65                     	;# 
  3614  0F68                     	;# 
  3615  0F69                     	;# 
  3616  0F6A                     	;# 
  3617  0F6B                     	;# 
  3618  0FE4                     	;# 
  3619  0FE5                     	;# 
  3620  0FE6                     	;# 
  3621  0FE7                     	;# 
  3622  0FE8                     	;# 
  3623  0FE9                     	;# 
  3624  0FEA                     	;# 
  3625  0FEB                     	;# 
  3626  0FED                     	;# 
  3627  0FEE                     	;# 
  3628  0FEF                     	;# 
  3629                           
  3630                           	psect	stringtext
  3631  048B                     __pstringtext:	
  3632  048B                     _dpowers:	
  3633  048B  3401               	retlw	1
  3634  048C  3400               	retlw	0
  3635  048D  340A               	retlw	10
  3636  048E  3400               	retlw	0
  3637  048F  3464               	retlw	100
  3638  0490  3400               	retlw	0
  3639  0491  34E8               	retlw	232
  3640  0492  3403               	retlw	3
  3641  0493  3410               	retlw	16
  3642  0494  3427               	retlw	39
  3643  0495                     __end_of_dpowers:	
  3644  000B                     _INTCONbits	set	11
  3645  0016                     _LATA	set	22
  3646  0016                     _LATAbits	set	22
  3647  0017                     _LATB	set	23
  3648  0018                     _LATC	set	24
  3649  0011                     _TRISA	set	17
  3650  0012                     _TRISB	set	18
  3651  0013                     _TRISC	set	19
  3652  005F                     _GIE	set	95
  3653  011F                     _BAUD1CON	set	287
  3654  0119                     _RC1REG	set	281
  3655  011D                     _RC1STA	set	285
  3656  011D                     _RC1STAbits	set	285
  3657  011C                     _SP1BRGH	set	284
  3658  011B                     _SP1BRGL	set	283
  3659  011A                     _TX1REG	set	282
  3660  011E                     _TX1STA	set	286
  3661  0197                     _SSP2ADD	set	407
  3662  0196                     _SSP2BUF	set	406
  3663  019A                     _SSP2CON1	set	410
  3664  019A                     _SSP2CON1bits	set	410
  3665  019B                     _SSP2CON2bits	set	411
  3666  019C                     _SSP2CON3	set	412
  3667  0199                     _SSP2STAT	set	409
  3668  0299                     _PR6	set	665
  3669  029C                     _T6CLKCON	set	668
  3670  029A                     _T6CON	set	666
  3671  029A                     _T6CONbits	set	666
  3672  029B                     _T6HLT	set	667
  3673  029B                     _T6HLTbits	set	667
  3674  0299                     _T6PR	set	665
  3675  029D                     _T6RST	set	669
  3676  029D                     _T6RSTbits	set	669
  3677  0298                     _T6TMR	set	664
  3678  0298                     _TMR6	set	664
  3679  0719                     _PIE3bits	set	1817
  3680  070F                     _PIR3bits	set	1807
  3681  0710                     _PIR4bits	set	1808
  3682  088D                     _OSCCON1	set	2189
  3683  088F                     _OSCCON3	set	2191
  3684  0891                     _OSCEN	set	2193
  3685  0893                     _OSCFRQ	set	2195
  3686  0892                     _OSCTUNE	set	2194
  3687  0E8F                     _PPSLOCK	set	3727
  3688  0E8F                     _PPSLOCKbits	set	3727
  3689  0ECB                     _RXPPSbits	set	3787
  3690  0EC8                     _SSP2CLKPPSbits	set	3784
  3691  0EC9                     _SSP2DATPPSbits	set	3785
  3692  0E9E                     _T6AINPPSbits	set	3742
  3693  0F38                     _ANSELA	set	3896
  3694  0F43                     _ANSELB	set	3907
  3695  0F4E                     _ANSELC	set	3918
  3696  0F3A                     _ODCONA	set	3898
  3697  0F45                     _ODCONB	set	3909
  3698  0F50                     _ODCONC	set	3920
  3699  0F20                     _RC0PPS	set	3872
  3700  0F23                     _RC3PPS	set	3875
  3701  0F24                     _RC4PPS	set	3876
  3702  0F26                     _RC6PPS	set	3878
  3703  0F39                     _WPUA	set	3897
  3704  0F44                     _WPUB	set	3908
  3705  0F4F                     _WPUC	set	3919
  3706  0F65                     _WPUE	set	3941
  3707  0495                     STR_2:	
  3708  0495  3425               	retlw	37	;'%'
  3709  0496  3464               	retlw	100	;'d'
  3710  0497  342E               	retlw	46	;'.'
  3711  0498  3425               	retlw	37	;'%'
  3712  0499  3464               	retlw	100	;'d'
  3713  049A  3400               	retlw	0
  3714  049B                     STR_1:	
  3715  049B  340A               	retlw	10
  3716  049C  3400               	retlw	0
  3717                           
  3718                           ; #config settings
  3719  0000                     
  3720                           	psect	cinit
  3721  0022                     start_initialization:	
  3722  0022                     __initialization:	
  3723                           
  3724                           ; Clear objects allocated to COMMON
  3725  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  3726  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3727  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3728  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3729  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3730  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3731  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3732                           
  3733                           ; Clear objects allocated to BANK0
  3734  0029  3042               	movlw	low __pbssBANK0
  3735  002A  0084               	movwf	4
  3736  002B  3000               	movlw	high __pbssBANK0
  3737  002C  0085               	movwf	5
  3738  002D  301C               	movlw	28
  3739  002E  3184  24EA         	fcall	clear_ram0
  3740  0030                     end_of_initialization:	
  3741                           ;End of C runtime variable initialization code
  3742                           
  3743  0030                     __end_of__initialization:	
  3744  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3745  0031  0020               	movlb	0
  3746  0032  3182  2A27         	ljmp	_main	;jump to C main() function
  3747                           
  3748                           	psect	bssCOMMON
  3749  0070                     __pbssCOMMON:	
  3750  0070                     I2C2_ISR@i2c_bytes_left:	
  3751  0070                     	ds	1
  3752  0071                     I2C2_ISR@pi2c_buf_ptr:	
  3753  0071                     	ds	1
  3754  0072                     _i2c2_trb_count:	
  3755  0072                     	ds	1
  3756  0073                     _p_i2c2_current:	
  3757  0073                     	ds	1
  3758  0074                     _p_i2c2_trb_current:	
  3759  0074                     	ds	1
  3760  0075                     I2C2_ISR@i2c_address:	
  3761  0075                     	ds	2
  3762                           
  3763                           	psect	bssBANK0
  3764  0042                     __pbssBANK0:	
  3765  0042                     _i2c2_object:	
  3766  0042                     	ds	5
  3767  0047                     _TMR6_InterruptHandler:	
  3768  0047                     	ds	2
  3769  0049                     I2C2_ISR@i2c_10bit_address_restart:	
  3770  0049                     	ds	1
  3771  004A                     _i2c2_state:	
  3772  004A                     	ds	1
  3773  004B                     EMC1001_Read@trb:	
  3774  004B                     	ds	8
  3775  0053                     I2C2_MasterRead@trBlock:	
  3776  0053                     	ds	4
  3777  0057                     I2C2_MasterWrite@trBlock:	
  3778  0057                     	ds	4
  3779  005B                     _i2c2_tr_queue:	
  3780  005B                     	ds	3
  3781                           
  3782                           	psect	clrtext
  3783  04EA                     clear_ram0:	
  3784                           ;	Called with FSR0 containing the base address, and
  3785                           ;	WREG with the size to clear
  3786                           
  3787  04EA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3788  04EB                     clrloop0:	
  3789  04EB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3790  04EC  3101               	addfsr 0,1
  3791  04ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3792  04EE  2CEB               	goto	clrloop0	;have we reached the end yet?
  3793  04EF  3400               	retlw	0	;all done for this memory range, return
  3794                           
  3795                           	psect	cstackCOMMON
  3796  0077                     __pcstackCOMMON:	
  3797  0077                     ?_PIN_MANAGER_Initialize:	
  3798  0077                     ?_OSCILLATOR_Initialize:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0077                     ?_I2C2_Initialize:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0077                     ?_I2C2_BusCollisionISR:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0077                     ??_I2C2_BusCollisionISR:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0077                     ?_I2C2_ISR:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0077                     ?_I2C2_Stop:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0077                     ??_I2C2_Stop:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0077                     ?_I2C2_FunctionComplete:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0077                     ??_I2C2_FunctionComplete:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0077                     ?_EUSART_Initialize:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0077                     ?_EUSART_Read:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0077                     ?_EUSART_Write:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0077                     ?_putch:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0077                     ?_TMR6_Initialize:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0077                     ?_TMR6_Start:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0077                     ?_TMR6_Stop:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0077                     ?_SYSTEM_Initialize:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0077                     ?_INTERRUPT_InterruptManager:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0077                     ?_main:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855                           
  3856                           ; 1 bytes @ 0x0
  3857  0077                     	ds	1
  3858  0078                     I2C2_Stop@completion_code:	
  3859                           
  3860                           ; 1 bytes @ 0x1
  3861  0078                     	ds	1
  3862  0079                     ??_I2C2_ISR:	
  3863                           
  3864                           ; 1 bytes @ 0x2
  3865  0079                     	ds	4
  3866  007D                     ??_INTERRUPT_InterruptManager:	
  3867                           
  3868                           ; 1 bytes @ 0x6
  3869  007D                     	ds	1
  3870                           
  3871                           	psect	cstackBANK0
  3872  0020                     __pcstackBANK0:	
  3873  0020                     ??_PIN_MANAGER_Initialize:	
  3874  0020                     ??_OSCILLATOR_Initialize:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0020                     ??_I2C2_Initialize:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0020                     ?_I2C2_MasterTRBInsert:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0020                     ?_I2C2_MasterReadTRBBuild:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0020                     ??_EUSART_Initialize:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0020                     ??_EUSART_Read:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0020                     ??_EUSART_Write:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0020                     ??_TMR6_Initialize:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0020                     ??_TMR6_Start:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0020                     ??_TMR6_Stop:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0020                     ?___wmul:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0020                     ?___lwdiv:	
  3911                           ; 2 bytes @ 0x0
  3912                           
  3913  0020                     EUSART_Write@txData:	
  3914                           ; 2 bytes @ 0x0
  3915                           
  3916  0020                     PIN_MANAGER_Initialize@state:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0020                     ___wmul@multiplier:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0020                     ___lwdiv@divisor:	
  3932                           ; 2 bytes @ 0x0
  3933                           
  3934                           
  3935                           ; 2 bytes @ 0x0
  3936  0020                     	ds	1
  3937  0021                     ??_putch:	
  3938  0021                     ??_SYSTEM_Initialize:	
  3939                           ; 1 bytes @ 0x1
  3940                           
  3941  0021                     putch@txData:	
  3942                           ; 1 bytes @ 0x1
  3943                           
  3944  0021                     I2C2_MasterTRBInsert@pflag:	
  3945                           ; 1 bytes @ 0x1
  3946                           
  3947  0021                     I2C2_MasterReadTRBBuild@length:	
  3948                           ; 1 bytes @ 0x1
  3949                           
  3950  0021                     I2C2_MasterWriteTRBBuild@length:	
  3951                           ; 1 bytes @ 0x1
  3952                           
  3953                           
  3954                           ; 1 bytes @ 0x1
  3955  0021                     	ds	1
  3956  0022                     ??_I2C2_MasterTRBInsert:	
  3957  0022                     I2C2_MasterReadTRBBuild@address:	
  3958                           ; 1 bytes @ 0x2
  3959                           
  3960  0022                     I2C2_MasterWriteTRBBuild@address:	
  3961                           ; 2 bytes @ 0x2
  3962                           
  3963  0022                     ___wmul@multiplicand:	
  3964                           ; 2 bytes @ 0x2
  3965                           
  3966  0022                     ___lwdiv@dividend:	
  3967                           ; 2 bytes @ 0x2
  3968                           
  3969                           
  3970                           ; 2 bytes @ 0x2
  3971  0022                     	ds	1
  3972  0023                     I2C2_MasterTRBInsert@count:	
  3973                           
  3974                           ; 1 bytes @ 0x3
  3975  0023                     	ds	1
  3976  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3977  0024                     ??_I2C2_MasterReadTRBBuild:	
  3978                           ; 1 bytes @ 0x4
  3979                           
  3980  0024                     ??___wmul:	
  3981                           ; 1 bytes @ 0x4
  3982                           
  3983  0024                     ??___lwdiv:	
  3984                           ; 1 bytes @ 0x4
  3985                           
  3986  0024                     ___wmul@product:	
  3987                           ; 1 bytes @ 0x4
  3988                           
  3989                           
  3990                           ; 2 bytes @ 0x4
  3991  0024                     	ds	1
  3992  0025                     ___lwdiv@quotient:	
  3993                           
  3994                           ; 2 bytes @ 0x5
  3995  0025                     	ds	1
  3996  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  3997  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  3998                           ; 1 bytes @ 0x6
  3999                           
  4000                           
  4001                           ; 1 bytes @ 0x6
  4002  0026                     	ds	1
  4003  0027                     ?_EMC1001_Read:	
  4004  0027                     EMC1001_Read@pData:	
  4005                           ; 1 bytes @ 0x7
  4006                           
  4007  0027                     ___lwdiv@counter:	
  4008                           ; 1 bytes @ 0x7
  4009                           
  4010                           
  4011                           ; 1 bytes @ 0x7
  4012  0027                     	ds	1
  4013  0028                     ??_EMC1001_Read:	
  4014  0028                     ?___lwmod:	
  4015                           ; 1 bytes @ 0x8
  4016                           
  4017  0028                     ___lwmod@divisor:	
  4018                           ; 2 bytes @ 0x8
  4019                           
  4020                           
  4021                           ; 2 bytes @ 0x8
  4022  0028                     	ds	2
  4023  002A                     EMC1001_Read@reg:	
  4024  002A                     ___lwmod@dividend:	
  4025                           ; 1 bytes @ 0xA
  4026                           
  4027                           
  4028                           ; 2 bytes @ 0xA
  4029  002A                     	ds	1
  4030  002B                     EMC1001_Read@status:	
  4031                           
  4032                           ; 1 bytes @ 0xB
  4033  002B                     	ds	1
  4034  002C                     ??___lwmod:	
  4035                           
  4036                           ; 1 bytes @ 0xC
  4037  002C                     	ds	1
  4038  002D                     ___lwmod@counter:	
  4039                           
  4040                           ; 1 bytes @ 0xD
  4041  002D                     	ds	1
  4042  002E                     ?_printf:	
  4043  002E                     printf@f:	
  4044                           ; 2 bytes @ 0xE
  4045                           
  4046                           
  4047                           ; 2 bytes @ 0xE
  4048  002E                     	ds	6
  4049  0034                     ??_printf:	
  4050                           
  4051                           ; 1 bytes @ 0x14
  4052  0034                     	ds	4
  4053  0038                     printf@ap:	
  4054                           
  4055                           ; 1 bytes @ 0x18
  4056  0038                     	ds	1
  4057  0039                     printf@flag:	
  4058                           
  4059                           ; 1 bytes @ 0x19
  4060  0039                     	ds	1
  4061  003A                     printf@prec:	
  4062                           
  4063                           ; 1 bytes @ 0x1A
  4064  003A                     	ds	1
  4065  003B                     printf@val:	
  4066                           
  4067                           ; 2 bytes @ 0x1B
  4068  003B                     	ds	2
  4069  003D                     printf@c:	
  4070                           
  4071                           ; 1 bytes @ 0x1D
  4072  003D                     	ds	1
  4073  003E                     ??_main:	
  4074                           
  4075                           ; 1 bytes @ 0x1E
  4076  003E                     	ds	2
  4077  0040                     main@temp:	
  4078                           
  4079                           ; 1 bytes @ 0x20
  4080  0040                     	ds	1
  4081  0041                     main@templo:	
  4082                           
  4083                           ; 1 bytes @ 0x21
  4084  0041                     	ds	1
  4085                           
  4086                           	psect	maintext
  4087  0227                     __pmaintext:	
  4088 ;;
  4089 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4090 ;;
  4091 ;; *************** function _main *****************
  4092 ;; Defined at:
  4093 ;;		line 22 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  templo          1   33[BANK0 ] unsigned char 
  4098 ;;  temp            1   32[BANK0 ] char 
  4099 ;;  data            1    0        unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : B1F/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;Total ram usage:        4 bytes
  4114 ;; Hardware stack levels required when called:    6
  4115 ;; This function calls:
  4116 ;;		_EMC1001_Read
  4117 ;;		_EUSART_Read
  4118 ;;		_EUSART_Write
  4119 ;;		_SYSTEM_Initialize
  4120 ;;		_TMR6_Start
  4121 ;;		_TMR6_Stop
  4122 ;;		___wmul
  4123 ;;		_printf
  4124 ;; This function is called by:
  4125 ;;		Startup code after reset
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _main
  4131  0227                     _main:	
  4132                           
  4133                           ;main.c: 24: uint8_t data;
  4134                           ;main.c: 25: int8_t temp;
  4135                           ;main.c: 26: uint8_t templo;
  4136                           ;main.c: 27: SYSTEM_Initialize();
  4137                           
  4138                           ;incstack = 0
  4139                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4140  0227  3184  24AF  3182   	fcall	_SYSTEM_Initialize
  4141                           
  4142                           ;main.c: 28: (INTCONbits.GIE = 1);
  4143  022A  178B               	bsf	11,7	;volatile
  4144                           
  4145                           ;main.c: 29: (INTCONbits.PEIE = 1);
  4146  022B  170B               	bsf	11,6	;volatile
  4147  022C                     l2084:	
  4148                           ;main.c: 31: while (1)
  4149                           
  4150                           
  4151                           ;main.c: 32: {
  4152                           ;main.c: 33: if (EUSART_Read() == 'G' && T6TMR == 0x00)
  4153  022C  3184  2476  3182   	fcall	_EUSART_Read
  4154  022F  3A47               	xorlw	71
  4155  0230  1D03               	skipz
  4156  0231  2A2C               	goto	l2084
  4157  0232  0025               	movlb	5	; select bank5
  4158  0233  0818               	movf	24,w	;volatile
  4159  0234  1D03               	btfss	3,2
  4160  0235  2A2C               	goto	l2084
  4161                           
  4162                           ;main.c: 34: {
  4163                           ;main.c: 35: TMR6_Start();
  4164  0236  3184  24FA  3182   	fcall	_TMR6_Start
  4165                           
  4166                           ;main.c: 36: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4167  0239  1003               	clrc
  4168  023A  0020               	movlb	0	; select bank0
  4169  023B  1C16               	btfss	22,0	;volatile
  4170  023C  1403               	setc
  4171  023D  1C03               	btfss	3,0
  4172  023E  2A42               	goto	u1690
  4173  023F  0020               	movlb	0	; select bank0
  4174  0240  1416               	bsf	22,0	;volatile
  4175  0241  2A44               	goto	l2092
  4176  0242                     u1690:	
  4177  0242  0020               	movlb	0	; select bank0
  4178  0243  1016               	bcf	22,0	;volatile
  4179  0244                     l2092:	
  4180                           
  4181                           ;main.c: 37: printf("\n");
  4182  0244  309B               	movlw	low (STR_1| (0+32768))
  4183  0245  00AE               	movwf	printf@f
  4184  0246  3084               	movlw	high (STR_1| (0+32768))
  4185  0247  00AF               	movwf	printf@f+1
  4186  0248  3181  216F  3182   	fcall	_printf
  4187                           
  4188                           ;main.c: 38: EUSART_Write(0x0D);
  4189  024B  300D               	movlw	13
  4190  024C  3184  24D7  3182   	fcall	_EUSART_Write
  4191                           
  4192                           ;main.c: 40: if (EMC1001_Read(0, (uint8_t*)&temp))
  4193  024F  3040               	movlw	(low (main@temp| 0))& (0+255)
  4194  0250  0020               	movlb	0	; select bank0
  4195  0251  00BE               	movwf	??_main
  4196  0252  083E               	movf	??_main,w
  4197  0253  00A7               	movwf	EMC1001_Read@pData
  4198  0254  3000               	movlw	0
  4199  0255  3183  232C  3182   	fcall	_EMC1001_Read
  4200  0258  3A00               	xorlw	0
  4201  0259  1903               	skipnz
  4202  025A  2A96               	goto	l2108
  4203                           
  4204                           ;main.c: 41: {
  4205                           ;main.c: 42: EMC1001_Read(2, &templo);
  4206  025B  3041               	movlw	(low (main@templo| 0))& (0+255)
  4207  025C  0020               	movlb	0	; select bank0
  4208  025D  00BE               	movwf	??_main
  4209  025E  083E               	movf	??_main,w
  4210  025F  00A7               	movwf	EMC1001_Read@pData
  4211  0260  3002               	movlw	2
  4212  0261  3183  232C  3182   	fcall	_EMC1001_Read
  4213                           
  4214                           ;main.c: 43: templo = templo >> 6;
  4215  0264  0020               	movlb	0	; select bank0
  4216  0265  0841               	movf	main@templo,w
  4217  0266  00BE               	movwf	??_main
  4218  0267  3006               	movlw	6
  4219  0268                     u1725:	
  4220  0268  36BE               	lsrf	??_main,f
  4221  0269  0B89               	decfsz	9,f
  4222  026A  2A68               	goto	u1725
  4223  026B  083E               	movf	??_main,w
  4224  026C  00BF               	movwf	??_main+1
  4225  026D  083F               	movf	??_main+1,w
  4226  026E  00C1               	movwf	main@templo
  4227                           
  4228                           ;main.c: 44: if (temp < 0) templo = 3-templo;
  4229  026F  1FC0               	btfss	main@temp,7
  4230  0270  2A77               	goto	l2106
  4231  0271  0341               	decf	main@templo,w
  4232  0272  3AFF               	xorlw	255
  4233  0273  3E03               	addlw	3
  4234  0274  00BE               	movwf	??_main
  4235  0275  083E               	movf	??_main,w
  4236  0276  00C1               	movwf	main@templo
  4237  0277                     l2106:	
  4238                           
  4239                           ;main.c: 45: printf("%d.%d", temp, templo*25);
  4240  0277  3095               	movlw	low (STR_2| (0+32768))
  4241  0278  00AE               	movwf	printf@f
  4242  0279  3084               	movlw	high (STR_2| (0+32768))
  4243  027A  00AF               	movwf	printf@f+1
  4244  027B  0840               	movf	main@temp,w
  4245  027C  00B0               	movwf	?_printf+2
  4246  027D  01B1               	clrf	?_printf+3
  4247  027E  1BB0               	btfsc	?_printf+2,7
  4248  027F  03B1               	decf	?_printf+3,f
  4249  0280  0841               	movf	main@templo,w
  4250  0281  00BE               	movwf	??_main
  4251  0282  01BF               	clrf	??_main+1
  4252  0283  083E               	movf	??_main,w
  4253  0284  00A0               	movwf	___wmul@multiplier
  4254  0285  083F               	movf	??_main+1,w
  4255  0286  00A1               	movwf	___wmul@multiplier+1
  4256  0287  3019               	movlw	25
  4257  0288  00A2               	movwf	___wmul@multiplicand
  4258  0289  3000               	movlw	0
  4259  028A  00A3               	movwf	___wmul@multiplicand+1
  4260  028B  3184  2412  3182   	fcall	___wmul
  4261  028E  0020               	movlb	0	; select bank0
  4262  028F  0821               	movf	?___wmul+1,w
  4263  0290  00B3               	movwf	?_printf+5
  4264  0291  0820               	movf	?___wmul,w
  4265  0292  00B2               	movwf	?_printf+4
  4266  0293  3181  216F  3182   	fcall	_printf
  4267  0296                     l2108:	
  4268                           
  4269                           ;main.c: 46: }
  4270                           ;main.c: 47: TMR6_Stop();
  4271  0296  3184  24F6  3182   	fcall	_TMR6_Stop
  4272  0299  2A2C               	goto	l2084
  4273  029A                     __end_of_main:	
  4274                           
  4275                           	psect	text1
  4276  016F                     __ptext1:	
  4277 ;; *************** function _printf *****************
  4278 ;; Defined at:
  4279 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4282 ;;		 -> STR_2(6), STR_1(2), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  tmpval          4    0        struct .
  4285 ;;  val             2   27[BANK0 ] unsigned int 
  4286 ;;  cp              2    0        PTR const unsigned char 
  4287 ;;  len             2    0        unsigned int 
  4288 ;;  c               1   29[BANK0 ] char 
  4289 ;;  prec            1   26[BANK0 ] char 
  4290 ;;  flag            1   25[BANK0 ] unsigned char 
  4291 ;;  ap              1   24[BANK0 ] PTR void [1]
  4292 ;;		 -> ?_printf(2), 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2   14[BANK0 ] int 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4302 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;Total ram usage:       16 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    5
  4309 ;; This function calls:
  4310 ;;		___lwdiv
  4311 ;;		___lwmod
  4312 ;;		_putch
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _printf
  4320  016F                     _printf:	
  4321                           
  4322                           ;doprnt.c: 466: va_list ap;
  4323                           ;doprnt.c: 499: signed char c;
  4324                           ;doprnt.c: 506: signed char prec;
  4325                           ;doprnt.c: 508: unsigned char flag;
  4326                           ;doprnt.c: 523: union {
  4327                           ;doprnt.c: 524: unsigned long vd;
  4328                           ;doprnt.c: 525: double integ;
  4329                           ;doprnt.c: 526: } tmpval;
  4330                           ;doprnt.c: 528: unsigned int val;
  4331                           ;doprnt.c: 529: unsigned len;
  4332                           ;doprnt.c: 530: const char * cp;
  4333                           ;doprnt.c: 533: *ap = __va_start();
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4337  016F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4338  0170  0020               	movlb	0	; select bank0
  4339  0171  00B4               	movwf	??_printf
  4340  0172  0834               	movf	??_printf,w
  4341  0173  00B8               	movwf	printf@ap
  4342  0174                     l2054:	
  4343                           ;doprnt.c: 536: while(c = *f++) {
  4344                           
  4345  0174  0020               	movlb	0	; select bank0
  4346  0175  082F               	movf	printf@f+1,w
  4347  0176  00B5               	movwf	??_printf+1
  4348  0177  082E               	movf	printf@f,w
  4349  0178  00B4               	movwf	??_printf
  4350  0179  0AAE               	incf	printf@f,f
  4351  017A  1903               	skipnz
  4352  017B  0AAF               	incf	printf@f+1,f
  4353  017C  0834               	movf	??_printf,w
  4354  017D  0084               	movwf	4
  4355  017E  0835               	movf	??_printf+1,w
  4356  017F  0085               	movwf	5
  4357  0180  0800               	movf	0,w	;code access
  4358  0181  00B6               	movwf	??_printf+2
  4359  0182  0836               	movf	??_printf+2,w
  4360  0183  00BD               	movwf	printf@c
  4361  0184  083D               	movf	printf@c,w
  4362  0185  1903               	btfsc	3,2
  4363  0186  0008               	return
  4364                           
  4365                           ;doprnt.c: 538: if(c != '%')
  4366  0187  3025               	movlw	37
  4367  0188  063D               	xorwf	printf@c,w
  4368  0189  1903               	btfsc	3,2
  4369  018A  2990               	goto	l2014
  4370                           
  4371                           ;doprnt.c: 540: {
  4372                           ;doprnt.c: 541: (putch(c) );
  4373  018B  083D               	movf	printf@c,w
  4374  018C  3184  24F0  3181   	fcall	_putch
  4375                           
  4376                           ;doprnt.c: 542: continue;
  4377  018F  2974               	goto	l2054
  4378  0190                     l2014:	
  4379                           
  4380                           ;doprnt.c: 543: }
  4381                           ;doprnt.c: 548: flag = 0;
  4382  0190  0020               	movlb	0	; select bank0
  4383  0191  01B9               	clrf	printf@flag
  4384                           
  4385                           ;doprnt.c: 822: }
  4386                           
  4387                           ;doprnt.c: 813: continue;
  4388                           
  4389                           ;doprnt.c: 802: default:
  4390                           
  4391                           ;doprnt.c: 698: case 'i':
  4392                           ;doprnt.c: 699: break;
  4393                           
  4394                           ;doprnt.c: 697: case 'd':
  4395                           
  4396                           ;doprnt.c: 638: goto alldone;
  4397                           
  4398                           ;doprnt.c: 637: case 0:
  4399                           
  4400                           ;doprnt.c: 635: switch(c = *f++) {
  4401  0192  082F               	movf	printf@f+1,w
  4402  0193  00B5               	movwf	??_printf+1
  4403  0194  082E               	movf	printf@f,w
  4404  0195  00B4               	movwf	??_printf
  4405  0196  0AAE               	incf	printf@f,f
  4406  0197  1903               	skipnz
  4407  0198  0AAF               	incf	printf@f+1,f
  4408  0199  0834               	movf	??_printf,w
  4409  019A  0084               	movwf	4
  4410  019B  0835               	movf	??_printf+1,w
  4411  019C  0085               	movwf	5
  4412  019D  0800               	movf	0,w	;code access
  4413  019E  00BD               	movwf	printf@c
  4414                           
  4415                           ; Switch size 1, requested type "space"
  4416                           ; Number of cases is 3, Range of values is 0 to 105
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte           10     6 (average)
  4420                           ; direct_byte          218     6 (fixed)
  4421                           ; jumptable            260     6 (fixed)
  4422                           ;	Chosen strategy is simple_byte
  4423  019F  3A00               	xorlw	0	; case 0
  4424  01A0  1903               	skipnz
  4425  01A1  2A26               	goto	l436
  4426  01A2  3A64               	xorlw	100	; case 100
  4427  01A3  1903               	skipnz
  4428  01A4  29A9               	goto	l2020
  4429  01A5  3A0D               	xorlw	13	; case 105
  4430  01A6  1903               	skipnz
  4431  01A7  29A9               	goto	l2020
  4432  01A8  2974               	goto	l2054
  4433  01A9                     l2020:	
  4434                           
  4435                           ;doprnt.c: 1253: {
  4436                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4437  01A9  0838               	movf	printf@ap,w
  4438  01AA  0086               	movwf	6
  4439  01AB  0187               	clrf	7
  4440  01AC  3F40               	moviw [0]fsr1
  4441  01AD  00BB               	movwf	printf@val
  4442  01AE  3F41               	moviw [1]fsr1
  4443  01AF  00BC               	movwf	printf@val+1
  4444  01B0  3002               	movlw	2
  4445  01B1  00B4               	movwf	??_printf
  4446  01B2  0834               	movf	??_printf,w
  4447  01B3  07B8               	addwf	printf@ap,f
  4448                           
  4449                           ;doprnt.c: 1261: if((int)val < 0) {
  4450  01B4  1FBC               	btfss	printf@val+1,7
  4451  01B5  29BF               	goto	l2030
  4452                           
  4453                           ;doprnt.c: 1262: flag |= 0x03;
  4454  01B6  3003               	movlw	3
  4455  01B7  00B4               	movwf	??_printf
  4456  01B8  0834               	movf	??_printf,w
  4457  01B9  04B9               	iorwf	printf@flag,f
  4458                           
  4459                           ;doprnt.c: 1263: val = -val;
  4460  01BA  09BB               	comf	printf@val,f
  4461  01BB  09BC               	comf	printf@val+1,f
  4462  01BC  0ABB               	incf	printf@val,f
  4463  01BD  1903               	skipnz
  4464  01BE  0ABC               	incf	printf@val+1,f
  4465  01BF                     l2030:	
  4466                           
  4467                           ;doprnt.c: 1264: }
  4468                           ;doprnt.c: 1266: }
  4469                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4470  01BF  01BD               	clrf	printf@c
  4471  01C0  0ABD               	incf	printf@c,f
  4472  01C1  3005               	movlw	5
  4473  01C2  063D               	xorwf	printf@c,w
  4474  01C3  1903               	btfsc	3,2
  4475  01C4  29E4               	goto	l2042
  4476  01C5                     l2036:	
  4477                           
  4478                           ;doprnt.c: 1306: if(val < dpowers[c])
  4479  01C5  083D               	movf	printf@c,w
  4480  01C6  00B4               	movwf	??_printf
  4481  01C7  01B5               	clrf	??_printf+1
  4482  01C8  35B4               	lslf	??_printf,f
  4483  01C9  0DB5               	rlf	??_printf+1,f
  4484  01CA  308B               	movlw	low (_dpowers| (0+32768))
  4485  01CB  0734               	addwf	??_printf,w
  4486  01CC  0084               	movwf	4
  4487  01CD  3084               	movlw	high (_dpowers| (0+32768))
  4488  01CE  3D35               	addwfc	??_printf+1,w
  4489  01CF  0085               	movwf	5
  4490  01D0  3F00               	moviw [0]fsr0
  4491  01D1  00B6               	movwf	??_printf+2
  4492  01D2  3F01               	moviw [1]fsr0
  4493  01D3  00B7               	movwf	??_printf+3
  4494  01D4  0837               	movf	??_printf+3,w
  4495  01D5  023C               	subwf	printf@val+1,w
  4496  01D6  1D03               	skipz
  4497  01D7  29DA               	goto	u1585
  4498  01D8  0836               	movf	??_printf+2,w
  4499  01D9  023B               	subwf	printf@val,w
  4500  01DA                     u1585:	
  4501  01DA  1C03               	btfss	3,0
  4502  01DB  29E4               	goto	l2042
  4503                           
  4504                           ;doprnt.c: 1307: break;
  4505  01DC  3001               	movlw	1
  4506  01DD  00B4               	movwf	??_printf
  4507  01DE  0834               	movf	??_printf,w
  4508  01DF  07BD               	addwf	printf@c,f
  4509  01E0  3005               	movlw	5
  4510  01E1  063D               	xorwf	printf@c,w
  4511  01E2  1D03               	btfss	3,2
  4512  01E3  29C5               	goto	l2036
  4513  01E4                     l2042:	
  4514                           
  4515                           ;doprnt.c: 1422: {
  4516                           ;doprnt.c: 1438: if(flag & 0x03)
  4517  01E4  0839               	movf	printf@flag,w
  4518  01E5  3903               	andlw	3
  4519  01E6  1903               	btfsc	3,2
  4520  01E7  29EC               	goto	l2046
  4521                           
  4522                           ;doprnt.c: 1439: (putch('-') );
  4523  01E8  302D               	movlw	45
  4524  01E9  3184  24F0  3181   	fcall	_putch
  4525  01EC                     l2046:	
  4526                           
  4527                           ;doprnt.c: 1469: }
  4528                           ;doprnt.c: 1472: prec = c;
  4529  01EC  0020               	movlb	0	; select bank0
  4530  01ED  083D               	movf	printf@c,w
  4531  01EE  00B4               	movwf	??_printf
  4532  01EF  0834               	movf	??_printf,w
  4533  01F0  00BA               	movwf	printf@prec
  4534  01F1                     l2052:	
  4535                           ;doprnt.c: 1474: while(prec--) {
  4536                           
  4537  01F1  30FF               	movlw	255
  4538  01F2  0020               	movlb	0	; select bank0
  4539  01F3  00B4               	movwf	??_printf
  4540  01F4  0834               	movf	??_printf,w
  4541  01F5  07BA               	addwf	printf@prec,f
  4542  01F6  0A3A               	incf	printf@prec,w
  4543  01F7  1903               	btfsc	3,2
  4544  01F8  2974               	goto	l2054
  4545                           
  4546                           ;doprnt.c: 1478: {
  4547                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4548  01F9  300A               	movlw	10
  4549  01FA  00A8               	movwf	___lwmod@divisor
  4550  01FB  3000               	movlw	0
  4551  01FC  00A9               	movwf	___lwmod@divisor+1
  4552  01FD  083A               	movf	printf@prec,w
  4553  01FE  00B4               	movwf	??_printf
  4554  01FF  01B5               	clrf	??_printf+1
  4555  0200  35B4               	lslf	??_printf,f
  4556  0201  0DB5               	rlf	??_printf+1,f
  4557  0202  308B               	movlw	low (_dpowers| (0+32768))
  4558  0203  0734               	addwf	??_printf,w
  4559  0204  0084               	movwf	4
  4560  0205  3084               	movlw	high (_dpowers| (0+32768))
  4561  0206  3D35               	addwfc	??_printf+1,w
  4562  0207  0085               	movwf	5
  4563  0208  3F00               	moviw [0]fsr0
  4564  0209  00A0               	movwf	___lwdiv@divisor
  4565  020A  3F01               	moviw [1]fsr0
  4566  020B  00A1               	movwf	___lwdiv@divisor+1
  4567  020C  083C               	movf	printf@val+1,w
  4568  020D  00A3               	movwf	___lwdiv@dividend+1
  4569  020E  083B               	movf	printf@val,w
  4570  020F  00A2               	movwf	___lwdiv@dividend
  4571  0210  3183  2368  3181   	fcall	___lwdiv
  4572  0213  0020               	movlb	0	; select bank0
  4573  0214  0821               	movf	?___lwdiv+1,w
  4574  0215  00AB               	movwf	___lwmod@dividend+1
  4575  0216  0820               	movf	?___lwdiv,w
  4576  0217  00AA               	movwf	___lwmod@dividend
  4577  0218  3183  239D  3181   	fcall	___lwmod
  4578  021B  0020               	movlb	0	; select bank0
  4579  021C  0828               	movf	?___lwmod,w
  4580  021D  3E30               	addlw	48
  4581  021E  00B6               	movwf	??_printf+2
  4582  021F  0836               	movf	??_printf+2,w
  4583  0220  00BD               	movwf	printf@c
  4584                           
  4585                           ;doprnt.c: 1523: }
  4586                           ;doprnt.c: 1524: (putch(c) );
  4587  0221  083D               	movf	printf@c,w
  4588  0222  3184  24F0  3181   	fcall	_putch
  4589  0225  29F1               	goto	l2052
  4590  0226                     l436:	
  4591                           ;doprnt.c: 1540: return 0;
  4592                           ;	Return value of _printf is never used
  4593                           
  4594                           ;doprnt.c: 1525: }
  4595                           ;doprnt.c: 1533: }
  4596                           ;doprnt.c: 1535: alldone:
  4597                           
  4598  0226  0008               	return
  4599  0227                     __end_of_printf:	
  4600                           
  4601                           	psect	text2
  4602  04F0                     __ptext2:	
  4603 ;; *************** function _putch *****************
  4604 ;; Defined at:
  4605 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  txData          1    wreg     unsigned char 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  txData          1    1[BANK0 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        1 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    4
  4626 ;; This function calls:
  4627 ;;		_EUSART_Write
  4628 ;; This function is called by:
  4629 ;;		_printf
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _putch
  4635  04F0                     _putch:	
  4636                           
  4637                           ;incstack = 0
  4638                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4639                           ;putch@txData stored from wreg
  4640  04F0  0020               	movlb	0	; select bank0
  4641  04F1  00A1               	movwf	putch@txData
  4642                           
  4643                           ;eusart.c: 113: EUSART_Write(txData);
  4644  04F2  0821               	movf	putch@txData,w
  4645  04F3  3184  24D7         	fcall	_EUSART_Write
  4646  04F5  0008               	return
  4647  04F6                     __end_of_putch:	
  4648                           
  4649                           	psect	text3
  4650  04D7                     __ptext3:	
  4651 ;; *************** function _EUSART_Write *****************
  4652 ;; Defined at:
  4653 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  txData          1    wreg     unsigned char 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  txData          1    0[BANK0 ] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:        1 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    3
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_putch
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _EUSART_Write
  4684  04D7                     _EUSART_Write:	
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _EUSART_Write: [wreg]
  4688                           ;EUSART_Write@txData stored from wreg
  4689  04D7  0020               	movlb	0	; select bank0
  4690  04D8  00A0               	movwf	EUSART_Write@txData
  4691  04D9                     l35:	
  4692                           ;eusart.c: 100: {
  4693                           
  4694                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  4695                           
  4696  04D9  002E               	movlb	14	; select bank14
  4697  04DA  1E0F               	btfss	15,4	;volatile
  4698  04DB  2CD9               	goto	l35
  4699                           
  4700                           ;eusart.c: 101: }
  4701                           ;eusart.c: 103: TX1REG = txData;
  4702  04DC  0020               	movlb	0	; select bank0
  4703  04DD  0820               	movf	EUSART_Write@txData,w
  4704  04DE  0022               	movlb	2	; select bank2
  4705  04DF  009A               	movwf	26	;volatile
  4706  04E0  0008               	return
  4707  04E1                     __end_of_EUSART_Write:	
  4708                           
  4709                           	psect	text4
  4710  039D                     __ptext4:	
  4711 ;; *************** function ___lwmod *****************
  4712 ;; Defined at:
  4713 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  divisor         2    8[BANK0 ] unsigned int 
  4716 ;;  dividend        2   10[BANK0 ] unsigned int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  counter         1   13[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2    8[BANK0 ] unsigned int 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;Total ram usage:        6 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    3
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_printf
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function ___lwmod
  4744  039D                     ___lwmod:	
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4748  039D  0020               	movlb	0	; select bank0
  4749  039E  0828               	movf	___lwmod@divisor,w
  4750  039F  0429               	iorwf	___lwmod@divisor+1,w
  4751  03A0  1903               	btfsc	3,2
  4752  03A1  2BC5               	goto	l1600
  4753  03A2  01AD               	clrf	___lwmod@counter
  4754  03A3  0AAD               	incf	___lwmod@counter,f
  4755  03A4                     l1590:	
  4756  03A4  1BA9               	btfsc	___lwmod@divisor+1,7
  4757  03A5  2BB0               	goto	l1592
  4758  03A6  3001               	movlw	1
  4759  03A7                     u935:	
  4760  03A7  35A8               	lslf	___lwmod@divisor,f
  4761  03A8  0DA9               	rlf	___lwmod@divisor+1,f
  4762  03A9  0B89               	decfsz	9,f
  4763  03AA  2BA7               	goto	u935
  4764  03AB  3001               	movlw	1
  4765  03AC  00AC               	movwf	??___lwmod
  4766  03AD  082C               	movf	??___lwmod,w
  4767  03AE  07AD               	addwf	___lwmod@counter,f
  4768  03AF  2BA4               	goto	l1590
  4769  03B0                     l1592:	
  4770  03B0  0829               	movf	___lwmod@divisor+1,w
  4771  03B1  022B               	subwf	___lwmod@dividend+1,w
  4772  03B2  1D03               	skipz
  4773  03B3  2BB6               	goto	u955
  4774  03B4  0828               	movf	___lwmod@divisor,w
  4775  03B5  022A               	subwf	___lwmod@dividend,w
  4776  03B6                     u955:	
  4777  03B6  1C03               	skipc
  4778  03B7  2BBC               	goto	l1596
  4779  03B8  0828               	movf	___lwmod@divisor,w
  4780  03B9  02AA               	subwf	___lwmod@dividend,f
  4781  03BA  0829               	movf	___lwmod@divisor+1,w
  4782  03BB  3BAB               	subwfb	___lwmod@dividend+1,f
  4783  03BC                     l1596:	
  4784  03BC  3001               	movlw	1
  4785  03BD                     u965:	
  4786  03BD  36A9               	lsrf	___lwmod@divisor+1,f
  4787  03BE  0CA8               	rrf	___lwmod@divisor,f
  4788  03BF  0B89               	decfsz	9,f
  4789  03C0  2BBD               	goto	u965
  4790  03C1  3001               	movlw	1
  4791  03C2  02AD               	subwf	___lwmod@counter,f
  4792  03C3  1D03               	btfss	3,2
  4793  03C4  2BB0               	goto	l1592
  4794  03C5                     l1600:	
  4795  03C5  082B               	movf	___lwmod@dividend+1,w
  4796  03C6  00A9               	movwf	?___lwmod+1
  4797  03C7  082A               	movf	___lwmod@dividend,w
  4798  03C8  00A8               	movwf	?___lwmod
  4799  03C9  0008               	return
  4800  03CA                     __end_of___lwmod:	
  4801                           
  4802                           	psect	text5
  4803  0368                     __ptext5:	
  4804 ;; *************** function ___lwdiv *****************
  4805 ;; Defined at:
  4806 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  divisor         2    0[BANK0 ] unsigned int 
  4809 ;;  dividend        2    2[BANK0 ] unsigned int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  quotient        2    5[BANK0 ] unsigned int 
  4812 ;;  counter         1    7[BANK0 ] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2    0[BANK0 ] unsigned int 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4822 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;Total ram usage:        8 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    3
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_printf
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function ___lwdiv
  4838  0368                     ___lwdiv:	
  4839                           
  4840                           ;incstack = 0
  4841                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4842  0368  0020               	movlb	0	; select bank0
  4843  0369  01A5               	clrf	___lwdiv@quotient
  4844  036A  01A6               	clrf	___lwdiv@quotient+1
  4845  036B  0820               	movf	___lwdiv@divisor,w
  4846  036C  0421               	iorwf	___lwdiv@divisor+1,w
  4847  036D  1903               	btfsc	3,2
  4848  036E  2B98               	goto	l1578
  4849  036F  01A7               	clrf	___lwdiv@counter
  4850  0370  0AA7               	incf	___lwdiv@counter,f
  4851  0371                     l1566:	
  4852  0371  1BA1               	btfsc	___lwdiv@divisor+1,7
  4853  0372  2B7D               	goto	l1568
  4854  0373  3001               	movlw	1
  4855  0374                     u865:	
  4856  0374  35A0               	lslf	___lwdiv@divisor,f
  4857  0375  0DA1               	rlf	___lwdiv@divisor+1,f
  4858  0376  0B89               	decfsz	9,f
  4859  0377  2B74               	goto	u865
  4860  0378  3001               	movlw	1
  4861  0379  00A4               	movwf	??___lwdiv
  4862  037A  0824               	movf	??___lwdiv,w
  4863  037B  07A7               	addwf	___lwdiv@counter,f
  4864  037C  2B71               	goto	l1566
  4865  037D                     l1568:	
  4866  037D  3001               	movlw	1
  4867  037E                     u885:	
  4868  037E  35A5               	lslf	___lwdiv@quotient,f
  4869  037F  0DA6               	rlf	___lwdiv@quotient+1,f
  4870  0380  0B89               	decfsz	9,f
  4871  0381  2B7E               	goto	u885
  4872  0382  0821               	movf	___lwdiv@divisor+1,w
  4873  0383  0223               	subwf	___lwdiv@dividend+1,w
  4874  0384  1D03               	skipz
  4875  0385  2B88               	goto	u895
  4876  0386  0820               	movf	___lwdiv@divisor,w
  4877  0387  0222               	subwf	___lwdiv@dividend,w
  4878  0388                     u895:	
  4879  0388  1C03               	skipc
  4880  0389  2B8F               	goto	l1574
  4881  038A  0820               	movf	___lwdiv@divisor,w
  4882  038B  02A2               	subwf	___lwdiv@dividend,f
  4883  038C  0821               	movf	___lwdiv@divisor+1,w
  4884  038D  3BA3               	subwfb	___lwdiv@dividend+1,f
  4885  038E  1425               	bsf	___lwdiv@quotient,0
  4886  038F                     l1574:	
  4887  038F  3001               	movlw	1
  4888  0390                     u905:	
  4889  0390  36A1               	lsrf	___lwdiv@divisor+1,f
  4890  0391  0CA0               	rrf	___lwdiv@divisor,f
  4891  0392  0B89               	decfsz	9,f
  4892  0393  2B90               	goto	u905
  4893  0394  3001               	movlw	1
  4894  0395  02A7               	subwf	___lwdiv@counter,f
  4895  0396  1D03               	btfss	3,2
  4896  0397  2B7D               	goto	l1568
  4897  0398                     l1578:	
  4898  0398  0826               	movf	___lwdiv@quotient+1,w
  4899  0399  00A1               	movwf	?___lwdiv+1
  4900  039A  0825               	movf	___lwdiv@quotient,w
  4901  039B  00A0               	movwf	?___lwdiv
  4902  039C  0008               	return
  4903  039D                     __end_of___lwdiv:	
  4904                           
  4905                           	psect	text6
  4906  0412                     __ptext6:	
  4907 ;; *************** function ___wmul *****************
  4908 ;; Defined at:
  4909 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4912 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  product         2    4[BANK0 ] unsigned int 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  2    0[BANK0 ] unsigned int 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;Total ram usage:        6 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    3
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function ___wmul
  4940  0412                     ___wmul:	
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4944  0412  0020               	movlb	0	; select bank0
  4945  0413  01A4               	clrf	___wmul@product
  4946  0414  01A5               	clrf	___wmul@product+1
  4947  0415                     l2058:	
  4948  0415  1C20               	btfss	___wmul@multiplier,0
  4949  0416  2C1B               	goto	l518
  4950  0417  0822               	movf	___wmul@multiplicand,w
  4951  0418  07A4               	addwf	___wmul@product,f
  4952  0419  0823               	movf	___wmul@multiplicand+1,w
  4953  041A  3DA5               	addwfc	___wmul@product+1,f
  4954  041B                     l518:	
  4955  041B  3001               	movlw	1
  4956  041C                     u1645:	
  4957  041C  35A2               	lslf	___wmul@multiplicand,f
  4958  041D  0DA3               	rlf	___wmul@multiplicand+1,f
  4959  041E  0B89               	decfsz	9,f
  4960  041F  2C1C               	goto	u1645
  4961  0420  3001               	movlw	1
  4962  0421                     u1655:	
  4963  0421  36A1               	lsrf	___wmul@multiplier+1,f
  4964  0422  0CA0               	rrf	___wmul@multiplier,f
  4965  0423  0B89               	decfsz	9,f
  4966  0424  2C21               	goto	u1655
  4967  0425  0820               	movf	___wmul@multiplier,w
  4968  0426  0421               	iorwf	___wmul@multiplier+1,w
  4969  0427  1D03               	btfss	3,2
  4970  0428  2C15               	goto	l2058
  4971  0429  0825               	movf	___wmul@product+1,w
  4972  042A  00A1               	movwf	?___wmul+1
  4973  042B  0824               	movf	___wmul@product,w
  4974  042C  00A0               	movwf	?___wmul
  4975  042D  0008               	return
  4976  042E                     __end_of___wmul:	
  4977                           
  4978                           	psect	text7
  4979  04F6                     __ptext7:	
  4980 ;; *************** function _TMR6_Stop *****************
  4981 ;; Defined at:
  4982 ;;		line 115 in file "mcc_generated_files/tmr6.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		status,2
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    3
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_main
  5007 ;;		_TMR6_StopTimer
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function _TMR6_Stop
  5013  04F6                     _TMR6_Stop:	
  5014                           
  5015                           ;tmr6.c: 118: T6CONbits.TMR6ON = 0;
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in _TMR6_Stop: [status,2]
  5019  04F6  0025               	movlb	5	; select bank5
  5020  04F7  139A               	bcf	26,7	;volatile
  5021                           
  5022                           ;tmr6.c: 119: T6TMR = 0x00;
  5023  04F8  0198               	clrf	24	;volatile
  5024  04F9  0008               	return
  5025  04FA                     __end_of_TMR6_Stop:	
  5026                           
  5027                           	psect	text8
  5028  04FA                     __ptext8:	
  5029 ;; *************** function _TMR6_Start *****************
  5030 ;; Defined at:
  5031 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		None
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    3
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;;		_TMR6_StartTimer
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _TMR6_Start
  5062  04FA                     _TMR6_Start:	
  5063                           
  5064                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _TMR6_Start: []
  5068  04FA  0025               	movlb	5	; select bank5
  5069  04FB  179A               	bsf	26,7	;volatile
  5070  04FC  0008               	return
  5071  04FD                     __end_of_TMR6_Start:	
  5072                           
  5073                           	psect	text9
  5074  04AF                     __ptext9:	
  5075 ;; *************** function _SYSTEM_Initialize *****************
  5076 ;; Defined at:
  5077 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:        0 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    4
  5098 ;; This function calls:
  5099 ;;		_EUSART_Initialize
  5100 ;;		_I2C2_Initialize
  5101 ;;		_OSCILLATOR_Initialize
  5102 ;;		_PIN_MANAGER_Initialize
  5103 ;;		_TMR6_Initialize
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _SYSTEM_Initialize
  5111  04AF                     _SYSTEM_Initialize:	
  5112                           
  5113                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5117  04AF  3182  229A  3184   	fcall	_PIN_MANAGER_Initialize
  5118                           
  5119                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5120  04B2  3184  24E1  3184   	fcall	_OSCILLATOR_Initialize
  5121                           
  5122                           ;mcc.c: 87: I2C2_Initialize();
  5123  04B5  3184  242E  3184   	fcall	_I2C2_Initialize
  5124                           
  5125                           ;mcc.c: 88: TMR6_Initialize();
  5126  04B8  3184  24BE  3184   	fcall	_TMR6_Initialize
  5127                           
  5128                           ;mcc.c: 89: EUSART_Initialize();
  5129  04BB  3184  24CB         	fcall	_EUSART_Initialize
  5130  04BD  0008               	return
  5131  04BE                     __end_of_SYSTEM_Initialize:	
  5132                           
  5133                           	psect	text10
  5134  04BE                     __ptext10:	
  5135 ;; *************** function _TMR6_Initialize *****************
  5136 ;; Defined at:
  5137 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    3
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_SYSTEM_Initialize
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _TMR6_Initialize
  5167  04BE                     _TMR6_Initialize:	
  5168                           
  5169                           ;tmr6.c: 68: T6CON = 0x79;
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  5173  04BE  3079               	movlw	121
  5174  04BF  0025               	movlb	5	; select bank5
  5175  04C0  009A               	movwf	26	;volatile
  5176                           
  5177                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5178  04C1  3004               	movlw	4
  5179  04C2  009C               	movwf	28	;volatile
  5180                           
  5181                           ;tmr6.c: 74: T6HLT = 0x00;
  5182  04C3  019B               	clrf	27	;volatile
  5183                           
  5184                           ;tmr6.c: 77: T6RST = 0x00;
  5185  04C4  019D               	clrf	29	;volatile
  5186                           
  5187                           ;tmr6.c: 80: T6PR = 0x2F;
  5188  04C5  302F               	movlw	47
  5189  04C6  0099               	movwf	25	;volatile
  5190                           
  5191                           ;tmr6.c: 83: T6TMR = 0x00;
  5192  04C7  0198               	clrf	24	;volatile
  5193                           
  5194                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5195  04C8  002E               	movlb	14	; select bank14
  5196  04C9  1290               	bcf	16,5	;volatile
  5197  04CA  0008               	return
  5198  04CB                     __end_of_TMR6_Initialize:	
  5199                           
  5200                           	psect	text11
  5201  029A                     __ptext11:	
  5202 ;; *************** function _PIN_MANAGER_Initialize *****************
  5203 ;; Defined at:
  5204 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  state           1    0[BANK0 ] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        1 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    3
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_SYSTEM_Initialize
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _PIN_MANAGER_Initialize
  5234  029A                     _PIN_MANAGER_Initialize:	
  5235                           
  5236                           ;pin_manager.c: 56: LATA = 0x00;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5240  029A  0020               	movlb	0	; select bank0
  5241  029B  0196               	clrf	22	;volatile
  5242                           
  5243                           ;pin_manager.c: 57: LATB = 0x00;
  5244  029C  0197               	clrf	23	;volatile
  5245                           
  5246                           ;pin_manager.c: 58: LATC = 0x00;
  5247  029D  0198               	clrf	24	;volatile
  5248                           
  5249                           ;pin_manager.c: 63: TRISA = 0xFC;
  5250  029E  30FC               	movlw	252
  5251  029F  0091               	movwf	17	;volatile
  5252                           
  5253                           ;pin_manager.c: 64: TRISB = 0xFF;
  5254  02A0  30FF               	movlw	255
  5255  02A1  0092               	movwf	18	;volatile
  5256                           
  5257                           ;pin_manager.c: 65: TRISC = 0xBE;
  5258  02A2  30BE               	movlw	190
  5259  02A3  0093               	movwf	19	;volatile
  5260                           
  5261                           ;pin_manager.c: 70: ANSELC = 0xE5;
  5262  02A4  30E5               	movlw	229
  5263  02A5  003E               	movlb	30	; select bank30
  5264  02A6  00CE               	movwf	78	;volatile
  5265                           
  5266                           ;pin_manager.c: 71: ANSELB = 0x7F;
  5267  02A7  307F               	movlw	127
  5268  02A8  00C3               	movwf	67	;volatile
  5269                           
  5270                           ;pin_manager.c: 72: ANSELA = 0xDC;
  5271  02A9  30DC               	movlw	220
  5272  02AA  00B8               	movwf	56	;volatile
  5273                           
  5274                           ;pin_manager.c: 77: WPUE = 0x00;
  5275  02AB  01E5               	clrf	101	;volatile
  5276                           
  5277                           ;pin_manager.c: 78: WPUB = 0x00;
  5278  02AC  01C4               	clrf	68	;volatile
  5279                           
  5280                           ;pin_manager.c: 79: WPUA = 0x00;
  5281  02AD  01B9               	clrf	57	;volatile
  5282                           
  5283                           ;pin_manager.c: 80: WPUC = 0x00;
  5284  02AE  01CF               	clrf	79	;volatile
  5285                           
  5286                           ;pin_manager.c: 85: ODCONA = 0x00;
  5287  02AF  01BA               	clrf	58	;volatile
  5288                           
  5289                           ;pin_manager.c: 86: ODCONB = 0x00;
  5290  02B0  01C5               	clrf	69	;volatile
  5291                           
  5292                           ;pin_manager.c: 87: ODCONC = 0x00;
  5293  02B1  01D0               	clrf	80	;volatile
  5294                           
  5295                           ;pin_manager.c: 94: bool state = GIE;
  5296  02B2  3000               	movlw	0
  5297  02B3  1B8B               	btfsc	11,7	;volatile
  5298  02B4  3001               	movlw	1
  5299  02B5  0020               	movlb	0	; select bank0
  5300  02B6  00A0               	movwf	PIN_MANAGER_Initialize@state
  5301                           
  5302                           ;pin_manager.c: 95: GIE = 0;
  5303  02B7  138B               	bcf	11,7	;volatile
  5304                           
  5305                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  5306  02B8  3055               	movlw	85
  5307  02B9  003D               	movlb	29	; select bank29
  5308  02BA  008F               	movwf	15	;volatile
  5309                           
  5310                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  5311  02BB  30AA               	movlw	170
  5312  02BC  008F               	movwf	15	;volatile
  5313                           
  5314                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  5315  02BD  100F               	bcf	15,0	;volatile
  5316                           
  5317                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  5318  02BE  081E               	movf	30,w	;volatile
  5319  02BF  39E0               	andlw	-32
  5320  02C0  380F               	iorlw	15
  5321  02C1  009E               	movwf	30	;volatile
  5322                           
  5323                           ;pin_manager.c: 101: RC0PPS = 0x10;
  5324  02C2  3010               	movlw	16
  5325  02C3  003E               	movlb	30	; select bank30
  5326  02C4  00A0               	movwf	32	;volatile
  5327                           
  5328                           ;pin_manager.c: 102: RXPPSbits.RXPPS = 0x11;
  5329  02C5  003D               	movlb	29	; select bank29
  5330  02C6  084B               	movf	75,w	;volatile
  5331  02C7  39E0               	andlw	-32
  5332  02C8  3811               	iorlw	17
  5333  02C9  00CB               	movwf	75	;volatile
  5334                           
  5335                           ;pin_manager.c: 103: RC3PPS = 0x17;
  5336  02CA  3017               	movlw	23
  5337  02CB  003E               	movlb	30	; select bank30
  5338  02CC  00A3               	movwf	35	;volatile
  5339                           
  5340                           ;pin_manager.c: 104: RC4PPS = 0x16;
  5341  02CD  3016               	movlw	22
  5342  02CE  00A4               	movwf	36	;volatile
  5343                           
  5344                           ;pin_manager.c: 105: RC6PPS = 0x10;
  5345  02CF  3010               	movlw	16
  5346  02D0  00A6               	movwf	38	;volatile
  5347                           
  5348                           ;pin_manager.c: 106: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5349  02D1  003D               	movlb	29	; select bank29
  5350  02D2  0849               	movf	73,w	;volatile
  5351  02D3  39E0               	andlw	-32
  5352  02D4  3813               	iorlw	19
  5353  02D5  00C9               	movwf	73	;volatile
  5354                           
  5355                           ;pin_manager.c: 107: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5356  02D6  0848               	movf	72,w	;volatile
  5357  02D7  39E0               	andlw	-32
  5358  02D8  3814               	iorlw	20
  5359  02D9  00C8               	movwf	72	;volatile
  5360                           
  5361                           ;pin_manager.c: 109: PPSLOCK = 0x55;
  5362  02DA  3055               	movlw	85
  5363  02DB  008F               	movwf	15	;volatile
  5364                           
  5365                           ;pin_manager.c: 110: PPSLOCK = 0xAA;
  5366  02DC  30AA               	movlw	170
  5367  02DD  008F               	movwf	15	;volatile
  5368                           
  5369                           ;pin_manager.c: 111: PPSLOCKbits.PPSLOCKED = 0x01;
  5370  02DE  140F               	bsf	15,0	;volatile
  5371                           
  5372                           ;pin_manager.c: 113: GIE = state;
  5373  02DF  0020               	movlb	0	; select bank0
  5374  02E0  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  5375  02E1  2AE4               	goto	u1490
  5376  02E2  178B               	bsf	11,7	;volatile
  5377  02E3  0008               	return
  5378  02E4                     u1490:	
  5379  02E4  138B               	bcf	11,7	;volatile
  5380  02E5  0008               	return
  5381  02E6                     __end_of_PIN_MANAGER_Initialize:	
  5382                           
  5383                           	psect	text12
  5384  04E1                     __ptext12:	
  5385 ;; *************** function _OSCILLATOR_Initialize *****************
  5386 ;; Defined at:
  5387 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    3
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_SYSTEM_Initialize
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _OSCILLATOR_Initialize
  5417  04E1                     _OSCILLATOR_Initialize:	
  5418                           
  5419                           ;mcc.c: 95: OSCCON1 = 0x10;
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5423  04E1  3010               	movlw	16
  5424  04E2  0031               	movlb	17	; select bank17
  5425  04E3  008D               	movwf	13	;volatile
  5426                           
  5427                           ;mcc.c: 97: OSCCON3 = 0x00;
  5428  04E4  018F               	clrf	15	;volatile
  5429                           
  5430                           ;mcc.c: 99: OSCEN = 0x00;
  5431  04E5  0191               	clrf	17	;volatile
  5432                           
  5433                           ;mcc.c: 101: OSCFRQ = 0x05;
  5434  04E6  3005               	movlw	5
  5435  04E7  0093               	movwf	19	;volatile
  5436                           
  5437                           ;mcc.c: 103: OSCTUNE = 0x00;
  5438  04E8  0192               	clrf	18	;volatile
  5439  04E9  0008               	return
  5440  04EA                     __end_of_OSCILLATOR_Initialize:	
  5441                           
  5442                           	psect	text13
  5443  042E                     __ptext13:	
  5444 ;; *************** function _I2C2_Initialize *****************
  5445 ;; Defined at:
  5446 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;Total ram usage:        1 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    3
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_SYSTEM_Initialize
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function _I2C2_Initialize
  5476  042E                     _I2C2_Initialize:	
  5477                           
  5478                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5482  042E  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5483  042F  0020               	movlb	0	; select bank0
  5484  0430  00A0               	movwf	??_I2C2_Initialize
  5485  0431  0820               	movf	??_I2C2_Initialize,w
  5486  0432  00C3               	movwf	low ((_i2c2_object| 0+1))
  5487                           
  5488                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5489  0433  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5490  0434  00A0               	movwf	??_I2C2_Initialize
  5491  0435  0820               	movf	??_I2C2_Initialize,w
  5492  0436  00C2               	movwf	_i2c2_object
  5493                           
  5494                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5495  0437  14C4               	bsf	_i2c2_object+2,1
  5496                           
  5497                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5498  0438  1044               	bcf	_i2c2_object+2,0
  5499                           
  5500                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5501  0439  01C6               	clrf	_i2c2_object+4
  5502                           
  5503                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5504  043A  3080               	movlw	128
  5505  043B  0023               	movlb	3	; select bank3
  5506  043C  0099               	movwf	25	;volatile
  5507                           
  5508                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5509  043D  3028               	movlw	40
  5510  043E  009A               	movwf	26	;volatile
  5511                           
  5512                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5513  043F  019C               	clrf	28	;volatile
  5514                           
  5515                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  5516  0440  309F               	movlw	159
  5517  0441  0097               	movwf	23	;volatile
  5518                           
  5519                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5520  0442  002E               	movlb	14	; select bank14
  5521  0443  110F               	bcf	15,2	;volatile
  5522                           
  5523                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5524  0444  1519               	bsf	25,2	;volatile
  5525  0445  0008               	return
  5526  0446                     __end_of_I2C2_Initialize:	
  5527                           
  5528                           	psect	text14
  5529  04CB                     __ptext14:	
  5530 ;; *************** function _EUSART_Initialize *****************
  5531 ;; Defined at:
  5532 ;;		line 56 in file "mcc_generated_files/eusart.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;Total ram usage:        0 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    3
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_SYSTEM_Initialize
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           
  5561                           ;psect for function _EUSART_Initialize
  5562  04CB                     _EUSART_Initialize:	
  5563                           
  5564                           ;eusart.c: 61: BAUD1CON = 0x08;
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in _EUSART_Initialize: [wreg]
  5568  04CB  3008               	movlw	8
  5569  04CC  0022               	movlb	2	; select bank2
  5570  04CD  009F               	movwf	31	;volatile
  5571                           
  5572                           ;eusart.c: 64: RC1STA = 0x90;
  5573  04CE  3090               	movlw	144
  5574  04CF  009D               	movwf	29	;volatile
  5575                           
  5576                           ;eusart.c: 67: TX1STA = 0x24;
  5577  04D0  3024               	movlw	36
  5578  04D1  009E               	movwf	30	;volatile
  5579                           
  5580                           ;eusart.c: 70: SP1BRGL = 0x40;
  5581  04D2  3040               	movlw	64
  5582  04D3  009B               	movwf	27	;volatile
  5583                           
  5584                           ;eusart.c: 73: SP1BRGH = 0x03;
  5585  04D4  3003               	movlw	3
  5586  04D5  009C               	movwf	28	;volatile
  5587  04D6  0008               	return
  5588  04D7                     __end_of_EUSART_Initialize:	
  5589                           
  5590                           	psect	text15
  5591  0476                     __ptext15:	
  5592 ;; *************** function _EUSART_Read *****************
  5593 ;; Defined at:
  5594 ;;		line 78 in file "mcc_generated_files/eusart.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      unsigned char 
  5601 ;; Registers used:
  5602 ;;		wreg, status,0
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    3
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_main
  5619 ;;		_getch
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _EUSART_Read
  5625  0476                     _EUSART_Read:	
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _EUSART_Read: [wreg+status,0]
  5629                           ;eusart.c: 80: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  5630  0476  1003               	clrc
  5631  0477  0020               	movlb	0	; select bank0
  5632  0478  1C96               	btfss	22,1	;volatile
  5633  0479  1403               	setc
  5634  047A  1C03               	btfss	3,0
  5635  047B  2C7F               	goto	u1510
  5636  047C  0020               	movlb	0	; select bank0
  5637  047D  1496               	bsf	22,1	;volatile
  5638  047E  2C81               	goto	l28
  5639  047F                     u1510:	
  5640  047F  0020               	movlb	0	; select bank0
  5641  0480  1096               	bcf	22,1	;volatile
  5642  0481                     l28:	
  5643                           ;eusart.c: 82: {
  5644                           
  5645                           ;eusart.c: 81: while(!PIR3bits.RCIF)
  5646                           
  5647  0481  002E               	movlb	14	; select bank14
  5648  0482  1E8F               	btfss	15,5	;volatile
  5649  0483  2C81               	goto	l28
  5650                           
  5651                           ;eusart.c: 83: }
  5652                           ;eusart.c: 86: if(1 == RC1STAbits.OERR)
  5653  0484  0022               	movlb	2	; select bank2
  5654  0485  1C9D               	btfss	29,1	;volatile
  5655  0486  2C89               	goto	l1996
  5656                           
  5657                           ;eusart.c: 87: {
  5658                           ;eusart.c: 90: RC1STAbits.CREN = 0;
  5659  0487  121D               	bcf	29,4	;volatile
  5660                           
  5661                           ;eusart.c: 91: RC1STAbits.CREN = 1;
  5662  0488  161D               	bsf	29,4	;volatile
  5663  0489                     l1996:	
  5664                           
  5665                           ;eusart.c: 92: }
  5666                           ;eusart.c: 94: return RC1REG;
  5667  0489  0819               	movf	25,w	;volatile
  5668  048A  0008               	return
  5669  048B                     __end_of_EUSART_Read:	
  5670                           
  5671                           	psect	text16
  5672  032C                     __ptext16:	
  5673 ;; *************** function _EMC1001_Read *****************
  5674 ;; Defined at:
  5675 ;;		line 8 in file "main.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  reg             1    wreg     unsigned char 
  5678 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5679 ;;		 -> main@templo(1), main@temp(1), 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  reg             1   10[BANK0 ] unsigned char 
  5682 ;;  status          1   11[BANK0 ] enum E13634
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      unsigned char 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5692 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;Total ram usage:        5 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    4
  5699 ;; This function calls:
  5700 ;;		_I2C2_MasterReadTRBBuild
  5701 ;;		_I2C2_MasterTRBInsert
  5702 ;;		_I2C2_MasterWriteTRBBuild
  5703 ;; This function is called by:
  5704 ;;		_main
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _EMC1001_Read
  5710  032C                     _EMC1001_Read:	
  5711                           
  5712                           ;incstack = 0
  5713                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5714                           ;EMC1001_Read@reg stored from wreg
  5715  032C  0020               	movlb	0	; select bank0
  5716  032D  00AA               	movwf	EMC1001_Read@reg
  5717                           
  5718                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5719  032E  3002               	movlw	2
  5720  032F  00A8               	movwf	??_EMC1001_Read
  5721  0330  0828               	movf	??_EMC1001_Read,w
  5722  0331  00AB               	movwf	EMC1001_Read@status
  5723                           
  5724                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5725                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5726  0332  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5727  0333  00A8               	movwf	??_EMC1001_Read
  5728  0334  0828               	movf	??_EMC1001_Read,w
  5729  0335  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5730  0336  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5731  0337  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5732  0338  3038               	movlw	56
  5733  0339  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5734  033A  3000               	movlw	0
  5735  033B  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5736  033C  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5737  033D  3183  23F2  3183   	fcall	_I2C2_MasterWriteTRBBuild
  5738                           
  5739                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5740  0340  0020               	movlb	0	; select bank0
  5741  0341  0827               	movf	EMC1001_Read@pData,w
  5742  0342  00A8               	movwf	??_EMC1001_Read
  5743  0343  0828               	movf	??_EMC1001_Read,w
  5744  0344  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5745  0345  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5746  0346  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5747  0347  3038               	movlw	56
  5748  0348  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5749  0349  3000               	movlw	0
  5750  034A  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5751  034B  304F               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5752  034C  3183  23CA  3183   	fcall	_I2C2_MasterReadTRBBuild
  5753                           
  5754                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5755  034F  304B               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5756  0350  0020               	movlb	0	; select bank0
  5757  0351  00A8               	movwf	??_EMC1001_Read
  5758  0352  0828               	movf	??_EMC1001_Read,w
  5759  0353  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5760  0354  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5761  0355  00A9               	movwf	??_EMC1001_Read+1
  5762  0356  0829               	movf	??_EMC1001_Read+1,w
  5763  0357  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5764  0358  3002               	movlw	2
  5765  0359  3182  22E6  3183   	fcall	_I2C2_MasterTRBInsert
  5766  035C                     l1770:	
  5767                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  5768                           
  5769  035C  3002               	movlw	2
  5770  035D  0020               	movlb	0	; select bank0
  5771  035E  062B               	xorwf	EMC1001_Read@status,w
  5772  035F  1903               	btfsc	3,2
  5773  0360  2B5C               	goto	l1770
  5774                           
  5775                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  5776  0361  082B               	movf	EMC1001_Read@status,w
  5777  0362  1D03               	btfss	3,2
  5778  0363  2B66               	goto	u1190
  5779  0364  3001               	movlw	1
  5780  0365  0008               	return
  5781  0366                     u1190:	
  5782  0366  3000               	movlw	0
  5783  0367  0008               	return
  5784  0368                     __end_of_EMC1001_Read:	
  5785                           
  5786                           	psect	text17
  5787  03F2                     __ptext17:	
  5788 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5789 ;; Defined at:
  5790 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  ptrb            1    wreg     PTR struct .
  5793 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5794 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5795 ;;		 -> EMC1001_Read@reg(1), 
  5796 ;;  length          1    1[BANK0 ] unsigned char 
  5797 ;;  address         2    2[BANK0 ] unsigned int 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5800 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterWrite@trBlock(4), 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;Total ram usage:        7 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    3
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_EMC1001_Read
  5821 ;;		_I2C2_MasterWrite
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           
  5826                           ;psect for function _I2C2_MasterWriteTRBBuild
  5827  03F2                     _I2C2_MasterWriteTRBBuild:	
  5828                           
  5829                           ;incstack = 0
  5830                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5831                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5832  03F2  0020               	movlb	0	; select bank0
  5833  03F3  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5834                           
  5835                           ;i2c2.c: 713: ptrb->address = address << 1;
  5836  03F4  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5837  03F5  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5838  03F6  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  5839  03F7  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5840  03F8  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5841  03F9  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5842  03FA  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5843  03FB  0086               	movwf	6
  5844  03FC  0187               	clrf	7
  5845  03FD  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5846  03FE  3FC0               	movwi [0]fsr1
  5847  03FF  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5848  0400  3FC1               	movwi [1]fsr1
  5849                           
  5850                           ;i2c2.c: 714: ptrb->length = length;
  5851  0401  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  5852  0402  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5853  0403  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5854  0404  3E02               	addlw	2
  5855  0405  0086               	movwf	6
  5856  0406  0187               	clrf	7
  5857  0407  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5858  0408  0081               	movwf	1
  5859                           
  5860                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5861  0409  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5862  040A  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5863  040B  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5864  040C  3E03               	addlw	3
  5865  040D  0086               	movwf	6
  5866  040E  0187               	clrf	7
  5867  040F  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5868  0410  0081               	movwf	1
  5869  0411  0008               	return
  5870  0412                     __end_of_I2C2_MasterWriteTRBBuild:	
  5871                           
  5872                           	psect	text18
  5873  02E6                     __ptext18:	
  5874 ;; *************** function _I2C2_MasterTRBInsert *****************
  5875 ;; Defined at:
  5876 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  count           1    wreg     unsigned char 
  5879 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5880 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), 
  5881 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  5882 ;;		 -> EMC1001_Read@status(1), 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  count           1    3[BANK0 ] unsigned char 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        4 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    3
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_EMC1001_Read
  5905 ;;		_I2C2_MasterWrite
  5906 ;;		_I2C2_MasterRead
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _I2C2_MasterTRBInsert
  5912  02E6                     _I2C2_MasterTRBInsert:	
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5916                           ;I2C2_MasterTRBInsert@count stored from wreg
  5917  02E6  0020               	movlb	0	; select bank0
  5918  02E7  00A3               	movwf	I2C2_MasterTRBInsert@count
  5919                           
  5920                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5921  02E8  1844               	btfsc	_i2c2_object+2,0
  5922  02E9  2B1A               	goto	l1546
  5923                           
  5924                           ;i2c2.c: 649: {
  5925                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5926  02EA  3002               	movlw	2
  5927  02EB  00A2               	movwf	??_I2C2_MasterTRBInsert
  5928  02EC  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5929  02ED  0086               	movwf	6
  5930  02EE  0187               	clrf	7
  5931  02EF  0822               	movf	??_I2C2_MasterTRBInsert,w
  5932  02F0  0081               	movwf	1
  5933                           
  5934                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5935  02F1  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5936  02F2  00A2               	movwf	??_I2C2_MasterTRBInsert
  5937  02F3  0A42               	incf	_i2c2_object,w
  5938  02F4  0086               	movwf	6
  5939  02F5  0187               	clrf	7
  5940  02F6  0822               	movf	??_I2C2_MasterTRBInsert,w
  5941  02F7  0081               	movwf	1
  5942                           
  5943                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5944  02F8  0823               	movf	I2C2_MasterTRBInsert@count,w
  5945  02F9  00A2               	movwf	??_I2C2_MasterTRBInsert
  5946  02FA  0842               	movf	_i2c2_object,w
  5947  02FB  0086               	movwf	6
  5948  02FC  0187               	clrf	7
  5949  02FD  0822               	movf	??_I2C2_MasterTRBInsert,w
  5950  02FE  0081               	movwf	1
  5951                           
  5952                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  5953  02FF  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5954  0300  00A2               	movwf	??_I2C2_MasterTRBInsert
  5955  0301  0842               	movf	_i2c2_object,w
  5956  0302  3E02               	addlw	2
  5957  0303  0086               	movwf	6
  5958  0304  0187               	clrf	7
  5959  0305  0822               	movf	??_I2C2_MasterTRBInsert,w
  5960  0306  0081               	movwf	1
  5961                           
  5962                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  5963  0307  3003               	movlw	3
  5964  0308  00A2               	movwf	??_I2C2_MasterTRBInsert
  5965  0309  0822               	movf	??_I2C2_MasterTRBInsert,w
  5966  030A  07C2               	addwf	_i2c2_object,f
  5967                           
  5968                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  5969  030B  0842               	movf	_i2c2_object,w
  5970  030C  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  5971  030D  1D03               	skipz
  5972  030E  2B13               	goto	l1542
  5973                           
  5974                           ;i2c2.c: 659: {
  5975                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  5976  030F  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5977  0310  00A2               	movwf	??_I2C2_MasterTRBInsert
  5978  0311  0822               	movf	??_I2C2_MasterTRBInsert,w
  5979  0312  00C2               	movwf	_i2c2_object
  5980  0313                     l1542:	
  5981                           
  5982                           ;i2c2.c: 662: }
  5983                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  5984  0313  10C4               	bcf	_i2c2_object+2,1
  5985                           
  5986                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  5987  0314  0843               	movf	low ((_i2c2_object| 0+1)),w
  5988  0315  0642               	xorwf	_i2c2_object,w
  5989  0316  1D03               	skipz
  5990  0317  2B1F               	goto	l1548
  5991                           
  5992                           ;i2c2.c: 670: {
  5993                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  5994  0318  1444               	bsf	_i2c2_object+2,0
  5995                           
  5996                           ;i2c2.c: 673: }
  5997                           ;i2c2.c: 675: }
  5998  0319  2B1F               	goto	l1548
  5999  031A                     l1546:	
  6000                           
  6001                           ;i2c2.c: 676: else
  6002                           ;i2c2.c: 677: {
  6003                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  6004  031A  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6005  031B  0086               	movwf	6
  6006  031C  0187               	clrf	7
  6007  031D  0181               	clrf	1
  6008  031E  0A81               	incf	1,f
  6009  031F                     l1548:	
  6010                           
  6011                           ;i2c2.c: 679: }
  6012                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  6013  031F  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  6014  0320  0086               	movwf	6
  6015  0321  0187               	clrf	7
  6016  0322  3002               	movlw	2
  6017  0323  0601               	xorwf	1,w
  6018  0324  1D03               	btfss	3,2
  6019  0325  0008               	return
  6020  0326                     l1552:	
  6021                           ;i2c2.c: 683: {
  6022                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  6023                           
  6024  0326  084A               	movf	_i2c2_state,w
  6025  0327  1D03               	btfss	3,2
  6026  0328  2B26               	goto	l1552
  6027                           
  6028                           ;i2c2.c: 685: {
  6029                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  6030  0329  002E               	movlb	14	; select bank14
  6031  032A  150F               	bsf	15,2	;volatile
  6032  032B  0008               	return
  6033  032C                     __end_of_I2C2_MasterTRBInsert:	
  6034                           
  6035                           	psect	text19
  6036  03CA                     __ptext19:	
  6037 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  6038 ;; Defined at:
  6039 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  ptrb            1    wreg     PTR struct .
  6042 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6043 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6044 ;;		 -> main@templo(1), main@temp(1), 
  6045 ;;  length          1    1[BANK0 ] unsigned char 
  6046 ;;  address         2    2[BANK0 ] unsigned int 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6049 ;;		 -> EMC1001_Read@trb(8), I2C2_MasterRead@trBlock(4), 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        7 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    3
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_EMC1001_Read
  6070 ;;		_I2C2_MasterRead
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _I2C2_MasterReadTRBBuild
  6076  03CA                     _I2C2_MasterReadTRBBuild:	
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6080                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6081  03CA  0020               	movlb	0	; select bank0
  6082  03CB  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6083                           
  6084                           ;i2c2.c: 700: ptrb->address = address << 1;
  6085  03CC  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6086  03CD  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6087  03CE  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6088  03CF  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6089  03D0  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6090  03D1  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6091  03D2  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6092  03D3  0086               	movwf	6
  6093  03D4  0187               	clrf	7
  6094  03D5  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6095  03D6  3FC0               	movwi [0]fsr1
  6096  03D7  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6097  03D8  3FC1               	movwi [1]fsr1
  6098                           
  6099                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6100  03D9  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6101  03DA  0086               	movwf	6
  6102  03DB  0187               	clrf	7
  6103  03DC  3001               	movlw	1
  6104  03DD  0481               	iorwf	1,f
  6105  03DE  3141               	addfsr 1,1
  6106  03DF  3000               	movlw	0
  6107  03E0  0481               	iorwf	1,f
  6108                           
  6109                           ;i2c2.c: 703: ptrb->length = length;
  6110  03E1  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6111  03E2  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6112  03E3  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6113  03E4  3E02               	addlw	2
  6114  03E5  0086               	movwf	6
  6115  03E6  0187               	clrf	7
  6116  03E7  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6117  03E8  0081               	movwf	1
  6118                           
  6119                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6120  03E9  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6121  03EA  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6122  03EB  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6123  03EC  3E03               	addlw	3
  6124  03ED  0086               	movwf	6
  6125  03EE  0187               	clrf	7
  6126  03EF  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6127  03F0  0081               	movwf	1
  6128  03F1  0008               	return
  6129  03F2                     __end_of_I2C2_MasterReadTRBBuild:	
  6130                           
  6131                           	psect	intentry
  6132  0004                     __pintentry:	
  6133 ;; *************** function _INTERRUPT_InterruptManager *****************
  6134 ;; Defined at:
  6135 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;Total ram usage:        1 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    2
  6156 ;; This function calls:
  6157 ;;		_I2C2_BusCollisionISR
  6158 ;;		_I2C2_ISR
  6159 ;; This function is called by:
  6160 ;;		Interrupt level 1
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164  0004                     _INTERRUPT_InterruptManager:	
  6165                           
  6166                           ;incstack = 0
  6167  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6168                           
  6169                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6170  0005  3180               	pagesel	$
  6171  0006  0020               	movlb	0	; select bank0
  6172  0007  087F               	movf	127,w
  6173  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  6174                           
  6175                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  6176  0009  1F0B               	btfss	11,6	;volatile
  6177  000A  2813               	goto	i1l212
  6178  000B  002E               	movlb	14	; select bank14
  6179  000C  1999               	btfsc	25,3	;volatile
  6180  000D  1D8F               	btfss	15,3	;volatile
  6181  000E  2813               	goto	i1l212
  6182                           
  6183                           ;interrupt_manager.c: 55: {
  6184                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6185  000F  3184  24FD  3180   	fcall	_I2C2_BusCollisionISR
  6186                           
  6187                           ;interrupt_manager.c: 57: }
  6188  0012  281B               	goto	i1l216
  6189  0013                     i1l212:	
  6190                           
  6191                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  6192  0013  1F0B               	btfss	11,6	;volatile
  6193  0014  281B               	goto	i1l216
  6194  0015  002E               	movlb	14	; select bank14
  6195  0016  1919               	btfsc	25,2	;volatile
  6196  0017  1D0F               	btfss	15,2	;volatile
  6197  0018  281B               	goto	i1l216
  6198                           
  6199                           ;interrupt_manager.c: 59: {
  6200                           ;interrupt_manager.c: 60: I2C2_ISR();
  6201  0019  3180  2034         	fcall	_I2C2_ISR
  6202  001B                     i1l216:	
  6203                           ;interrupt_manager.c: 62: else
  6204                           ;interrupt_manager.c: 63: {
  6205                           
  6206                           ;interrupt_manager.c: 61: }
  6207                           
  6208  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  6209  001C  0020               	movlb	0	; select bank0
  6210  001D  00FF               	movwf	127
  6211  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6212  001F  0009               	retfie
  6213  0020                     __end_of_INTERRUPT_InterruptManager:	
  6214                           
  6215                           	psect	text21
  6216  0034                     __ptext21:	
  6217 ;; *************** function _I2C2_ISR *****************
  6218 ;; Defined at:
  6219 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;Total ram usage:        4 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    1
  6240 ;; This function calls:
  6241 ;;		_I2C2_FunctionComplete
  6242 ;;		_I2C2_Stop
  6243 ;; This function is called by:
  6244 ;;		_INTERRUPT_InterruptManager
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _I2C2_ISR
  6250  0034                     _I2C2_ISR:	
  6251                           
  6252                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6253                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6254                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6255                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6256                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6257                           
  6258                           ;incstack = 0
  6259                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6260  0034  002E               	movlb	14	; select bank14
  6261  0035  110F               	bcf	15,2	;volatile
  6262                           
  6263                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6264  0036  0023               	movlb	3	; select bank3
  6265  0037  1F9A               	btfss	26,7	;volatile
  6266  0038  2963               	goto	i1l1756
  6267                           
  6268                           ;i2c2.c: 246: {
  6269                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6270  0039  139A               	bcf	26,7	;volatile
  6271                           
  6272                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6273  003A  0020               	movlb	0	; select bank0
  6274  003B  01CA               	clrf	_i2c2_state
  6275                           
  6276                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6277  003C  0873               	movf	_p_i2c2_current,w
  6278  003D  3E02               	addlw	2
  6279  003E  0086               	movwf	6
  6280  003F  0187               	clrf	7
  6281  0040  0801               	movf	1,w
  6282  0041  0086               	movwf	6
  6283  0042  0187               	clrf	7
  6284  0043  0181               	clrf	1
  6285  0044  0A81               	incf	1,f
  6286                           
  6287                           ;i2c2.c: 253: p_i2c2_current = (0);
  6288  0045  01F3               	clrf	_p_i2c2_current
  6289                           
  6290                           ;i2c2.c: 255: return;
  6291  0046  0008               	return
  6292  0047                     i1l276:	
  6293                           ;i2c2.c: 260: {
  6294                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6295                           
  6296                           ;i2c2.c: 256: }
  6297                           ;i2c2.c: 259: switch(i2c2_state)
  6298                           
  6299                           
  6300                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6301  0047  18C4               	btfsc	_i2c2_object+2,1
  6302  0048  0008               	return
  6303                           
  6304                           ;i2c2.c: 264: {
  6305                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6306  0049  0843               	movf	low ((_i2c2_object| 0+1)),w
  6307  004A  00F9               	movwf	??_I2C2_ISR
  6308  004B  0879               	movf	??_I2C2_ISR,w
  6309  004C  00F3               	movwf	_p_i2c2_current
  6310                           
  6311                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6312  004D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6313  004E  0086               	movwf	6
  6314  004F  0187               	clrf	7
  6315  0050  0801               	movf	1,w
  6316  0051  00F9               	movwf	??_I2C2_ISR
  6317  0052  0879               	movf	??_I2C2_ISR,w
  6318  0053  00F2               	movwf	_i2c2_trb_count
  6319                           
  6320                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6321  0054  0843               	movf	low ((_i2c2_object| 0+1)),w
  6322  0055  0086               	movwf	6
  6323  0056  0187               	clrf	7
  6324  0057  3F41               	moviw [1]fsr1
  6325  0058  00F4               	movwf	_p_i2c2_trb_current
  6326                           
  6327                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6328  0059  3003               	movlw	3
  6329  005A  00F9               	movwf	??_I2C2_ISR
  6330  005B  0879               	movf	??_I2C2_ISR,w
  6331  005C  07C3               	addwf	low ((_i2c2_object| 0+1)),f
  6332                           
  6333                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6334  005D  0843               	movf	low ((_i2c2_object| 0+1)),w
  6335  005E  3A5E               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6336  005F  1D03               	skipz
  6337  0060  2865               	goto	i1l1644
  6338                           
  6339                           ;i2c2.c: 274: {
  6340                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6341  0061  305B               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6342  0062  00F9               	movwf	??_I2C2_ISR
  6343  0063  0879               	movf	??_I2C2_ISR,w
  6344  0064  00C3               	movwf	low ((_i2c2_object| 0+1))
  6345  0065                     i1l1644:	
  6346                           
  6347                           ;i2c2.c: 277: }
  6348                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6349  0065  1044               	bcf	_i2c2_object+2,0
  6350                           
  6351                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6352  0066  0843               	movf	low ((_i2c2_object| 0+1)),w
  6353  0067  0642               	xorwf	_i2c2_object,w
  6354  0068  1903               	btfsc	3,2
  6355                           
  6356                           ;i2c2.c: 285: {
  6357                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6358  0069  14C4               	bsf	_i2c2_object+2,1
  6359                           
  6360                           ;i2c2.c: 288: }
  6361                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6362  006A  0023               	movlb	3	; select bank3
  6363  006B  141B               	bsf	27,0	;volatile
  6364                           
  6365                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6366  006C  3002               	movlw	2
  6367  006D  00F9               	movwf	??_I2C2_ISR
  6368  006E  0879               	movf	??_I2C2_ISR,w
  6369  006F  0020               	movlb	0	; select bank0
  6370  0070  00CA               	movwf	_i2c2_state
  6371                           
  6372                           ;i2c2.c: 295: }
  6373                           ;i2c2.c: 297: break;
  6374  0071  0008               	return
  6375  0072                     i1l281:	
  6376                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6377                           
  6378                           
  6379                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6380  0072  0023               	movlb	3	; select bank3
  6381  0073  149B               	bsf	27,1	;volatile
  6382                           
  6383                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6384  0074  3002               	movlw	2
  6385  0075  00F9               	movwf	??_I2C2_ISR
  6386  0076  0879               	movf	??_I2C2_ISR,w
  6387  0077  0020               	movlb	0	; select bank0
  6388  0078  00CA               	movwf	_i2c2_state
  6389                           
  6390                           ;i2c2.c: 309: break;
  6391  0079  0008               	return
  6392  007A                     i1l282:	
  6393                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6394                           
  6395                           
  6396                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6397  007A  0023               	movlb	3	; select bank3
  6398  007B  1F1B               	btfss	27,6	;volatile
  6399  007C  2886               	goto	i1l1656
  6400                           
  6401                           ;i2c2.c: 314: {
  6402                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6403  007D  3001               	movlw	1
  6404  007E  00F9               	movwf	??_I2C2_ISR
  6405  007F  0879               	movf	??_I2C2_ISR,w
  6406  0080  0020               	movlb	0	; select bank0
  6407  0081  07C6               	addwf	_i2c2_object+4,f
  6408                           
  6409                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6410  0082  3004               	movlw	4
  6411  0083  3184  245E         	fcall	_I2C2_Stop
  6412                           
  6413                           ;i2c2.c: 317: }
  6414  0085  0008               	return
  6415  0086                     i1l1656:	
  6416                           
  6417                           ;i2c2.c: 318: else
  6418                           ;i2c2.c: 319: {
  6419                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6420  0086  0876               	movf	I2C2_ISR@i2c_address+1,w
  6421  0087  00FA               	movwf	??_I2C2_ISR+1
  6422  0088  0875               	movf	I2C2_ISR@i2c_address,w
  6423  0089  00F9               	movwf	??_I2C2_ISR
  6424  008A  36FA               	lsrf	??_I2C2_ISR+1,f
  6425  008B  0CF9               	rrf	??_I2C2_ISR,f
  6426  008C  0879               	movf	??_I2C2_ISR,w
  6427  008D  0023               	movlb	3	; select bank3
  6428  008E  0096               	movwf	22	;volatile
  6429                           
  6430                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6431  008F  1C75               	btfss	I2C2_ISR@i2c_address,0
  6432  0090  2897               	goto	i1l1662
  6433                           
  6434                           ;i2c2.c: 325: {
  6435                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6436  0091  300B               	movlw	11
  6437  0092  00F9               	movwf	??_I2C2_ISR
  6438  0093  0879               	movf	??_I2C2_ISR,w
  6439  0094  0020               	movlb	0	; select bank0
  6440  0095  00CA               	movwf	_i2c2_state
  6441                           
  6442                           ;i2c2.c: 329: }
  6443  0096  0008               	return
  6444  0097                     i1l1662:	
  6445                           
  6446                           ;i2c2.c: 330: else
  6447                           ;i2c2.c: 331: {
  6448                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6449  0097  3003               	movlw	3
  6450  0098  00F9               	movwf	??_I2C2_ISR
  6451  0099  0879               	movf	??_I2C2_ISR,w
  6452  009A  0020               	movlb	0	; select bank0
  6453  009B  00CA               	movwf	_i2c2_state
  6454                           
  6455                           ;i2c2.c: 334: }
  6456                           ;i2c2.c: 335: }
  6457                           ;i2c2.c: 337: break;
  6458  009C  0008               	return
  6459  009D                     i1l287:	
  6460                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6461                           
  6462                           
  6463                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6464  009D  0023               	movlb	3	; select bank3
  6465  009E  1F1B               	btfss	27,6	;volatile
  6466  009F  28A9               	goto	i1l288
  6467                           
  6468                           ;i2c2.c: 342: {
  6469                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6470  00A0  3001               	movlw	1
  6471  00A1  00F9               	movwf	??_I2C2_ISR
  6472  00A2  0879               	movf	??_I2C2_ISR,w
  6473  00A3  0020               	movlb	0	; select bank0
  6474  00A4  07C6               	addwf	_i2c2_object+4,f
  6475                           
  6476                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6477  00A5  3004               	movlw	4
  6478  00A6  3184  245E         	fcall	_I2C2_Stop
  6479                           
  6480                           ;i2c2.c: 345: }
  6481  00A8  0008               	return
  6482  00A9                     i1l288:	
  6483                           
  6484                           ;i2c2.c: 346: else
  6485                           ;i2c2.c: 347: {
  6486                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6487  00A9  149B               	bsf	27,1	;volatile
  6488                           
  6489                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6490  00AA  0876               	movf	I2C2_ISR@i2c_address+1,w
  6491  00AB  00FA               	movwf	??_I2C2_ISR+1
  6492  00AC  0875               	movf	I2C2_ISR@i2c_address,w
  6493  00AD  00F9               	movwf	??_I2C2_ISR
  6494  00AE  087A               	movf	??_I2C2_ISR+1,w
  6495  00AF  00F9               	movwf	??_I2C2_ISR
  6496  00B0  01FA               	clrf	??_I2C2_ISR+1
  6497  00B1  3006               	movlw	6
  6498  00B2  0579               	andwf	??_I2C2_ISR,w
  6499  00B3  00FB               	movwf	??_I2C2_ISR+2
  6500  00B4  3000               	movlw	0
  6501  00B5  057A               	andwf	??_I2C2_ISR+1,w
  6502  00B6  00FC               	movwf	??_I2C2_ISR+3
  6503  00B7  30F0               	movlw	240
  6504  00B8  047B               	iorwf	??_I2C2_ISR+2,w
  6505  00B9  00F5               	movwf	I2C2_ISR@i2c_address
  6506  00BA  3000               	movlw	0
  6507  00BB  047C               	iorwf	??_I2C2_ISR+3,w
  6508  00BC  00F6               	movwf	I2C2_ISR@i2c_address+1
  6509                           
  6510                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6511  00BD  1475               	bsf	I2C2_ISR@i2c_address,0
  6512                           
  6513                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6514  00BE  0020               	movlb	0	; select bank0
  6515  00BF  01C9               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6516  00C0  0AC9               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6517                           
  6518                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6519  00C1  3002               	movlw	2
  6520  00C2  00F9               	movwf	??_I2C2_ISR
  6521  00C3  0879               	movf	??_I2C2_ISR,w
  6522  00C4  00CA               	movwf	_i2c2_state
  6523                           
  6524                           ;i2c2.c: 364: }
  6525                           ;i2c2.c: 366: break;
  6526  00C5  0008               	return
  6527  00C6                     i1l1676:	
  6528                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6529                           
  6530                           
  6531                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6532  00C6  0349               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6533  00C7  1903               	btfsc	3,2
  6534  00C8  28DA               	goto	i1l1696
  6535                           
  6536                           ;i2c2.c: 382: {
  6537                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6538  00C9  0874               	movf	_p_i2c2_trb_current,w
  6539  00CA  0086               	movwf	6
  6540  00CB  0187               	clrf	7
  6541  00CC  3F40               	moviw [0]fsr1
  6542  00CD  00F5               	movwf	I2C2_ISR@i2c_address
  6543  00CE  3F41               	moviw [1]fsr1
  6544  00CF  00F6               	movwf	I2C2_ISR@i2c_address+1
  6545                           
  6546                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6547  00D0  0874               	movf	_p_i2c2_trb_current,w
  6548  00D1  0086               	movwf	6
  6549  00D2  0187               	clrf	7
  6550  00D3  3F43               	moviw [3]fsr1
  6551  00D4  00F1               	movwf	I2C2_ISR@pi2c_buf_ptr
  6552                           
  6553                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6554  00D5  0874               	movf	_p_i2c2_trb_current,w
  6555  00D6  0086               	movwf	6
  6556  00D7  0187               	clrf	7
  6557  00D8  3F42               	moviw [2]fsr1
  6558  00D9  00F0               	movwf	I2C2_ISR@i2c_bytes_left
  6559  00DA                     i1l1696:	
  6560                           ;i2c2.c: 407: }
  6561                           ;i2c2.c: 408: }
  6562                           
  6563                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6564                           
  6565                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6566                           
  6567                           ;i2c2.c: 400: else
  6568                           ;i2c2.c: 401: {
  6569                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6570                           
  6571                           ;i2c2.c: 399: }
  6572                           
  6573                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6574                           
  6575                           ;i2c2.c: 393: {
  6576                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6577                           
  6578                           ;i2c2.c: 391: {
  6579                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6580                           
  6581                           ;i2c2.c: 387: }
  6582                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6583                           
  6584                           
  6585                           ;i2c2.c: 409: else
  6586                           ;i2c2.c: 410: {
  6587                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6588  00DA  0875               	movf	I2C2_ISR@i2c_address,w
  6589  00DB  0023               	movlb	3	; select bank3
  6590  00DC  0096               	movwf	22	;volatile
  6591                           
  6592                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6593  00DD  1C75               	btfss	I2C2_ISR@i2c_address,0
  6594  00DE  28E5               	goto	i1l1702
  6595                           
  6596                           ;i2c2.c: 414: {
  6597                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6598  00DF  3005               	movlw	5
  6599  00E0  00F9               	movwf	??_I2C2_ISR
  6600  00E1  0879               	movf	??_I2C2_ISR,w
  6601  00E2  0020               	movlb	0	; select bank0
  6602  00E3  00CA               	movwf	_i2c2_state
  6603                           
  6604                           ;i2c2.c: 417: }
  6605  00E4  0008               	return
  6606  00E5                     i1l1702:	
  6607                           
  6608                           ;i2c2.c: 418: else
  6609                           ;i2c2.c: 419: {
  6610                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6611  00E5  3003               	movlw	3
  6612  00E6  00F9               	movwf	??_I2C2_ISR
  6613  00E7  0879               	movf	??_I2C2_ISR,w
  6614  00E8  0020               	movlb	0	; select bank0
  6615  00E9  00CA               	movwf	_i2c2_state
  6616                           
  6617                           ;i2c2.c: 422: }
  6618                           ;i2c2.c: 423: }
  6619                           ;i2c2.c: 424: break;
  6620  00EA  0008               	return
  6621  00EB                     i1l298:	
  6622                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6623                           
  6624                           
  6625                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6626  00EB  0023               	movlb	3	; select bank3
  6627  00EC  1F1B               	btfss	27,6	;volatile
  6628  00ED  28F9               	goto	i1l1710
  6629                           
  6630                           ;i2c2.c: 430: {
  6631                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6632  00EE  3001               	movlw	1
  6633  00EF  00F9               	movwf	??_I2C2_ISR
  6634  00F0  0879               	movf	??_I2C2_ISR,w
  6635  00F1  0020               	movlb	0	; select bank0
  6636  00F2  07C6               	addwf	_i2c2_object+4,f
  6637                           
  6638                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6639  00F3  0023               	movlb	3	; select bank3
  6640  00F4  131B               	bcf	27,6	;volatile
  6641                           
  6642                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6643  00F5  3005               	movlw	5
  6644  00F6  3184  245E         	fcall	_I2C2_Stop
  6645                           
  6646                           ;i2c2.c: 440: }
  6647  00F8  0008               	return
  6648  00F9                     i1l1710:	
  6649                           
  6650                           ;i2c2.c: 441: else
  6651                           ;i2c2.c: 442: {
  6652                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6653  00F9  3001               	movlw	1
  6654  00FA  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6655  00FB  0A70               	incf	I2C2_ISR@i2c_bytes_left,w
  6656  00FC  1D03               	btfss	3,2
  6657  00FD  2912               	goto	i1l1718
  6658                           
  6659                           ;i2c2.c: 445: {
  6660                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6661  00FE  3004               	movlw	4
  6662  00FF  00F9               	movwf	??_I2C2_ISR
  6663  0100  0879               	movf	??_I2C2_ISR,w
  6664  0101  07F4               	addwf	_p_i2c2_trb_current,f
  6665                           
  6666                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6667  0102  3001               	movlw	1
  6668  0103  02F2               	subwf	_i2c2_trb_count,f
  6669  0104  1D03               	btfss	3,2
  6670  0105  290A               	goto	i1l302
  6671                           
  6672                           ;i2c2.c: 453: {
  6673                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6674  0106  3000               	movlw	0
  6675  0107  3184  245E         	fcall	_I2C2_Stop
  6676                           
  6677                           ;i2c2.c: 455: }
  6678  0109  0008               	return
  6679  010A                     i1l302:	
  6680                           
  6681                           ;i2c2.c: 456: else
  6682                           ;i2c2.c: 457: {
  6683                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6684  010A  0023               	movlb	3	; select bank3
  6685  010B  149B               	bsf	27,1	;volatile
  6686                           
  6687                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6688  010C  3002               	movlw	2
  6689  010D  00F9               	movwf	??_I2C2_ISR
  6690  010E  0879               	movf	??_I2C2_ISR,w
  6691  010F  0020               	movlb	0	; select bank0
  6692  0110  00CA               	movwf	_i2c2_state
  6693                           
  6694                           ;i2c2.c: 469: }
  6695                           ;i2c2.c: 470: }
  6696  0111  0008               	return
  6697  0112                     i1l1718:	
  6698                           
  6699                           ;i2c2.c: 471: else
  6700                           ;i2c2.c: 472: {
  6701                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6702  0112  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6703  0113  0086               	movwf	6
  6704  0114  0187               	clrf	7
  6705  0115  0801               	movf	1,w
  6706  0116  0023               	movlb	3	; select bank3
  6707  0117  0096               	movwf	22	;volatile
  6708  0118  3001               	movlw	1
  6709  0119  00F9               	movwf	??_I2C2_ISR
  6710  011A  0879               	movf	??_I2C2_ISR,w
  6711  011B  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6712                           
  6713                           ;i2c2.c: 475: }
  6714                           ;i2c2.c: 476: }
  6715                           ;i2c2.c: 477: break;
  6716  011C  0008               	return
  6717  011D                     i1l305:	
  6718                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6719                           
  6720                           
  6721                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6722  011D  0023               	movlb	3	; select bank3
  6723  011E  1F1B               	btfss	27,6	;volatile
  6724  011F  292B               	goto	i1l306
  6725                           
  6726                           ;i2c2.c: 483: {
  6727                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6728  0120  3001               	movlw	1
  6729  0121  00F9               	movwf	??_I2C2_ISR
  6730  0122  0879               	movf	??_I2C2_ISR,w
  6731  0123  0020               	movlb	0	; select bank0
  6732  0124  07C6               	addwf	_i2c2_object+4,f
  6733                           
  6734                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6735  0125  3004               	movlw	4
  6736  0126  3184  245E         	fcall	_I2C2_Stop
  6737                           
  6738                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6739  0128  0023               	movlb	3	; select bank3
  6740  0129  131B               	bcf	27,6	;volatile
  6741                           
  6742                           ;i2c2.c: 493: }
  6743  012A  0008               	return
  6744  012B                     i1l306:	
  6745                           
  6746                           ;i2c2.c: 494: else
  6747                           ;i2c2.c: 495: {
  6748                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6749  012B  159B               	bsf	27,3	;volatile
  6750                           
  6751                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6752  012C  3008               	movlw	8
  6753  012D  00F9               	movwf	??_I2C2_ISR
  6754  012E  0879               	movf	??_I2C2_ISR,w
  6755  012F  0020               	movlb	0	; select bank0
  6756  0130  00CA               	movwf	_i2c2_state
  6757                           
  6758                           ;i2c2.c: 498: }
  6759                           ;i2c2.c: 499: break;
  6760  0131  0008               	return
  6761  0132                     i1l1730:	
  6762                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6763                           
  6764                           
  6765                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6766  0132  3008               	movlw	8
  6767  0133  00F9               	movwf	??_I2C2_ISR
  6768  0134  0879               	movf	??_I2C2_ISR,w
  6769  0135  00CA               	movwf	_i2c2_state
  6770                           
  6771                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6772  0136  0023               	movlb	3	; select bank3
  6773  0137  159B               	bsf	27,3	;volatile
  6774                           
  6775                           ;i2c2.c: 511: break;
  6776  0138  0008               	return
  6777  0139                     i1l1734:	
  6778                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6779                           
  6780                           
  6781                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6782  0139  0023               	movlb	3	; select bank3
  6783  013A  0816               	movf	22,w	;volatile
  6784  013B  00F9               	movwf	??_I2C2_ISR
  6785  013C  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6786  013D  0086               	movwf	6
  6787  013E  0187               	clrf	7
  6788  013F  0879               	movf	??_I2C2_ISR,w
  6789  0140  0081               	movwf	1
  6790  0141  3001               	movlw	1
  6791  0142  00F9               	movwf	??_I2C2_ISR
  6792  0143  0879               	movf	??_I2C2_ISR,w
  6793  0144  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6794                           
  6795                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6796  0145  3001               	movlw	1
  6797  0146  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6798  0147  1903               	btfsc	3,2
  6799  0148  2950               	goto	i1l310
  6800                           
  6801                           ;i2c2.c: 520: {
  6802                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6803  0149  129B               	bcf	27,5	;volatile
  6804                           
  6805                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6806  014A  3006               	movlw	6
  6807  014B  00F9               	movwf	??_I2C2_ISR
  6808  014C  0879               	movf	??_I2C2_ISR,w
  6809  014D  0020               	movlb	0	; select bank0
  6810  014E  00CA               	movwf	_i2c2_state
  6811                           
  6812                           ;i2c2.c: 530: }
  6813  014F  2953               	goto	i1l1746
  6814  0150                     i1l310:	
  6815                           
  6816                           ;i2c2.c: 531: else
  6817                           ;i2c2.c: 532: {
  6818                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6819  0150  169B               	bsf	27,5	;volatile
  6820                           
  6821                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6822  0151  3184  249D         	fcall	_I2C2_FunctionComplete
  6823  0153                     i1l1746:	
  6824                           
  6825                           ;i2c2.c: 539: }
  6826                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6827  0153  0023               	movlb	3	; select bank3
  6828  0154  161B               	bsf	27,4	;volatile
  6829                           
  6830                           ;i2c2.c: 543: break;
  6831  0155  0008               	return
  6832  0156                     i1l1748:	
  6833                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6834                           
  6835                           
  6836                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6837                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6838  0156  3000               	movlw	0
  6839  0157  3184  245E         	fcall	_I2C2_Stop
  6840                           
  6841                           ;i2c2.c: 550: break;
  6842  0159  0008               	return
  6843  015A                     i1l1750:	
  6844                           ;i2c2.c: 552: default:
  6845                           
  6846                           
  6847                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6848  015A  3001               	movlw	1
  6849  015B  00F9               	movwf	??_I2C2_ISR
  6850  015C  0879               	movf	??_I2C2_ISR,w
  6851  015D  0020               	movlb	0	; select bank0
  6852  015E  07C6               	addwf	_i2c2_object+4,f
  6853                           
  6854                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6855  015F  3006               	movlw	6
  6856  0160  3184  245E         	fcall	_I2C2_Stop
  6857                           
  6858                           ;i2c2.c: 560: }
  6859                           
  6860                           ;i2c2.c: 558: break;
  6861  0162  0008               	return
  6862  0163                     i1l1756:	
  6863  0163  0020               	movlb	0	; select bank0
  6864  0164  084A               	movf	_i2c2_state,w
  6865                           
  6866                           ; Switch size 1, requested type "space"
  6867                           ; Number of cases is 11, Range of values is 0 to 11
  6868                           ; switch strategies available:
  6869                           ; Name         Instructions Cycles
  6870                           ; direct_byte           30     6 (fixed)
  6871                           ; simple_byte           34    18 (average)
  6872                           ; jumptable            260     6 (fixed)
  6873                           ;	Chosen strategy is direct_byte
  6874  0165  0084               	movwf	4
  6875  0166  300C               	movlw	12
  6876  0167  0204               	subwf	4,w
  6877  0168  1803               	skipnc
  6878  0169  295A               	goto	i1l1750
  6879  016A  3184               	movlp	high i1S2130
  6880  016B  3504               	lslf	4,w
  6881  016C  3E46               	addlw	low i1S2130
  6882  016D  0082               	movwf	2
  6883  016E  0008               	return
  6884  016F                     __end_of_I2C2_ISR:	
  6885                           
  6886                           	psect	swtext1
  6887  0446                     __pswtext1:	
  6888  0446                     i1S2130:	
  6889  0446  3180  2847         	ljmp	i1l276
  6890  0448  3180  2872         	ljmp	i1l281
  6891  044A  3180  28C6         	ljmp	i1l1676
  6892  044C  3180  28EB         	ljmp	i1l298
  6893  044E  3181  2956         	ljmp	i1l1748
  6894  0450  3181  291D         	ljmp	i1l305
  6895  0452  3181  2932         	ljmp	i1l1730
  6896  0454  3181  2956         	ljmp	i1l1748
  6897  0456  3181  2939         	ljmp	i1l1734
  6898  0458  3181  295A         	ljmp	i1l1750
  6899  045A  3180  287A         	ljmp	i1l282
  6900  045C  3180  289D         	ljmp	i1l287
  6901                           
  6902                           	psect	text22
  6903  045E                     __ptext22:	
  6904 ;; *************** function _I2C2_Stop *****************
  6905 ;; Defined at:
  6906 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  completion_c    1    wreg     enum E13560
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  completion_c    1    1[COMMON] enum E13560
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_I2C2_ISR
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _I2C2_Stop
  6935  045E                     _I2C2_Stop:	
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6939                           ;I2C2_Stop@completion_code stored from wreg
  6940  045E  00F8               	movwf	I2C2_Stop@completion_code
  6941                           
  6942                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6943  045F  0023               	movlb	3	; select bank3
  6944  0460  151B               	bsf	27,2	;volatile
  6945                           
  6946                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6947  0461  0873               	movf	_p_i2c2_current,w
  6948  0462  3E02               	addlw	2
  6949  0463  0086               	movwf	6
  6950  0464  0187               	clrf	7
  6951  0465  0801               	movf	1,w
  6952  0466  1903               	btfsc	3,2
  6953  0467  2C73               	goto	i1l1524
  6954                           
  6955                           ;i2c2.c: 588: {
  6956                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  6957  0468  0878               	movf	I2C2_Stop@completion_code,w
  6958  0469  00F7               	movwf	??_I2C2_Stop
  6959  046A  0873               	movf	_p_i2c2_current,w
  6960  046B  3E02               	addlw	2
  6961  046C  0086               	movwf	6
  6962  046D  0187               	clrf	7
  6963  046E  0801               	movf	1,w
  6964  046F  0086               	movwf	6
  6965  0470  0187               	clrf	7
  6966  0471  0877               	movf	??_I2C2_Stop,w
  6967  0472  0081               	movwf	1
  6968  0473                     i1l1524:	
  6969                           
  6970                           ;i2c2.c: 591: }
  6971                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  6972  0473  0020               	movlb	0	; select bank0
  6973  0474  01CA               	clrf	_i2c2_state
  6974  0475  0008               	return
  6975  0476                     __end_of_I2C2_Stop:	
  6976                           
  6977                           	psect	text23
  6978  049D                     __ptext23:	
  6979 ;; *************** function _I2C2_FunctionComplete *****************
  6980 ;; Defined at:
  6981 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;Total ram usage:        1 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_I2C2_ISR
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function _I2C2_FunctionComplete
  7010  049D                     _I2C2_FunctionComplete:	
  7011                           
  7012                           ;i2c2.c: 567: p_i2c2_trb_current++;
  7013                           
  7014                           ;incstack = 0
  7015                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  7016  049D  3004               	movlw	4
  7017  049E  00F7               	movwf	??_I2C2_FunctionComplete
  7018  049F  0877               	movf	??_I2C2_FunctionComplete,w
  7019  04A0  07F4               	addwf	_p_i2c2_trb_current,f
  7020                           
  7021                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  7022  04A1  3001               	movlw	1
  7023  04A2  02F2               	subwf	_i2c2_trb_count,f
  7024  04A3  1D03               	btfss	3,2
  7025  04A4  2CAB               	goto	i1l317
  7026                           
  7027                           ;i2c2.c: 571: {
  7028                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  7029  04A5  3004               	movlw	4
  7030  04A6  00F7               	movwf	??_I2C2_FunctionComplete
  7031  04A7  0877               	movf	??_I2C2_FunctionComplete,w
  7032  04A8  0020               	movlb	0	; select bank0
  7033  04A9  00CA               	movwf	_i2c2_state
  7034                           
  7035                           ;i2c2.c: 573: }
  7036  04AA  0008               	return
  7037  04AB                     i1l317:	
  7038                           
  7039                           ;i2c2.c: 574: else
  7040                           ;i2c2.c: 575: {
  7041                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  7042  04AB  0020               	movlb	0	; select bank0
  7043  04AC  01CA               	clrf	_i2c2_state
  7044  04AD  0ACA               	incf	_i2c2_state,f
  7045  04AE  0008               	return
  7046  04AF                     __end_of_I2C2_FunctionComplete:	
  7047                           
  7048                           	psect	text24
  7049  04FD                     __ptext24:	
  7050 ;; *************** function _I2C2_BusCollisionISR *****************
  7051 ;; Defined at:
  7052 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		None
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_INTERRUPT_InterruptManager
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _I2C2_BusCollisionISR
  7081  04FD                     _I2C2_BusCollisionISR:	
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in _I2C2_BusCollisionISR: []
  7085  04FD  0008               	return
  7086  04FE                     __end_of_I2C2_BusCollisionISR:	
  7087  007E                     btemp	set	126	;btemp
  7088  007E                     int$flags	set	126
  7089  007E                     wtemp	set	126
  7090  007E                     wtemp0	set	126
  7091  0080                     wtemp1	set	128
  7092  0082                     wtemp2	set	130
  7093  0084                     wtemp3	set	132
  7094  0086                     wtemp4	set	134
  7095  0088                     wtemp5	set	136
  7096  007F                     wtemp6	set	127
  7097  007E                     ttemp	set	126
  7098  007E                     ttemp0	set	126
  7099  0081                     ttemp1	set	129
  7100  0084                     ttemp2	set	132
  7101  0087                     ttemp3	set	135
  7102  007F                     ttemp4	set	127
  7103  007E                     ltemp	set	126
  7104  007E                     ltemp0	set	126
  7105  0082                     ltemp1	set	130
  7106  0086                     ltemp2	set	134
  7107  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     34      62
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), I2C2_ISR@i2c_address(COMMON[2]), 
		 -> NULL(NULL[0]), 

    S574$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    S586$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S586$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> EMC1001_Read@trb(BANK0[8]), I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S597$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S597$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3893
                                             30 BANK0      4     4      0
                       _EMC1001_Read
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
                         _TMR6_Start
                          _TMR6_Stop
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1356
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR6_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
   _TMR6_Start
   _TMR6_Stop
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 19:30:16 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l35 04D9  
                                 l28 0481                  ___wmul@multiplicand 0022  
     I2C2_MasterReadTRBBuild@address 0022                                  l436 0226  
                                l518 041B                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                                  _PR6 0299  
                  EMC1001_Read@pData 0027                                  u905 0390  
                                u935 03A7                                  u865 0374  
                                u955 03B6                                  u885 037E  
                                u965 03BD                                  u895 0388  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                         ?_EUSART_Read 0077  
                       __CFG_LVP$OFF 0000                         __CFG_ZCD$OFF 0000  
                   __end_of_I2C2_ISR 016F                                 l2020 01A9  
                               l2030 01BF                                 l2014 0190  
                               l2042 01E4                                 l2106 0277  
                               l2052 01F1                                 l2036 01C5  
                               l2108 0296                                 l2046 01EC  
                               l2054 0174                                 l1600 03C5  
                               l2058 0415                                 l2092 0244  
                               l2084 022C                                 l1542 0313  
                               l1552 0326                                 l1546 031A  
                               l1548 031F                                 l1574 038F  
                               l1566 0371                                 l1590 03A4  
                               l1568 037D                                 l1592 03B0  
                               l1770 035C                                 l1578 0398  
                               l1596 03BC                                 l1996 0489  
                               STR_1 049B                                 STR_2 0495  
                               _LATA 0016                                 u1190 0366  
                               u1510 047F                                 _LATB 0017  
                               _LATC 0018                                 u1490 02E4  
                               u1645 041C                                 u1725 0268  
                               u1655 0421                                 u1585 01DA  
                               u1690 0242                                 _T6PR 0299  
                               _TMR6 0298                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0227  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E          I2C2_MasterReadTRBBuild@ptrb 0026  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                   EMC1001_Read@status 002B  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       _EMC1001_Read 032C                           _i2c2_state 004A  
                      ?_EUSART_Write 0077       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 04EA              _I2C2_MasterReadTRBBuild 03CA  
                              ?_main 0077                        __CFG_WDTE$OFF 0000  
                  __end_of_I2C2_Stop 0476                                _T6CON 029A  
                    __end_of___lwdiv 039D                                _T6HLT 029B  
                              i1l212 0013       __size_of_I2C2_FunctionComplete 0012  
                              i1l310 0150                                i1l302 010A  
                              i1l216 001B                                i1l305 011D  
                              i1l306 012B                                i1l317 04AB  
                              i1l281 0072                      __end_of___lwmod 03CA  
                              i1l282 007A                                i1l276 0047  
                              i1l287 009D                                i1l288 00A9  
                              i1l298 00EB                                _T6TMR 0298  
                              _T6RST 029D        __end_of_I2C2_FunctionComplete 04AF  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    __end_of_dpowers 0495                   __size_of_TMR6_Stop 0004  
                              _putch 04F0                          ?_TMR6_Start 0077  
       I2C2_MasterReadTRBBuild@pdata 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 029A               ??_I2C2_MasterTRBInsert 0022  
                     ??_EUSART_Write 0020          ?_INTERRUPT_InterruptManager 0077  
   __end_of_I2C2_MasterWriteTRBBuild 0412                               ??_main 003E  
                        _i2c2_object 0042                      _TMR6_Initialize 04BE  
                             i1S2130 0446                               _ANSELA 0F38  
                             ?_putch 0077                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC1REG 0119  
                             _RC0PPS 0F20                               _RC1STA 011D  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
       __end_of_I2C2_BusCollisionISR 04FE                               _ODCONA 0F3A  
                             _ODCONB 0F45                               _RC6PPS 0F26  
                             _ODCONC 0F50                               i1l1524 0473  
                             i1l1710 00F9                               i1l1702 00E5  
                             i1l1730 0132                               i1l1644 0065  
                             i1l1750 015A                               i1l1734 0139  
                             i1l1718 0112                               i1l1662 0097  
                             i1l1656 0086                               i1l1746 0153  
                             i1l1748 0156                               i1l1676 00C6  
                             i1l1756 0163                               i1l1696 00DA  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
                     __CFG_PWRTE$OFF 0000                               ___wmul 0412  
                     _p_i2c2_current 0073                       __CFG_STVREN$ON 0000  
          ??_I2C2_MasterReadTRBBuild 0024                    __end_of_TMR6_Stop 04FA  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0077                  __size_of_TMR6_Start 0003  
           I2C2_Stop@completion_code 0078                               _printf 016F  
      I2C2_MasterReadTRBBuild@length 0021                 __size_of_EUSART_Read 0015  
                  _SYSTEM_Initialize 04AF              __end_of__initialization 0030  
                 ?_SYSTEM_Initialize 0077                      EMC1001_Read@reg 002A  
                    EMC1001_Read@trb 004B                       __pcstackCOMMON 0077  
                ??_SYSTEM_Initialize 0021                       _i2c2_trb_count 0072  
                      __end_of_putch 04F6                           ??_I2C2_ISR 0079  
            __end_of_TMR6_Initialize 04CB             _I2C2_MasterWriteTRBBuild 03F2  
       I2C2_MasterWriteTRBBuild@ptrb 0026            __end_of_SYSTEM_Initialize 04BE  
                            ??_putch 0021                           __pbssBANK0 0042  
               __end_of_EUSART_Write 04E1                           __pmaintext 0227  
                            ?___wmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                       _SSP2DATPPSbits 0EC9  
               _I2C2_BusCollisionISR 04FD                              ?_printf 002E  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
  I2C2_ISR@i2c_10bit_address_restart 0049                              _OSCCON1 088D  
                            _OSCCON3 088F                            _I2C2_Stop 045E  
                     _SSP2CLKPPSbits 0EC8                              _OSCTUNE 0892  
                            _SSP2ADD 0197                              _PPSLOCK 0E8F  
                            _SSP2BUF 0196                         ??_TMR6_Start 0020  
                    _I2C2_Initialize 042E               I2C2_MasterRead@trBlock 0053  
                       _T6AINPPSbits 0E9E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 0368  
                            ___lwmod 039D                ?_I2C2_BusCollisionISR 0077  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 04FD  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 016F  
                            __ptext2 04F0                              __ptext3 04D7  
                            __ptext4 039D                              __ptext5 0368  
                            __ptext6 0412                              __ptext7 04F6  
                            __ptext8 04FA                              __ptext9 04AF  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 00B8  
                            _dpowers 048B                _OSCILLATOR_Initialize 04E1  
           ??_PIN_MANAGER_Initialize 0020                           ?_I2C2_Stop 0077  
              _I2C2_FunctionComplete 049D                            _T6CONbits 029A  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 000F  
                            clrloop0 04EB                 end_of_initialization 0030  
                          _T6RSTbits 029D                    _EUSART_Initialize 04CB  
                 ?_EUSART_Initialize 0077                   _p_i2c2_trb_current 0074  
                            printf@c 003D                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0070                         __pstringtext 048B  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0020                            _TMR6_Stop 04F6  
                  __size_of_I2C2_ISR 013B              __end_of_I2C2_Initialize 0446  
              __size_of_EUSART_Write 000A                     __CFG_FEXTOSC$OFF 0000  
                          _RXPPSbits 0ECB            __end_of_EUSART_Initialize 04D7  
                         main@templo 0041               ??_I2C2_BusCollisionISR 0077  
         ??_I2C2_MasterWriteTRBBuild 0024                       __end_of___wmul 042E  
                       _EUSART_Write 04D7               ?_OSCILLATOR_Initialize 0077  
                         ?_TMR6_Stop 0077                       __end_of_printf 0227  
             ?_I2C2_FunctionComplete 0077                  start_initialization 0022  
                        ??_I2C2_Stop 0077      __size_of_PIN_MANAGER_Initialize 004C  
                      ??_EUSART_Read 0020                          putch@txData 0021  
    I2C2_MasterWriteTRBBuild@address 0022             ?_I2C2_MasterReadTRBBuild 0020  
                   __CFG_LPBOREN$OFF 0000                        ?_EMC1001_Read 0027  
                           ??___wmul 0024        I2C2_MasterWriteTRBBuild@pdata 0020  
               I2C2_ISR@pi2c_buf_ptr 0071                             ??_printf 0034  
                        __pbssCOMMON 0070                     ?_I2C2_Initialize 0077  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      _i2c2_tr_queue 005B           __size_of_EUSART_Initialize 000C  
                __end_of_EUSART_Read 048B                _TMR6_InterruptHandler 0047  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 029A  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 0034  
       ??_INTERRUPT_InterruptManager 007D                            __pswtext1 0446  
                        ??_TMR6_Stop 0020                             _BAUD1CON 011F  
                   ___lwdiv@quotient 0025                 __CFG_RSTOSC$HFINTPLL 0000  
                     __size_of_putch 0006                             _T6CLKCON 029C  
    __end_of_I2C2_MasterReadTRBBuild 03F2                       ___wmul@product 0024  
                           _LATAbits 0016                            clear_ram0 04EA  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 001C  
                           _PIR3bits 070F                             _PIR4bits 0710  
                           _SSP2CON1 019A                             _SSP2CON3 019C  
                           _SSP2STAT 0199        I2C2_MasterTRBInsert@ptrb_list 0020  
                  ___wmul@multiplier 0020                           printf@flag 0039  
                         printf@prec 003A             __size_of_TMR6_Initialize 000D  
                        _EUSART_Read 0476         __end_of_I2C2_MasterTRBInsert 032C  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
            ??_I2C2_FunctionComplete 0077                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 04BE  
                           __ptext11 029A                             __ptext12 04E1  
                           __ptext21 0034                             __ptext13 042E  
                           __ptext22 045E                             __ptext14 04CB  
                           __ptext23 049D                             __ptext15 0476  
                           __ptext24 04FD                             __ptext16 032C  
                           __ptext17 03F2                             __ptext18 02E6  
                           __ptext19 03CA                 __end_of_EMC1001_Read 0368  
                       _SSP2CON1bits 019A                         _SSP2CON2bits 019B  
                      __size_of_main 0073                 __CFG_WDTCWS$WDTCWS_7 0000  
                         _RC1STAbits 011D                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                          printf@val 003B              I2C2_MasterWrite@trBlock 0057  
                           main@temp 0040        __size_of_I2C2_BusCollisionISR 0001  
        PIN_MANAGER_Initialize@state 0020     __size_of_I2C2_MasterReadTRBBuild 0028  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0075  
            ?_PIN_MANAGER_Initialize 0077                    ??_TMR6_Initialize 0020  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 0038                 _I2C2_MasterTRBInsert 02E6  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                         _TMR6_Start 04FA                   EUSART_Write@txData 0020  
     __end_of_PIN_MANAGER_Initialize 02E6             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018  
