

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 22 18:25:23 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  001C                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  008E                     	;# 
    70  008F                     	;# 
    71  0090                     	;# 
    72  0090                     	;# 
    73  0091                     	;# 
    74  0093                     	;# 
    75  0094                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0110                     	;# 
    92  0110                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0119                     	;# 
   104  0119                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011A                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011B                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011C                     	;# 
   115  011C                     	;# 
   116  011C                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011E                     	;# 
   122  011E                     	;# 
   123  011F                     	;# 
   124  011F                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018E                     	;# 
   131  018F                     	;# 
   132  0190                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0198                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  020E                     	;# 
   145  020F                     	;# 
   146  020F                     	;# 
   147  0210                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0218                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021D                     	;# 
   169  021E                     	;# 
   170  021F                     	;# 
   171  028C                     	;# 
   172  028C                     	;# 
   173  028D                     	;# 
   174  028D                     	;# 
   175  028E                     	;# 
   176  028F                     	;# 
   177  0290                     	;# 
   178  0290                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0293                     	;# 
   184  0294                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0296                     	;# 
   188  0297                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  030C                     	;# 
   199  030C                     	;# 
   200  030D                     	;# 
   201  030E                     	;# 
   202  030F                     	;# 
   203  0310                     	;# 
   204  0310                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0314                     	;# 
   209  0314                     	;# 
   210  0315                     	;# 
   211  0316                     	;# 
   212  0317                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  031B                     	;# 
   218  031C                     	;# 
   219  031C                     	;# 
   220  031D                     	;# 
   221  031E                     	;# 
   222  031F                     	;# 
   223  038C                     	;# 
   224  038D                     	;# 
   225  038E                     	;# 
   226  0390                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  040C                     	;# 
   230  040D                     	;# 
   231  040E                     	;# 
   232  040F                     	;# 
   233  0410                     	;# 
   234  0411                     	;# 
   235  0416                     	;# 
   236  0416                     	;# 
   237  0417                     	;# 
   238  0418                     	;# 
   239  0418                     	;# 
   240  0419                     	;# 
   241  041A                     	;# 
   242  041A                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041C                     	;# 
   246  041D                     	;# 
   247  041E                     	;# 
   248  041F                     	;# 
   249  048C                     	;# 
   250  048C                     	;# 
   251  048D                     	;# 
   252  048E                     	;# 
   253  048F                     	;# 
   254  048F                     	;# 
   255  0490                     	;# 
   256  0491                     	;# 
   257  0492                     	;# 
   258  0492                     	;# 
   259  0493                     	;# 
   260  0494                     	;# 
   261  0495                     	;# 
   262  0495                     	;# 
   263  0496                     	;# 
   264  0497                     	;# 
   265  0498                     	;# 
   266  0499                     	;# 
   267  049A                     	;# 
   268  049B                     	;# 
   269  049C                     	;# 
   270  049D                     	;# 
   271  050C                     	;# 
   272  050C                     	;# 
   273  050D                     	;# 
   274  050E                     	;# 
   275  050F                     	;# 
   276  050F                     	;# 
   277  0510                     	;# 
   278  0511                     	;# 
   279  0512                     	;# 
   280  0512                     	;# 
   281  0513                     	;# 
   282  0514                     	;# 
   283  0515                     	;# 
   284  0515                     	;# 
   285  0516                     	;# 
   286  0517                     	;# 
   287  0518                     	;# 
   288  0519                     	;# 
   289  051A                     	;# 
   290  051B                     	;# 
   291  051C                     	;# 
   292  051D                     	;# 
   293  058C                     	;# 
   294  058C                     	;# 
   295  058D                     	;# 
   296  058E                     	;# 
   297  058F                     	;# 
   298  058F                     	;# 
   299  0590                     	;# 
   300  0591                     	;# 
   301  0592                     	;# 
   302  0593                     	;# 
   303  060C                     	;# 
   304  060D                     	;# 
   305  060E                     	;# 
   306  060F                     	;# 
   307  0610                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0614                     	;# 
   312  0616                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061B                     	;# 
   318  061C                     	;# 
   319  061D                     	;# 
   320  061E                     	;# 
   321  068C                     	;# 
   322  068D                     	;# 
   323  068E                     	;# 
   324  068F                     	;# 
   325  0690                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  070C                     	;# 
   331  070D                     	;# 
   332  070E                     	;# 
   333  070F                     	;# 
   334  0710                     	;# 
   335  0711                     	;# 
   336  0712                     	;# 
   337  0713                     	;# 
   338  0714                     	;# 
   339  0716                     	;# 
   340  0717                     	;# 
   341  0718                     	;# 
   342  0719                     	;# 
   343  071A                     	;# 
   344  071B                     	;# 
   345  071C                     	;# 
   346  071D                     	;# 
   347  071E                     	;# 
   348  0796                     	;# 
   349  0797                     	;# 
   350  0798                     	;# 
   351  0799                     	;# 
   352  079A                     	;# 
   353  079B                     	;# 
   354  080C                     	;# 
   355  080D                     	;# 
   356  080E                     	;# 
   357  080F                     	;# 
   358  0810                     	;# 
   359  0811                     	;# 
   360  0812                     	;# 
   361  0813                     	;# 
   362  0814                     	;# 
   363  081A                     	;# 
   364  081B                     	;# 
   365  081C                     	;# 
   366  081D                     	;# 
   367  081E                     	;# 
   368  081F                     	;# 
   369  088C                     	;# 
   370  088D                     	;# 
   371  088E                     	;# 
   372  088F                     	;# 
   373  0890                     	;# 
   374  0891                     	;# 
   375  0892                     	;# 
   376  0893                     	;# 
   377  0895                     	;# 
   378  0896                     	;# 
   379  0897                     	;# 
   380  0898                     	;# 
   381  0899                     	;# 
   382  089A                     	;# 
   383  089B                     	;# 
   384  090C                     	;# 
   385  090E                     	;# 
   386  090F                     	;# 
   387  091F                     	;# 
   388  091F                     	;# 
   389  098F                     	;# 
   390  098F                     	;# 
   391  0990                     	;# 
   392  0991                     	;# 
   393  0992                     	;# 
   394  0993                     	;# 
   395  0994                     	;# 
   396  0995                     	;# 
   397  0996                     	;# 
   398  0997                     	;# 
   399  0E0F                     	;# 
   400  0E10                     	;# 
   401  0E11                     	;# 
   402  0E12                     	;# 
   403  0E13                     	;# 
   404  0E14                     	;# 
   405  0E15                     	;# 
   406  0E16                     	;# 
   407  0E17                     	;# 
   408  0E18                     	;# 
   409  0E19                     	;# 
   410  0E1A                     	;# 
   411  0E1B                     	;# 
   412  0E1C                     	;# 
   413  0E1D                     	;# 
   414  0E1E                     	;# 
   415  0E1F                     	;# 
   416  0E20                     	;# 
   417  0E21                     	;# 
   418  0E22                     	;# 
   419  0E23                     	;# 
   420  0E24                     	;# 
   421  0E25                     	;# 
   422  0E26                     	;# 
   423  0E27                     	;# 
   424  0E28                     	;# 
   425  0E29                     	;# 
   426  0E2A                     	;# 
   427  0E2B                     	;# 
   428  0E2C                     	;# 
   429  0E2D                     	;# 
   430  0E2E                     	;# 
   431  0E2F                     	;# 
   432  0E30                     	;# 
   433  0E31                     	;# 
   434  0E32                     	;# 
   435  0E33                     	;# 
   436  0E34                     	;# 
   437  0E35                     	;# 
   438  0E36                     	;# 
   439  0E37                     	;# 
   440  0E8F                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E93                     	;# 
   445  0E94                     	;# 
   446  0E95                     	;# 
   447  0E96                     	;# 
   448  0E97                     	;# 
   449  0E9C                     	;# 
   450  0E9D                     	;# 
   451  0E9E                     	;# 
   452  0EA1                     	;# 
   453  0EA2                     	;# 
   454  0EA3                     	;# 
   455  0EA4                     	;# 
   456  0EA5                     	;# 
   457  0EA9                     	;# 
   458  0EAA                     	;# 
   459  0EAB                     	;# 
   460  0EAC                     	;# 
   461  0EB1                     	;# 
   462  0EB2                     	;# 
   463  0EB3                     	;# 
   464  0EB8                     	;# 
   465  0EB9                     	;# 
   466  0EBA                     	;# 
   467  0EBB                     	;# 
   468  0EBC                     	;# 
   469  0EBD                     	;# 
   470  0EBE                     	;# 
   471  0EC3                     	;# 
   472  0EC5                     	;# 
   473  0EC6                     	;# 
   474  0EC7                     	;# 
   475  0EC8                     	;# 
   476  0EC9                     	;# 
   477  0ECA                     	;# 
   478  0ECB                     	;# 
   479  0ECC                     	;# 
   480  0F10                     	;# 
   481  0F11                     	;# 
   482  0F12                     	;# 
   483  0F13                     	;# 
   484  0F14                     	;# 
   485  0F15                     	;# 
   486  0F16                     	;# 
   487  0F17                     	;# 
   488  0F18                     	;# 
   489  0F19                     	;# 
   490  0F1A                     	;# 
   491  0F1B                     	;# 
   492  0F1C                     	;# 
   493  0F1D                     	;# 
   494  0F1E                     	;# 
   495  0F1F                     	;# 
   496  0F20                     	;# 
   497  0F21                     	;# 
   498  0F22                     	;# 
   499  0F23                     	;# 
   500  0F24                     	;# 
   501  0F25                     	;# 
   502  0F26                     	;# 
   503  0F27                     	;# 
   504  0F38                     	;# 
   505  0F39                     	;# 
   506  0F3A                     	;# 
   507  0F3B                     	;# 
   508  0F3C                     	;# 
   509  0F3D                     	;# 
   510  0F3E                     	;# 
   511  0F3F                     	;# 
   512  0F40                     	;# 
   513  0F41                     	;# 
   514  0F43                     	;# 
   515  0F44                     	;# 
   516  0F45                     	;# 
   517  0F46                     	;# 
   518  0F47                     	;# 
   519  0F48                     	;# 
   520  0F49                     	;# 
   521  0F4A                     	;# 
   522  0F4B                     	;# 
   523  0F4C                     	;# 
   524  0F4E                     	;# 
   525  0F4F                     	;# 
   526  0F50                     	;# 
   527  0F51                     	;# 
   528  0F52                     	;# 
   529  0F53                     	;# 
   530  0F54                     	;# 
   531  0F55                     	;# 
   532  0F56                     	;# 
   533  0F57                     	;# 
   534  0F65                     	;# 
   535  0F68                     	;# 
   536  0F69                     	;# 
   537  0F6A                     	;# 
   538  0F6B                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  000E                     	;# 
   565  0010                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  001C                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  008E                     	;# 
   582  008E                     	;# 
   583  008F                     	;# 
   584  0090                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  0110                     	;# 
   605  0110                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0119                     	;# 
   617  0119                     	;# 
   618  0119                     	;# 
   619  011A                     	;# 
   620  011A                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011B                     	;# 
   624  011B                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011C                     	;# 
   628  011C                     	;# 
   629  011C                     	;# 
   630  011D                     	;# 
   631  011D                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  011E                     	;# 
   635  011E                     	;# 
   636  011F                     	;# 
   637  011F                     	;# 
   638  011F                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  018E                     	;# 
   644  018F                     	;# 
   645  0190                     	;# 
   646  0191                     	;# 
   647  0192                     	;# 
   648  0196                     	;# 
   649  0197                     	;# 
   650  0198                     	;# 
   651  0199                     	;# 
   652  019A                     	;# 
   653  019B                     	;# 
   654  019C                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  020E                     	;# 
   658  020F                     	;# 
   659  020F                     	;# 
   660  0210                     	;# 
   661  0210                     	;# 
   662  0211                     	;# 
   663  0211                     	;# 
   664  0212                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0218                     	;# 
   674  0219                     	;# 
   675  021A                     	;# 
   676  021B                     	;# 
   677  021B                     	;# 
   678  021C                     	;# 
   679  021C                     	;# 
   680  021D                     	;# 
   681  021D                     	;# 
   682  021E                     	;# 
   683  021F                     	;# 
   684  028C                     	;# 
   685  028C                     	;# 
   686  028D                     	;# 
   687  028D                     	;# 
   688  028E                     	;# 
   689  028F                     	;# 
   690  0290                     	;# 
   691  0290                     	;# 
   692  0291                     	;# 
   693  0292                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0293                     	;# 
   697  0294                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0296                     	;# 
   701  0297                     	;# 
   702  0298                     	;# 
   703  0298                     	;# 
   704  0299                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  030C                     	;# 
   712  030C                     	;# 
   713  030D                     	;# 
   714  030E                     	;# 
   715  030F                     	;# 
   716  0310                     	;# 
   717  0310                     	;# 
   718  0311                     	;# 
   719  0312                     	;# 
   720  0313                     	;# 
   721  0314                     	;# 
   722  0314                     	;# 
   723  0315                     	;# 
   724  0316                     	;# 
   725  0317                     	;# 
   726  0318                     	;# 
   727  0318                     	;# 
   728  0319                     	;# 
   729  031A                     	;# 
   730  031B                     	;# 
   731  031C                     	;# 
   732  031C                     	;# 
   733  031D                     	;# 
   734  031E                     	;# 
   735  031F                     	;# 
   736  038C                     	;# 
   737  038D                     	;# 
   738  038E                     	;# 
   739  0390                     	;# 
   740  0391                     	;# 
   741  0392                     	;# 
   742  040C                     	;# 
   743  040D                     	;# 
   744  040E                     	;# 
   745  040F                     	;# 
   746  0410                     	;# 
   747  0411                     	;# 
   748  0416                     	;# 
   749  0416                     	;# 
   750  0417                     	;# 
   751  0418                     	;# 
   752  0418                     	;# 
   753  0419                     	;# 
   754  041A                     	;# 
   755  041A                     	;# 
   756  041B                     	;# 
   757  041C                     	;# 
   758  041C                     	;# 
   759  041D                     	;# 
   760  041E                     	;# 
   761  041F                     	;# 
   762  048C                     	;# 
   763  048C                     	;# 
   764  048D                     	;# 
   765  048E                     	;# 
   766  048F                     	;# 
   767  048F                     	;# 
   768  0490                     	;# 
   769  0491                     	;# 
   770  0492                     	;# 
   771  0492                     	;# 
   772  0493                     	;# 
   773  0494                     	;# 
   774  0495                     	;# 
   775  0495                     	;# 
   776  0496                     	;# 
   777  0497                     	;# 
   778  0498                     	;# 
   779  0499                     	;# 
   780  049A                     	;# 
   781  049B                     	;# 
   782  049C                     	;# 
   783  049D                     	;# 
   784  050C                     	;# 
   785  050C                     	;# 
   786  050D                     	;# 
   787  050E                     	;# 
   788  050F                     	;# 
   789  050F                     	;# 
   790  0510                     	;# 
   791  0511                     	;# 
   792  0512                     	;# 
   793  0512                     	;# 
   794  0513                     	;# 
   795  0514                     	;# 
   796  0515                     	;# 
   797  0515                     	;# 
   798  0516                     	;# 
   799  0517                     	;# 
   800  0518                     	;# 
   801  0519                     	;# 
   802  051A                     	;# 
   803  051B                     	;# 
   804  051C                     	;# 
   805  051D                     	;# 
   806  058C                     	;# 
   807  058C                     	;# 
   808  058D                     	;# 
   809  058E                     	;# 
   810  058F                     	;# 
   811  058F                     	;# 
   812  0590                     	;# 
   813  0591                     	;# 
   814  0592                     	;# 
   815  0593                     	;# 
   816  060C                     	;# 
   817  060D                     	;# 
   818  060E                     	;# 
   819  060F                     	;# 
   820  0610                     	;# 
   821  0611                     	;# 
   822  0612                     	;# 
   823  0613                     	;# 
   824  0614                     	;# 
   825  0616                     	;# 
   826  0617                     	;# 
   827  0618                     	;# 
   828  0619                     	;# 
   829  061A                     	;# 
   830  061B                     	;# 
   831  061C                     	;# 
   832  061D                     	;# 
   833  061E                     	;# 
   834  068C                     	;# 
   835  068D                     	;# 
   836  068E                     	;# 
   837  068F                     	;# 
   838  0690                     	;# 
   839  0691                     	;# 
   840  0692                     	;# 
   841  0693                     	;# 
   842  0694                     	;# 
   843  070C                     	;# 
   844  070D                     	;# 
   845  070E                     	;# 
   846  070F                     	;# 
   847  0710                     	;# 
   848  0711                     	;# 
   849  0712                     	;# 
   850  0713                     	;# 
   851  0714                     	;# 
   852  0716                     	;# 
   853  0717                     	;# 
   854  0718                     	;# 
   855  0719                     	;# 
   856  071A                     	;# 
   857  071B                     	;# 
   858  071C                     	;# 
   859  071D                     	;# 
   860  071E                     	;# 
   861  0796                     	;# 
   862  0797                     	;# 
   863  0798                     	;# 
   864  0799                     	;# 
   865  079A                     	;# 
   866  079B                     	;# 
   867  080C                     	;# 
   868  080D                     	;# 
   869  080E                     	;# 
   870  080F                     	;# 
   871  0810                     	;# 
   872  0811                     	;# 
   873  0812                     	;# 
   874  0813                     	;# 
   875  0814                     	;# 
   876  081A                     	;# 
   877  081B                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  0897                     	;# 
   893  0898                     	;# 
   894  0899                     	;# 
   895  089A                     	;# 
   896  089B                     	;# 
   897  090C                     	;# 
   898  090E                     	;# 
   899  090F                     	;# 
   900  091F                     	;# 
   901  091F                     	;# 
   902  098F                     	;# 
   903  098F                     	;# 
   904  0990                     	;# 
   905  0991                     	;# 
   906  0992                     	;# 
   907  0993                     	;# 
   908  0994                     	;# 
   909  0995                     	;# 
   910  0996                     	;# 
   911  0997                     	;# 
   912  0E0F                     	;# 
   913  0E10                     	;# 
   914  0E11                     	;# 
   915  0E12                     	;# 
   916  0E13                     	;# 
   917  0E14                     	;# 
   918  0E15                     	;# 
   919  0E16                     	;# 
   920  0E17                     	;# 
   921  0E18                     	;# 
   922  0E19                     	;# 
   923  0E1A                     	;# 
   924  0E1B                     	;# 
   925  0E1C                     	;# 
   926  0E1D                     	;# 
   927  0E1E                     	;# 
   928  0E1F                     	;# 
   929  0E20                     	;# 
   930  0E21                     	;# 
   931  0E22                     	;# 
   932  0E23                     	;# 
   933  0E24                     	;# 
   934  0E25                     	;# 
   935  0E26                     	;# 
   936  0E27                     	;# 
   937  0E28                     	;# 
   938  0E29                     	;# 
   939  0E2A                     	;# 
   940  0E2B                     	;# 
   941  0E2C                     	;# 
   942  0E2D                     	;# 
   943  0E2E                     	;# 
   944  0E2F                     	;# 
   945  0E30                     	;# 
   946  0E31                     	;# 
   947  0E32                     	;# 
   948  0E33                     	;# 
   949  0E34                     	;# 
   950  0E35                     	;# 
   951  0E36                     	;# 
   952  0E37                     	;# 
   953  0E8F                     	;# 
   954  0E90                     	;# 
   955  0E91                     	;# 
   956  0E92                     	;# 
   957  0E93                     	;# 
   958  0E94                     	;# 
   959  0E95                     	;# 
   960  0E96                     	;# 
   961  0E97                     	;# 
   962  0E9C                     	;# 
   963  0E9D                     	;# 
   964  0E9E                     	;# 
   965  0EA1                     	;# 
   966  0EA2                     	;# 
   967  0EA3                     	;# 
   968  0EA4                     	;# 
   969  0EA5                     	;# 
   970  0EA9                     	;# 
   971  0EAA                     	;# 
   972  0EAB                     	;# 
   973  0EAC                     	;# 
   974  0EB1                     	;# 
   975  0EB2                     	;# 
   976  0EB3                     	;# 
   977  0EB8                     	;# 
   978  0EB9                     	;# 
   979  0EBA                     	;# 
   980  0EBB                     	;# 
   981  0EBC                     	;# 
   982  0EBD                     	;# 
   983  0EBE                     	;# 
   984  0EC3                     	;# 
   985  0EC5                     	;# 
   986  0EC6                     	;# 
   987  0EC7                     	;# 
   988  0EC8                     	;# 
   989  0EC9                     	;# 
   990  0ECA                     	;# 
   991  0ECB                     	;# 
   992  0ECC                     	;# 
   993  0F10                     	;# 
   994  0F11                     	;# 
   995  0F12                     	;# 
   996  0F13                     	;# 
   997  0F14                     	;# 
   998  0F15                     	;# 
   999  0F16                     	;# 
  1000  0F17                     	;# 
  1001  0F18                     	;# 
  1002  0F19                     	;# 
  1003  0F1A                     	;# 
  1004  0F1B                     	;# 
  1005  0F1C                     	;# 
  1006  0F1D                     	;# 
  1007  0F1E                     	;# 
  1008  0F1F                     	;# 
  1009  0F20                     	;# 
  1010  0F21                     	;# 
  1011  0F22                     	;# 
  1012  0F23                     	;# 
  1013  0F24                     	;# 
  1014  0F25                     	;# 
  1015  0F26                     	;# 
  1016  0F27                     	;# 
  1017  0F38                     	;# 
  1018  0F39                     	;# 
  1019  0F3A                     	;# 
  1020  0F3B                     	;# 
  1021  0F3C                     	;# 
  1022  0F3D                     	;# 
  1023  0F3E                     	;# 
  1024  0F3F                     	;# 
  1025  0F40                     	;# 
  1026  0F41                     	;# 
  1027  0F43                     	;# 
  1028  0F44                     	;# 
  1029  0F45                     	;# 
  1030  0F46                     	;# 
  1031  0F47                     	;# 
  1032  0F48                     	;# 
  1033  0F49                     	;# 
  1034  0F4A                     	;# 
  1035  0F4B                     	;# 
  1036  0F4C                     	;# 
  1037  0F4E                     	;# 
  1038  0F4F                     	;# 
  1039  0F50                     	;# 
  1040  0F51                     	;# 
  1041  0F52                     	;# 
  1042  0F53                     	;# 
  1043  0F54                     	;# 
  1044  0F55                     	;# 
  1045  0F56                     	;# 
  1046  0F57                     	;# 
  1047  0F65                     	;# 
  1048  0F68                     	;# 
  1049  0F69                     	;# 
  1050  0F6A                     	;# 
  1051  0F6B                     	;# 
  1052  0FE4                     	;# 
  1053  0FE5                     	;# 
  1054  0FE6                     	;# 
  1055  0FE7                     	;# 
  1056  0FE8                     	;# 
  1057  0FE9                     	;# 
  1058  0FEA                     	;# 
  1059  0FEB                     	;# 
  1060  0FED                     	;# 
  1061  0FEE                     	;# 
  1062  0FEF                     	;# 
  1063  0000                     	;# 
  1064  0001                     	;# 
  1065  0002                     	;# 
  1066  0003                     	;# 
  1067  0004                     	;# 
  1068  0005                     	;# 
  1069  0006                     	;# 
  1070  0007                     	;# 
  1071  0008                     	;# 
  1072  0009                     	;# 
  1073  000A                     	;# 
  1074  000B                     	;# 
  1075  000C                     	;# 
  1076  000D                     	;# 
  1077  000E                     	;# 
  1078  0010                     	;# 
  1079  0011                     	;# 
  1080  0012                     	;# 
  1081  0013                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  001C                     	;# 
  1086  001C                     	;# 
  1087  001D                     	;# 
  1088  001D                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008C                     	;# 
  1093  008D                     	;# 
  1094  008E                     	;# 
  1095  008E                     	;# 
  1096  008F                     	;# 
  1097  0090                     	;# 
  1098  0090                     	;# 
  1099  0091                     	;# 
  1100  0093                     	;# 
  1101  0094                     	;# 
  1102  0095                     	;# 
  1103  0096                     	;# 
  1104  0097                     	;# 
  1105  0098                     	;# 
  1106  0099                     	;# 
  1107  009A                     	;# 
  1108  009B                     	;# 
  1109  009C                     	;# 
  1110  009D                     	;# 
  1111  009E                     	;# 
  1112  010C                     	;# 
  1113  010D                     	;# 
  1114  010E                     	;# 
  1115  010E                     	;# 
  1116  010F                     	;# 
  1117  0110                     	;# 
  1118  0110                     	;# 
  1119  0111                     	;# 
  1120  0112                     	;# 
  1121  0112                     	;# 
  1122  0113                     	;# 
  1123  0114                     	;# 
  1124  0114                     	;# 
  1125  0115                     	;# 
  1126  0116                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0119                     	;# 
  1130  0119                     	;# 
  1131  0119                     	;# 
  1132  011A                     	;# 
  1133  011A                     	;# 
  1134  011A                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011C                     	;# 
  1141  011C                     	;# 
  1142  011C                     	;# 
  1143  011D                     	;# 
  1144  011D                     	;# 
  1145  011D                     	;# 
  1146  011E                     	;# 
  1147  011E                     	;# 
  1148  011E                     	;# 
  1149  011F                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  018C                     	;# 
  1155  018D                     	;# 
  1156  018E                     	;# 
  1157  018F                     	;# 
  1158  0190                     	;# 
  1159  0191                     	;# 
  1160  0192                     	;# 
  1161  0196                     	;# 
  1162  0197                     	;# 
  1163  0198                     	;# 
  1164  0199                     	;# 
  1165  019A                     	;# 
  1166  019B                     	;# 
  1167  019C                     	;# 
  1168  020C                     	;# 
  1169  020D                     	;# 
  1170  020E                     	;# 
  1171  020F                     	;# 
  1172  020F                     	;# 
  1173  0210                     	;# 
  1174  0210                     	;# 
  1175  0211                     	;# 
  1176  0211                     	;# 
  1177  0212                     	;# 
  1178  0213                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0216                     	;# 
  1183  0216                     	;# 
  1184  0217                     	;# 
  1185  0217                     	;# 
  1186  0218                     	;# 
  1187  0219                     	;# 
  1188  021A                     	;# 
  1189  021B                     	;# 
  1190  021B                     	;# 
  1191  021C                     	;# 
  1192  021C                     	;# 
  1193  021D                     	;# 
  1194  021D                     	;# 
  1195  021E                     	;# 
  1196  021F                     	;# 
  1197  028C                     	;# 
  1198  028C                     	;# 
  1199  028D                     	;# 
  1200  028D                     	;# 
  1201  028E                     	;# 
  1202  028F                     	;# 
  1203  0290                     	;# 
  1204  0290                     	;# 
  1205  0291                     	;# 
  1206  0292                     	;# 
  1207  0292                     	;# 
  1208  0293                     	;# 
  1209  0293                     	;# 
  1210  0294                     	;# 
  1211  0295                     	;# 
  1212  0296                     	;# 
  1213  0296                     	;# 
  1214  0297                     	;# 
  1215  0298                     	;# 
  1216  0298                     	;# 
  1217  0299                     	;# 
  1218  0299                     	;# 
  1219  029A                     	;# 
  1220  029B                     	;# 
  1221  029C                     	;# 
  1222  029C                     	;# 
  1223  029D                     	;# 
  1224  030C                     	;# 
  1225  030C                     	;# 
  1226  030D                     	;# 
  1227  030E                     	;# 
  1228  030F                     	;# 
  1229  0310                     	;# 
  1230  0310                     	;# 
  1231  0311                     	;# 
  1232  0312                     	;# 
  1233  0313                     	;# 
  1234  0314                     	;# 
  1235  0314                     	;# 
  1236  0315                     	;# 
  1237  0316                     	;# 
  1238  0317                     	;# 
  1239  0318                     	;# 
  1240  0318                     	;# 
  1241  0319                     	;# 
  1242  031A                     	;# 
  1243  031B                     	;# 
  1244  031C                     	;# 
  1245  031C                     	;# 
  1246  031D                     	;# 
  1247  031E                     	;# 
  1248  031F                     	;# 
  1249  038C                     	;# 
  1250  038D                     	;# 
  1251  038E                     	;# 
  1252  0390                     	;# 
  1253  0391                     	;# 
  1254  0392                     	;# 
  1255  040C                     	;# 
  1256  040D                     	;# 
  1257  040E                     	;# 
  1258  040F                     	;# 
  1259  0410                     	;# 
  1260  0411                     	;# 
  1261  0416                     	;# 
  1262  0416                     	;# 
  1263  0417                     	;# 
  1264  0418                     	;# 
  1265  0418                     	;# 
  1266  0419                     	;# 
  1267  041A                     	;# 
  1268  041A                     	;# 
  1269  041B                     	;# 
  1270  041C                     	;# 
  1271  041C                     	;# 
  1272  041D                     	;# 
  1273  041E                     	;# 
  1274  041F                     	;# 
  1275  048C                     	;# 
  1276  048C                     	;# 
  1277  048D                     	;# 
  1278  048E                     	;# 
  1279  048F                     	;# 
  1280  048F                     	;# 
  1281  0490                     	;# 
  1282  0491                     	;# 
  1283  0492                     	;# 
  1284  0492                     	;# 
  1285  0493                     	;# 
  1286  0494                     	;# 
  1287  0495                     	;# 
  1288  0495                     	;# 
  1289  0496                     	;# 
  1290  0497                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  050C                     	;# 
  1298  050C                     	;# 
  1299  050D                     	;# 
  1300  050E                     	;# 
  1301  050F                     	;# 
  1302  050F                     	;# 
  1303  0510                     	;# 
  1304  0511                     	;# 
  1305  0512                     	;# 
  1306  0512                     	;# 
  1307  0513                     	;# 
  1308  0514                     	;# 
  1309  0515                     	;# 
  1310  0515                     	;# 
  1311  0516                     	;# 
  1312  0517                     	;# 
  1313  0518                     	;# 
  1314  0519                     	;# 
  1315  051A                     	;# 
  1316  051B                     	;# 
  1317  051C                     	;# 
  1318  051D                     	;# 
  1319  058C                     	;# 
  1320  058C                     	;# 
  1321  058D                     	;# 
  1322  058E                     	;# 
  1323  058F                     	;# 
  1324  058F                     	;# 
  1325  0590                     	;# 
  1326  0591                     	;# 
  1327  0592                     	;# 
  1328  0593                     	;# 
  1329  060C                     	;# 
  1330  060D                     	;# 
  1331  060E                     	;# 
  1332  060F                     	;# 
  1333  0610                     	;# 
  1334  0611                     	;# 
  1335  0612                     	;# 
  1336  0613                     	;# 
  1337  0614                     	;# 
  1338  0616                     	;# 
  1339  0617                     	;# 
  1340  0618                     	;# 
  1341  0619                     	;# 
  1342  061A                     	;# 
  1343  061B                     	;# 
  1344  061C                     	;# 
  1345  061D                     	;# 
  1346  061E                     	;# 
  1347  068C                     	;# 
  1348  068D                     	;# 
  1349  068E                     	;# 
  1350  068F                     	;# 
  1351  0690                     	;# 
  1352  0691                     	;# 
  1353  0692                     	;# 
  1354  0693                     	;# 
  1355  0694                     	;# 
  1356  070C                     	;# 
  1357  070D                     	;# 
  1358  070E                     	;# 
  1359  070F                     	;# 
  1360  0710                     	;# 
  1361  0711                     	;# 
  1362  0712                     	;# 
  1363  0713                     	;# 
  1364  0714                     	;# 
  1365  0716                     	;# 
  1366  0717                     	;# 
  1367  0718                     	;# 
  1368  0719                     	;# 
  1369  071A                     	;# 
  1370  071B                     	;# 
  1371  071C                     	;# 
  1372  071D                     	;# 
  1373  071E                     	;# 
  1374  0796                     	;# 
  1375  0797                     	;# 
  1376  0798                     	;# 
  1377  0799                     	;# 
  1378  079A                     	;# 
  1379  079B                     	;# 
  1380  080C                     	;# 
  1381  080D                     	;# 
  1382  080E                     	;# 
  1383  080F                     	;# 
  1384  0810                     	;# 
  1385  0811                     	;# 
  1386  0812                     	;# 
  1387  0813                     	;# 
  1388  0814                     	;# 
  1389  081A                     	;# 
  1390  081B                     	;# 
  1391  081C                     	;# 
  1392  081D                     	;# 
  1393  081E                     	;# 
  1394  081F                     	;# 
  1395  088C                     	;# 
  1396  088D                     	;# 
  1397  088E                     	;# 
  1398  088F                     	;# 
  1399  0890                     	;# 
  1400  0891                     	;# 
  1401  0892                     	;# 
  1402  0893                     	;# 
  1403  0895                     	;# 
  1404  0896                     	;# 
  1405  0897                     	;# 
  1406  0898                     	;# 
  1407  0899                     	;# 
  1408  089A                     	;# 
  1409  089B                     	;# 
  1410  090C                     	;# 
  1411  090E                     	;# 
  1412  090F                     	;# 
  1413  091F                     	;# 
  1414  091F                     	;# 
  1415  098F                     	;# 
  1416  098F                     	;# 
  1417  0990                     	;# 
  1418  0991                     	;# 
  1419  0992                     	;# 
  1420  0993                     	;# 
  1421  0994                     	;# 
  1422  0995                     	;# 
  1423  0996                     	;# 
  1424  0997                     	;# 
  1425  0E0F                     	;# 
  1426  0E10                     	;# 
  1427  0E11                     	;# 
  1428  0E12                     	;# 
  1429  0E13                     	;# 
  1430  0E14                     	;# 
  1431  0E15                     	;# 
  1432  0E16                     	;# 
  1433  0E17                     	;# 
  1434  0E18                     	;# 
  1435  0E19                     	;# 
  1436  0E1A                     	;# 
  1437  0E1B                     	;# 
  1438  0E1C                     	;# 
  1439  0E1D                     	;# 
  1440  0E1E                     	;# 
  1441  0E1F                     	;# 
  1442  0E20                     	;# 
  1443  0E21                     	;# 
  1444  0E22                     	;# 
  1445  0E23                     	;# 
  1446  0E24                     	;# 
  1447  0E25                     	;# 
  1448  0E26                     	;# 
  1449  0E27                     	;# 
  1450  0E28                     	;# 
  1451  0E29                     	;# 
  1452  0E2A                     	;# 
  1453  0E2B                     	;# 
  1454  0E2C                     	;# 
  1455  0E2D                     	;# 
  1456  0E2E                     	;# 
  1457  0E2F                     	;# 
  1458  0E30                     	;# 
  1459  0E31                     	;# 
  1460  0E32                     	;# 
  1461  0E33                     	;# 
  1462  0E34                     	;# 
  1463  0E35                     	;# 
  1464  0E36                     	;# 
  1465  0E37                     	;# 
  1466  0E8F                     	;# 
  1467  0E90                     	;# 
  1468  0E91                     	;# 
  1469  0E92                     	;# 
  1470  0E93                     	;# 
  1471  0E94                     	;# 
  1472  0E95                     	;# 
  1473  0E96                     	;# 
  1474  0E97                     	;# 
  1475  0E9C                     	;# 
  1476  0E9D                     	;# 
  1477  0E9E                     	;# 
  1478  0EA1                     	;# 
  1479  0EA2                     	;# 
  1480  0EA3                     	;# 
  1481  0EA4                     	;# 
  1482  0EA5                     	;# 
  1483  0EA9                     	;# 
  1484  0EAA                     	;# 
  1485  0EAB                     	;# 
  1486  0EAC                     	;# 
  1487  0EB1                     	;# 
  1488  0EB2                     	;# 
  1489  0EB3                     	;# 
  1490  0EB8                     	;# 
  1491  0EB9                     	;# 
  1492  0EBA                     	;# 
  1493  0EBB                     	;# 
  1494  0EBC                     	;# 
  1495  0EBD                     	;# 
  1496  0EBE                     	;# 
  1497  0EC3                     	;# 
  1498  0EC5                     	;# 
  1499  0EC6                     	;# 
  1500  0EC7                     	;# 
  1501  0EC8                     	;# 
  1502  0EC9                     	;# 
  1503  0ECA                     	;# 
  1504  0ECB                     	;# 
  1505  0ECC                     	;# 
  1506  0F10                     	;# 
  1507  0F11                     	;# 
  1508  0F12                     	;# 
  1509  0F13                     	;# 
  1510  0F14                     	;# 
  1511  0F15                     	;# 
  1512  0F16                     	;# 
  1513  0F17                     	;# 
  1514  0F18                     	;# 
  1515  0F19                     	;# 
  1516  0F1A                     	;# 
  1517  0F1B                     	;# 
  1518  0F1C                     	;# 
  1519  0F1D                     	;# 
  1520  0F1E                     	;# 
  1521  0F1F                     	;# 
  1522  0F20                     	;# 
  1523  0F21                     	;# 
  1524  0F22                     	;# 
  1525  0F23                     	;# 
  1526  0F24                     	;# 
  1527  0F25                     	;# 
  1528  0F26                     	;# 
  1529  0F27                     	;# 
  1530  0F38                     	;# 
  1531  0F39                     	;# 
  1532  0F3A                     	;# 
  1533  0F3B                     	;# 
  1534  0F3C                     	;# 
  1535  0F3D                     	;# 
  1536  0F3E                     	;# 
  1537  0F3F                     	;# 
  1538  0F40                     	;# 
  1539  0F41                     	;# 
  1540  0F43                     	;# 
  1541  0F44                     	;# 
  1542  0F45                     	;# 
  1543  0F46                     	;# 
  1544  0F47                     	;# 
  1545  0F48                     	;# 
  1546  0F49                     	;# 
  1547  0F4A                     	;# 
  1548  0F4B                     	;# 
  1549  0F4C                     	;# 
  1550  0F4E                     	;# 
  1551  0F4F                     	;# 
  1552  0F50                     	;# 
  1553  0F51                     	;# 
  1554  0F52                     	;# 
  1555  0F53                     	;# 
  1556  0F54                     	;# 
  1557  0F55                     	;# 
  1558  0F56                     	;# 
  1559  0F57                     	;# 
  1560  0F65                     	;# 
  1561  0F68                     	;# 
  1562  0F69                     	;# 
  1563  0F6A                     	;# 
  1564  0F6B                     	;# 
  1565  0FE4                     	;# 
  1566  0FE5                     	;# 
  1567  0FE6                     	;# 
  1568  0FE7                     	;# 
  1569  0FE8                     	;# 
  1570  0FE9                     	;# 
  1571  0FEA                     	;# 
  1572  0FEB                     	;# 
  1573  0FED                     	;# 
  1574  0FEE                     	;# 
  1575  0FEF                     	;# 
  1576  0000                     	;# 
  1577  0001                     	;# 
  1578  0002                     	;# 
  1579  0003                     	;# 
  1580  0004                     	;# 
  1581  0005                     	;# 
  1582  0006                     	;# 
  1583  0007                     	;# 
  1584  0008                     	;# 
  1585  0009                     	;# 
  1586  000A                     	;# 
  1587  000B                     	;# 
  1588  000C                     	;# 
  1589  000D                     	;# 
  1590  000E                     	;# 
  1591  0010                     	;# 
  1592  0011                     	;# 
  1593  0012                     	;# 
  1594  0013                     	;# 
  1595  0016                     	;# 
  1596  0017                     	;# 
  1597  0018                     	;# 
  1598  001C                     	;# 
  1599  001C                     	;# 
  1600  001D                     	;# 
  1601  001D                     	;# 
  1602  001E                     	;# 
  1603  001F                     	;# 
  1604  008C                     	;# 
  1605  008C                     	;# 
  1606  008D                     	;# 
  1607  008E                     	;# 
  1608  008E                     	;# 
  1609  008F                     	;# 
  1610  0090                     	;# 
  1611  0090                     	;# 
  1612  0091                     	;# 
  1613  0093                     	;# 
  1614  0094                     	;# 
  1615  0095                     	;# 
  1616  0096                     	;# 
  1617  0097                     	;# 
  1618  0098                     	;# 
  1619  0099                     	;# 
  1620  009A                     	;# 
  1621  009B                     	;# 
  1622  009C                     	;# 
  1623  009D                     	;# 
  1624  009E                     	;# 
  1625  010C                     	;# 
  1626  010D                     	;# 
  1627  010E                     	;# 
  1628  010E                     	;# 
  1629  010F                     	;# 
  1630  0110                     	;# 
  1631  0110                     	;# 
  1632  0111                     	;# 
  1633  0112                     	;# 
  1634  0112                     	;# 
  1635  0113                     	;# 
  1636  0114                     	;# 
  1637  0114                     	;# 
  1638  0115                     	;# 
  1639  0116                     	;# 
  1640  0116                     	;# 
  1641  0117                     	;# 
  1642  0119                     	;# 
  1643  0119                     	;# 
  1644  0119                     	;# 
  1645  011A                     	;# 
  1646  011A                     	;# 
  1647  011A                     	;# 
  1648  011B                     	;# 
  1649  011B                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011C                     	;# 
  1654  011C                     	;# 
  1655  011C                     	;# 
  1656  011D                     	;# 
  1657  011D                     	;# 
  1658  011D                     	;# 
  1659  011E                     	;# 
  1660  011E                     	;# 
  1661  011E                     	;# 
  1662  011F                     	;# 
  1663  011F                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  018C                     	;# 
  1668  018D                     	;# 
  1669  018E                     	;# 
  1670  018F                     	;# 
  1671  0190                     	;# 
  1672  0191                     	;# 
  1673  0192                     	;# 
  1674  0196                     	;# 
  1675  0197                     	;# 
  1676  0198                     	;# 
  1677  0199                     	;# 
  1678  019A                     	;# 
  1679  019B                     	;# 
  1680  019C                     	;# 
  1681  020C                     	;# 
  1682  020D                     	;# 
  1683  020E                     	;# 
  1684  020F                     	;# 
  1685  020F                     	;# 
  1686  0210                     	;# 
  1687  0210                     	;# 
  1688  0211                     	;# 
  1689  0211                     	;# 
  1690  0212                     	;# 
  1691  0213                     	;# 
  1692  0214                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0216                     	;# 
  1696  0216                     	;# 
  1697  0217                     	;# 
  1698  0217                     	;# 
  1699  0218                     	;# 
  1700  0219                     	;# 
  1701  021A                     	;# 
  1702  021B                     	;# 
  1703  021B                     	;# 
  1704  021C                     	;# 
  1705  021C                     	;# 
  1706  021D                     	;# 
  1707  021D                     	;# 
  1708  021E                     	;# 
  1709  021F                     	;# 
  1710  028C                     	;# 
  1711  028C                     	;# 
  1712  028D                     	;# 
  1713  028D                     	;# 
  1714  028E                     	;# 
  1715  028F                     	;# 
  1716  0290                     	;# 
  1717  0290                     	;# 
  1718  0291                     	;# 
  1719  0292                     	;# 
  1720  0292                     	;# 
  1721  0293                     	;# 
  1722  0293                     	;# 
  1723  0294                     	;# 
  1724  0295                     	;# 
  1725  0296                     	;# 
  1726  0296                     	;# 
  1727  0297                     	;# 
  1728  0298                     	;# 
  1729  0298                     	;# 
  1730  0299                     	;# 
  1731  0299                     	;# 
  1732  029A                     	;# 
  1733  029B                     	;# 
  1734  029C                     	;# 
  1735  029C                     	;# 
  1736  029D                     	;# 
  1737  030C                     	;# 
  1738  030C                     	;# 
  1739  030D                     	;# 
  1740  030E                     	;# 
  1741  030F                     	;# 
  1742  0310                     	;# 
  1743  0310                     	;# 
  1744  0311                     	;# 
  1745  0312                     	;# 
  1746  0313                     	;# 
  1747  0314                     	;# 
  1748  0314                     	;# 
  1749  0315                     	;# 
  1750  0316                     	;# 
  1751  0317                     	;# 
  1752  0318                     	;# 
  1753  0318                     	;# 
  1754  0319                     	;# 
  1755  031A                     	;# 
  1756  031B                     	;# 
  1757  031C                     	;# 
  1758  031C                     	;# 
  1759  031D                     	;# 
  1760  031E                     	;# 
  1761  031F                     	;# 
  1762  038C                     	;# 
  1763  038D                     	;# 
  1764  038E                     	;# 
  1765  0390                     	;# 
  1766  0391                     	;# 
  1767  0392                     	;# 
  1768  040C                     	;# 
  1769  040D                     	;# 
  1770  040E                     	;# 
  1771  040F                     	;# 
  1772  0410                     	;# 
  1773  0411                     	;# 
  1774  0416                     	;# 
  1775  0416                     	;# 
  1776  0417                     	;# 
  1777  0418                     	;# 
  1778  0418                     	;# 
  1779  0419                     	;# 
  1780  041A                     	;# 
  1781  041A                     	;# 
  1782  041B                     	;# 
  1783  041C                     	;# 
  1784  041C                     	;# 
  1785  041D                     	;# 
  1786  041E                     	;# 
  1787  041F                     	;# 
  1788  048C                     	;# 
  1789  048C                     	;# 
  1790  048D                     	;# 
  1791  048E                     	;# 
  1792  048F                     	;# 
  1793  048F                     	;# 
  1794  0490                     	;# 
  1795  0491                     	;# 
  1796  0492                     	;# 
  1797  0492                     	;# 
  1798  0493                     	;# 
  1799  0494                     	;# 
  1800  0495                     	;# 
  1801  0495                     	;# 
  1802  0496                     	;# 
  1803  0497                     	;# 
  1804  0498                     	;# 
  1805  0499                     	;# 
  1806  049A                     	;# 
  1807  049B                     	;# 
  1808  049C                     	;# 
  1809  049D                     	;# 
  1810  050C                     	;# 
  1811  050C                     	;# 
  1812  050D                     	;# 
  1813  050E                     	;# 
  1814  050F                     	;# 
  1815  050F                     	;# 
  1816  0510                     	;# 
  1817  0511                     	;# 
  1818  0512                     	;# 
  1819  0512                     	;# 
  1820  0513                     	;# 
  1821  0514                     	;# 
  1822  0515                     	;# 
  1823  0515                     	;# 
  1824  0516                     	;# 
  1825  0517                     	;# 
  1826  0518                     	;# 
  1827  0519                     	;# 
  1828  051A                     	;# 
  1829  051B                     	;# 
  1830  051C                     	;# 
  1831  051D                     	;# 
  1832  058C                     	;# 
  1833  058C                     	;# 
  1834  058D                     	;# 
  1835  058E                     	;# 
  1836  058F                     	;# 
  1837  058F                     	;# 
  1838  0590                     	;# 
  1839  0591                     	;# 
  1840  0592                     	;# 
  1841  0593                     	;# 
  1842  060C                     	;# 
  1843  060D                     	;# 
  1844  060E                     	;# 
  1845  060F                     	;# 
  1846  0610                     	;# 
  1847  0611                     	;# 
  1848  0612                     	;# 
  1849  0613                     	;# 
  1850  0614                     	;# 
  1851  0616                     	;# 
  1852  0617                     	;# 
  1853  0618                     	;# 
  1854  0619                     	;# 
  1855  061A                     	;# 
  1856  061B                     	;# 
  1857  061C                     	;# 
  1858  061D                     	;# 
  1859  061E                     	;# 
  1860  068C                     	;# 
  1861  068D                     	;# 
  1862  068E                     	;# 
  1863  068F                     	;# 
  1864  0690                     	;# 
  1865  0691                     	;# 
  1866  0692                     	;# 
  1867  0693                     	;# 
  1868  0694                     	;# 
  1869  070C                     	;# 
  1870  070D                     	;# 
  1871  070E                     	;# 
  1872  070F                     	;# 
  1873  0710                     	;# 
  1874  0711                     	;# 
  1875  0712                     	;# 
  1876  0713                     	;# 
  1877  0714                     	;# 
  1878  0716                     	;# 
  1879  0717                     	;# 
  1880  0718                     	;# 
  1881  0719                     	;# 
  1882  071A                     	;# 
  1883  071B                     	;# 
  1884  071C                     	;# 
  1885  071D                     	;# 
  1886  071E                     	;# 
  1887  0796                     	;# 
  1888  0797                     	;# 
  1889  0798                     	;# 
  1890  0799                     	;# 
  1891  079A                     	;# 
  1892  079B                     	;# 
  1893  080C                     	;# 
  1894  080D                     	;# 
  1895  080E                     	;# 
  1896  080F                     	;# 
  1897  0810                     	;# 
  1898  0811                     	;# 
  1899  0812                     	;# 
  1900  0813                     	;# 
  1901  0814                     	;# 
  1902  081A                     	;# 
  1903  081B                     	;# 
  1904  081C                     	;# 
  1905  081D                     	;# 
  1906  081E                     	;# 
  1907  081F                     	;# 
  1908  088C                     	;# 
  1909  088D                     	;# 
  1910  088E                     	;# 
  1911  088F                     	;# 
  1912  0890                     	;# 
  1913  0891                     	;# 
  1914  0892                     	;# 
  1915  0893                     	;# 
  1916  0895                     	;# 
  1917  0896                     	;# 
  1918  0897                     	;# 
  1919  0898                     	;# 
  1920  0899                     	;# 
  1921  089A                     	;# 
  1922  089B                     	;# 
  1923  090C                     	;# 
  1924  090E                     	;# 
  1925  090F                     	;# 
  1926  091F                     	;# 
  1927  091F                     	;# 
  1928  098F                     	;# 
  1929  098F                     	;# 
  1930  0990                     	;# 
  1931  0991                     	;# 
  1932  0992                     	;# 
  1933  0993                     	;# 
  1934  0994                     	;# 
  1935  0995                     	;# 
  1936  0996                     	;# 
  1937  0997                     	;# 
  1938  0E0F                     	;# 
  1939  0E10                     	;# 
  1940  0E11                     	;# 
  1941  0E12                     	;# 
  1942  0E13                     	;# 
  1943  0E14                     	;# 
  1944  0E15                     	;# 
  1945  0E16                     	;# 
  1946  0E17                     	;# 
  1947  0E18                     	;# 
  1948  0E19                     	;# 
  1949  0E1A                     	;# 
  1950  0E1B                     	;# 
  1951  0E1C                     	;# 
  1952  0E1D                     	;# 
  1953  0E1E                     	;# 
  1954  0E1F                     	;# 
  1955  0E20                     	;# 
  1956  0E21                     	;# 
  1957  0E22                     	;# 
  1958  0E23                     	;# 
  1959  0E24                     	;# 
  1960  0E25                     	;# 
  1961  0E26                     	;# 
  1962  0E27                     	;# 
  1963  0E28                     	;# 
  1964  0E29                     	;# 
  1965  0E2A                     	;# 
  1966  0E2B                     	;# 
  1967  0E2C                     	;# 
  1968  0E2D                     	;# 
  1969  0E2E                     	;# 
  1970  0E2F                     	;# 
  1971  0E30                     	;# 
  1972  0E31                     	;# 
  1973  0E32                     	;# 
  1974  0E33                     	;# 
  1975  0E34                     	;# 
  1976  0E35                     	;# 
  1977  0E36                     	;# 
  1978  0E37                     	;# 
  1979  0E8F                     	;# 
  1980  0E90                     	;# 
  1981  0E91                     	;# 
  1982  0E92                     	;# 
  1983  0E93                     	;# 
  1984  0E94                     	;# 
  1985  0E95                     	;# 
  1986  0E96                     	;# 
  1987  0E97                     	;# 
  1988  0E9C                     	;# 
  1989  0E9D                     	;# 
  1990  0E9E                     	;# 
  1991  0EA1                     	;# 
  1992  0EA2                     	;# 
  1993  0EA3                     	;# 
  1994  0EA4                     	;# 
  1995  0EA5                     	;# 
  1996  0EA9                     	;# 
  1997  0EAA                     	;# 
  1998  0EAB                     	;# 
  1999  0EAC                     	;# 
  2000  0EB1                     	;# 
  2001  0EB2                     	;# 
  2002  0EB3                     	;# 
  2003  0EB8                     	;# 
  2004  0EB9                     	;# 
  2005  0EBA                     	;# 
  2006  0EBB                     	;# 
  2007  0EBC                     	;# 
  2008  0EBD                     	;# 
  2009  0EBE                     	;# 
  2010  0EC3                     	;# 
  2011  0EC5                     	;# 
  2012  0EC6                     	;# 
  2013  0EC7                     	;# 
  2014  0EC8                     	;# 
  2015  0EC9                     	;# 
  2016  0ECA                     	;# 
  2017  0ECB                     	;# 
  2018  0ECC                     	;# 
  2019  0F10                     	;# 
  2020  0F11                     	;# 
  2021  0F12                     	;# 
  2022  0F13                     	;# 
  2023  0F14                     	;# 
  2024  0F15                     	;# 
  2025  0F16                     	;# 
  2026  0F17                     	;# 
  2027  0F18                     	;# 
  2028  0F19                     	;# 
  2029  0F1A                     	;# 
  2030  0F1B                     	;# 
  2031  0F1C                     	;# 
  2032  0F1D                     	;# 
  2033  0F1E                     	;# 
  2034  0F1F                     	;# 
  2035  0F20                     	;# 
  2036  0F21                     	;# 
  2037  0F22                     	;# 
  2038  0F23                     	;# 
  2039  0F24                     	;# 
  2040  0F25                     	;# 
  2041  0F26                     	;# 
  2042  0F27                     	;# 
  2043  0F38                     	;# 
  2044  0F39                     	;# 
  2045  0F3A                     	;# 
  2046  0F3B                     	;# 
  2047  0F3C                     	;# 
  2048  0F3D                     	;# 
  2049  0F3E                     	;# 
  2050  0F3F                     	;# 
  2051  0F40                     	;# 
  2052  0F41                     	;# 
  2053  0F43                     	;# 
  2054  0F44                     	;# 
  2055  0F45                     	;# 
  2056  0F46                     	;# 
  2057  0F47                     	;# 
  2058  0F48                     	;# 
  2059  0F49                     	;# 
  2060  0F4A                     	;# 
  2061  0F4B                     	;# 
  2062  0F4C                     	;# 
  2063  0F4E                     	;# 
  2064  0F4F                     	;# 
  2065  0F50                     	;# 
  2066  0F51                     	;# 
  2067  0F52                     	;# 
  2068  0F53                     	;# 
  2069  0F54                     	;# 
  2070  0F55                     	;# 
  2071  0F56                     	;# 
  2072  0F57                     	;# 
  2073  0F65                     	;# 
  2074  0F68                     	;# 
  2075  0F69                     	;# 
  2076  0F6A                     	;# 
  2077  0F6B                     	;# 
  2078  0FE4                     	;# 
  2079  0FE5                     	;# 
  2080  0FE6                     	;# 
  2081  0FE7                     	;# 
  2082  0FE8                     	;# 
  2083  0FE9                     	;# 
  2084  0FEA                     	;# 
  2085  0FEB                     	;# 
  2086  0FED                     	;# 
  2087  0FEE                     	;# 
  2088  0FEF                     	;# 
  2089  0000                     	;# 
  2090  0001                     	;# 
  2091  0002                     	;# 
  2092  0003                     	;# 
  2093  0004                     	;# 
  2094  0005                     	;# 
  2095  0006                     	;# 
  2096  0007                     	;# 
  2097  0008                     	;# 
  2098  0009                     	;# 
  2099  000A                     	;# 
  2100  000B                     	;# 
  2101  000C                     	;# 
  2102  000D                     	;# 
  2103  000E                     	;# 
  2104  0010                     	;# 
  2105  0011                     	;# 
  2106  0012                     	;# 
  2107  0013                     	;# 
  2108  0016                     	;# 
  2109  0017                     	;# 
  2110  0018                     	;# 
  2111  001C                     	;# 
  2112  001C                     	;# 
  2113  001D                     	;# 
  2114  001D                     	;# 
  2115  001E                     	;# 
  2116  001F                     	;# 
  2117  008C                     	;# 
  2118  008C                     	;# 
  2119  008D                     	;# 
  2120  008E                     	;# 
  2121  008E                     	;# 
  2122  008F                     	;# 
  2123  0090                     	;# 
  2124  0090                     	;# 
  2125  0091                     	;# 
  2126  0093                     	;# 
  2127  0094                     	;# 
  2128  0095                     	;# 
  2129  0096                     	;# 
  2130  0097                     	;# 
  2131  0098                     	;# 
  2132  0099                     	;# 
  2133  009A                     	;# 
  2134  009B                     	;# 
  2135  009C                     	;# 
  2136  009D                     	;# 
  2137  009E                     	;# 
  2138  010C                     	;# 
  2139  010D                     	;# 
  2140  010E                     	;# 
  2141  010E                     	;# 
  2142  010F                     	;# 
  2143  0110                     	;# 
  2144  0110                     	;# 
  2145  0111                     	;# 
  2146  0112                     	;# 
  2147  0112                     	;# 
  2148  0113                     	;# 
  2149  0114                     	;# 
  2150  0114                     	;# 
  2151  0115                     	;# 
  2152  0116                     	;# 
  2153  0116                     	;# 
  2154  0117                     	;# 
  2155  0119                     	;# 
  2156  0119                     	;# 
  2157  0119                     	;# 
  2158  011A                     	;# 
  2159  011A                     	;# 
  2160  011A                     	;# 
  2161  011B                     	;# 
  2162  011B                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011C                     	;# 
  2167  011C                     	;# 
  2168  011C                     	;# 
  2169  011D                     	;# 
  2170  011D                     	;# 
  2171  011D                     	;# 
  2172  011E                     	;# 
  2173  011E                     	;# 
  2174  011E                     	;# 
  2175  011F                     	;# 
  2176  011F                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  018C                     	;# 
  2181  018D                     	;# 
  2182  018E                     	;# 
  2183  018F                     	;# 
  2184  0190                     	;# 
  2185  0191                     	;# 
  2186  0192                     	;# 
  2187  0196                     	;# 
  2188  0197                     	;# 
  2189  0198                     	;# 
  2190  0199                     	;# 
  2191  019A                     	;# 
  2192  019B                     	;# 
  2193  019C                     	;# 
  2194  020C                     	;# 
  2195  020D                     	;# 
  2196  020E                     	;# 
  2197  020F                     	;# 
  2198  020F                     	;# 
  2199  0210                     	;# 
  2200  0210                     	;# 
  2201  0211                     	;# 
  2202  0211                     	;# 
  2203  0212                     	;# 
  2204  0213                     	;# 
  2205  0214                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  0218                     	;# 
  2213  0219                     	;# 
  2214  021A                     	;# 
  2215  021B                     	;# 
  2216  021B                     	;# 
  2217  021C                     	;# 
  2218  021C                     	;# 
  2219  021D                     	;# 
  2220  021D                     	;# 
  2221  021E                     	;# 
  2222  021F                     	;# 
  2223  028C                     	;# 
  2224  028C                     	;# 
  2225  028D                     	;# 
  2226  028D                     	;# 
  2227  028E                     	;# 
  2228  028F                     	;# 
  2229  0290                     	;# 
  2230  0290                     	;# 
  2231  0291                     	;# 
  2232  0292                     	;# 
  2233  0292                     	;# 
  2234  0293                     	;# 
  2235  0293                     	;# 
  2236  0294                     	;# 
  2237  0295                     	;# 
  2238  0296                     	;# 
  2239  0296                     	;# 
  2240  0297                     	;# 
  2241  0298                     	;# 
  2242  0298                     	;# 
  2243  0299                     	;# 
  2244  0299                     	;# 
  2245  029A                     	;# 
  2246  029B                     	;# 
  2247  029C                     	;# 
  2248  029C                     	;# 
  2249  029D                     	;# 
  2250  030C                     	;# 
  2251  030C                     	;# 
  2252  030D                     	;# 
  2253  030E                     	;# 
  2254  030F                     	;# 
  2255  0310                     	;# 
  2256  0310                     	;# 
  2257  0311                     	;# 
  2258  0312                     	;# 
  2259  0313                     	;# 
  2260  0314                     	;# 
  2261  0314                     	;# 
  2262  0315                     	;# 
  2263  0316                     	;# 
  2264  0317                     	;# 
  2265  0318                     	;# 
  2266  0318                     	;# 
  2267  0319                     	;# 
  2268  031A                     	;# 
  2269  031B                     	;# 
  2270  031C                     	;# 
  2271  031C                     	;# 
  2272  031D                     	;# 
  2273  031E                     	;# 
  2274  031F                     	;# 
  2275  038C                     	;# 
  2276  038D                     	;# 
  2277  038E                     	;# 
  2278  0390                     	;# 
  2279  0391                     	;# 
  2280  0392                     	;# 
  2281  040C                     	;# 
  2282  040D                     	;# 
  2283  040E                     	;# 
  2284  040F                     	;# 
  2285  0410                     	;# 
  2286  0411                     	;# 
  2287  0416                     	;# 
  2288  0416                     	;# 
  2289  0417                     	;# 
  2290  0418                     	;# 
  2291  0418                     	;# 
  2292  0419                     	;# 
  2293  041A                     	;# 
  2294  041A                     	;# 
  2295  041B                     	;# 
  2296  041C                     	;# 
  2297  041C                     	;# 
  2298  041D                     	;# 
  2299  041E                     	;# 
  2300  041F                     	;# 
  2301  048C                     	;# 
  2302  048C                     	;# 
  2303  048D                     	;# 
  2304  048E                     	;# 
  2305  048F                     	;# 
  2306  048F                     	;# 
  2307  0490                     	;# 
  2308  0491                     	;# 
  2309  0492                     	;# 
  2310  0492                     	;# 
  2311  0493                     	;# 
  2312  0494                     	;# 
  2313  0495                     	;# 
  2314  0495                     	;# 
  2315  0496                     	;# 
  2316  0497                     	;# 
  2317  0498                     	;# 
  2318  0499                     	;# 
  2319  049A                     	;# 
  2320  049B                     	;# 
  2321  049C                     	;# 
  2322  049D                     	;# 
  2323  050C                     	;# 
  2324  050C                     	;# 
  2325  050D                     	;# 
  2326  050E                     	;# 
  2327  050F                     	;# 
  2328  050F                     	;# 
  2329  0510                     	;# 
  2330  0511                     	;# 
  2331  0512                     	;# 
  2332  0512                     	;# 
  2333  0513                     	;# 
  2334  0514                     	;# 
  2335  0515                     	;# 
  2336  0515                     	;# 
  2337  0516                     	;# 
  2338  0517                     	;# 
  2339  0518                     	;# 
  2340  0519                     	;# 
  2341  051A                     	;# 
  2342  051B                     	;# 
  2343  051C                     	;# 
  2344  051D                     	;# 
  2345  058C                     	;# 
  2346  058C                     	;# 
  2347  058D                     	;# 
  2348  058E                     	;# 
  2349  058F                     	;# 
  2350  058F                     	;# 
  2351  0590                     	;# 
  2352  0591                     	;# 
  2353  0592                     	;# 
  2354  0593                     	;# 
  2355  060C                     	;# 
  2356  060D                     	;# 
  2357  060E                     	;# 
  2358  060F                     	;# 
  2359  0610                     	;# 
  2360  0611                     	;# 
  2361  0612                     	;# 
  2362  0613                     	;# 
  2363  0614                     	;# 
  2364  0616                     	;# 
  2365  0617                     	;# 
  2366  0618                     	;# 
  2367  0619                     	;# 
  2368  061A                     	;# 
  2369  061B                     	;# 
  2370  061C                     	;# 
  2371  061D                     	;# 
  2372  061E                     	;# 
  2373  068C                     	;# 
  2374  068D                     	;# 
  2375  068E                     	;# 
  2376  068F                     	;# 
  2377  0690                     	;# 
  2378  0691                     	;# 
  2379  0692                     	;# 
  2380  0693                     	;# 
  2381  0694                     	;# 
  2382  070C                     	;# 
  2383  070D                     	;# 
  2384  070E                     	;# 
  2385  070F                     	;# 
  2386  0710                     	;# 
  2387  0711                     	;# 
  2388  0712                     	;# 
  2389  0713                     	;# 
  2390  0714                     	;# 
  2391  0716                     	;# 
  2392  0717                     	;# 
  2393  0718                     	;# 
  2394  0719                     	;# 
  2395  071A                     	;# 
  2396  071B                     	;# 
  2397  071C                     	;# 
  2398  071D                     	;# 
  2399  071E                     	;# 
  2400  0796                     	;# 
  2401  0797                     	;# 
  2402  0798                     	;# 
  2403  0799                     	;# 
  2404  079A                     	;# 
  2405  079B                     	;# 
  2406  080C                     	;# 
  2407  080D                     	;# 
  2408  080E                     	;# 
  2409  080F                     	;# 
  2410  0810                     	;# 
  2411  0811                     	;# 
  2412  0812                     	;# 
  2413  0813                     	;# 
  2414  0814                     	;# 
  2415  081A                     	;# 
  2416  081B                     	;# 
  2417  081C                     	;# 
  2418  081D                     	;# 
  2419  081E                     	;# 
  2420  081F                     	;# 
  2421  088C                     	;# 
  2422  088D                     	;# 
  2423  088E                     	;# 
  2424  088F                     	;# 
  2425  0890                     	;# 
  2426  0891                     	;# 
  2427  0892                     	;# 
  2428  0893                     	;# 
  2429  0895                     	;# 
  2430  0896                     	;# 
  2431  0897                     	;# 
  2432  0898                     	;# 
  2433  0899                     	;# 
  2434  089A                     	;# 
  2435  089B                     	;# 
  2436  090C                     	;# 
  2437  090E                     	;# 
  2438  090F                     	;# 
  2439  091F                     	;# 
  2440  091F                     	;# 
  2441  098F                     	;# 
  2442  098F                     	;# 
  2443  0990                     	;# 
  2444  0991                     	;# 
  2445  0992                     	;# 
  2446  0993                     	;# 
  2447  0994                     	;# 
  2448  0995                     	;# 
  2449  0996                     	;# 
  2450  0997                     	;# 
  2451  0E0F                     	;# 
  2452  0E10                     	;# 
  2453  0E11                     	;# 
  2454  0E12                     	;# 
  2455  0E13                     	;# 
  2456  0E14                     	;# 
  2457  0E15                     	;# 
  2458  0E16                     	;# 
  2459  0E17                     	;# 
  2460  0E18                     	;# 
  2461  0E19                     	;# 
  2462  0E1A                     	;# 
  2463  0E1B                     	;# 
  2464  0E1C                     	;# 
  2465  0E1D                     	;# 
  2466  0E1E                     	;# 
  2467  0E1F                     	;# 
  2468  0E20                     	;# 
  2469  0E21                     	;# 
  2470  0E22                     	;# 
  2471  0E23                     	;# 
  2472  0E24                     	;# 
  2473  0E25                     	;# 
  2474  0E26                     	;# 
  2475  0E27                     	;# 
  2476  0E28                     	;# 
  2477  0E29                     	;# 
  2478  0E2A                     	;# 
  2479  0E2B                     	;# 
  2480  0E2C                     	;# 
  2481  0E2D                     	;# 
  2482  0E2E                     	;# 
  2483  0E2F                     	;# 
  2484  0E30                     	;# 
  2485  0E31                     	;# 
  2486  0E32                     	;# 
  2487  0E33                     	;# 
  2488  0E34                     	;# 
  2489  0E35                     	;# 
  2490  0E36                     	;# 
  2491  0E37                     	;# 
  2492  0E8F                     	;# 
  2493  0E90                     	;# 
  2494  0E91                     	;# 
  2495  0E92                     	;# 
  2496  0E93                     	;# 
  2497  0E94                     	;# 
  2498  0E95                     	;# 
  2499  0E96                     	;# 
  2500  0E97                     	;# 
  2501  0E9C                     	;# 
  2502  0E9D                     	;# 
  2503  0E9E                     	;# 
  2504  0EA1                     	;# 
  2505  0EA2                     	;# 
  2506  0EA3                     	;# 
  2507  0EA4                     	;# 
  2508  0EA5                     	;# 
  2509  0EA9                     	;# 
  2510  0EAA                     	;# 
  2511  0EAB                     	;# 
  2512  0EAC                     	;# 
  2513  0EB1                     	;# 
  2514  0EB2                     	;# 
  2515  0EB3                     	;# 
  2516  0EB8                     	;# 
  2517  0EB9                     	;# 
  2518  0EBA                     	;# 
  2519  0EBB                     	;# 
  2520  0EBC                     	;# 
  2521  0EBD                     	;# 
  2522  0EBE                     	;# 
  2523  0EC3                     	;# 
  2524  0EC5                     	;# 
  2525  0EC6                     	;# 
  2526  0EC7                     	;# 
  2527  0EC8                     	;# 
  2528  0EC9                     	;# 
  2529  0ECA                     	;# 
  2530  0ECB                     	;# 
  2531  0ECC                     	;# 
  2532  0F10                     	;# 
  2533  0F11                     	;# 
  2534  0F12                     	;# 
  2535  0F13                     	;# 
  2536  0F14                     	;# 
  2537  0F15                     	;# 
  2538  0F16                     	;# 
  2539  0F17                     	;# 
  2540  0F18                     	;# 
  2541  0F19                     	;# 
  2542  0F1A                     	;# 
  2543  0F1B                     	;# 
  2544  0F1C                     	;# 
  2545  0F1D                     	;# 
  2546  0F1E                     	;# 
  2547  0F1F                     	;# 
  2548  0F20                     	;# 
  2549  0F21                     	;# 
  2550  0F22                     	;# 
  2551  0F23                     	;# 
  2552  0F24                     	;# 
  2553  0F25                     	;# 
  2554  0F26                     	;# 
  2555  0F27                     	;# 
  2556  0F38                     	;# 
  2557  0F39                     	;# 
  2558  0F3A                     	;# 
  2559  0F3B                     	;# 
  2560  0F3C                     	;# 
  2561  0F3D                     	;# 
  2562  0F3E                     	;# 
  2563  0F3F                     	;# 
  2564  0F40                     	;# 
  2565  0F41                     	;# 
  2566  0F43                     	;# 
  2567  0F44                     	;# 
  2568  0F45                     	;# 
  2569  0F46                     	;# 
  2570  0F47                     	;# 
  2571  0F48                     	;# 
  2572  0F49                     	;# 
  2573  0F4A                     	;# 
  2574  0F4B                     	;# 
  2575  0F4C                     	;# 
  2576  0F4E                     	;# 
  2577  0F4F                     	;# 
  2578  0F50                     	;# 
  2579  0F51                     	;# 
  2580  0F52                     	;# 
  2581  0F53                     	;# 
  2582  0F54                     	;# 
  2583  0F55                     	;# 
  2584  0F56                     	;# 
  2585  0F57                     	;# 
  2586  0F65                     	;# 
  2587  0F68                     	;# 
  2588  0F69                     	;# 
  2589  0F6A                     	;# 
  2590  0F6B                     	;# 
  2591  0FE4                     	;# 
  2592  0FE5                     	;# 
  2593  0FE6                     	;# 
  2594  0FE7                     	;# 
  2595  0FE8                     	;# 
  2596  0FE9                     	;# 
  2597  0FEA                     	;# 
  2598  0FEB                     	;# 
  2599  0FED                     	;# 
  2600  0FEE                     	;# 
  2601  0FEF                     	;# 
  2602  0000                     	;# 
  2603  0001                     	;# 
  2604  0002                     	;# 
  2605  0003                     	;# 
  2606  0004                     	;# 
  2607  0005                     	;# 
  2608  0006                     	;# 
  2609  0007                     	;# 
  2610  0008                     	;# 
  2611  0009                     	;# 
  2612  000A                     	;# 
  2613  000B                     	;# 
  2614  000C                     	;# 
  2615  000D                     	;# 
  2616  000E                     	;# 
  2617  0010                     	;# 
  2618  0011                     	;# 
  2619  0012                     	;# 
  2620  0013                     	;# 
  2621  0016                     	;# 
  2622  0017                     	;# 
  2623  0018                     	;# 
  2624  001C                     	;# 
  2625  001C                     	;# 
  2626  001D                     	;# 
  2627  001D                     	;# 
  2628  001E                     	;# 
  2629  001F                     	;# 
  2630  008C                     	;# 
  2631  008C                     	;# 
  2632  008D                     	;# 
  2633  008E                     	;# 
  2634  008E                     	;# 
  2635  008F                     	;# 
  2636  0090                     	;# 
  2637  0090                     	;# 
  2638  0091                     	;# 
  2639  0093                     	;# 
  2640  0094                     	;# 
  2641  0095                     	;# 
  2642  0096                     	;# 
  2643  0097                     	;# 
  2644  0098                     	;# 
  2645  0099                     	;# 
  2646  009A                     	;# 
  2647  009B                     	;# 
  2648  009C                     	;# 
  2649  009D                     	;# 
  2650  009E                     	;# 
  2651  010C                     	;# 
  2652  010D                     	;# 
  2653  010E                     	;# 
  2654  010E                     	;# 
  2655  010F                     	;# 
  2656  0110                     	;# 
  2657  0110                     	;# 
  2658  0111                     	;# 
  2659  0112                     	;# 
  2660  0112                     	;# 
  2661  0113                     	;# 
  2662  0114                     	;# 
  2663  0114                     	;# 
  2664  0115                     	;# 
  2665  0116                     	;# 
  2666  0116                     	;# 
  2667  0117                     	;# 
  2668  0119                     	;# 
  2669  0119                     	;# 
  2670  0119                     	;# 
  2671  011A                     	;# 
  2672  011A                     	;# 
  2673  011A                     	;# 
  2674  011B                     	;# 
  2675  011B                     	;# 
  2676  011B                     	;# 
  2677  011B                     	;# 
  2678  011B                     	;# 
  2679  011C                     	;# 
  2680  011C                     	;# 
  2681  011C                     	;# 
  2682  011D                     	;# 
  2683  011D                     	;# 
  2684  011D                     	;# 
  2685  011E                     	;# 
  2686  011E                     	;# 
  2687  011E                     	;# 
  2688  011F                     	;# 
  2689  011F                     	;# 
  2690  011F                     	;# 
  2691  011F                     	;# 
  2692  011F                     	;# 
  2693  018C                     	;# 
  2694  018D                     	;# 
  2695  018E                     	;# 
  2696  018F                     	;# 
  2697  0190                     	;# 
  2698  0191                     	;# 
  2699  0192                     	;# 
  2700  0196                     	;# 
  2701  0197                     	;# 
  2702  0198                     	;# 
  2703  0199                     	;# 
  2704  019A                     	;# 
  2705  019B                     	;# 
  2706  019C                     	;# 
  2707  020C                     	;# 
  2708  020D                     	;# 
  2709  020E                     	;# 
  2710  020F                     	;# 
  2711  020F                     	;# 
  2712  0210                     	;# 
  2713  0210                     	;# 
  2714  0211                     	;# 
  2715  0211                     	;# 
  2716  0212                     	;# 
  2717  0213                     	;# 
  2718  0214                     	;# 
  2719  0215                     	;# 
  2720  0215                     	;# 
  2721  0216                     	;# 
  2722  0216                     	;# 
  2723  0217                     	;# 
  2724  0217                     	;# 
  2725  0218                     	;# 
  2726  0219                     	;# 
  2727  021A                     	;# 
  2728  021B                     	;# 
  2729  021B                     	;# 
  2730  021C                     	;# 
  2731  021C                     	;# 
  2732  021D                     	;# 
  2733  021D                     	;# 
  2734  021E                     	;# 
  2735  021F                     	;# 
  2736  028C                     	;# 
  2737  028C                     	;# 
  2738  028D                     	;# 
  2739  028D                     	;# 
  2740  028E                     	;# 
  2741  028F                     	;# 
  2742  0290                     	;# 
  2743  0290                     	;# 
  2744  0291                     	;# 
  2745  0292                     	;# 
  2746  0292                     	;# 
  2747  0293                     	;# 
  2748  0293                     	;# 
  2749  0294                     	;# 
  2750  0295                     	;# 
  2751  0296                     	;# 
  2752  0296                     	;# 
  2753  0297                     	;# 
  2754  0298                     	;# 
  2755  0298                     	;# 
  2756  0299                     	;# 
  2757  0299                     	;# 
  2758  029A                     	;# 
  2759  029B                     	;# 
  2760  029C                     	;# 
  2761  029C                     	;# 
  2762  029D                     	;# 
  2763  030C                     	;# 
  2764  030C                     	;# 
  2765  030D                     	;# 
  2766  030E                     	;# 
  2767  030F                     	;# 
  2768  0310                     	;# 
  2769  0310                     	;# 
  2770  0311                     	;# 
  2771  0312                     	;# 
  2772  0313                     	;# 
  2773  0314                     	;# 
  2774  0314                     	;# 
  2775  0315                     	;# 
  2776  0316                     	;# 
  2777  0317                     	;# 
  2778  0318                     	;# 
  2779  0318                     	;# 
  2780  0319                     	;# 
  2781  031A                     	;# 
  2782  031B                     	;# 
  2783  031C                     	;# 
  2784  031C                     	;# 
  2785  031D                     	;# 
  2786  031E                     	;# 
  2787  031F                     	;# 
  2788  038C                     	;# 
  2789  038D                     	;# 
  2790  038E                     	;# 
  2791  0390                     	;# 
  2792  0391                     	;# 
  2793  0392                     	;# 
  2794  040C                     	;# 
  2795  040D                     	;# 
  2796  040E                     	;# 
  2797  040F                     	;# 
  2798  0410                     	;# 
  2799  0411                     	;# 
  2800  0416                     	;# 
  2801  0416                     	;# 
  2802  0417                     	;# 
  2803  0418                     	;# 
  2804  0418                     	;# 
  2805  0419                     	;# 
  2806  041A                     	;# 
  2807  041A                     	;# 
  2808  041B                     	;# 
  2809  041C                     	;# 
  2810  041C                     	;# 
  2811  041D                     	;# 
  2812  041E                     	;# 
  2813  041F                     	;# 
  2814  048C                     	;# 
  2815  048C                     	;# 
  2816  048D                     	;# 
  2817  048E                     	;# 
  2818  048F                     	;# 
  2819  048F                     	;# 
  2820  0490                     	;# 
  2821  0491                     	;# 
  2822  0492                     	;# 
  2823  0492                     	;# 
  2824  0493                     	;# 
  2825  0494                     	;# 
  2826  0495                     	;# 
  2827  0495                     	;# 
  2828  0496                     	;# 
  2829  0497                     	;# 
  2830  0498                     	;# 
  2831  0499                     	;# 
  2832  049A                     	;# 
  2833  049B                     	;# 
  2834  049C                     	;# 
  2835  049D                     	;# 
  2836  050C                     	;# 
  2837  050C                     	;# 
  2838  050D                     	;# 
  2839  050E                     	;# 
  2840  050F                     	;# 
  2841  050F                     	;# 
  2842  0510                     	;# 
  2843  0511                     	;# 
  2844  0512                     	;# 
  2845  0512                     	;# 
  2846  0513                     	;# 
  2847  0514                     	;# 
  2848  0515                     	;# 
  2849  0515                     	;# 
  2850  0516                     	;# 
  2851  0517                     	;# 
  2852  0518                     	;# 
  2853  0519                     	;# 
  2854  051A                     	;# 
  2855  051B                     	;# 
  2856  051C                     	;# 
  2857  051D                     	;# 
  2858  058C                     	;# 
  2859  058C                     	;# 
  2860  058D                     	;# 
  2861  058E                     	;# 
  2862  058F                     	;# 
  2863  058F                     	;# 
  2864  0590                     	;# 
  2865  0591                     	;# 
  2866  0592                     	;# 
  2867  0593                     	;# 
  2868  060C                     	;# 
  2869  060D                     	;# 
  2870  060E                     	;# 
  2871  060F                     	;# 
  2872  0610                     	;# 
  2873  0611                     	;# 
  2874  0612                     	;# 
  2875  0613                     	;# 
  2876  0614                     	;# 
  2877  0616                     	;# 
  2878  0617                     	;# 
  2879  0618                     	;# 
  2880  0619                     	;# 
  2881  061A                     	;# 
  2882  061B                     	;# 
  2883  061C                     	;# 
  2884  061D                     	;# 
  2885  061E                     	;# 
  2886  068C                     	;# 
  2887  068D                     	;# 
  2888  068E                     	;# 
  2889  068F                     	;# 
  2890  0690                     	;# 
  2891  0691                     	;# 
  2892  0692                     	;# 
  2893  0693                     	;# 
  2894  0694                     	;# 
  2895  070C                     	;# 
  2896  070D                     	;# 
  2897  070E                     	;# 
  2898  070F                     	;# 
  2899  0710                     	;# 
  2900  0711                     	;# 
  2901  0712                     	;# 
  2902  0713                     	;# 
  2903  0714                     	;# 
  2904  0716                     	;# 
  2905  0717                     	;# 
  2906  0718                     	;# 
  2907  0719                     	;# 
  2908  071A                     	;# 
  2909  071B                     	;# 
  2910  071C                     	;# 
  2911  071D                     	;# 
  2912  071E                     	;# 
  2913  0796                     	;# 
  2914  0797                     	;# 
  2915  0798                     	;# 
  2916  0799                     	;# 
  2917  079A                     	;# 
  2918  079B                     	;# 
  2919  080C                     	;# 
  2920  080D                     	;# 
  2921  080E                     	;# 
  2922  080F                     	;# 
  2923  0810                     	;# 
  2924  0811                     	;# 
  2925  0812                     	;# 
  2926  0813                     	;# 
  2927  0814                     	;# 
  2928  081A                     	;# 
  2929  081B                     	;# 
  2930  081C                     	;# 
  2931  081D                     	;# 
  2932  081E                     	;# 
  2933  081F                     	;# 
  2934  088C                     	;# 
  2935  088D                     	;# 
  2936  088E                     	;# 
  2937  088F                     	;# 
  2938  0890                     	;# 
  2939  0891                     	;# 
  2940  0892                     	;# 
  2941  0893                     	;# 
  2942  0895                     	;# 
  2943  0896                     	;# 
  2944  0897                     	;# 
  2945  0898                     	;# 
  2946  0899                     	;# 
  2947  089A                     	;# 
  2948  089B                     	;# 
  2949  090C                     	;# 
  2950  090E                     	;# 
  2951  090F                     	;# 
  2952  091F                     	;# 
  2953  091F                     	;# 
  2954  098F                     	;# 
  2955  098F                     	;# 
  2956  0990                     	;# 
  2957  0991                     	;# 
  2958  0992                     	;# 
  2959  0993                     	;# 
  2960  0994                     	;# 
  2961  0995                     	;# 
  2962  0996                     	;# 
  2963  0997                     	;# 
  2964  0E0F                     	;# 
  2965  0E10                     	;# 
  2966  0E11                     	;# 
  2967  0E12                     	;# 
  2968  0E13                     	;# 
  2969  0E14                     	;# 
  2970  0E15                     	;# 
  2971  0E16                     	;# 
  2972  0E17                     	;# 
  2973  0E18                     	;# 
  2974  0E19                     	;# 
  2975  0E1A                     	;# 
  2976  0E1B                     	;# 
  2977  0E1C                     	;# 
  2978  0E1D                     	;# 
  2979  0E1E                     	;# 
  2980  0E1F                     	;# 
  2981  0E20                     	;# 
  2982  0E21                     	;# 
  2983  0E22                     	;# 
  2984  0E23                     	;# 
  2985  0E24                     	;# 
  2986  0E25                     	;# 
  2987  0E26                     	;# 
  2988  0E27                     	;# 
  2989  0E28                     	;# 
  2990  0E29                     	;# 
  2991  0E2A                     	;# 
  2992  0E2B                     	;# 
  2993  0E2C                     	;# 
  2994  0E2D                     	;# 
  2995  0E2E                     	;# 
  2996  0E2F                     	;# 
  2997  0E30                     	;# 
  2998  0E31                     	;# 
  2999  0E32                     	;# 
  3000  0E33                     	;# 
  3001  0E34                     	;# 
  3002  0E35                     	;# 
  3003  0E36                     	;# 
  3004  0E37                     	;# 
  3005  0E8F                     	;# 
  3006  0E90                     	;# 
  3007  0E91                     	;# 
  3008  0E92                     	;# 
  3009  0E93                     	;# 
  3010  0E94                     	;# 
  3011  0E95                     	;# 
  3012  0E96                     	;# 
  3013  0E97                     	;# 
  3014  0E9C                     	;# 
  3015  0E9D                     	;# 
  3016  0E9E                     	;# 
  3017  0EA1                     	;# 
  3018  0EA2                     	;# 
  3019  0EA3                     	;# 
  3020  0EA4                     	;# 
  3021  0EA5                     	;# 
  3022  0EA9                     	;# 
  3023  0EAA                     	;# 
  3024  0EAB                     	;# 
  3025  0EAC                     	;# 
  3026  0EB1                     	;# 
  3027  0EB2                     	;# 
  3028  0EB3                     	;# 
  3029  0EB8                     	;# 
  3030  0EB9                     	;# 
  3031  0EBA                     	;# 
  3032  0EBB                     	;# 
  3033  0EBC                     	;# 
  3034  0EBD                     	;# 
  3035  0EBE                     	;# 
  3036  0EC3                     	;# 
  3037  0EC5                     	;# 
  3038  0EC6                     	;# 
  3039  0EC7                     	;# 
  3040  0EC8                     	;# 
  3041  0EC9                     	;# 
  3042  0ECA                     	;# 
  3043  0ECB                     	;# 
  3044  0ECC                     	;# 
  3045  0F10                     	;# 
  3046  0F11                     	;# 
  3047  0F12                     	;# 
  3048  0F13                     	;# 
  3049  0F14                     	;# 
  3050  0F15                     	;# 
  3051  0F16                     	;# 
  3052  0F17                     	;# 
  3053  0F18                     	;# 
  3054  0F19                     	;# 
  3055  0F1A                     	;# 
  3056  0F1B                     	;# 
  3057  0F1C                     	;# 
  3058  0F1D                     	;# 
  3059  0F1E                     	;# 
  3060  0F1F                     	;# 
  3061  0F20                     	;# 
  3062  0F21                     	;# 
  3063  0F22                     	;# 
  3064  0F23                     	;# 
  3065  0F24                     	;# 
  3066  0F25                     	;# 
  3067  0F26                     	;# 
  3068  0F27                     	;# 
  3069  0F38                     	;# 
  3070  0F39                     	;# 
  3071  0F3A                     	;# 
  3072  0F3B                     	;# 
  3073  0F3C                     	;# 
  3074  0F3D                     	;# 
  3075  0F3E                     	;# 
  3076  0F3F                     	;# 
  3077  0F40                     	;# 
  3078  0F41                     	;# 
  3079  0F43                     	;# 
  3080  0F44                     	;# 
  3081  0F45                     	;# 
  3082  0F46                     	;# 
  3083  0F47                     	;# 
  3084  0F48                     	;# 
  3085  0F49                     	;# 
  3086  0F4A                     	;# 
  3087  0F4B                     	;# 
  3088  0F4C                     	;# 
  3089  0F4E                     	;# 
  3090  0F4F                     	;# 
  3091  0F50                     	;# 
  3092  0F51                     	;# 
  3093  0F52                     	;# 
  3094  0F53                     	;# 
  3095  0F54                     	;# 
  3096  0F55                     	;# 
  3097  0F56                     	;# 
  3098  0F57                     	;# 
  3099  0F65                     	;# 
  3100  0F68                     	;# 
  3101  0F69                     	;# 
  3102  0F6A                     	;# 
  3103  0F6B                     	;# 
  3104  0FE4                     	;# 
  3105  0FE5                     	;# 
  3106  0FE6                     	;# 
  3107  0FE7                     	;# 
  3108  0FE8                     	;# 
  3109  0FE9                     	;# 
  3110  0FEA                     	;# 
  3111  0FEB                     	;# 
  3112  0FED                     	;# 
  3113  0FEE                     	;# 
  3114  0FEF                     	;# 
  3115  0000                     	;# 
  3116  0001                     	;# 
  3117  0002                     	;# 
  3118  0003                     	;# 
  3119  0004                     	;# 
  3120  0005                     	;# 
  3121  0006                     	;# 
  3122  0007                     	;# 
  3123  0008                     	;# 
  3124  0009                     	;# 
  3125  000A                     	;# 
  3126  000B                     	;# 
  3127  000C                     	;# 
  3128  000D                     	;# 
  3129  000E                     	;# 
  3130  0010                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0016                     	;# 
  3135  0017                     	;# 
  3136  0018                     	;# 
  3137  001C                     	;# 
  3138  001C                     	;# 
  3139  001D                     	;# 
  3140  001D                     	;# 
  3141  001E                     	;# 
  3142  001F                     	;# 
  3143  008C                     	;# 
  3144  008C                     	;# 
  3145  008D                     	;# 
  3146  008E                     	;# 
  3147  008E                     	;# 
  3148  008F                     	;# 
  3149  0090                     	;# 
  3150  0090                     	;# 
  3151  0091                     	;# 
  3152  0093                     	;# 
  3153  0094                     	;# 
  3154  0095                     	;# 
  3155  0096                     	;# 
  3156  0097                     	;# 
  3157  0098                     	;# 
  3158  0099                     	;# 
  3159  009A                     	;# 
  3160  009B                     	;# 
  3161  009C                     	;# 
  3162  009D                     	;# 
  3163  009E                     	;# 
  3164  010C                     	;# 
  3165  010D                     	;# 
  3166  010E                     	;# 
  3167  010E                     	;# 
  3168  010F                     	;# 
  3169  0110                     	;# 
  3170  0110                     	;# 
  3171  0111                     	;# 
  3172  0112                     	;# 
  3173  0112                     	;# 
  3174  0113                     	;# 
  3175  0114                     	;# 
  3176  0114                     	;# 
  3177  0115                     	;# 
  3178  0116                     	;# 
  3179  0116                     	;# 
  3180  0117                     	;# 
  3181  0119                     	;# 
  3182  0119                     	;# 
  3183  0119                     	;# 
  3184  011A                     	;# 
  3185  011A                     	;# 
  3186  011A                     	;# 
  3187  011B                     	;# 
  3188  011B                     	;# 
  3189  011B                     	;# 
  3190  011B                     	;# 
  3191  011B                     	;# 
  3192  011C                     	;# 
  3193  011C                     	;# 
  3194  011C                     	;# 
  3195  011D                     	;# 
  3196  011D                     	;# 
  3197  011D                     	;# 
  3198  011E                     	;# 
  3199  011E                     	;# 
  3200  011E                     	;# 
  3201  011F                     	;# 
  3202  011F                     	;# 
  3203  011F                     	;# 
  3204  011F                     	;# 
  3205  011F                     	;# 
  3206  018C                     	;# 
  3207  018D                     	;# 
  3208  018E                     	;# 
  3209  018F                     	;# 
  3210  0190                     	;# 
  3211  0191                     	;# 
  3212  0192                     	;# 
  3213  0196                     	;# 
  3214  0197                     	;# 
  3215  0198                     	;# 
  3216  0199                     	;# 
  3217  019A                     	;# 
  3218  019B                     	;# 
  3219  019C                     	;# 
  3220  020C                     	;# 
  3221  020D                     	;# 
  3222  020E                     	;# 
  3223  020F                     	;# 
  3224  020F                     	;# 
  3225  0210                     	;# 
  3226  0210                     	;# 
  3227  0211                     	;# 
  3228  0211                     	;# 
  3229  0212                     	;# 
  3230  0213                     	;# 
  3231  0214                     	;# 
  3232  0215                     	;# 
  3233  0215                     	;# 
  3234  0216                     	;# 
  3235  0216                     	;# 
  3236  0217                     	;# 
  3237  0217                     	;# 
  3238  0218                     	;# 
  3239  0219                     	;# 
  3240  021A                     	;# 
  3241  021B                     	;# 
  3242  021B                     	;# 
  3243  021C                     	;# 
  3244  021C                     	;# 
  3245  021D                     	;# 
  3246  021D                     	;# 
  3247  021E                     	;# 
  3248  021F                     	;# 
  3249  028C                     	;# 
  3250  028C                     	;# 
  3251  028D                     	;# 
  3252  028D                     	;# 
  3253  028E                     	;# 
  3254  028F                     	;# 
  3255  0290                     	;# 
  3256  0290                     	;# 
  3257  0291                     	;# 
  3258  0292                     	;# 
  3259  0292                     	;# 
  3260  0293                     	;# 
  3261  0293                     	;# 
  3262  0294                     	;# 
  3263  0295                     	;# 
  3264  0296                     	;# 
  3265  0296                     	;# 
  3266  0297                     	;# 
  3267  0298                     	;# 
  3268  0298                     	;# 
  3269  0299                     	;# 
  3270  0299                     	;# 
  3271  029A                     	;# 
  3272  029B                     	;# 
  3273  029C                     	;# 
  3274  029C                     	;# 
  3275  029D                     	;# 
  3276  030C                     	;# 
  3277  030C                     	;# 
  3278  030D                     	;# 
  3279  030E                     	;# 
  3280  030F                     	;# 
  3281  0310                     	;# 
  3282  0310                     	;# 
  3283  0311                     	;# 
  3284  0312                     	;# 
  3285  0313                     	;# 
  3286  0314                     	;# 
  3287  0314                     	;# 
  3288  0315                     	;# 
  3289  0316                     	;# 
  3290  0317                     	;# 
  3291  0318                     	;# 
  3292  0318                     	;# 
  3293  0319                     	;# 
  3294  031A                     	;# 
  3295  031B                     	;# 
  3296  031C                     	;# 
  3297  031C                     	;# 
  3298  031D                     	;# 
  3299  031E                     	;# 
  3300  031F                     	;# 
  3301  038C                     	;# 
  3302  038D                     	;# 
  3303  038E                     	;# 
  3304  0390                     	;# 
  3305  0391                     	;# 
  3306  0392                     	;# 
  3307  040C                     	;# 
  3308  040D                     	;# 
  3309  040E                     	;# 
  3310  040F                     	;# 
  3311  0410                     	;# 
  3312  0411                     	;# 
  3313  0416                     	;# 
  3314  0416                     	;# 
  3315  0417                     	;# 
  3316  0418                     	;# 
  3317  0418                     	;# 
  3318  0419                     	;# 
  3319  041A                     	;# 
  3320  041A                     	;# 
  3321  041B                     	;# 
  3322  041C                     	;# 
  3323  041C                     	;# 
  3324  041D                     	;# 
  3325  041E                     	;# 
  3326  041F                     	;# 
  3327  048C                     	;# 
  3328  048C                     	;# 
  3329  048D                     	;# 
  3330  048E                     	;# 
  3331  048F                     	;# 
  3332  048F                     	;# 
  3333  0490                     	;# 
  3334  0491                     	;# 
  3335  0492                     	;# 
  3336  0492                     	;# 
  3337  0493                     	;# 
  3338  0494                     	;# 
  3339  0495                     	;# 
  3340  0495                     	;# 
  3341  0496                     	;# 
  3342  0497                     	;# 
  3343  0498                     	;# 
  3344  0499                     	;# 
  3345  049A                     	;# 
  3346  049B                     	;# 
  3347  049C                     	;# 
  3348  049D                     	;# 
  3349  050C                     	;# 
  3350  050C                     	;# 
  3351  050D                     	;# 
  3352  050E                     	;# 
  3353  050F                     	;# 
  3354  050F                     	;# 
  3355  0510                     	;# 
  3356  0511                     	;# 
  3357  0512                     	;# 
  3358  0512                     	;# 
  3359  0513                     	;# 
  3360  0514                     	;# 
  3361  0515                     	;# 
  3362  0515                     	;# 
  3363  0516                     	;# 
  3364  0517                     	;# 
  3365  0518                     	;# 
  3366  0519                     	;# 
  3367  051A                     	;# 
  3368  051B                     	;# 
  3369  051C                     	;# 
  3370  051D                     	;# 
  3371  058C                     	;# 
  3372  058C                     	;# 
  3373  058D                     	;# 
  3374  058E                     	;# 
  3375  058F                     	;# 
  3376  058F                     	;# 
  3377  0590                     	;# 
  3378  0591                     	;# 
  3379  0592                     	;# 
  3380  0593                     	;# 
  3381  060C                     	;# 
  3382  060D                     	;# 
  3383  060E                     	;# 
  3384  060F                     	;# 
  3385  0610                     	;# 
  3386  0611                     	;# 
  3387  0612                     	;# 
  3388  0613                     	;# 
  3389  0614                     	;# 
  3390  0616                     	;# 
  3391  0617                     	;# 
  3392  0618                     	;# 
  3393  0619                     	;# 
  3394  061A                     	;# 
  3395  061B                     	;# 
  3396  061C                     	;# 
  3397  061D                     	;# 
  3398  061E                     	;# 
  3399  068C                     	;# 
  3400  068D                     	;# 
  3401  068E                     	;# 
  3402  068F                     	;# 
  3403  0690                     	;# 
  3404  0691                     	;# 
  3405  0692                     	;# 
  3406  0693                     	;# 
  3407  0694                     	;# 
  3408  070C                     	;# 
  3409  070D                     	;# 
  3410  070E                     	;# 
  3411  070F                     	;# 
  3412  0710                     	;# 
  3413  0711                     	;# 
  3414  0712                     	;# 
  3415  0713                     	;# 
  3416  0714                     	;# 
  3417  0716                     	;# 
  3418  0717                     	;# 
  3419  0718                     	;# 
  3420  0719                     	;# 
  3421  071A                     	;# 
  3422  071B                     	;# 
  3423  071C                     	;# 
  3424  071D                     	;# 
  3425  071E                     	;# 
  3426  0796                     	;# 
  3427  0797                     	;# 
  3428  0798                     	;# 
  3429  0799                     	;# 
  3430  079A                     	;# 
  3431  079B                     	;# 
  3432  080C                     	;# 
  3433  080D                     	;# 
  3434  080E                     	;# 
  3435  080F                     	;# 
  3436  0810                     	;# 
  3437  0811                     	;# 
  3438  0812                     	;# 
  3439  0813                     	;# 
  3440  0814                     	;# 
  3441  081A                     	;# 
  3442  081B                     	;# 
  3443  081C                     	;# 
  3444  081D                     	;# 
  3445  081E                     	;# 
  3446  081F                     	;# 
  3447  088C                     	;# 
  3448  088D                     	;# 
  3449  088E                     	;# 
  3450  088F                     	;# 
  3451  0890                     	;# 
  3452  0891                     	;# 
  3453  0892                     	;# 
  3454  0893                     	;# 
  3455  0895                     	;# 
  3456  0896                     	;# 
  3457  0897                     	;# 
  3458  0898                     	;# 
  3459  0899                     	;# 
  3460  089A                     	;# 
  3461  089B                     	;# 
  3462  090C                     	;# 
  3463  090E                     	;# 
  3464  090F                     	;# 
  3465  091F                     	;# 
  3466  091F                     	;# 
  3467  098F                     	;# 
  3468  098F                     	;# 
  3469  0990                     	;# 
  3470  0991                     	;# 
  3471  0992                     	;# 
  3472  0993                     	;# 
  3473  0994                     	;# 
  3474  0995                     	;# 
  3475  0996                     	;# 
  3476  0997                     	;# 
  3477  0E0F                     	;# 
  3478  0E10                     	;# 
  3479  0E11                     	;# 
  3480  0E12                     	;# 
  3481  0E13                     	;# 
  3482  0E14                     	;# 
  3483  0E15                     	;# 
  3484  0E16                     	;# 
  3485  0E17                     	;# 
  3486  0E18                     	;# 
  3487  0E19                     	;# 
  3488  0E1A                     	;# 
  3489  0E1B                     	;# 
  3490  0E1C                     	;# 
  3491  0E1D                     	;# 
  3492  0E1E                     	;# 
  3493  0E1F                     	;# 
  3494  0E20                     	;# 
  3495  0E21                     	;# 
  3496  0E22                     	;# 
  3497  0E23                     	;# 
  3498  0E24                     	;# 
  3499  0E25                     	;# 
  3500  0E26                     	;# 
  3501  0E27                     	;# 
  3502  0E28                     	;# 
  3503  0E29                     	;# 
  3504  0E2A                     	;# 
  3505  0E2B                     	;# 
  3506  0E2C                     	;# 
  3507  0E2D                     	;# 
  3508  0E2E                     	;# 
  3509  0E2F                     	;# 
  3510  0E30                     	;# 
  3511  0E31                     	;# 
  3512  0E32                     	;# 
  3513  0E33                     	;# 
  3514  0E34                     	;# 
  3515  0E35                     	;# 
  3516  0E36                     	;# 
  3517  0E37                     	;# 
  3518  0E8F                     	;# 
  3519  0E90                     	;# 
  3520  0E91                     	;# 
  3521  0E92                     	;# 
  3522  0E93                     	;# 
  3523  0E94                     	;# 
  3524  0E95                     	;# 
  3525  0E96                     	;# 
  3526  0E97                     	;# 
  3527  0E9C                     	;# 
  3528  0E9D                     	;# 
  3529  0E9E                     	;# 
  3530  0EA1                     	;# 
  3531  0EA2                     	;# 
  3532  0EA3                     	;# 
  3533  0EA4                     	;# 
  3534  0EA5                     	;# 
  3535  0EA9                     	;# 
  3536  0EAA                     	;# 
  3537  0EAB                     	;# 
  3538  0EAC                     	;# 
  3539  0EB1                     	;# 
  3540  0EB2                     	;# 
  3541  0EB3                     	;# 
  3542  0EB8                     	;# 
  3543  0EB9                     	;# 
  3544  0EBA                     	;# 
  3545  0EBB                     	;# 
  3546  0EBC                     	;# 
  3547  0EBD                     	;# 
  3548  0EBE                     	;# 
  3549  0EC3                     	;# 
  3550  0EC5                     	;# 
  3551  0EC6                     	;# 
  3552  0EC7                     	;# 
  3553  0EC8                     	;# 
  3554  0EC9                     	;# 
  3555  0ECA                     	;# 
  3556  0ECB                     	;# 
  3557  0ECC                     	;# 
  3558  0F10                     	;# 
  3559  0F11                     	;# 
  3560  0F12                     	;# 
  3561  0F13                     	;# 
  3562  0F14                     	;# 
  3563  0F15                     	;# 
  3564  0F16                     	;# 
  3565  0F17                     	;# 
  3566  0F18                     	;# 
  3567  0F19                     	;# 
  3568  0F1A                     	;# 
  3569  0F1B                     	;# 
  3570  0F1C                     	;# 
  3571  0F1D                     	;# 
  3572  0F1E                     	;# 
  3573  0F1F                     	;# 
  3574  0F20                     	;# 
  3575  0F21                     	;# 
  3576  0F22                     	;# 
  3577  0F23                     	;# 
  3578  0F24                     	;# 
  3579  0F25                     	;# 
  3580  0F26                     	;# 
  3581  0F27                     	;# 
  3582  0F38                     	;# 
  3583  0F39                     	;# 
  3584  0F3A                     	;# 
  3585  0F3B                     	;# 
  3586  0F3C                     	;# 
  3587  0F3D                     	;# 
  3588  0F3E                     	;# 
  3589  0F3F                     	;# 
  3590  0F40                     	;# 
  3591  0F41                     	;# 
  3592  0F43                     	;# 
  3593  0F44                     	;# 
  3594  0F45                     	;# 
  3595  0F46                     	;# 
  3596  0F47                     	;# 
  3597  0F48                     	;# 
  3598  0F49                     	;# 
  3599  0F4A                     	;# 
  3600  0F4B                     	;# 
  3601  0F4C                     	;# 
  3602  0F4E                     	;# 
  3603  0F4F                     	;# 
  3604  0F50                     	;# 
  3605  0F51                     	;# 
  3606  0F52                     	;# 
  3607  0F53                     	;# 
  3608  0F54                     	;# 
  3609  0F55                     	;# 
  3610  0F56                     	;# 
  3611  0F57                     	;# 
  3612  0F65                     	;# 
  3613  0F68                     	;# 
  3614  0F69                     	;# 
  3615  0F6A                     	;# 
  3616  0F6B                     	;# 
  3617  0FE4                     	;# 
  3618  0FE5                     	;# 
  3619  0FE6                     	;# 
  3620  0FE7                     	;# 
  3621  0FE8                     	;# 
  3622  0FE9                     	;# 
  3623  0FEA                     	;# 
  3624  0FEB                     	;# 
  3625  0FED                     	;# 
  3626  0FEE                     	;# 
  3627  0FEF                     	;# 
  3628                           
  3629                           	psect	stringtext
  3630  03BE                     __pstringtext:	
  3631  03BE                     _dpowers:	
  3632  03BE  3401               	retlw	1
  3633  03BF  3400               	retlw	0
  3634  03C0  340A               	retlw	10
  3635  03C1  3400               	retlw	0
  3636  03C2  3464               	retlw	100
  3637  03C3  3400               	retlw	0
  3638  03C4  34E8               	retlw	232
  3639  03C5  3403               	retlw	3
  3640  03C6  3410               	retlw	16
  3641  03C7  3427               	retlw	39
  3642  03C8                     __end_of_dpowers:	
  3643  000B                     _INTCONbits	set	11
  3644  0016                     _LATA	set	22
  3645  0016                     _LATAbits	set	22
  3646  0017                     _LATB	set	23
  3647  0018                     _LATC	set	24
  3648  0011                     _TRISA	set	17
  3649  0012                     _TRISB	set	18
  3650  0013                     _TRISC	set	19
  3651  005F                     _GIE	set	95
  3652  011F                     _BAUD1CON	set	287
  3653  0119                     _RC1REG	set	281
  3654  011D                     _RC1STA	set	285
  3655  011D                     _RC1STAbits	set	285
  3656  011C                     _SP1BRGH	set	284
  3657  011B                     _SP1BRGL	set	283
  3658  011A                     _TX1REG	set	282
  3659  011E                     _TX1STA	set	286
  3660  0197                     _SSP2ADD	set	407
  3661  0196                     _SSP2BUF	set	406
  3662  019A                     _SSP2CON1	set	410
  3663  019A                     _SSP2CON1bits	set	410
  3664  019B                     _SSP2CON2bits	set	411
  3665  019C                     _SSP2CON3	set	412
  3666  0199                     _SSP2STAT	set	409
  3667  0299                     _PR6	set	665
  3668  029C                     _T6CLKCON	set	668
  3669  029A                     _T6CON	set	666
  3670  029A                     _T6CONbits	set	666
  3671  029B                     _T6HLT	set	667
  3672  029B                     _T6HLTbits	set	667
  3673  0299                     _T6PR	set	665
  3674  029D                     _T6RST	set	669
  3675  029D                     _T6RSTbits	set	669
  3676  0298                     _T6TMR	set	664
  3677  0298                     _TMR6	set	664
  3678  0719                     _PIE3bits	set	1817
  3679  070F                     _PIR3bits	set	1807
  3680  0710                     _PIR4bits	set	1808
  3681  088D                     _OSCCON1	set	2189
  3682  088F                     _OSCCON3	set	2191
  3683  0891                     _OSCEN	set	2193
  3684  0893                     _OSCFRQ	set	2195
  3685  0892                     _OSCTUNE	set	2194
  3686  0E8F                     _PPSLOCK	set	3727
  3687  0E8F                     _PPSLOCKbits	set	3727
  3688  0EC8                     _SSP2CLKPPSbits	set	3784
  3689  0EC9                     _SSP2DATPPSbits	set	3785
  3690  0E9E                     _T6AINPPSbits	set	3742
  3691  0F38                     _ANSELA	set	3896
  3692  0F43                     _ANSELB	set	3907
  3693  0F4E                     _ANSELC	set	3918
  3694  0F3A                     _ODCONA	set	3898
  3695  0F45                     _ODCONB	set	3909
  3696  0F50                     _ODCONC	set	3920
  3697  0F20                     _RC0PPS	set	3872
  3698  0F23                     _RC3PPS	set	3875
  3699  0F24                     _RC4PPS	set	3876
  3700  0F26                     _RC6PPS	set	3878
  3701  0F39                     _WPUA	set	3897
  3702  0F44                     _WPUB	set	3908
  3703  0F4F                     _WPUC	set	3919
  3704  0F65                     _WPUE	set	3941
  3705  03C8                     STR_2:	
  3706  03C8  3420               	retlw	32	;' '
  3707  03C9  3454               	retlw	84	;'T'
  3708  03CA  3468               	retlw	104	;'h'
  3709  03CB  3465               	retlw	101	;'e'
  3710  03CC  3420               	retlw	32	;' '
  3711  03CD  3474               	retlw	116	;'t'
  3712  03CE  3465               	retlw	101	;'e'
  3713  03CF  346D               	retlw	109	;'m'
  3714  03D0  3470               	retlw	112	;'p'
  3715  03D1  3465               	retlw	101	;'e'
  3716  03D2  3472               	retlw	114	;'r'
  3717  03D3  3461               	retlw	97	;'a'
  3718  03D4  3474               	retlw	116	;'t'
  3719  03D5  3475               	retlw	117	;'u'
  3720  03D6  3472               	retlw	114	;'r'
  3721  03D7  3465               	retlw	101	;'e'
  3722  03D8  3420               	retlw	32	;' '
  3723  03D9  3469               	retlw	105	;'i'
  3724  03DA  3473               	retlw	115	;'s'
  3725  03DB  343A               	retlw	58	;':'
  3726  03DC  3420               	retlw	32	;' '
  3727  03DD  3425               	retlw	37	;'%'
  3728  03DE  3464               	retlw	100	;'d'
  3729  03DF  342E               	retlw	46	;'.'
  3730  03E0  3425               	retlw	37	;'%'
  3731  03E1  3464               	retlw	100	;'d'
  3732  03E2  3420               	retlw	32	;' '
  3733  03E3  3443               	retlw	67	;'C'
  3734  03E4  3400               	retlw	0
  3735  03E5                     STR_1:	
  3736  03E5  340A               	retlw	10
  3737  03E6  3400               	retlw	0
  3738                           
  3739                           ; #config settings
  3740  0000                     
  3741                           	psect	cinit
  3742  0022                     start_initialization:	
  3743  0022                     __initialization:	
  3744                           
  3745                           ; Clear objects allocated to COMMON
  3746  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  3747  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3748  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3749  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3750  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3751  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3752  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3753                           
  3754                           ; Clear objects allocated to BANK0
  3755  0029  3043               	movlw	low __pbssBANK0
  3756  002A  0084               	movwf	4
  3757  002B  3000               	movlw	high __pbssBANK0
  3758  002C  0085               	movwf	5
  3759  002D  301C               	movlw	28
  3760  002E  3184  24F0         	fcall	clear_ram0
  3761  0030                     end_of_initialization:	
  3762                           ;End of C runtime variable initialization code
  3763                           
  3764  0030                     __end_of__initialization:	
  3765  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3766  0031  0020               	movlb	0
  3767  0032  3182  2A27         	ljmp	_main	;jump to C main() function
  3768                           
  3769                           	psect	bssCOMMON
  3770  0070                     __pbssCOMMON:	
  3771  0070                     I2C2_ISR@i2c_bytes_left:	
  3772  0070                     	ds	1
  3773  0071                     I2C2_ISR@pi2c_buf_ptr:	
  3774  0071                     	ds	1
  3775  0072                     _i2c2_trb_count:	
  3776  0072                     	ds	1
  3777  0073                     _p_i2c2_current:	
  3778  0073                     	ds	1
  3779  0074                     _p_i2c2_trb_current:	
  3780  0074                     	ds	1
  3781  0075                     I2C2_ISR@i2c_address:	
  3782  0075                     	ds	2
  3783                           
  3784                           	psect	bssBANK0
  3785  0043                     __pbssBANK0:	
  3786  0043                     _i2c2_object:	
  3787  0043                     	ds	5
  3788  0048                     _TMR6_InterruptHandler:	
  3789  0048                     	ds	2
  3790  004A                     I2C2_ISR@i2c_10bit_address_restart:	
  3791  004A                     	ds	1
  3792  004B                     _i2c2_state:	
  3793  004B                     	ds	1
  3794  004C                     EMC1001_Read@trb:	
  3795  004C                     	ds	8
  3796  0054                     I2C2_MasterRead@trBlock:	
  3797  0054                     	ds	4
  3798  0058                     I2C2_MasterWrite@trBlock:	
  3799  0058                     	ds	4
  3800  005C                     _i2c2_tr_queue:	
  3801  005C                     	ds	3
  3802                           
  3803                           	psect	clrtext
  3804  04F0                     clear_ram0:	
  3805                           ;	Called with FSR0 containing the base address, and
  3806                           ;	WREG with the size to clear
  3807                           
  3808  04F0  0064               	clrwdt	;clear the watchdog before getting into this loop
  3809  04F1                     clrloop0:	
  3810  04F1  0180               	clrf	0	;clear RAM location pointed to by FSR
  3811  04F2  3101               	addfsr 0,1
  3812  04F3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3813  04F4  2CF1               	goto	clrloop0	;have we reached the end yet?
  3814  04F5  3400               	retlw	0	;all done for this memory range, return
  3815                           
  3816                           	psect	cstackCOMMON
  3817  0077                     __pcstackCOMMON:	
  3818  0077                     ?_TMR6_Start:	
  3819  0077                     ?_PIN_MANAGER_Initialize:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0077                     ?_OSCILLATOR_Initialize:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0077                     ?_I2C2_Initialize:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0077                     ?_I2C2_BusCollisionISR:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0077                     ??_I2C2_BusCollisionISR:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0077                     ?_I2C2_ISR:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0077                     ?_I2C2_Stop:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0077                     ??_I2C2_Stop:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0077                     ?_I2C2_FunctionComplete:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0077                     ??_I2C2_FunctionComplete:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0077                     ?_EUSART_Initialize:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0077                     ?_EUSART_Write:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0077                     ?_putch:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0077                     ?_TMR6_Initialize:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0077                     ?_TMR6_HasOverflowOccured:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0077                     ?_SYSTEM_Initialize:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0077                     ?_main:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0077                     ?_INTERRUPT_InterruptManager:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873                           
  3874                           ; 1 bytes @ 0x0
  3875  0077                     	ds	1
  3876  0078                     I2C2_Stop@completion_code:	
  3877                           
  3878                           ; 1 bytes @ 0x1
  3879  0078                     	ds	1
  3880  0079                     ??_I2C2_ISR:	
  3881                           
  3882                           ; 1 bytes @ 0x2
  3883  0079                     	ds	4
  3884  007D                     ??_INTERRUPT_InterruptManager:	
  3885                           
  3886                           ; 1 bytes @ 0x6
  3887  007D                     	ds	1
  3888                           
  3889                           	psect	cstackBANK0
  3890  0020                     __pcstackBANK0:	
  3891  0020                     ??_TMR6_Start:	
  3892  0020                     ??_PIN_MANAGER_Initialize:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0020                     ??_OSCILLATOR_Initialize:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0020                     ??_I2C2_Initialize:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0020                     ?_I2C2_MasterWriteTRBBuild:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0020                     ?_I2C2_MasterReadTRBBuild:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0020                     ?_I2C2_MasterTRBInsert:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0020                     ??_EUSART_Initialize:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0020                     ??_EUSART_Write:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0020                     ??_TMR6_Initialize:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0020                     ??_TMR6_HasOverflowOccured:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0020                     ?___wmul:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0020                     ?___lwdiv:	
  3926                           ; 2 bytes @ 0x0
  3927                           
  3928  0020                     EUSART_Write@txData:	
  3929                           ; 2 bytes @ 0x0
  3930                           
  3931  0020                     TMR6_HasOverflowOccured@status:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0020                     PIN_MANAGER_Initialize@state:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0020                     I2C2_MasterTRBInsert@ptrb_list:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0020                     I2C2_MasterReadTRBBuild@pdata:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0020                     I2C2_MasterWriteTRBBuild@pdata:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0020                     ___wmul@multiplier:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0020                     ___lwdiv@divisor:	
  3950                           ; 2 bytes @ 0x0
  3951                           
  3952                           
  3953                           ; 2 bytes @ 0x0
  3954  0020                     	ds	1
  3955  0021                     ??_putch:	
  3956  0021                     ??_SYSTEM_Initialize:	
  3957                           ; 1 bytes @ 0x1
  3958                           
  3959  0021                     putch@txData:	
  3960                           ; 1 bytes @ 0x1
  3961                           
  3962  0021                     I2C2_MasterTRBInsert@pflag:	
  3963                           ; 1 bytes @ 0x1
  3964                           
  3965  0021                     I2C2_MasterReadTRBBuild@length:	
  3966                           ; 1 bytes @ 0x1
  3967                           
  3968  0021                     I2C2_MasterWriteTRBBuild@length:	
  3969                           ; 1 bytes @ 0x1
  3970                           
  3971                           
  3972                           ; 1 bytes @ 0x1
  3973  0021                     	ds	1
  3974  0022                     ??_I2C2_MasterTRBInsert:	
  3975  0022                     I2C2_MasterReadTRBBuild@address:	
  3976                           ; 1 bytes @ 0x2
  3977                           
  3978  0022                     I2C2_MasterWriteTRBBuild@address:	
  3979                           ; 2 bytes @ 0x2
  3980                           
  3981  0022                     ___wmul@multiplicand:	
  3982                           ; 2 bytes @ 0x2
  3983                           
  3984  0022                     ___lwdiv@dividend:	
  3985                           ; 2 bytes @ 0x2
  3986                           
  3987                           
  3988                           ; 2 bytes @ 0x2
  3989  0022                     	ds	1
  3990  0023                     I2C2_MasterTRBInsert@count:	
  3991                           
  3992                           ; 1 bytes @ 0x3
  3993  0023                     	ds	1
  3994  0024                     ??_I2C2_MasterWriteTRBBuild:	
  3995  0024                     ??_I2C2_MasterReadTRBBuild:	
  3996                           ; 1 bytes @ 0x4
  3997                           
  3998  0024                     ??___wmul:	
  3999                           ; 1 bytes @ 0x4
  4000                           
  4001  0024                     ??___lwdiv:	
  4002                           ; 1 bytes @ 0x4
  4003                           
  4004  0024                     ___wmul@product:	
  4005                           ; 1 bytes @ 0x4
  4006                           
  4007                           
  4008                           ; 2 bytes @ 0x4
  4009  0024                     	ds	1
  4010  0025                     ___lwdiv@quotient:	
  4011                           
  4012                           ; 2 bytes @ 0x5
  4013  0025                     	ds	1
  4014  0026                     I2C2_MasterReadTRBBuild@ptrb:	
  4015  0026                     I2C2_MasterWriteTRBBuild@ptrb:	
  4016                           ; 1 bytes @ 0x6
  4017                           
  4018                           
  4019                           ; 1 bytes @ 0x6
  4020  0026                     	ds	1
  4021  0027                     ?_EMC1001_Read:	
  4022  0027                     EMC1001_Read@pData:	
  4023                           ; 1 bytes @ 0x7
  4024                           
  4025  0027                     ___lwdiv@counter:	
  4026                           ; 1 bytes @ 0x7
  4027                           
  4028                           
  4029                           ; 1 bytes @ 0x7
  4030  0027                     	ds	1
  4031  0028                     ??_EMC1001_Read:	
  4032  0028                     ?___lwmod:	
  4033                           ; 1 bytes @ 0x8
  4034                           
  4035  0028                     ___lwmod@divisor:	
  4036                           ; 2 bytes @ 0x8
  4037                           
  4038                           
  4039                           ; 2 bytes @ 0x8
  4040  0028                     	ds	2
  4041  002A                     EMC1001_Read@reg:	
  4042  002A                     ___lwmod@dividend:	
  4043                           ; 1 bytes @ 0xA
  4044                           
  4045                           
  4046                           ; 2 bytes @ 0xA
  4047  002A                     	ds	1
  4048  002B                     EMC1001_Read@status:	
  4049                           
  4050                           ; 1 bytes @ 0xB
  4051  002B                     	ds	1
  4052  002C                     ??___lwmod:	
  4053                           
  4054                           ; 1 bytes @ 0xC
  4055  002C                     	ds	1
  4056  002D                     ___lwmod@counter:	
  4057                           
  4058                           ; 1 bytes @ 0xD
  4059  002D                     	ds	1
  4060  002E                     ?_printf:	
  4061  002E                     printf@f:	
  4062                           ; 2 bytes @ 0xE
  4063                           
  4064                           
  4065                           ; 2 bytes @ 0xE
  4066  002E                     	ds	6
  4067  0034                     ??_printf:	
  4068                           
  4069                           ; 1 bytes @ 0x14
  4070  0034                     	ds	4
  4071  0038                     printf@ap:	
  4072                           
  4073                           ; 1 bytes @ 0x18
  4074  0038                     	ds	1
  4075  0039                     printf@flag:	
  4076                           
  4077                           ; 1 bytes @ 0x19
  4078  0039                     	ds	1
  4079  003A                     printf@prec:	
  4080                           
  4081                           ; 1 bytes @ 0x1A
  4082  003A                     	ds	1
  4083  003B                     printf@val:	
  4084                           
  4085                           ; 2 bytes @ 0x1B
  4086  003B                     	ds	2
  4087  003D                     printf@c:	
  4088                           
  4089                           ; 1 bytes @ 0x1D
  4090  003D                     	ds	1
  4091  003E                     ??_main:	
  4092                           
  4093                           ; 1 bytes @ 0x1E
  4094  003E                     	ds	2
  4095  0040                     main@toggle:	
  4096                           
  4097                           ; 1 bytes @ 0x20
  4098  0040                     	ds	1
  4099  0041                     main@temp:	
  4100                           
  4101                           ; 1 bytes @ 0x21
  4102  0041                     	ds	1
  4103  0042                     main@templo:	
  4104                           
  4105                           ; 1 bytes @ 0x22
  4106  0042                     	ds	1
  4107                           
  4108                           	psect	maintext
  4109  0227                     __pmaintext:	
  4110 ;;
  4111 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4112 ;;
  4113 ;; *************** function _main *****************
  4114 ;; Defined at:
  4115 ;;		line 22 in file "main.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  templo          1   34[BANK0 ] unsigned char 
  4120 ;;  temp            1   33[BANK0 ] char 
  4121 ;;  toggle          1   32[BANK0 ] unsigned char 
  4122 ;;  data            1    0        unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : B1F/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        5 bytes
  4137 ;; Hardware stack levels required when called:    6
  4138 ;; This function calls:
  4139 ;;		_EMC1001_Read
  4140 ;;		_EUSART_Write
  4141 ;;		_SYSTEM_Initialize
  4142 ;;		_TMR6_HasOverflowOccured
  4143 ;;		___wmul
  4144 ;;		_printf
  4145 ;; This function is called by:
  4146 ;;		Startup code after reset
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _main
  4152  0227                     _main:	
  4153                           
  4154                           ;main.c: 24: bool toggle = 1;
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4158  0227  0020               	movlb	0	; select bank0
  4159  0228  01C0               	clrf	main@toggle
  4160  0229  0AC0               	incf	main@toggle,f
  4161                           
  4162                           ;main.c: 25: uint8_t data;
  4163                           ;main.c: 26: int8_t temp;
  4164                           ;main.c: 27: uint8_t templo;
  4165                           ;main.c: 28: SYSTEM_Initialize();
  4166  022A  3184  24A5  3182   	fcall	_SYSTEM_Initialize
  4167                           
  4168                           ;main.c: 29: (INTCONbits.GIE = 1);
  4169  022D  178B               	bsf	11,7	;volatile
  4170                           
  4171                           ;main.c: 30: (INTCONbits.PEIE = 1);
  4172  022E  170B               	bsf	11,6	;volatile
  4173  022F                     l224:	
  4174                           ;main.c: 32: while (1)
  4175                           
  4176                           
  4177                           ;main.c: 33: {
  4178                           ;main.c: 34: if (TMR6_HasOverflowOccured())
  4179  022F  3184  24C3  3182   	fcall	_TMR6_HasOverflowOccured
  4180  0232  3A00               	xorlw	0
  4181  0233  1903               	skipnz
  4182  0234  2A2F               	goto	l224
  4183                           
  4184                           ;main.c: 35: {
  4185                           ;main.c: 36: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4186  0235  1003               	clrc
  4187  0236  0020               	movlb	0	; select bank0
  4188  0237  1C16               	btfss	22,0	;volatile
  4189  0238  1403               	setc
  4190  0239  1C03               	btfss	3,0
  4191  023A  2A3E               	goto	u1580
  4192  023B  0020               	movlb	0	; select bank0
  4193  023C  1416               	bsf	22,0	;volatile
  4194  023D  2A40               	goto	l2062
  4195  023E                     u1580:	
  4196  023E  0020               	movlb	0	; select bank0
  4197  023F  1016               	bcf	22,0	;volatile
  4198  0240                     l2062:	
  4199                           
  4200                           ;main.c: 37: printf("\n");
  4201  0240  30E5               	movlw	low (STR_1| (0+32768))
  4202  0241  00AE               	movwf	printf@f
  4203  0242  3083               	movlw	high (STR_1| (0+32768))
  4204  0243  00AF               	movwf	printf@f+1
  4205  0244  3181  216F  3182   	fcall	_printf
  4206                           
  4207                           ;main.c: 38: EUSART_Write(0x0D);
  4208  0247  300D               	movlw	13
  4209  0248  3184  24DD  3182   	fcall	_EUSART_Write
  4210                           
  4211                           ;main.c: 39: toggle = 0;
  4212  024B  0020               	movlb	0	; select bank0
  4213  024C  01C0               	clrf	main@toggle
  4214                           
  4215                           ;main.c: 41: if (EMC1001_Read(0, (uint8_t*)&temp))
  4216  024D  3041               	movlw	(low (main@temp| 0))& (0+255)
  4217  024E  00BE               	movwf	??_main
  4218  024F  083E               	movf	??_main,w
  4219  0250  00A7               	movwf	EMC1001_Read@pData
  4220  0251  3000               	movlw	0
  4221  0252  3183  2320  3182   	fcall	_EMC1001_Read
  4222  0255  3A00               	xorlw	0
  4223  0256  1903               	skipnz
  4224  0257  2A2F               	goto	l224
  4225                           
  4226                           ;main.c: 42: {
  4227                           ;main.c: 43: EMC1001_Read(2, &templo);
  4228  0258  3042               	movlw	(low (main@templo| 0))& (0+255)
  4229  0259  0020               	movlb	0	; select bank0
  4230  025A  00BE               	movwf	??_main
  4231  025B  083E               	movf	??_main,w
  4232  025C  00A7               	movwf	EMC1001_Read@pData
  4233  025D  3002               	movlw	2
  4234  025E  3183  2320  3182   	fcall	_EMC1001_Read
  4235                           
  4236                           ;main.c: 44: templo = templo >> 6;
  4237  0261  0020               	movlb	0	; select bank0
  4238  0262  0842               	movf	main@templo,w
  4239  0263  00BE               	movwf	??_main
  4240  0264  3006               	movlw	6
  4241  0265                     u1615:	
  4242  0265  36BE               	lsrf	??_main,f
  4243  0266  0B89               	decfsz	9,f
  4244  0267  2A65               	goto	u1615
  4245  0268  083E               	movf	??_main,w
  4246  0269  00BF               	movwf	??_main+1
  4247  026A  083F               	movf	??_main+1,w
  4248  026B  00C2               	movwf	main@templo
  4249                           
  4250                           ;main.c: 45: if (temp < 0) templo = 3-templo;
  4251  026C  1FC1               	btfss	main@temp,7
  4252  026D  2A74               	goto	l2078
  4253  026E  0342               	decf	main@templo,w
  4254  026F  3AFF               	xorlw	255
  4255  0270  3E03               	addlw	3
  4256  0271  00BE               	movwf	??_main
  4257  0272  083E               	movf	??_main,w
  4258  0273  00C2               	movwf	main@templo
  4259  0274                     l2078:	
  4260                           
  4261                           ;main.c: 46: printf(" The temperature is: %d.%d C", temp, templo*25);
  4262  0274  30C8               	movlw	low (STR_2| (0+32768))
  4263  0275  00AE               	movwf	printf@f
  4264  0276  3083               	movlw	high (STR_2| (0+32768))
  4265  0277  00AF               	movwf	printf@f+1
  4266  0278  0841               	movf	main@temp,w
  4267  0279  00B0               	movwf	?_printf+2
  4268  027A  01B1               	clrf	?_printf+3
  4269  027B  1BB0               	btfsc	?_printf+2,7
  4270  027C  03B1               	decf	?_printf+3,f
  4271  027D  0842               	movf	main@templo,w
  4272  027E  00BE               	movwf	??_main
  4273  027F  01BF               	clrf	??_main+1
  4274  0280  083E               	movf	??_main,w
  4275  0281  00A0               	movwf	___wmul@multiplier
  4276  0282  083F               	movf	??_main+1,w
  4277  0283  00A1               	movwf	___wmul@multiplier+1
  4278  0284  3019               	movlw	25
  4279  0285  00A2               	movwf	___wmul@multiplicand
  4280  0286  3000               	movlw	0
  4281  0287  00A3               	movwf	___wmul@multiplicand+1
  4282  0288  3184  242F  3182   	fcall	___wmul
  4283  028B  0020               	movlb	0	; select bank0
  4284  028C  0821               	movf	?___wmul+1,w
  4285  028D  00B3               	movwf	?_printf+5
  4286  028E  0820               	movf	?___wmul,w
  4287  028F  00B2               	movwf	?_printf+4
  4288  0290  3181  216F  3182   	fcall	_printf
  4289  0293  2A2F               	goto	l224
  4290  0294                     __end_of_main:	
  4291                           
  4292                           	psect	text1
  4293  016F                     __ptext1:	
  4294 ;; *************** function _printf *****************
  4295 ;; Defined at:
  4296 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4299 ;;		 -> STR_2(29), STR_1(2), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  tmpval          4    0        struct .
  4302 ;;  val             2   27[BANK0 ] unsigned int 
  4303 ;;  cp              2    0        PTR const unsigned char 
  4304 ;;  len             2    0        unsigned int 
  4305 ;;  c               1   29[BANK0 ] char 
  4306 ;;  prec            1   26[BANK0 ] char 
  4307 ;;  flag            1   25[BANK0 ] unsigned char 
  4308 ;;  ap              1   24[BANK0 ] PTR void [1]
  4309 ;;		 -> ?_printf(2), 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  2   14[BANK0 ] int 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4319 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;Total ram usage:       16 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    5
  4326 ;; This function calls:
  4327 ;;		___lwdiv
  4328 ;;		___lwmod
  4329 ;;		_putch
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _printf
  4337  016F                     _printf:	
  4338                           
  4339                           ;doprnt.c: 466: va_list ap;
  4340                           ;doprnt.c: 499: signed char c;
  4341                           ;doprnt.c: 506: signed char prec;
  4342                           ;doprnt.c: 508: unsigned char flag;
  4343                           ;doprnt.c: 523: union {
  4344                           ;doprnt.c: 524: unsigned long vd;
  4345                           ;doprnt.c: 525: double integ;
  4346                           ;doprnt.c: 526: } tmpval;
  4347                           ;doprnt.c: 528: unsigned int val;
  4348                           ;doprnt.c: 529: unsigned len;
  4349                           ;doprnt.c: 530: const char * cp;
  4350                           ;doprnt.c: 533: *ap = __va_start();
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4354  016F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4355  0170  0020               	movlb	0	; select bank0
  4356  0171  00B4               	movwf	??_printf
  4357  0172  0834               	movf	??_printf,w
  4358  0173  00B8               	movwf	printf@ap
  4359  0174                     l2034:	
  4360                           ;doprnt.c: 536: while(c = *f++) {
  4361                           
  4362  0174  0020               	movlb	0	; select bank0
  4363  0175  082F               	movf	printf@f+1,w
  4364  0176  00B5               	movwf	??_printf+1
  4365  0177  082E               	movf	printf@f,w
  4366  0178  00B4               	movwf	??_printf
  4367  0179  0AAE               	incf	printf@f,f
  4368  017A  1903               	skipnz
  4369  017B  0AAF               	incf	printf@f+1,f
  4370  017C  0834               	movf	??_printf,w
  4371  017D  0084               	movwf	4
  4372  017E  0835               	movf	??_printf+1,w
  4373  017F  0085               	movwf	5
  4374  0180  0800               	movf	0,w	;code access
  4375  0181  00B6               	movwf	??_printf+2
  4376  0182  0836               	movf	??_printf+2,w
  4377  0183  00BD               	movwf	printf@c
  4378  0184  083D               	movf	printf@c,w
  4379  0185  1903               	btfsc	3,2
  4380  0186  0008               	return
  4381                           
  4382                           ;doprnt.c: 538: if(c != '%')
  4383  0187  3025               	movlw	37
  4384  0188  063D               	xorwf	printf@c,w
  4385  0189  1903               	btfsc	3,2
  4386  018A  2990               	goto	l1994
  4387                           
  4388                           ;doprnt.c: 540: {
  4389                           ;doprnt.c: 541: (putch(c) );
  4390  018B  083D               	movf	printf@c,w
  4391  018C  3184  24F6  3181   	fcall	_putch
  4392                           
  4393                           ;doprnt.c: 542: continue;
  4394  018F  2974               	goto	l2034
  4395  0190                     l1994:	
  4396                           
  4397                           ;doprnt.c: 543: }
  4398                           ;doprnt.c: 548: flag = 0;
  4399  0190  0020               	movlb	0	; select bank0
  4400  0191  01B9               	clrf	printf@flag
  4401                           
  4402                           ;doprnt.c: 822: }
  4403                           
  4404                           ;doprnt.c: 813: continue;
  4405                           
  4406                           ;doprnt.c: 802: default:
  4407                           
  4408                           ;doprnt.c: 698: case 'i':
  4409                           ;doprnt.c: 699: break;
  4410                           
  4411                           ;doprnt.c: 697: case 'd':
  4412                           
  4413                           ;doprnt.c: 638: goto alldone;
  4414                           
  4415                           ;doprnt.c: 637: case 0:
  4416                           
  4417                           ;doprnt.c: 635: switch(c = *f++) {
  4418  0192  082F               	movf	printf@f+1,w
  4419  0193  00B5               	movwf	??_printf+1
  4420  0194  082E               	movf	printf@f,w
  4421  0195  00B4               	movwf	??_printf
  4422  0196  0AAE               	incf	printf@f,f
  4423  0197  1903               	skipnz
  4424  0198  0AAF               	incf	printf@f+1,f
  4425  0199  0834               	movf	??_printf,w
  4426  019A  0084               	movwf	4
  4427  019B  0835               	movf	??_printf+1,w
  4428  019C  0085               	movwf	5
  4429  019D  0800               	movf	0,w	;code access
  4430  019E  00BD               	movwf	printf@c
  4431                           
  4432                           ; Switch size 1, requested type "space"
  4433                           ; Number of cases is 3, Range of values is 0 to 105
  4434                           ; switch strategies available:
  4435                           ; Name         Instructions Cycles
  4436                           ; simple_byte           10     6 (average)
  4437                           ; direct_byte          218     6 (fixed)
  4438                           ; jumptable            260     6 (fixed)
  4439                           ;	Chosen strategy is simple_byte
  4440  019F  3A00               	xorlw	0	; case 0
  4441  01A0  1903               	skipnz
  4442  01A1  2A26               	goto	l426
  4443  01A2  3A64               	xorlw	100	; case 100
  4444  01A3  1903               	skipnz
  4445  01A4  29A9               	goto	l2000
  4446  01A5  3A0D               	xorlw	13	; case 105
  4447  01A6  1903               	skipnz
  4448  01A7  29A9               	goto	l2000
  4449  01A8  2974               	goto	l2034
  4450  01A9                     l2000:	
  4451                           
  4452                           ;doprnt.c: 1253: {
  4453                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4454  01A9  0838               	movf	printf@ap,w
  4455  01AA  0086               	movwf	6
  4456  01AB  0187               	clrf	7
  4457  01AC  3F40               	moviw [0]fsr1
  4458  01AD  00BB               	movwf	printf@val
  4459  01AE  3F41               	moviw [1]fsr1
  4460  01AF  00BC               	movwf	printf@val+1
  4461  01B0  3002               	movlw	2
  4462  01B1  00B4               	movwf	??_printf
  4463  01B2  0834               	movf	??_printf,w
  4464  01B3  07B8               	addwf	printf@ap,f
  4465                           
  4466                           ;doprnt.c: 1261: if((int)val < 0) {
  4467  01B4  1FBC               	btfss	printf@val+1,7
  4468  01B5  29BF               	goto	l2010
  4469                           
  4470                           ;doprnt.c: 1262: flag |= 0x03;
  4471  01B6  3003               	movlw	3
  4472  01B7  00B4               	movwf	??_printf
  4473  01B8  0834               	movf	??_printf,w
  4474  01B9  04B9               	iorwf	printf@flag,f
  4475                           
  4476                           ;doprnt.c: 1263: val = -val;
  4477  01BA  09BB               	comf	printf@val,f
  4478  01BB  09BC               	comf	printf@val+1,f
  4479  01BC  0ABB               	incf	printf@val,f
  4480  01BD  1903               	skipnz
  4481  01BE  0ABC               	incf	printf@val+1,f
  4482  01BF                     l2010:	
  4483                           
  4484                           ;doprnt.c: 1264: }
  4485                           ;doprnt.c: 1266: }
  4486                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4487  01BF  01BD               	clrf	printf@c
  4488  01C0  0ABD               	incf	printf@c,f
  4489  01C1  3005               	movlw	5
  4490  01C2  063D               	xorwf	printf@c,w
  4491  01C3  1903               	btfsc	3,2
  4492  01C4  29E4               	goto	l2022
  4493  01C5                     l2016:	
  4494                           
  4495                           ;doprnt.c: 1306: if(val < dpowers[c])
  4496  01C5  083D               	movf	printf@c,w
  4497  01C6  00B4               	movwf	??_printf
  4498  01C7  01B5               	clrf	??_printf+1
  4499  01C8  35B4               	lslf	??_printf,f
  4500  01C9  0DB5               	rlf	??_printf+1,f
  4501  01CA  30BE               	movlw	low (_dpowers| (0+32768))
  4502  01CB  0734               	addwf	??_printf,w
  4503  01CC  0084               	movwf	4
  4504  01CD  3083               	movlw	high (_dpowers| (0+32768))
  4505  01CE  3D35               	addwfc	??_printf+1,w
  4506  01CF  0085               	movwf	5
  4507  01D0  3F00               	moviw [0]fsr0
  4508  01D1  00B6               	movwf	??_printf+2
  4509  01D2  3F01               	moviw [1]fsr0
  4510  01D3  00B7               	movwf	??_printf+3
  4511  01D4  0837               	movf	??_printf+3,w
  4512  01D5  023C               	subwf	printf@val+1,w
  4513  01D6  1D03               	skipz
  4514  01D7  29DA               	goto	u1485
  4515  01D8  0836               	movf	??_printf+2,w
  4516  01D9  023B               	subwf	printf@val,w
  4517  01DA                     u1485:	
  4518  01DA  1C03               	btfss	3,0
  4519  01DB  29E4               	goto	l2022
  4520                           
  4521                           ;doprnt.c: 1307: break;
  4522  01DC  3001               	movlw	1
  4523  01DD  00B4               	movwf	??_printf
  4524  01DE  0834               	movf	??_printf,w
  4525  01DF  07BD               	addwf	printf@c,f
  4526  01E0  3005               	movlw	5
  4527  01E1  063D               	xorwf	printf@c,w
  4528  01E2  1D03               	btfss	3,2
  4529  01E3  29C5               	goto	l2016
  4530  01E4                     l2022:	
  4531                           
  4532                           ;doprnt.c: 1422: {
  4533                           ;doprnt.c: 1438: if(flag & 0x03)
  4534  01E4  0839               	movf	printf@flag,w
  4535  01E5  3903               	andlw	3
  4536  01E6  1903               	btfsc	3,2
  4537  01E7  29EC               	goto	l2026
  4538                           
  4539                           ;doprnt.c: 1439: (putch('-') );
  4540  01E8  302D               	movlw	45
  4541  01E9  3184  24F6  3181   	fcall	_putch
  4542  01EC                     l2026:	
  4543                           
  4544                           ;doprnt.c: 1469: }
  4545                           ;doprnt.c: 1472: prec = c;
  4546  01EC  0020               	movlb	0	; select bank0
  4547  01ED  083D               	movf	printf@c,w
  4548  01EE  00B4               	movwf	??_printf
  4549  01EF  0834               	movf	??_printf,w
  4550  01F0  00BA               	movwf	printf@prec
  4551  01F1                     l2032:	
  4552                           ;doprnt.c: 1474: while(prec--) {
  4553                           
  4554  01F1  30FF               	movlw	255
  4555  01F2  0020               	movlb	0	; select bank0
  4556  01F3  00B4               	movwf	??_printf
  4557  01F4  0834               	movf	??_printf,w
  4558  01F5  07BA               	addwf	printf@prec,f
  4559  01F6  0A3A               	incf	printf@prec,w
  4560  01F7  1903               	btfsc	3,2
  4561  01F8  2974               	goto	l2034
  4562                           
  4563                           ;doprnt.c: 1478: {
  4564                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4565  01F9  300A               	movlw	10
  4566  01FA  00A8               	movwf	___lwmod@divisor
  4567  01FB  3000               	movlw	0
  4568  01FC  00A9               	movwf	___lwmod@divisor+1
  4569  01FD  083A               	movf	printf@prec,w
  4570  01FE  00B4               	movwf	??_printf
  4571  01FF  01B5               	clrf	??_printf+1
  4572  0200  35B4               	lslf	??_printf,f
  4573  0201  0DB5               	rlf	??_printf+1,f
  4574  0202  30BE               	movlw	low (_dpowers| (0+32768))
  4575  0203  0734               	addwf	??_printf,w
  4576  0204  0084               	movwf	4
  4577  0205  3083               	movlw	high (_dpowers| (0+32768))
  4578  0206  3D35               	addwfc	??_printf+1,w
  4579  0207  0085               	movwf	5
  4580  0208  3F00               	moviw [0]fsr0
  4581  0209  00A0               	movwf	___lwdiv@divisor
  4582  020A  3F01               	moviw [1]fsr0
  4583  020B  00A1               	movwf	___lwdiv@divisor+1
  4584  020C  083C               	movf	printf@val+1,w
  4585  020D  00A3               	movwf	___lwdiv@dividend+1
  4586  020E  083B               	movf	printf@val,w
  4587  020F  00A2               	movwf	___lwdiv@dividend
  4588  0210  3183  235C  3181   	fcall	___lwdiv
  4589  0213  0020               	movlb	0	; select bank0
  4590  0214  0821               	movf	?___lwdiv+1,w
  4591  0215  00AB               	movwf	___lwmod@dividend+1
  4592  0216  0820               	movf	?___lwdiv,w
  4593  0217  00AA               	movwf	___lwmod@dividend
  4594  0218  3183  2391  3181   	fcall	___lwmod
  4595  021B  0020               	movlb	0	; select bank0
  4596  021C  0828               	movf	?___lwmod,w
  4597  021D  3E30               	addlw	48
  4598  021E  00B6               	movwf	??_printf+2
  4599  021F  0836               	movf	??_printf+2,w
  4600  0220  00BD               	movwf	printf@c
  4601                           
  4602                           ;doprnt.c: 1523: }
  4603                           ;doprnt.c: 1524: (putch(c) );
  4604  0221  083D               	movf	printf@c,w
  4605  0222  3184  24F6  3181   	fcall	_putch
  4606  0225  29F1               	goto	l2032
  4607  0226                     l426:	
  4608                           ;doprnt.c: 1540: return 0;
  4609                           ;	Return value of _printf is never used
  4610                           
  4611                           ;doprnt.c: 1525: }
  4612                           ;doprnt.c: 1533: }
  4613                           ;doprnt.c: 1535: alldone:
  4614                           
  4615  0226  0008               	return
  4616  0227                     __end_of_printf:	
  4617                           
  4618                           	psect	text2
  4619  04F6                     __ptext2:	
  4620 ;; *************** function _putch *****************
  4621 ;; Defined at:
  4622 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  txData          1    wreg     unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  txData          1    1[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, pclath, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;Total ram usage:        1 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    4
  4643 ;; This function calls:
  4644 ;;		_EUSART_Write
  4645 ;; This function is called by:
  4646 ;;		_printf
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _putch
  4652  04F6                     _putch:	
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4656                           ;putch@txData stored from wreg
  4657  04F6  0020               	movlb	0	; select bank0
  4658  04F7  00A1               	movwf	putch@txData
  4659                           
  4660                           ;eusart.c: 113: EUSART_Write(txData);
  4661  04F8  0821               	movf	putch@txData,w
  4662  04F9  3184  24DD         	fcall	_EUSART_Write
  4663  04FB  0008               	return
  4664  04FC                     __end_of_putch:	
  4665                           
  4666                           	psect	text3
  4667  04DD                     __ptext3:	
  4668 ;; *************** function _EUSART_Write *****************
  4669 ;; Defined at:
  4670 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  txData          1    wreg     unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  txData          1    0[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;Total ram usage:        1 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    3
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_putch
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _EUSART_Write
  4701  04DD                     _EUSART_Write:	
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _EUSART_Write: [wreg]
  4705                           ;EUSART_Write@txData stored from wreg
  4706  04DD  0020               	movlb	0	; select bank0
  4707  04DE  00A0               	movwf	EUSART_Write@txData
  4708  04DF                     l31:	
  4709                           ;eusart.c: 100: {
  4710                           
  4711                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  4712                           
  4713  04DF  002E               	movlb	14	; select bank14
  4714  04E0  1E0F               	btfss	15,4	;volatile
  4715  04E1  2CDF               	goto	l31
  4716                           
  4717                           ;eusart.c: 101: }
  4718                           ;eusart.c: 103: TX1REG = txData;
  4719  04E2  0020               	movlb	0	; select bank0
  4720  04E3  0820               	movf	EUSART_Write@txData,w
  4721  04E4  0022               	movlb	2	; select bank2
  4722  04E5  009A               	movwf	26	;volatile
  4723  04E6  0008               	return
  4724  04E7                     __end_of_EUSART_Write:	
  4725                           
  4726                           	psect	text4
  4727  0391                     __ptext4:	
  4728 ;; *************** function ___lwmod *****************
  4729 ;; Defined at:
  4730 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwmod.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  divisor         2    8[BANK0 ] unsigned int 
  4733 ;;  dividend        2   10[BANK0 ] unsigned int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  counter         1   13[BANK0 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2    8[BANK0 ] unsigned int 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;Total ram usage:        6 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    3
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_printf
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function ___lwmod
  4761  0391                     ___lwmod:	
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4765  0391  0020               	movlb	0	; select bank0
  4766  0392  0828               	movf	___lwmod@divisor,w
  4767  0393  0429               	iorwf	___lwmod@divisor+1,w
  4768  0394  1903               	btfsc	3,2
  4769  0395  2BB9               	goto	l1594
  4770  0396  01AD               	clrf	___lwmod@counter
  4771  0397  0AAD               	incf	___lwmod@counter,f
  4772  0398                     l1584:	
  4773  0398  1BA9               	btfsc	___lwmod@divisor+1,7
  4774  0399  2BA4               	goto	l1586
  4775  039A  3001               	movlw	1
  4776  039B                     u905:	
  4777  039B  35A8               	lslf	___lwmod@divisor,f
  4778  039C  0DA9               	rlf	___lwmod@divisor+1,f
  4779  039D  0B89               	decfsz	9,f
  4780  039E  2B9B               	goto	u905
  4781  039F  3001               	movlw	1
  4782  03A0  00AC               	movwf	??___lwmod
  4783  03A1  082C               	movf	??___lwmod,w
  4784  03A2  07AD               	addwf	___lwmod@counter,f
  4785  03A3  2B98               	goto	l1584
  4786  03A4                     l1586:	
  4787  03A4  0829               	movf	___lwmod@divisor+1,w
  4788  03A5  022B               	subwf	___lwmod@dividend+1,w
  4789  03A6  1D03               	skipz
  4790  03A7  2BAA               	goto	u925
  4791  03A8  0828               	movf	___lwmod@divisor,w
  4792  03A9  022A               	subwf	___lwmod@dividend,w
  4793  03AA                     u925:	
  4794  03AA  1C03               	skipc
  4795  03AB  2BB0               	goto	l1590
  4796  03AC  0828               	movf	___lwmod@divisor,w
  4797  03AD  02AA               	subwf	___lwmod@dividend,f
  4798  03AE  0829               	movf	___lwmod@divisor+1,w
  4799  03AF  3BAB               	subwfb	___lwmod@dividend+1,f
  4800  03B0                     l1590:	
  4801  03B0  3001               	movlw	1
  4802  03B1                     u935:	
  4803  03B1  36A9               	lsrf	___lwmod@divisor+1,f
  4804  03B2  0CA8               	rrf	___lwmod@divisor,f
  4805  03B3  0B89               	decfsz	9,f
  4806  03B4  2BB1               	goto	u935
  4807  03B5  3001               	movlw	1
  4808  03B6  02AD               	subwf	___lwmod@counter,f
  4809  03B7  1D03               	btfss	3,2
  4810  03B8  2BA4               	goto	l1586
  4811  03B9                     l1594:	
  4812  03B9  082B               	movf	___lwmod@dividend+1,w
  4813  03BA  00A9               	movwf	?___lwmod+1
  4814  03BB  082A               	movf	___lwmod@dividend,w
  4815  03BC  00A8               	movwf	?___lwmod
  4816  03BD  0008               	return
  4817  03BE                     __end_of___lwmod:	
  4818                           
  4819                           	psect	text5
  4820  035C                     __ptext5:	
  4821 ;; *************** function ___lwdiv *****************
  4822 ;; Defined at:
  4823 ;;		line 6 in file "/opt/microchip/xc8/v1.38/sources/common/lwdiv.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  divisor         2    0[BANK0 ] unsigned int 
  4826 ;;  dividend        2    2[BANK0 ] unsigned int 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  quotient        2    5[BANK0 ] unsigned int 
  4829 ;;  counter         1    7[BANK0 ] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    0[BANK0 ] unsigned int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;Total ram usage:        8 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    3
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_printf
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function ___lwdiv
  4855  035C                     ___lwdiv:	
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4859  035C  0020               	movlb	0	; select bank0
  4860  035D  01A5               	clrf	___lwdiv@quotient
  4861  035E  01A6               	clrf	___lwdiv@quotient+1
  4862  035F  0820               	movf	___lwdiv@divisor,w
  4863  0360  0421               	iorwf	___lwdiv@divisor+1,w
  4864  0361  1903               	btfsc	3,2
  4865  0362  2B8C               	goto	l1572
  4866  0363  01A7               	clrf	___lwdiv@counter
  4867  0364  0AA7               	incf	___lwdiv@counter,f
  4868  0365                     l1560:	
  4869  0365  1BA1               	btfsc	___lwdiv@divisor+1,7
  4870  0366  2B71               	goto	l1562
  4871  0367  3001               	movlw	1
  4872  0368                     u835:	
  4873  0368  35A0               	lslf	___lwdiv@divisor,f
  4874  0369  0DA1               	rlf	___lwdiv@divisor+1,f
  4875  036A  0B89               	decfsz	9,f
  4876  036B  2B68               	goto	u835
  4877  036C  3001               	movlw	1
  4878  036D  00A4               	movwf	??___lwdiv
  4879  036E  0824               	movf	??___lwdiv,w
  4880  036F  07A7               	addwf	___lwdiv@counter,f
  4881  0370  2B65               	goto	l1560
  4882  0371                     l1562:	
  4883  0371  3001               	movlw	1
  4884  0372                     u855:	
  4885  0372  35A5               	lslf	___lwdiv@quotient,f
  4886  0373  0DA6               	rlf	___lwdiv@quotient+1,f
  4887  0374  0B89               	decfsz	9,f
  4888  0375  2B72               	goto	u855
  4889  0376  0821               	movf	___lwdiv@divisor+1,w
  4890  0377  0223               	subwf	___lwdiv@dividend+1,w
  4891  0378  1D03               	skipz
  4892  0379  2B7C               	goto	u865
  4893  037A  0820               	movf	___lwdiv@divisor,w
  4894  037B  0222               	subwf	___lwdiv@dividend,w
  4895  037C                     u865:	
  4896  037C  1C03               	skipc
  4897  037D  2B83               	goto	l1568
  4898  037E  0820               	movf	___lwdiv@divisor,w
  4899  037F  02A2               	subwf	___lwdiv@dividend,f
  4900  0380  0821               	movf	___lwdiv@divisor+1,w
  4901  0381  3BA3               	subwfb	___lwdiv@dividend+1,f
  4902  0382  1425               	bsf	___lwdiv@quotient,0
  4903  0383                     l1568:	
  4904  0383  3001               	movlw	1
  4905  0384                     u875:	
  4906  0384  36A1               	lsrf	___lwdiv@divisor+1,f
  4907  0385  0CA0               	rrf	___lwdiv@divisor,f
  4908  0386  0B89               	decfsz	9,f
  4909  0387  2B84               	goto	u875
  4910  0388  3001               	movlw	1
  4911  0389  02A7               	subwf	___lwdiv@counter,f
  4912  038A  1D03               	btfss	3,2
  4913  038B  2B71               	goto	l1562
  4914  038C                     l1572:	
  4915  038C  0826               	movf	___lwdiv@quotient+1,w
  4916  038D  00A1               	movwf	?___lwdiv+1
  4917  038E  0825               	movf	___lwdiv@quotient,w
  4918  038F  00A0               	movwf	?___lwdiv
  4919  0390  0008               	return
  4920  0391                     __end_of___lwdiv:	
  4921                           
  4922                           	psect	text6
  4923  042F                     __ptext6:	
  4924 ;; *************** function ___wmul *****************
  4925 ;; Defined at:
  4926 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4929 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  product         2    4[BANK0 ] unsigned int 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    0[BANK0 ] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4941 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;Total ram usage:        6 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    3
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function ___wmul
  4957  042F                     ___wmul:	
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4961  042F  0020               	movlb	0	; select bank0
  4962  0430  01A4               	clrf	___wmul@product
  4963  0431  01A5               	clrf	___wmul@product+1
  4964  0432                     l2038:	
  4965  0432  1C20               	btfss	___wmul@multiplier,0
  4966  0433  2C38               	goto	l508
  4967  0434  0822               	movf	___wmul@multiplicand,w
  4968  0435  07A4               	addwf	___wmul@product,f
  4969  0436  0823               	movf	___wmul@multiplicand+1,w
  4970  0437  3DA5               	addwfc	___wmul@product+1,f
  4971  0438                     l508:	
  4972  0438  3001               	movlw	1
  4973  0439                     u1545:	
  4974  0439  35A2               	lslf	___wmul@multiplicand,f
  4975  043A  0DA3               	rlf	___wmul@multiplicand+1,f
  4976  043B  0B89               	decfsz	9,f
  4977  043C  2C39               	goto	u1545
  4978  043D  3001               	movlw	1
  4979  043E                     u1555:	
  4980  043E  36A1               	lsrf	___wmul@multiplier+1,f
  4981  043F  0CA0               	rrf	___wmul@multiplier,f
  4982  0440  0B89               	decfsz	9,f
  4983  0441  2C3E               	goto	u1555
  4984  0442  0820               	movf	___wmul@multiplier,w
  4985  0443  0421               	iorwf	___wmul@multiplier+1,w
  4986  0444  1D03               	btfss	3,2
  4987  0445  2C32               	goto	l2038
  4988  0446  0825               	movf	___wmul@product+1,w
  4989  0447  00A1               	movwf	?___wmul+1
  4990  0448  0824               	movf	___wmul@product,w
  4991  0449  00A0               	movwf	?___wmul
  4992  044A  0008               	return
  4993  044B                     __end_of___wmul:	
  4994                           
  4995                           	psect	text7
  4996  04C3                     __ptext7:	
  4997 ;; *************** function _TMR6_HasOverflowOccured *****************
  4998 ;; Defined at:
  4999 ;;		line 161 in file "mcc_generated_files/tmr6.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  status          1    0[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;Total ram usage:        1 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    3
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _TMR6_HasOverflowOccured
  5029  04C3                     _TMR6_HasOverflowOccured:	
  5030                           
  5031                           ;tmr6.c: 164: bool status = PIR4bits.TMR6IF;
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
  5035  04C3  3000               	movlw	0
  5036  04C4  002E               	movlb	14	; select bank14
  5037  04C5  1A90               	btfsc	16,5	;volatile
  5038  04C6  3001               	movlw	1
  5039  04C7  0020               	movlb	0	; select bank0
  5040  04C8  00A0               	movwf	TMR6_HasOverflowOccured@status
  5041                           
  5042                           ;tmr6.c: 165: if(status)
  5043  04C9  0820               	movf	TMR6_HasOverflowOccured@status,w
  5044  04CA  1903               	btfsc	3,2
  5045  04CB  2CCE               	goto	l1982
  5046                           
  5047                           ;tmr6.c: 166: {
  5048                           ;tmr6.c: 168: PIR4bits.TMR6IF = 0;
  5049  04CC  002E               	movlb	14	; select bank14
  5050  04CD  1290               	bcf	16,5	;volatile
  5051  04CE                     l1982:	
  5052                           
  5053                           ;tmr6.c: 169: }
  5054                           ;tmr6.c: 170: return status;
  5055  04CE  0020               	movlb	0	; select bank0
  5056  04CF  0820               	movf	TMR6_HasOverflowOccured@status,w
  5057  04D0  0008               	return
  5058  04D1                     __end_of_TMR6_HasOverflowOccured:	
  5059                           
  5060                           	psect	text8
  5061  04A5                     __ptext8:	
  5062 ;; *************** function _SYSTEM_Initialize *****************
  5063 ;; Defined at:
  5064 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    5
  5085 ;; This function calls:
  5086 ;;		_EUSART_Initialize
  5087 ;;		_I2C2_Initialize
  5088 ;;		_OSCILLATOR_Initialize
  5089 ;;		_PIN_MANAGER_Initialize
  5090 ;;		_TMR6_Initialize
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _SYSTEM_Initialize
  5098  04A5                     _SYSTEM_Initialize:	
  5099                           
  5100                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5104  04A5  3182  2294  3184   	fcall	_PIN_MANAGER_Initialize
  5105                           
  5106                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5107  04A8  3184  24E7  3184   	fcall	_OSCILLATOR_Initialize
  5108                           
  5109                           ;mcc.c: 87: I2C2_Initialize();
  5110  04AB  3184  244B  3184   	fcall	_I2C2_Initialize
  5111                           
  5112                           ;mcc.c: 88: TMR6_Initialize();
  5113  04AE  3184  24B4  3184   	fcall	_TMR6_Initialize
  5114                           
  5115                           ;mcc.c: 89: EUSART_Initialize();
  5116  04B1  3184  24D1         	fcall	_EUSART_Initialize
  5117  04B3  0008               	return
  5118  04B4                     __end_of_SYSTEM_Initialize:	
  5119                           
  5120                           	psect	text9
  5121  04B4                     __ptext9:	
  5122 ;; *************** function _TMR6_Initialize *****************
  5123 ;; Defined at:
  5124 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    4
  5145 ;; This function calls:
  5146 ;;		_TMR6_Start
  5147 ;; This function is called by:
  5148 ;;		_SYSTEM_Initialize
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _TMR6_Initialize
  5154  04B4                     _TMR6_Initialize:	
  5155                           
  5156                           ;tmr6.c: 68: T6CON = 0x70;
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5160  04B4  3070               	movlw	112
  5161  04B5  0025               	movlb	5	; select bank5
  5162  04B6  009A               	movwf	26	;volatile
  5163                           
  5164                           ;tmr6.c: 71: T6CLKCON = 0x04;
  5165  04B7  3004               	movlw	4
  5166  04B8  009C               	movwf	28	;volatile
  5167                           
  5168                           ;tmr6.c: 74: T6HLT = 0x00;
  5169  04B9  019B               	clrf	27	;volatile
  5170                           
  5171                           ;tmr6.c: 77: T6RST = 0x00;
  5172  04BA  019D               	clrf	29	;volatile
  5173                           
  5174                           ;tmr6.c: 80: T6PR = 0xFD;
  5175  04BB  30FD               	movlw	253
  5176  04BC  0099               	movwf	25	;volatile
  5177                           
  5178                           ;tmr6.c: 83: T6TMR = 0x00;
  5179  04BD  0198               	clrf	24	;volatile
  5180                           
  5181                           ;tmr6.c: 86: PIR4bits.TMR6IF = 0;
  5182  04BE  002E               	movlb	14	; select bank14
  5183  04BF  1290               	bcf	16,5	;volatile
  5184                           
  5185                           ;tmr6.c: 89: TMR6_Start();
  5186  04C0  3184  24FC         	fcall	_TMR6_Start
  5187  04C2  0008               	return
  5188  04C3                     __end_of_TMR6_Initialize:	
  5189                           
  5190                           	psect	text10
  5191  04FC                     __ptext10:	
  5192 ;; *************** function _TMR6_Start *****************
  5193 ;; Defined at:
  5194 ;;		line 104 in file "mcc_generated_files/tmr6.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		None
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    3
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_TMR6_Initialize
  5219 ;;		_TMR6_StartTimer
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _TMR6_Start
  5225  04FC                     _TMR6_Start:	
  5226                           
  5227                           ;tmr6.c: 107: T6CONbits.TMR6ON = 1;
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _TMR6_Start: []
  5231  04FC  0025               	movlb	5	; select bank5
  5232  04FD  179A               	bsf	26,7	;volatile
  5233  04FE  0008               	return
  5234  04FF                     __end_of_TMR6_Start:	
  5235                           
  5236                           	psect	text11
  5237  0294                     __ptext11:	
  5238 ;; *************** function _PIN_MANAGER_Initialize *****************
  5239 ;; Defined at:
  5240 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  state           1    0[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;Total ram usage:        1 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    3
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_SYSTEM_Initialize
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _PIN_MANAGER_Initialize
  5270  0294                     _PIN_MANAGER_Initialize:	
  5271                           
  5272                           ;pin_manager.c: 56: LATA = 0x00;
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5276  0294  0020               	movlb	0	; select bank0
  5277  0295  0196               	clrf	22	;volatile
  5278                           
  5279                           ;pin_manager.c: 57: LATB = 0x00;
  5280  0296  0197               	clrf	23	;volatile
  5281                           
  5282                           ;pin_manager.c: 58: LATC = 0x00;
  5283  0297  0198               	clrf	24	;volatile
  5284                           
  5285                           ;pin_manager.c: 63: TRISA = 0xFC;
  5286  0298  30FC               	movlw	252
  5287  0299  0091               	movwf	17	;volatile
  5288                           
  5289                           ;pin_manager.c: 64: TRISB = 0xFF;
  5290  029A  30FF               	movlw	255
  5291  029B  0092               	movwf	18	;volatile
  5292                           
  5293                           ;pin_manager.c: 65: TRISC = 0xBE;
  5294  029C  30BE               	movlw	190
  5295  029D  0093               	movwf	19	;volatile
  5296                           
  5297                           ;pin_manager.c: 70: ANSELC = 0xE7;
  5298  029E  30E7               	movlw	231
  5299  029F  003E               	movlb	30	; select bank30
  5300  02A0  00CE               	movwf	78	;volatile
  5301                           
  5302                           ;pin_manager.c: 71: ANSELB = 0x7F;
  5303  02A1  307F               	movlw	127
  5304  02A2  00C3               	movwf	67	;volatile
  5305                           
  5306                           ;pin_manager.c: 72: ANSELA = 0xFC;
  5307  02A3  30FC               	movlw	252
  5308  02A4  00B8               	movwf	56	;volatile
  5309                           
  5310                           ;pin_manager.c: 77: WPUE = 0x00;
  5311  02A5  01E5               	clrf	101	;volatile
  5312                           
  5313                           ;pin_manager.c: 78: WPUB = 0x00;
  5314  02A6  01C4               	clrf	68	;volatile
  5315                           
  5316                           ;pin_manager.c: 79: WPUA = 0x00;
  5317  02A7  01B9               	clrf	57	;volatile
  5318                           
  5319                           ;pin_manager.c: 80: WPUC = 0x00;
  5320  02A8  01CF               	clrf	79	;volatile
  5321                           
  5322                           ;pin_manager.c: 85: ODCONA = 0x00;
  5323  02A9  01BA               	clrf	58	;volatile
  5324                           
  5325                           ;pin_manager.c: 86: ODCONB = 0x00;
  5326  02AA  01C5               	clrf	69	;volatile
  5327                           
  5328                           ;pin_manager.c: 87: ODCONC = 0x00;
  5329  02AB  01D0               	clrf	80	;volatile
  5330                           
  5331                           ;pin_manager.c: 94: bool state = GIE;
  5332  02AC  3000               	movlw	0
  5333  02AD  1B8B               	btfsc	11,7	;volatile
  5334  02AE  3001               	movlw	1
  5335  02AF  0020               	movlb	0	; select bank0
  5336  02B0  00A0               	movwf	PIN_MANAGER_Initialize@state
  5337                           
  5338                           ;pin_manager.c: 95: GIE = 0;
  5339  02B1  138B               	bcf	11,7	;volatile
  5340                           
  5341                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  5342  02B2  3055               	movlw	85
  5343  02B3  003D               	movlb	29	; select bank29
  5344  02B4  008F               	movwf	15	;volatile
  5345                           
  5346                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  5347  02B5  30AA               	movlw	170
  5348  02B6  008F               	movwf	15	;volatile
  5349                           
  5350                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  5351  02B7  100F               	bcf	15,0	;volatile
  5352                           
  5353                           ;pin_manager.c: 100: T6AINPPSbits.T6AINPPS = 0x0F;
  5354  02B8  081E               	movf	30,w	;volatile
  5355  02B9  39E0               	andlw	-32
  5356  02BA  380F               	iorlw	15
  5357  02BB  009E               	movwf	30	;volatile
  5358                           
  5359                           ;pin_manager.c: 101: RC0PPS = 0x10;
  5360  02BC  3010               	movlw	16
  5361  02BD  003E               	movlb	30	; select bank30
  5362  02BE  00A0               	movwf	32	;volatile
  5363                           
  5364                           ;pin_manager.c: 102: RC3PPS = 0x17;
  5365  02BF  3017               	movlw	23
  5366  02C0  00A3               	movwf	35	;volatile
  5367                           
  5368                           ;pin_manager.c: 103: RC4PPS = 0x16;
  5369  02C1  3016               	movlw	22
  5370  02C2  00A4               	movwf	36	;volatile
  5371                           
  5372                           ;pin_manager.c: 104: RC6PPS = 0x10;
  5373  02C3  3010               	movlw	16
  5374  02C4  00A6               	movwf	38	;volatile
  5375                           
  5376                           ;pin_manager.c: 105: SSP2DATPPSbits.SSP2DATPPS = 0x13;
  5377  02C5  003D               	movlb	29	; select bank29
  5378  02C6  0849               	movf	73,w	;volatile
  5379  02C7  39E0               	andlw	-32
  5380  02C8  3813               	iorlw	19
  5381  02C9  00C9               	movwf	73	;volatile
  5382                           
  5383                           ;pin_manager.c: 106: SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  5384  02CA  0848               	movf	72,w	;volatile
  5385  02CB  39E0               	andlw	-32
  5386  02CC  3814               	iorlw	20
  5387  02CD  00C8               	movwf	72	;volatile
  5388                           
  5389                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  5390  02CE  3055               	movlw	85
  5391  02CF  008F               	movwf	15	;volatile
  5392                           
  5393                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  5394  02D0  30AA               	movlw	170
  5395  02D1  008F               	movwf	15	;volatile
  5396                           
  5397                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
  5398  02D2  140F               	bsf	15,0	;volatile
  5399                           
  5400                           ;pin_manager.c: 112: GIE = state;
  5401  02D3  0020               	movlb	0	; select bank0
  5402  02D4  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  5403  02D5  2AD8               	goto	u1420
  5404  02D6  178B               	bsf	11,7	;volatile
  5405  02D7  0008               	return
  5406  02D8                     u1420:	
  5407  02D8  138B               	bcf	11,7	;volatile
  5408  02D9  0008               	return
  5409  02DA                     __end_of_PIN_MANAGER_Initialize:	
  5410                           
  5411                           	psect	text12
  5412  04E7                     __ptext12:	
  5413 ;; *************** function _OSCILLATOR_Initialize *****************
  5414 ;; Defined at:
  5415 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    3
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_SYSTEM_Initialize
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _OSCILLATOR_Initialize
  5445  04E7                     _OSCILLATOR_Initialize:	
  5446                           
  5447                           ;mcc.c: 95: OSCCON1 = 0x10;
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5451  04E7  3010               	movlw	16
  5452  04E8  0031               	movlb	17	; select bank17
  5453  04E9  008D               	movwf	13	;volatile
  5454                           
  5455                           ;mcc.c: 97: OSCCON3 = 0x00;
  5456  04EA  018F               	clrf	15	;volatile
  5457                           
  5458                           ;mcc.c: 99: OSCEN = 0x00;
  5459  04EB  0191               	clrf	17	;volatile
  5460                           
  5461                           ;mcc.c: 101: OSCFRQ = 0x05;
  5462  04EC  3005               	movlw	5
  5463  04ED  0093               	movwf	19	;volatile
  5464                           
  5465                           ;mcc.c: 103: OSCTUNE = 0x00;
  5466  04EE  0192               	clrf	18	;volatile
  5467  04EF  0008               	return
  5468  04F0                     __end_of_OSCILLATOR_Initialize:	
  5469                           
  5470                           	psect	text13
  5471  044B                     __ptext13:	
  5472 ;; *************** function _I2C2_Initialize *****************
  5473 ;; Defined at:
  5474 ;;		line 198 in file "mcc_generated_files/i2c2.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    3
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_SYSTEM_Initialize
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _I2C2_Initialize
  5504  044B                     _I2C2_Initialize:	
  5505                           
  5506                           ;i2c2.c: 200: i2c2_object.pTrHead = i2c2_tr_queue;
  5507                           
  5508                           ;incstack = 0
  5509                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5510  044B  305C               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5511  044C  0020               	movlb	0	; select bank0
  5512  044D  00A0               	movwf	??_I2C2_Initialize
  5513  044E  0820               	movf	??_I2C2_Initialize,w
  5514  044F  00C4               	movwf	low ((_i2c2_object| 0+1))
  5515                           
  5516                           ;i2c2.c: 201: i2c2_object.pTrTail = i2c2_tr_queue;
  5517  0450  305C               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5518  0451  00A0               	movwf	??_I2C2_Initialize
  5519  0452  0820               	movf	??_I2C2_Initialize,w
  5520  0453  00C3               	movwf	_i2c2_object
  5521                           
  5522                           ;i2c2.c: 202: i2c2_object.trStatus.s.empty = 1;
  5523  0454  14C5               	bsf	_i2c2_object+2,1
  5524                           
  5525                           ;i2c2.c: 203: i2c2_object.trStatus.s.full = 0;
  5526  0455  1045               	bcf	_i2c2_object+2,0
  5527                           
  5528                           ;i2c2.c: 205: i2c2_object.i2cErrors = 0;
  5529  0456  01C7               	clrf	_i2c2_object+4
  5530                           
  5531                           ;i2c2.c: 208: SSP2STAT = 0x80;
  5532  0457  3080               	movlw	128
  5533  0458  0023               	movlb	3	; select bank3
  5534  0459  0099               	movwf	25	;volatile
  5535                           
  5536                           ;i2c2.c: 210: SSP2CON1 = 0x28;
  5537  045A  3028               	movlw	40
  5538  045B  009A               	movwf	26	;volatile
  5539                           
  5540                           ;i2c2.c: 212: SSP2CON3 = 0x00;
  5541  045C  019C               	clrf	28	;volatile
  5542                           
  5543                           ;i2c2.c: 214: SSP2ADD = 0x9F;
  5544  045D  309F               	movlw	159
  5545  045E  0097               	movwf	23	;volatile
  5546                           
  5547                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
  5548  045F  002E               	movlb	14	; select bank14
  5549  0460  110F               	bcf	15,2	;volatile
  5550                           
  5551                           ;i2c2.c: 220: PIE3bits.SSP2IE = 1;
  5552  0461  1519               	bsf	25,2	;volatile
  5553  0462  0008               	return
  5554  0463                     __end_of_I2C2_Initialize:	
  5555                           
  5556                           	psect	text14
  5557  04D1                     __ptext14:	
  5558 ;; *************** function _EUSART_Initialize *****************
  5559 ;; Defined at:
  5560 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    3
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_SYSTEM_Initialize
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _EUSART_Initialize
  5590  04D1                     _EUSART_Initialize:	
  5591                           
  5592                           ;eusart.c: 60: BAUD1CON = 0x08;
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _EUSART_Initialize: [wreg]
  5596  04D1  3008               	movlw	8
  5597  04D2  0022               	movlb	2	; select bank2
  5598  04D3  009F               	movwf	31	;volatile
  5599                           
  5600                           ;eusart.c: 63: RC1STA = 0x80;
  5601  04D4  3080               	movlw	128
  5602  04D5  009D               	movwf	29	;volatile
  5603                           
  5604                           ;eusart.c: 66: TX1STA = 0x24;
  5605  04D6  3024               	movlw	36
  5606  04D7  009E               	movwf	30	;volatile
  5607                           
  5608                           ;eusart.c: 69: SP1BRGL = 0x40;
  5609  04D8  3040               	movlw	64
  5610  04D9  009B               	movwf	27	;volatile
  5611                           
  5612                           ;eusart.c: 72: SP1BRGH = 0x03;
  5613  04DA  3003               	movlw	3
  5614  04DB  009C               	movwf	28	;volatile
  5615  04DC  0008               	return
  5616  04DD                     __end_of_EUSART_Initialize:	
  5617                           
  5618                           	psect	text15
  5619  0320                     __ptext15:	
  5620 ;; *************** function _EMC1001_Read *****************
  5621 ;; Defined at:
  5622 ;;		line 8 in file "main.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  reg             1    wreg     unsigned char 
  5625 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  5626 ;;		 -> main@templo(1), main@temp(1), 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  reg             1   10[BANK0 ] unsigned char 
  5629 ;;  status          1   11[BANK0 ] enum E13567
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5639 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;Total ram usage:        5 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    4
  5646 ;; This function calls:
  5647 ;;		_I2C2_MasterReadTRBBuild
  5648 ;;		_I2C2_MasterTRBInsert
  5649 ;;		_I2C2_MasterWriteTRBBuild
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           
  5656                           ;psect for function _EMC1001_Read
  5657  0320                     _EMC1001_Read:	
  5658                           
  5659                           ;incstack = 0
  5660                           ; Regs used in _EMC1001_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5661                           ;EMC1001_Read@reg stored from wreg
  5662  0320  0020               	movlb	0	; select bank0
  5663  0321  00AA               	movwf	EMC1001_Read@reg
  5664                           
  5665                           ;main.c: 10: I2C2_MESSAGE_STATUS status = I2C2_MESSAGE_PENDING;
  5666  0322  3002               	movlw	2
  5667  0323  00A8               	movwf	??_EMC1001_Read
  5668  0324  0828               	movf	??_EMC1001_Read,w
  5669  0325  00AB               	movwf	EMC1001_Read@status
  5670                           
  5671                           ;main.c: 11: static I2C2_TRANSACTION_REQUEST_BLOCK trb[2];
  5672                           ;main.c: 13: I2C2_MasterWriteTRBBuild(&trb[0], &reg, 1, 0x38);
  5673  0326  302A               	movlw	(low (EMC1001_Read@reg| 0))& (0+255)
  5674  0327  00A8               	movwf	??_EMC1001_Read
  5675  0328  0828               	movf	??_EMC1001_Read,w
  5676  0329  00A0               	movwf	I2C2_MasterWriteTRBBuild@pdata
  5677  032A  01A1               	clrf	I2C2_MasterWriteTRBBuild@length
  5678  032B  0AA1               	incf	I2C2_MasterWriteTRBBuild@length,f
  5679  032C  3038               	movlw	56
  5680  032D  00A2               	movwf	I2C2_MasterWriteTRBBuild@address
  5681  032E  3000               	movlw	0
  5682  032F  00A3               	movwf	I2C2_MasterWriteTRBBuild@address+1
  5683  0330  304C               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5684  0331  3184  240F  3183   	fcall	_I2C2_MasterWriteTRBBuild
  5685                           
  5686                           ;main.c: 14: I2C2_MasterReadTRBBuild(&trb[1], pData, 1, 0x38);
  5687  0334  0020               	movlb	0	; select bank0
  5688  0335  0827               	movf	EMC1001_Read@pData,w
  5689  0336  00A8               	movwf	??_EMC1001_Read
  5690  0337  0828               	movf	??_EMC1001_Read,w
  5691  0338  00A0               	movwf	I2C2_MasterReadTRBBuild@pdata
  5692  0339  01A1               	clrf	I2C2_MasterReadTRBBuild@length
  5693  033A  0AA1               	incf	I2C2_MasterReadTRBBuild@length,f
  5694  033B  3038               	movlw	56
  5695  033C  00A2               	movwf	I2C2_MasterReadTRBBuild@address
  5696  033D  3000               	movlw	0
  5697  033E  00A3               	movwf	I2C2_MasterReadTRBBuild@address+1
  5698  033F  3050               	movlw	(low ((EMC1001_Read@trb| 0+4)))& (0+255)
  5699  0340  3183  23E7  3183   	fcall	_I2C2_MasterReadTRBBuild
  5700                           
  5701                           ;main.c: 15: I2C2_MasterTRBInsert(2, &trb[0], &status);
  5702  0343  304C               	movlw	(low (EMC1001_Read@trb| 0))& (0+255)
  5703  0344  0020               	movlb	0	; select bank0
  5704  0345  00A8               	movwf	??_EMC1001_Read
  5705  0346  0828               	movf	??_EMC1001_Read,w
  5706  0347  00A0               	movwf	I2C2_MasterTRBInsert@ptrb_list
  5707  0348  302B               	movlw	(low (EMC1001_Read@status| 0))& (0+255)
  5708  0349  00A9               	movwf	??_EMC1001_Read+1
  5709  034A  0829               	movf	??_EMC1001_Read+1,w
  5710  034B  00A1               	movwf	I2C2_MasterTRBInsert@pflag
  5711  034C  3002               	movlw	2
  5712  034D  3182  22DA  3183   	fcall	_I2C2_MasterTRBInsert
  5713  0350                     l1618:	
  5714                           ;main.c: 17: while(status == I2C2_MESSAGE_PENDING);
  5715                           
  5716  0350  3002               	movlw	2
  5717  0351  0020               	movlb	0	; select bank0
  5718  0352  062B               	xorwf	EMC1001_Read@status,w
  5719  0353  1903               	btfsc	3,2
  5720  0354  2B50               	goto	l1618
  5721                           
  5722                           ;main.c: 19: return (status == I2C2_MESSAGE_COMPLETE);
  5723  0355  082B               	movf	EMC1001_Read@status,w
  5724  0356  1D03               	btfss	3,2
  5725  0357  2B5A               	goto	u970
  5726  0358  3001               	movlw	1
  5727  0359  0008               	return
  5728  035A                     u970:	
  5729  035A  3000               	movlw	0
  5730  035B  0008               	return
  5731  035C                     __end_of_EMC1001_Read:	
  5732                           
  5733                           	psect	text16
  5734  040F                     __ptext16:	
  5735 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
  5736 ;; Defined at:
  5737 ;;		line 707 in file "mcc_generated_files/i2c2.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  ptrb            1    wreg     PTR struct .
  5740 ;;		 -> I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5741 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5742 ;;		 -> EMC1001_Read@reg(1), 
  5743 ;;  length          1    1[BANK0 ] unsigned char 
  5744 ;;  address         2    2[BANK0 ] unsigned int 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5747 ;;		 -> I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;Total ram usage:        7 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    3
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_EMC1001_Read
  5768 ;;		_I2C2_MasterWrite
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _I2C2_MasterWriteTRBBuild
  5774  040F                     _I2C2_MasterWriteTRBBuild:	
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5778                           ;I2C2_MasterWriteTRBBuild@ptrb stored from wreg
  5779  040F  0020               	movlb	0	; select bank0
  5780  0410  00A6               	movwf	I2C2_MasterWriteTRBBuild@ptrb
  5781                           
  5782                           ;i2c2.c: 713: ptrb->address = address << 1;
  5783  0411  0823               	movf	I2C2_MasterWriteTRBBuild@address+1,w
  5784  0412  00A5               	movwf	??_I2C2_MasterWriteTRBBuild+1
  5785  0413  0822               	movf	I2C2_MasterWriteTRBBuild@address,w
  5786  0414  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5787  0415  35A4               	lslf	??_I2C2_MasterWriteTRBBuild,f
  5788  0416  0DA5               	rlf	??_I2C2_MasterWriteTRBBuild+1,f
  5789  0417  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5790  0418  0086               	movwf	6
  5791  0419  0187               	clrf	7
  5792  041A  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5793  041B  3FC0               	movwi [0]fsr1
  5794  041C  0825               	movf	??_I2C2_MasterWriteTRBBuild+1,w
  5795  041D  3FC1               	movwi [1]fsr1
  5796                           
  5797                           ;i2c2.c: 714: ptrb->length = length;
  5798  041E  0821               	movf	I2C2_MasterWriteTRBBuild@length,w
  5799  041F  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5800  0420  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5801  0421  3E02               	addlw	2
  5802  0422  0086               	movwf	6
  5803  0423  0187               	clrf	7
  5804  0424  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5805  0425  0081               	movwf	1
  5806                           
  5807                           ;i2c2.c: 715: ptrb->pbuffer = pdata;
  5808  0426  0820               	movf	I2C2_MasterWriteTRBBuild@pdata,w
  5809  0427  00A4               	movwf	??_I2C2_MasterWriteTRBBuild
  5810  0428  0826               	movf	I2C2_MasterWriteTRBBuild@ptrb,w
  5811  0429  3E03               	addlw	3
  5812  042A  0086               	movwf	6
  5813  042B  0187               	clrf	7
  5814  042C  0824               	movf	??_I2C2_MasterWriteTRBBuild,w
  5815  042D  0081               	movwf	1
  5816  042E  0008               	return
  5817  042F                     __end_of_I2C2_MasterWriteTRBBuild:	
  5818                           
  5819                           	psect	text17
  5820  02DA                     __ptext17:	
  5821 ;; *************** function _I2C2_MasterTRBInsert *****************
  5822 ;; Defined at:
  5823 ;;		line 641 in file "mcc_generated_files/i2c2.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  count           1    wreg     unsigned char 
  5826 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5827 ;;		 -> I2C2_MasterRead@trBlock(4), I2C2_MasterWrite@trBlock(4), EMC1001_Read@trb(8), 
  5828 ;;  pflag           1    1[BANK0 ] PTR enum E13560
  5829 ;;		 -> EMC1001_Read@status(1), 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  count           1    3[BANK0 ] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;Total ram usage:        4 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    3
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_EMC1001_Read
  5852 ;;		_I2C2_MasterWrite
  5853 ;;		_I2C2_MasterRead
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           
  5858                           ;psect for function _I2C2_MasterTRBInsert
  5859  02DA                     _I2C2_MasterTRBInsert:	
  5860                           
  5861                           ;incstack = 0
  5862                           ; Regs used in _I2C2_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5863                           ;I2C2_MasterTRBInsert@count stored from wreg
  5864  02DA  0020               	movlb	0	; select bank0
  5865  02DB  00A3               	movwf	I2C2_MasterTRBInsert@count
  5866                           
  5867                           ;i2c2.c: 648: if (i2c2_object.trStatus.s.full != 1)
  5868  02DC  1845               	btfsc	_i2c2_object+2,0
  5869  02DD  2B0E               	goto	l1530
  5870                           
  5871                           ;i2c2.c: 649: {
  5872                           ;i2c2.c: 650: *pflag = I2C2_MESSAGE_PENDING;
  5873  02DE  3002               	movlw	2
  5874  02DF  00A2               	movwf	??_I2C2_MasterTRBInsert
  5875  02E0  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5876  02E1  0086               	movwf	6
  5877  02E2  0187               	clrf	7
  5878  02E3  0822               	movf	??_I2C2_MasterTRBInsert,w
  5879  02E4  0081               	movwf	1
  5880                           
  5881                           ;i2c2.c: 652: i2c2_object.pTrTail->ptrb_list = ptrb_list;
  5882  02E5  0820               	movf	I2C2_MasterTRBInsert@ptrb_list,w
  5883  02E6  00A2               	movwf	??_I2C2_MasterTRBInsert
  5884  02E7  0A43               	incf	_i2c2_object,w
  5885  02E8  0086               	movwf	6
  5886  02E9  0187               	clrf	7
  5887  02EA  0822               	movf	??_I2C2_MasterTRBInsert,w
  5888  02EB  0081               	movwf	1
  5889                           
  5890                           ;i2c2.c: 653: i2c2_object.pTrTail->count = count;
  5891  02EC  0823               	movf	I2C2_MasterTRBInsert@count,w
  5892  02ED  00A2               	movwf	??_I2C2_MasterTRBInsert
  5893  02EE  0843               	movf	_i2c2_object,w
  5894  02EF  0086               	movwf	6
  5895  02F0  0187               	clrf	7
  5896  02F1  0822               	movf	??_I2C2_MasterTRBInsert,w
  5897  02F2  0081               	movwf	1
  5898                           
  5899                           ;i2c2.c: 654: i2c2_object.pTrTail->pTrFlag = pflag;
  5900  02F3  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5901  02F4  00A2               	movwf	??_I2C2_MasterTRBInsert
  5902  02F5  0843               	movf	_i2c2_object,w
  5903  02F6  3E02               	addlw	2
  5904  02F7  0086               	movwf	6
  5905  02F8  0187               	clrf	7
  5906  02F9  0822               	movf	??_I2C2_MasterTRBInsert,w
  5907  02FA  0081               	movwf	1
  5908                           
  5909                           ;i2c2.c: 655: i2c2_object.pTrTail++;
  5910  02FB  3003               	movlw	3
  5911  02FC  00A2               	movwf	??_I2C2_MasterTRBInsert
  5912  02FD  0822               	movf	??_I2C2_MasterTRBInsert,w
  5913  02FE  07C3               	addwf	_i2c2_object,f
  5914                           
  5915                           ;i2c2.c: 658: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
  5916  02FF  0843               	movf	_i2c2_object,w
  5917  0300  3A5F               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  5918  0301  1D03               	skipz
  5919  0302  2B07               	goto	l1526
  5920                           
  5921                           ;i2c2.c: 659: {
  5922                           ;i2c2.c: 661: i2c2_object.pTrTail = i2c2_tr_queue;
  5923  0303  305C               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5924  0304  00A2               	movwf	??_I2C2_MasterTRBInsert
  5925  0305  0822               	movf	??_I2C2_MasterTRBInsert,w
  5926  0306  00C3               	movwf	_i2c2_object
  5927  0307                     l1526:	
  5928                           
  5929                           ;i2c2.c: 662: }
  5930                           ;i2c2.c: 666: i2c2_object.trStatus.s.empty = 0;
  5931  0307  10C5               	bcf	_i2c2_object+2,1
  5932                           
  5933                           ;i2c2.c: 669: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
  5934  0308  0844               	movf	low ((_i2c2_object| 0+1)),w
  5935  0309  0643               	xorwf	_i2c2_object,w
  5936  030A  1D03               	skipz
  5937  030B  2B13               	goto	l1532
  5938                           
  5939                           ;i2c2.c: 670: {
  5940                           ;i2c2.c: 672: i2c2_object.trStatus.s.full = 1;
  5941  030C  1445               	bsf	_i2c2_object+2,0
  5942                           
  5943                           ;i2c2.c: 673: }
  5944                           ;i2c2.c: 675: }
  5945  030D  2B13               	goto	l1532
  5946  030E                     l1530:	
  5947                           
  5948                           ;i2c2.c: 676: else
  5949                           ;i2c2.c: 677: {
  5950                           ;i2c2.c: 678: *pflag = I2C2_MESSAGE_FAIL;
  5951  030E  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5952  030F  0086               	movwf	6
  5953  0310  0187               	clrf	7
  5954  0311  0181               	clrf	1
  5955  0312  0A81               	incf	1,f
  5956  0313                     l1532:	
  5957                           
  5958                           ;i2c2.c: 679: }
  5959                           ;i2c2.c: 682: if (*pflag == I2C2_MESSAGE_PENDING)
  5960  0313  0821               	movf	I2C2_MasterTRBInsert@pflag,w
  5961  0314  0086               	movwf	6
  5962  0315  0187               	clrf	7
  5963  0316  3002               	movlw	2
  5964  0317  0601               	xorwf	1,w
  5965  0318  1D03               	btfss	3,2
  5966  0319  0008               	return
  5967  031A                     l1536:	
  5968                           ;i2c2.c: 683: {
  5969                           ;i2c2.c: 684: while(i2c2_state != S_MASTER_IDLE);
  5970                           
  5971  031A  084B               	movf	_i2c2_state,w
  5972  031B  1D03               	btfss	3,2
  5973  031C  2B1A               	goto	l1536
  5974                           
  5975                           ;i2c2.c: 685: {
  5976                           ;i2c2.c: 688: PIR3bits.SSP2IF = 1;
  5977  031D  002E               	movlb	14	; select bank14
  5978  031E  150F               	bsf	15,2	;volatile
  5979  031F  0008               	return
  5980  0320                     __end_of_I2C2_MasterTRBInsert:	
  5981                           
  5982                           	psect	text18
  5983  03E7                     __ptext18:	
  5984 ;; *************** function _I2C2_MasterReadTRBBuild *****************
  5985 ;; Defined at:
  5986 ;;		line 694 in file "mcc_generated_files/i2c2.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  ptrb            1    wreg     PTR struct .
  5989 ;;		 -> I2C2_MasterRead@trBlock(4), EMC1001_Read@trb(8), 
  5990 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5991 ;;		 -> main@templo(1), main@temp(1), 
  5992 ;;  length          1    1[BANK0 ] unsigned char 
  5993 ;;  address         2    2[BANK0 ] unsigned int 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5996 ;;		 -> I2C2_MasterRead@trBlock(4), EMC1001_Read@trb(8), 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;Total ram usage:        7 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    3
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_EMC1001_Read
  6017 ;;		_I2C2_MasterRead
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _I2C2_MasterReadTRBBuild
  6023  03E7                     _I2C2_MasterReadTRBBuild:	
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6027                           ;I2C2_MasterReadTRBBuild@ptrb stored from wreg
  6028  03E7  0020               	movlb	0	; select bank0
  6029  03E8  00A6               	movwf	I2C2_MasterReadTRBBuild@ptrb
  6030                           
  6031                           ;i2c2.c: 700: ptrb->address = address << 1;
  6032  03E9  0823               	movf	I2C2_MasterReadTRBBuild@address+1,w
  6033  03EA  00A5               	movwf	??_I2C2_MasterReadTRBBuild+1
  6034  03EB  0822               	movf	I2C2_MasterReadTRBBuild@address,w
  6035  03EC  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6036  03ED  35A4               	lslf	??_I2C2_MasterReadTRBBuild,f
  6037  03EE  0DA5               	rlf	??_I2C2_MasterReadTRBBuild+1,f
  6038  03EF  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6039  03F0  0086               	movwf	6
  6040  03F1  0187               	clrf	7
  6041  03F2  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6042  03F3  3FC0               	movwi [0]fsr1
  6043  03F4  0825               	movf	??_I2C2_MasterReadTRBBuild+1,w
  6044  03F5  3FC1               	movwi [1]fsr1
  6045                           
  6046                           ;i2c2.c: 702: ptrb->address |= 0x01;
  6047  03F6  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6048  03F7  0086               	movwf	6
  6049  03F8  0187               	clrf	7
  6050  03F9  3001               	movlw	1
  6051  03FA  0481               	iorwf	1,f
  6052  03FB  3141               	addfsr 1,1
  6053  03FC  3000               	movlw	0
  6054  03FD  0481               	iorwf	1,f
  6055                           
  6056                           ;i2c2.c: 703: ptrb->length = length;
  6057  03FE  0821               	movf	I2C2_MasterReadTRBBuild@length,w
  6058  03FF  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6059  0400  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6060  0401  3E02               	addlw	2
  6061  0402  0086               	movwf	6
  6062  0403  0187               	clrf	7
  6063  0404  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6064  0405  0081               	movwf	1
  6065                           
  6066                           ;i2c2.c: 704: ptrb->pbuffer = pdata;
  6067  0406  0820               	movf	I2C2_MasterReadTRBBuild@pdata,w
  6068  0407  00A4               	movwf	??_I2C2_MasterReadTRBBuild
  6069  0408  0826               	movf	I2C2_MasterReadTRBBuild@ptrb,w
  6070  0409  3E03               	addlw	3
  6071  040A  0086               	movwf	6
  6072  040B  0187               	clrf	7
  6073  040C  0824               	movf	??_I2C2_MasterReadTRBBuild,w
  6074  040D  0081               	movwf	1
  6075  040E  0008               	return
  6076  040F                     __end_of_I2C2_MasterReadTRBBuild:	
  6077                           
  6078                           	psect	intentry
  6079  0004                     __pintentry:	
  6080 ;; *************** function _INTERRUPT_InterruptManager *****************
  6081 ;; Defined at:
  6082 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      void 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;Total ram usage:        1 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    2
  6103 ;; This function calls:
  6104 ;;		_I2C2_BusCollisionISR
  6105 ;;		_I2C2_ISR
  6106 ;; This function is called by:
  6107 ;;		Interrupt level 1
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111  0004                     _INTERRUPT_InterruptManager:	
  6112                           
  6113                           ;incstack = 0
  6114  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6115                           
  6116                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6117  0005  3180               	pagesel	$
  6118  0006  0020               	movlb	0	; select bank0
  6119  0007  087F               	movf	127,w
  6120  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  6121                           
  6122                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL2IE == 1 && PIR3bits.BC
      +                          L2IF == 1)
  6123  0009  1F0B               	btfss	11,6	;volatile
  6124  000A  2813               	goto	i1l245
  6125  000B  002E               	movlb	14	; select bank14
  6126  000C  1999               	btfsc	25,3	;volatile
  6127  000D  1D8F               	btfss	15,3	;volatile
  6128  000E  2813               	goto	i1l245
  6129                           
  6130                           ;interrupt_manager.c: 55: {
  6131                           ;interrupt_manager.c: 56: I2C2_BusCollisionISR();
  6132  000F  3184  24FF  3180   	fcall	_I2C2_BusCollisionISR
  6133                           
  6134                           ;interrupt_manager.c: 57: }
  6135  0012  281B               	goto	i1l249
  6136  0013                     i1l245:	
  6137                           
  6138                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP2IE == 1 && PIR3bi
      +                          ts.SSP2IF == 1)
  6139  0013  1F0B               	btfss	11,6	;volatile
  6140  0014  281B               	goto	i1l249
  6141  0015  002E               	movlb	14	; select bank14
  6142  0016  1919               	btfsc	25,2	;volatile
  6143  0017  1D0F               	btfss	15,2	;volatile
  6144  0018  281B               	goto	i1l249
  6145                           
  6146                           ;interrupt_manager.c: 59: {
  6147                           ;interrupt_manager.c: 60: I2C2_ISR();
  6148  0019  3180  2034         	fcall	_I2C2_ISR
  6149  001B                     i1l249:	
  6150                           ;interrupt_manager.c: 62: else
  6151                           ;interrupt_manager.c: 63: {
  6152                           
  6153                           ;interrupt_manager.c: 61: }
  6154                           
  6155  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  6156  001C  0020               	movlb	0	; select bank0
  6157  001D  00FF               	movwf	127
  6158  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6159  001F  0009               	retfie
  6160  0020                     __end_of_INTERRUPT_InterruptManager:	
  6161                           
  6162                           	psect	text20
  6163  0034                     __ptext20:	
  6164 ;; *************** function _I2C2_ISR *****************
  6165 ;; Defined at:
  6166 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;Total ram usage:        4 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    1
  6187 ;; This function calls:
  6188 ;;		_I2C2_FunctionComplete
  6189 ;;		_I2C2_Stop
  6190 ;; This function is called by:
  6191 ;;		_INTERRUPT_InterruptManager
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function _I2C2_ISR
  6197  0034                     _I2C2_ISR:	
  6198                           
  6199                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  6200                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  6201                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  6202                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  6203                           ;i2c2.c: 241: PIR3bits.SSP2IF = 0;
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6207  0034  002E               	movlb	14	; select bank14
  6208  0035  110F               	bcf	15,2	;volatile
  6209                           
  6210                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  6211  0036  0023               	movlb	3	; select bank3
  6212  0037  1F9A               	btfss	26,7	;volatile
  6213  0038  2963               	goto	i1l1808
  6214                           
  6215                           ;i2c2.c: 246: {
  6216                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  6217  0039  139A               	bcf	26,7	;volatile
  6218                           
  6219                           ;i2c2.c: 249: i2c2_state = S_MASTER_IDLE;
  6220  003A  0020               	movlb	0	; select bank0
  6221  003B  01CB               	clrf	_i2c2_state
  6222                           
  6223                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  6224  003C  0873               	movf	_p_i2c2_current,w
  6225  003D  3E02               	addlw	2
  6226  003E  0086               	movwf	6
  6227  003F  0187               	clrf	7
  6228  0040  0801               	movf	1,w
  6229  0041  0086               	movwf	6
  6230  0042  0187               	clrf	7
  6231  0043  0181               	clrf	1
  6232  0044  0A81               	incf	1,f
  6233                           
  6234                           ;i2c2.c: 253: p_i2c2_current = (0);
  6235  0045  01F3               	clrf	_p_i2c2_current
  6236                           
  6237                           ;i2c2.c: 255: return;
  6238  0046  0008               	return
  6239  0047                     i1l309:	
  6240                           ;i2c2.c: 260: {
  6241                           ;i2c2.c: 261: case S_MASTER_IDLE:
  6242                           
  6243                           ;i2c2.c: 256: }
  6244                           ;i2c2.c: 259: switch(i2c2_state)
  6245                           
  6246                           
  6247                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  6248  0047  18C5               	btfsc	_i2c2_object+2,1
  6249  0048  0008               	return
  6250                           
  6251                           ;i2c2.c: 264: {
  6252                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  6253  0049  0844               	movf	low ((_i2c2_object| 0+1)),w
  6254  004A  00F9               	movwf	??_I2C2_ISR
  6255  004B  0879               	movf	??_I2C2_ISR,w
  6256  004C  00F3               	movwf	_p_i2c2_current
  6257                           
  6258                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  6259  004D  0844               	movf	low ((_i2c2_object| 0+1)),w
  6260  004E  0086               	movwf	6
  6261  004F  0187               	clrf	7
  6262  0050  0801               	movf	1,w
  6263  0051  00F9               	movwf	??_I2C2_ISR
  6264  0052  0879               	movf	??_I2C2_ISR,w
  6265  0053  00F2               	movwf	_i2c2_trb_count
  6266                           
  6267                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  6268  0054  0844               	movf	low ((_i2c2_object| 0+1)),w
  6269  0055  0086               	movwf	6
  6270  0056  0187               	clrf	7
  6271  0057  3F41               	moviw [1]fsr1
  6272  0058  00F4               	movwf	_p_i2c2_trb_current
  6273                           
  6274                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  6275  0059  3003               	movlw	3
  6276  005A  00F9               	movwf	??_I2C2_ISR
  6277  005B  0879               	movf	??_I2C2_ISR,w
  6278  005C  07C4               	addwf	low ((_i2c2_object| 0+1)),f
  6279                           
  6280                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  6281  005D  0844               	movf	low ((_i2c2_object| 0+1)),w
  6282  005E  3A5F               	xorlw	(low ((_i2c2_tr_queue| 0+3)))& (0+255)
  6283  005F  1D03               	skipz
  6284  0060  2865               	goto	i1l1696
  6285                           
  6286                           ;i2c2.c: 274: {
  6287                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  6288  0061  305C               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6289  0062  00F9               	movwf	??_I2C2_ISR
  6290  0063  0879               	movf	??_I2C2_ISR,w
  6291  0064  00C4               	movwf	low ((_i2c2_object| 0+1))
  6292  0065                     i1l1696:	
  6293                           
  6294                           ;i2c2.c: 277: }
  6295                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  6296  0065  1045               	bcf	_i2c2_object+2,0
  6297                           
  6298                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  6299  0066  0844               	movf	low ((_i2c2_object| 0+1)),w
  6300  0067  0643               	xorwf	_i2c2_object,w
  6301  0068  1903               	btfsc	3,2
  6302                           
  6303                           ;i2c2.c: 285: {
  6304                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  6305  0069  14C5               	bsf	_i2c2_object+2,1
  6306                           
  6307                           ;i2c2.c: 288: }
  6308                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  6309  006A  0023               	movlb	3	; select bank3
  6310  006B  141B               	bsf	27,0	;volatile
  6311                           
  6312                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  6313  006C  3002               	movlw	2
  6314  006D  00F9               	movwf	??_I2C2_ISR
  6315  006E  0879               	movf	??_I2C2_ISR,w
  6316  006F  0020               	movlb	0	; select bank0
  6317  0070  00CB               	movwf	_i2c2_state
  6318                           
  6319                           ;i2c2.c: 295: }
  6320                           ;i2c2.c: 297: break;
  6321  0071  0008               	return
  6322  0072                     i1l314:	
  6323                           ;i2c2.c: 299: case S_MASTER_RESTART:
  6324                           
  6325                           
  6326                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  6327  0072  0023               	movlb	3	; select bank3
  6328  0073  149B               	bsf	27,1	;volatile
  6329                           
  6330                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  6331  0074  3002               	movlw	2
  6332  0075  00F9               	movwf	??_I2C2_ISR
  6333  0076  0879               	movf	??_I2C2_ISR,w
  6334  0077  0020               	movlb	0	; select bank0
  6335  0078  00CB               	movwf	_i2c2_state
  6336                           
  6337                           ;i2c2.c: 309: break;
  6338  0079  0008               	return
  6339  007A                     i1l315:	
  6340                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  6341                           
  6342                           
  6343                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  6344  007A  0023               	movlb	3	; select bank3
  6345  007B  1F1B               	btfss	27,6	;volatile
  6346  007C  2886               	goto	i1l1708
  6347                           
  6348                           ;i2c2.c: 314: {
  6349                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  6350  007D  3001               	movlw	1
  6351  007E  00F9               	movwf	??_I2C2_ISR
  6352  007F  0879               	movf	??_I2C2_ISR,w
  6353  0080  0020               	movlb	0	; select bank0
  6354  0081  07C7               	addwf	_i2c2_object+4,f
  6355                           
  6356                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6357  0082  3004               	movlw	4
  6358  0083  3184  247B         	fcall	_I2C2_Stop
  6359                           
  6360                           ;i2c2.c: 317: }
  6361  0085  0008               	return
  6362  0086                     i1l1708:	
  6363                           
  6364                           ;i2c2.c: 318: else
  6365                           ;i2c2.c: 319: {
  6366                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  6367  0086  0876               	movf	I2C2_ISR@i2c_address+1,w
  6368  0087  00FA               	movwf	??_I2C2_ISR+1
  6369  0088  0875               	movf	I2C2_ISR@i2c_address,w
  6370  0089  00F9               	movwf	??_I2C2_ISR
  6371  008A  36FA               	lsrf	??_I2C2_ISR+1,f
  6372  008B  0CF9               	rrf	??_I2C2_ISR,f
  6373  008C  0879               	movf	??_I2C2_ISR,w
  6374  008D  0023               	movlb	3	; select bank3
  6375  008E  0096               	movwf	22	;volatile
  6376                           
  6377                           ;i2c2.c: 324: if(i2c_address & 0x01)
  6378  008F  1C75               	btfss	I2C2_ISR@i2c_address,0
  6379  0090  2897               	goto	i1l1714
  6380                           
  6381                           ;i2c2.c: 325: {
  6382                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  6383  0091  300B               	movlw	11
  6384  0092  00F9               	movwf	??_I2C2_ISR
  6385  0093  0879               	movf	??_I2C2_ISR,w
  6386  0094  0020               	movlb	0	; select bank0
  6387  0095  00CB               	movwf	_i2c2_state
  6388                           
  6389                           ;i2c2.c: 329: }
  6390  0096  0008               	return
  6391  0097                     i1l1714:	
  6392                           
  6393                           ;i2c2.c: 330: else
  6394                           ;i2c2.c: 331: {
  6395                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  6396  0097  3003               	movlw	3
  6397  0098  00F9               	movwf	??_I2C2_ISR
  6398  0099  0879               	movf	??_I2C2_ISR,w
  6399  009A  0020               	movlb	0	; select bank0
  6400  009B  00CB               	movwf	_i2c2_state
  6401                           
  6402                           ;i2c2.c: 334: }
  6403                           ;i2c2.c: 335: }
  6404                           ;i2c2.c: 337: break;
  6405  009C  0008               	return
  6406  009D                     i1l320:	
  6407                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  6408                           
  6409                           
  6410                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  6411  009D  0023               	movlb	3	; select bank3
  6412  009E  1F1B               	btfss	27,6	;volatile
  6413  009F  28A9               	goto	i1l321
  6414                           
  6415                           ;i2c2.c: 342: {
  6416                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  6417  00A0  3001               	movlw	1
  6418  00A1  00F9               	movwf	??_I2C2_ISR
  6419  00A2  0879               	movf	??_I2C2_ISR,w
  6420  00A3  0020               	movlb	0	; select bank0
  6421  00A4  07C7               	addwf	_i2c2_object+4,f
  6422                           
  6423                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6424  00A5  3004               	movlw	4
  6425  00A6  3184  247B         	fcall	_I2C2_Stop
  6426                           
  6427                           ;i2c2.c: 345: }
  6428  00A8  0008               	return
  6429  00A9                     i1l321:	
  6430                           
  6431                           ;i2c2.c: 346: else
  6432                           ;i2c2.c: 347: {
  6433                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  6434  00A9  149B               	bsf	27,1	;volatile
  6435                           
  6436                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  6437  00AA  0876               	movf	I2C2_ISR@i2c_address+1,w
  6438  00AB  00FA               	movwf	??_I2C2_ISR+1
  6439  00AC  0875               	movf	I2C2_ISR@i2c_address,w
  6440  00AD  00F9               	movwf	??_I2C2_ISR
  6441  00AE  087A               	movf	??_I2C2_ISR+1,w
  6442  00AF  00F9               	movwf	??_I2C2_ISR
  6443  00B0  01FA               	clrf	??_I2C2_ISR+1
  6444  00B1  3006               	movlw	6
  6445  00B2  0579               	andwf	??_I2C2_ISR,w
  6446  00B3  00FB               	movwf	??_I2C2_ISR+2
  6447  00B4  3000               	movlw	0
  6448  00B5  057A               	andwf	??_I2C2_ISR+1,w
  6449  00B6  00FC               	movwf	??_I2C2_ISR+3
  6450  00B7  30F0               	movlw	240
  6451  00B8  047B               	iorwf	??_I2C2_ISR+2,w
  6452  00B9  00F5               	movwf	I2C2_ISR@i2c_address
  6453  00BA  3000               	movlw	0
  6454  00BB  047C               	iorwf	??_I2C2_ISR+3,w
  6455  00BC  00F6               	movwf	I2C2_ISR@i2c_address+1
  6456                           
  6457                           ;i2c2.c: 357: i2c_address |= 0x0001;
  6458  00BD  1475               	bsf	I2C2_ISR@i2c_address,0
  6459                           
  6460                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  6461  00BE  0020               	movlb	0	; select bank0
  6462  00BF  01CA               	clrf	I2C2_ISR@i2c_10bit_address_restart
  6463  00C0  0ACA               	incf	I2C2_ISR@i2c_10bit_address_restart,f
  6464                           
  6465                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  6466  00C1  3002               	movlw	2
  6467  00C2  00F9               	movwf	??_I2C2_ISR
  6468  00C3  0879               	movf	??_I2C2_ISR,w
  6469  00C4  00CB               	movwf	_i2c2_state
  6470                           
  6471                           ;i2c2.c: 364: }
  6472                           ;i2c2.c: 366: break;
  6473  00C5  0008               	return
  6474  00C6                     i1l1728:	
  6475                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  6476                           
  6477                           
  6478                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  6479  00C6  034A               	decf	I2C2_ISR@i2c_10bit_address_restart,w
  6480  00C7  1903               	btfsc	3,2
  6481  00C8  28DA               	goto	i1l1748
  6482                           
  6483                           ;i2c2.c: 382: {
  6484                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  6485  00C9  0874               	movf	_p_i2c2_trb_current,w
  6486  00CA  0086               	movwf	6
  6487  00CB  0187               	clrf	7
  6488  00CC  3F40               	moviw [0]fsr1
  6489  00CD  00F5               	movwf	I2C2_ISR@i2c_address
  6490  00CE  3F41               	moviw [1]fsr1
  6491  00CF  00F6               	movwf	I2C2_ISR@i2c_address+1
  6492                           
  6493                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  6494  00D0  0874               	movf	_p_i2c2_trb_current,w
  6495  00D1  0086               	movwf	6
  6496  00D2  0187               	clrf	7
  6497  00D3  3F43               	moviw [3]fsr1
  6498  00D4  00F1               	movwf	I2C2_ISR@pi2c_buf_ptr
  6499                           
  6500                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  6501  00D5  0874               	movf	_p_i2c2_trb_current,w
  6502  00D6  0086               	movwf	6
  6503  00D7  0187               	clrf	7
  6504  00D8  3F42               	moviw [2]fsr1
  6505  00D9  00F0               	movwf	I2C2_ISR@i2c_bytes_left
  6506  00DA                     i1l1748:	
  6507                           ;i2c2.c: 407: }
  6508                           ;i2c2.c: 408: }
  6509                           
  6510                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  6511                           
  6512                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  6513                           
  6514                           ;i2c2.c: 400: else
  6515                           ;i2c2.c: 401: {
  6516                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  6517                           
  6518                           ;i2c2.c: 399: }
  6519                           
  6520                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  6521                           
  6522                           ;i2c2.c: 393: {
  6523                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  6524                           
  6525                           ;i2c2.c: 391: {
  6526                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  6527                           
  6528                           ;i2c2.c: 387: }
  6529                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  6530                           
  6531                           
  6532                           ;i2c2.c: 409: else
  6533                           ;i2c2.c: 410: {
  6534                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  6535  00DA  0875               	movf	I2C2_ISR@i2c_address,w
  6536  00DB  0023               	movlb	3	; select bank3
  6537  00DC  0096               	movwf	22	;volatile
  6538                           
  6539                           ;i2c2.c: 413: if(i2c_address & 0x01)
  6540  00DD  1C75               	btfss	I2C2_ISR@i2c_address,0
  6541  00DE  28E5               	goto	i1l1754
  6542                           
  6543                           ;i2c2.c: 414: {
  6544                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  6545  00DF  3005               	movlw	5
  6546  00E0  00F9               	movwf	??_I2C2_ISR
  6547  00E1  0879               	movf	??_I2C2_ISR,w
  6548  00E2  0020               	movlb	0	; select bank0
  6549  00E3  00CB               	movwf	_i2c2_state
  6550                           
  6551                           ;i2c2.c: 417: }
  6552  00E4  0008               	return
  6553  00E5                     i1l1754:	
  6554                           
  6555                           ;i2c2.c: 418: else
  6556                           ;i2c2.c: 419: {
  6557                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  6558  00E5  3003               	movlw	3
  6559  00E6  00F9               	movwf	??_I2C2_ISR
  6560  00E7  0879               	movf	??_I2C2_ISR,w
  6561  00E8  0020               	movlb	0	; select bank0
  6562  00E9  00CB               	movwf	_i2c2_state
  6563                           
  6564                           ;i2c2.c: 422: }
  6565                           ;i2c2.c: 423: }
  6566                           ;i2c2.c: 424: break;
  6567  00EA  0008               	return
  6568  00EB                     i1l331:	
  6569                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  6570                           
  6571                           
  6572                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  6573  00EB  0023               	movlb	3	; select bank3
  6574  00EC  1F1B               	btfss	27,6	;volatile
  6575  00ED  28F9               	goto	i1l1762
  6576                           
  6577                           ;i2c2.c: 430: {
  6578                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  6579  00EE  3001               	movlw	1
  6580  00EF  00F9               	movwf	??_I2C2_ISR
  6581  00F0  0879               	movf	??_I2C2_ISR,w
  6582  00F1  0020               	movlb	0	; select bank0
  6583  00F2  07C7               	addwf	_i2c2_object+4,f
  6584                           
  6585                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  6586  00F3  0023               	movlb	3	; select bank3
  6587  00F4  131B               	bcf	27,6	;volatile
  6588                           
  6589                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  6590  00F5  3005               	movlw	5
  6591  00F6  3184  247B         	fcall	_I2C2_Stop
  6592                           
  6593                           ;i2c2.c: 440: }
  6594  00F8  0008               	return
  6595  00F9                     i1l1762:	
  6596                           
  6597                           ;i2c2.c: 441: else
  6598                           ;i2c2.c: 442: {
  6599                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  6600  00F9  3001               	movlw	1
  6601  00FA  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6602  00FB  0A70               	incf	I2C2_ISR@i2c_bytes_left,w
  6603  00FC  1D03               	btfss	3,2
  6604  00FD  2912               	goto	i1l1770
  6605                           
  6606                           ;i2c2.c: 445: {
  6607                           ;i2c2.c: 449: p_i2c2_trb_current++;
  6608  00FE  3004               	movlw	4
  6609  00FF  00F9               	movwf	??_I2C2_ISR
  6610  0100  0879               	movf	??_I2C2_ISR,w
  6611  0101  07F4               	addwf	_p_i2c2_trb_current,f
  6612                           
  6613                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  6614  0102  3001               	movlw	1
  6615  0103  02F2               	subwf	_i2c2_trb_count,f
  6616  0104  1D03               	btfss	3,2
  6617  0105  290A               	goto	i1l335
  6618                           
  6619                           ;i2c2.c: 453: {
  6620                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6621  0106  3000               	movlw	0
  6622  0107  3184  247B         	fcall	_I2C2_Stop
  6623                           
  6624                           ;i2c2.c: 455: }
  6625  0109  0008               	return
  6626  010A                     i1l335:	
  6627                           
  6628                           ;i2c2.c: 456: else
  6629                           ;i2c2.c: 457: {
  6630                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  6631  010A  0023               	movlb	3	; select bank3
  6632  010B  149B               	bsf	27,1	;volatile
  6633                           
  6634                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  6635  010C  3002               	movlw	2
  6636  010D  00F9               	movwf	??_I2C2_ISR
  6637  010E  0879               	movf	??_I2C2_ISR,w
  6638  010F  0020               	movlb	0	; select bank0
  6639  0110  00CB               	movwf	_i2c2_state
  6640                           
  6641                           ;i2c2.c: 469: }
  6642                           ;i2c2.c: 470: }
  6643  0111  0008               	return
  6644  0112                     i1l1770:	
  6645                           
  6646                           ;i2c2.c: 471: else
  6647                           ;i2c2.c: 472: {
  6648                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  6649  0112  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6650  0113  0086               	movwf	6
  6651  0114  0187               	clrf	7
  6652  0115  0801               	movf	1,w
  6653  0116  0023               	movlb	3	; select bank3
  6654  0117  0096               	movwf	22	;volatile
  6655  0118  3001               	movlw	1
  6656  0119  00F9               	movwf	??_I2C2_ISR
  6657  011A  0879               	movf	??_I2C2_ISR,w
  6658  011B  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6659                           
  6660                           ;i2c2.c: 475: }
  6661                           ;i2c2.c: 476: }
  6662                           ;i2c2.c: 477: break;
  6663  011C  0008               	return
  6664  011D                     i1l338:	
  6665                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  6666                           
  6667                           
  6668                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  6669  011D  0023               	movlb	3	; select bank3
  6670  011E  1F1B               	btfss	27,6	;volatile
  6671  011F  292B               	goto	i1l339
  6672                           
  6673                           ;i2c2.c: 483: {
  6674                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  6675  0120  3001               	movlw	1
  6676  0121  00F9               	movwf	??_I2C2_ISR
  6677  0122  0879               	movf	??_I2C2_ISR,w
  6678  0123  0020               	movlb	0	; select bank0
  6679  0124  07C7               	addwf	_i2c2_object+4,f
  6680                           
  6681                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  6682  0125  3004               	movlw	4
  6683  0126  3184  247B         	fcall	_I2C2_Stop
  6684                           
  6685                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  6686  0128  0023               	movlb	3	; select bank3
  6687  0129  131B               	bcf	27,6	;volatile
  6688                           
  6689                           ;i2c2.c: 493: }
  6690  012A  0008               	return
  6691  012B                     i1l339:	
  6692                           
  6693                           ;i2c2.c: 494: else
  6694                           ;i2c2.c: 495: {
  6695                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  6696  012B  159B               	bsf	27,3	;volatile
  6697                           
  6698                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6699  012C  3008               	movlw	8
  6700  012D  00F9               	movwf	??_I2C2_ISR
  6701  012E  0879               	movf	??_I2C2_ISR,w
  6702  012F  0020               	movlb	0	; select bank0
  6703  0130  00CB               	movwf	_i2c2_state
  6704                           
  6705                           ;i2c2.c: 498: }
  6706                           ;i2c2.c: 499: break;
  6707  0131  0008               	return
  6708  0132                     i1l1782:	
  6709                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  6710                           
  6711                           
  6712                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  6713  0132  3008               	movlw	8
  6714  0133  00F9               	movwf	??_I2C2_ISR
  6715  0134  0879               	movf	??_I2C2_ISR,w
  6716  0135  00CB               	movwf	_i2c2_state
  6717                           
  6718                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  6719  0136  0023               	movlb	3	; select bank3
  6720  0137  159B               	bsf	27,3	;volatile
  6721                           
  6722                           ;i2c2.c: 511: break;
  6723  0138  0008               	return
  6724  0139                     i1l1786:	
  6725                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  6726                           
  6727                           
  6728                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  6729  0139  0023               	movlb	3	; select bank3
  6730  013A  0816               	movf	22,w	;volatile
  6731  013B  00F9               	movwf	??_I2C2_ISR
  6732  013C  0871               	movf	I2C2_ISR@pi2c_buf_ptr,w
  6733  013D  0086               	movwf	6
  6734  013E  0187               	clrf	7
  6735  013F  0879               	movf	??_I2C2_ISR,w
  6736  0140  0081               	movwf	1
  6737  0141  3001               	movlw	1
  6738  0142  00F9               	movwf	??_I2C2_ISR
  6739  0143  0879               	movf	??_I2C2_ISR,w
  6740  0144  07F1               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  6741                           
  6742                           ;i2c2.c: 519: if(--i2c_bytes_left)
  6743  0145  3001               	movlw	1
  6744  0146  02F0               	subwf	I2C2_ISR@i2c_bytes_left,f
  6745  0147  1903               	btfsc	3,2
  6746  0148  2950               	goto	i1l343
  6747                           
  6748                           ;i2c2.c: 520: {
  6749                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  6750  0149  129B               	bcf	27,5	;volatile
  6751                           
  6752                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  6753  014A  3006               	movlw	6
  6754  014B  00F9               	movwf	??_I2C2_ISR
  6755  014C  0879               	movf	??_I2C2_ISR,w
  6756  014D  0020               	movlb	0	; select bank0
  6757  014E  00CB               	movwf	_i2c2_state
  6758                           
  6759                           ;i2c2.c: 530: }
  6760  014F  2953               	goto	i1l1798
  6761  0150                     i1l343:	
  6762                           
  6763                           ;i2c2.c: 531: else
  6764                           ;i2c2.c: 532: {
  6765                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  6766  0150  169B               	bsf	27,5	;volatile
  6767                           
  6768                           ;i2c2.c: 538: I2C2_FunctionComplete();
  6769  0151  3184  2493         	fcall	_I2C2_FunctionComplete
  6770  0153                     i1l1798:	
  6771                           
  6772                           ;i2c2.c: 539: }
  6773                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  6774  0153  0023               	movlb	3	; select bank3
  6775  0154  161B               	bsf	27,4	;volatile
  6776                           
  6777                           ;i2c2.c: 543: break;
  6778  0155  0008               	return
  6779  0156                     i1l1800:	
  6780                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  6781                           
  6782                           
  6783                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  6784                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  6785  0156  3000               	movlw	0
  6786  0157  3184  247B         	fcall	_I2C2_Stop
  6787                           
  6788                           ;i2c2.c: 550: break;
  6789  0159  0008               	return
  6790  015A                     i1l1802:	
  6791                           ;i2c2.c: 552: default:
  6792                           
  6793                           
  6794                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  6795  015A  3001               	movlw	1
  6796  015B  00F9               	movwf	??_I2C2_ISR
  6797  015C  0879               	movf	??_I2C2_ISR,w
  6798  015D  0020               	movlb	0	; select bank0
  6799  015E  07C7               	addwf	_i2c2_object+4,f
  6800                           
  6801                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  6802  015F  3006               	movlw	6
  6803  0160  3184  247B         	fcall	_I2C2_Stop
  6804                           
  6805                           ;i2c2.c: 560: }
  6806                           
  6807                           ;i2c2.c: 558: break;
  6808  0162  0008               	return
  6809  0163                     i1l1808:	
  6810  0163  0020               	movlb	0	; select bank0
  6811  0164  084B               	movf	_i2c2_state,w
  6812                           
  6813                           ; Switch size 1, requested type "space"
  6814                           ; Number of cases is 11, Range of values is 0 to 11
  6815                           ; switch strategies available:
  6816                           ; Name         Instructions Cycles
  6817                           ; direct_byte           30     6 (fixed)
  6818                           ; simple_byte           34    18 (average)
  6819                           ; jumptable            260     6 (fixed)
  6820                           ;	Chosen strategy is direct_byte
  6821  0165  0084               	movwf	4
  6822  0166  300C               	movlw	12
  6823  0167  0204               	subwf	4,w
  6824  0168  1803               	skipnc
  6825  0169  295A               	goto	i1l1802
  6826  016A  3184               	movlp	high i1S2100
  6827  016B  3504               	lslf	4,w
  6828  016C  3E63               	addlw	low i1S2100
  6829  016D  0082               	movwf	2
  6830  016E  0008               	return
  6831  016F                     __end_of_I2C2_ISR:	
  6832                           
  6833                           	psect	swtext1
  6834  0463                     __pswtext1:	
  6835  0463                     i1S2100:	
  6836  0463  3180  2847         	ljmp	i1l309
  6837  0465  3180  2872         	ljmp	i1l314
  6838  0467  3180  28C6         	ljmp	i1l1728
  6839  0469  3180  28EB         	ljmp	i1l331
  6840  046B  3181  2956         	ljmp	i1l1800
  6841  046D  3181  291D         	ljmp	i1l338
  6842  046F  3181  2932         	ljmp	i1l1782
  6843  0471  3181  2956         	ljmp	i1l1800
  6844  0473  3181  2939         	ljmp	i1l1786
  6845  0475  3181  295A         	ljmp	i1l1802
  6846  0477  3180  287A         	ljmp	i1l315
  6847  0479  3180  289D         	ljmp	i1l320
  6848                           
  6849                           	psect	text21
  6850  047B                     __ptext21:	
  6851 ;; *************** function _I2C2_Stop *****************
  6852 ;; Defined at:
  6853 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  completion_c    1    wreg     enum E13560
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  completion_c    1    1[COMMON] enum E13560
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;Total ram usage:        2 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_I2C2_ISR
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           
  6881                           ;psect for function _I2C2_Stop
  6882  047B                     _I2C2_Stop:	
  6883                           
  6884                           ;incstack = 0
  6885                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6886                           ;I2C2_Stop@completion_code stored from wreg
  6887  047B  00F8               	movwf	I2C2_Stop@completion_code
  6888                           
  6889                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  6890  047C  0023               	movlb	3	; select bank3
  6891  047D  151B               	bsf	27,2	;volatile
  6892                           
  6893                           ;i2c2.c: 587: if (p_i2c2_current->pTrFlag != (0))
  6894  047E  0873               	movf	_p_i2c2_current,w
  6895  047F  3E02               	addlw	2
  6896  0480  0086               	movwf	6
  6897  0481  0187               	clrf	7
  6898  0482  0801               	movf	1,w
  6899  0483  1903               	btfsc	3,2
  6900  0484  2C90               	goto	i1l1544
  6901                           
  6902                           ;i2c2.c: 588: {
  6903                           ;i2c2.c: 590: *(p_i2c2_current->pTrFlag) = completion_code;
  6904  0485  0878               	movf	I2C2_Stop@completion_code,w
  6905  0486  00F7               	movwf	??_I2C2_Stop
  6906  0487  0873               	movf	_p_i2c2_current,w
  6907  0488  3E02               	addlw	2
  6908  0489  0086               	movwf	6
  6909  048A  0187               	clrf	7
  6910  048B  0801               	movf	1,w
  6911  048C  0086               	movwf	6
  6912  048D  0187               	clrf	7
  6913  048E  0877               	movf	??_I2C2_Stop,w
  6914  048F  0081               	movwf	1
  6915  0490                     i1l1544:	
  6916                           
  6917                           ;i2c2.c: 591: }
  6918                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  6919  0490  0020               	movlb	0	; select bank0
  6920  0491  01CB               	clrf	_i2c2_state
  6921  0492  0008               	return
  6922  0493                     __end_of_I2C2_Stop:	
  6923                           
  6924                           	psect	text22
  6925  0493                     __ptext22:	
  6926 ;; *************** function _I2C2_FunctionComplete *****************
  6927 ;; Defined at:
  6928 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;Total ram usage:        1 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_I2C2_ISR
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _I2C2_FunctionComplete
  6957  0493                     _I2C2_FunctionComplete:	
  6958                           
  6959                           ;i2c2.c: 567: p_i2c2_trb_current++;
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  6963  0493  3004               	movlw	4
  6964  0494  00F7               	movwf	??_I2C2_FunctionComplete
  6965  0495  0877               	movf	??_I2C2_FunctionComplete,w
  6966  0496  07F4               	addwf	_p_i2c2_trb_current,f
  6967                           
  6968                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  6969  0497  3001               	movlw	1
  6970  0498  02F2               	subwf	_i2c2_trb_count,f
  6971  0499  1D03               	btfss	3,2
  6972  049A  2CA1               	goto	i1l350
  6973                           
  6974                           ;i2c2.c: 571: {
  6975                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  6976  049B  3004               	movlw	4
  6977  049C  00F7               	movwf	??_I2C2_FunctionComplete
  6978  049D  0877               	movf	??_I2C2_FunctionComplete,w
  6979  049E  0020               	movlb	0	; select bank0
  6980  049F  00CB               	movwf	_i2c2_state
  6981                           
  6982                           ;i2c2.c: 573: }
  6983  04A0  0008               	return
  6984  04A1                     i1l350:	
  6985                           
  6986                           ;i2c2.c: 574: else
  6987                           ;i2c2.c: 575: {
  6988                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  6989  04A1  0020               	movlb	0	; select bank0
  6990  04A2  01CB               	clrf	_i2c2_state
  6991  04A3  0ACB               	incf	_i2c2_state,f
  6992  04A4  0008               	return
  6993  04A5                     __end_of_I2C2_FunctionComplete:	
  6994                           
  6995                           	psect	text23
  6996  04FF                     __ptext23:	
  6997 ;; *************** function _I2C2_BusCollisionISR *****************
  6998 ;; Defined at:
  6999 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		None
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_INTERRUPT_InterruptManager
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function _I2C2_BusCollisionISR
  7028  04FF                     _I2C2_BusCollisionISR:	
  7029                           
  7030                           ;incstack = 0
  7031                           ; Regs used in _I2C2_BusCollisionISR: []
  7032  04FF  0008               	return
  7033  0500                     __end_of_I2C2_BusCollisionISR:	
  7034  007E                     btemp	set	126	;btemp
  7035  007E                     int$flags	set	126
  7036  007E                     wtemp	set	126
  7037  007E                     wtemp0	set	126
  7038  0080                     wtemp1	set	128
  7039  0082                     wtemp2	set	130
  7040  0084                     wtemp3	set	132
  7041  0086                     wtemp4	set	134
  7042  0088                     wtemp5	set	136
  7043  007F                     wtemp6	set	127
  7044  007E                     ttemp	set	126
  7045  007E                     ttemp0	set	126
  7046  0081                     ttemp1	set	129
  7047  0084                     ttemp2	set	132
  7048  0087                     ttemp3	set	135
  7049  007F                     ttemp4	set	127
  7050  007E                     ltemp	set	126
  7051  007E                     ltemp0	set	126
  7052  0082                     ltemp1	set	130
  7053  0086                     ltemp2	set	134
  7054  0080                     ltemp3	set	128


Data Sizes:
    Strings     31
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     35      63
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    EMC1001_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    F13672.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    F13667.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C2_ISR@i2c_address(COMMON[2]), NULL(NULL[0]), main@templo(BANK0[1]), main@temp(BANK0[1]), 
		 -> EMC1001_Read@reg(BANK0[1]), 

    S475$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), EMC1001_Read@reg(BANK0[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), EMC1001_Read@trb(BANK0[8]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    S634$pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    p_i2c2_current.pTrFlag	PTR enum E13560 size(1) Largest target is 1
		 -> EMC1001_Read@status(BANK0[1]), 

    S634$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C2_MasterRead@trBlock(BANK0[4]), I2C2_MasterWrite@trBlock(BANK0[4]), EMC1001_Read@trb(BANK0[8]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S645$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    S645$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[3]), 

    EMC1001_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@templo(BANK0[1]), main@temp(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_I2C2_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _EMC1001_Read->_I2C2_MasterReadTRBBuild
    _EMC1001_Read->_I2C2_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3964
                                             30 BANK0      5     5      0
                       _EMC1001_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1356
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      65
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                  _EUSART_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (3) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_Read                                         5     4      1    1941
                                              7 BANK0      5     4      1
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWriteTRBBuild                             7     3      4     576
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterTRBInsert                                 4     2      2     516
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterReadTRBBuild                              7     3      4     598
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_Read
     _I2C2_MasterReadTRBBuild
     _I2C2_MasterTRBInsert
     _I2C2_MasterWriteTRBBuild
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_Start
   _TMR6_HasOverflowOccured
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 22 18:25:23 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
              ?_I2C2_MasterTRBInsert 0020                                   l31 04DF  
    __end_of_TMR6_HasOverflowOccured 04D1                  ___wmul@multiplicand 0022  
     I2C2_MasterReadTRBBuild@address 0022                                  l224 022F  
                                l426 0226                                  l508 0438  
                                _GIE 005F                         __CFG_CPD$OFF 0000  
                                _PR6 0299                    EMC1001_Read@pData 0027  
                                u905 039B                                  u835 0368  
                                u925 03AA                                  u855 0372  
                                u935 03B1                                  u865 037C  
                                u970 035A                                  u875 0384  
              __size_of_EMC1001_Read 003C                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_LVP$OFF 0000  
                       __CFG_ZCD$OFF 0000                     __end_of_I2C2_ISR 016F  
                               l2000 01A9                                 l2010 01BF  
                               l2022 01E4                                 l2032 01F1  
                               l2016 01C5                                 l2026 01EC  
                               l2034 0174                                 l2038 0432  
                               l2062 0240                                 l1530 030E  
                               l1532 0313                                 l1526 0307  
                               l2078 0274                                 l1536 031A  
                               l1560 0365                                 l1618 0350  
                               l1562 0371                                 l1572 038C  
                               l1590 03B0                                 l1568 0383  
                               l1584 0398                                 l1586 03A4  
                               l1594 03B9                                 l1982 04CE  
                               l1994 0190                                 STR_1 03E5  
                               STR_2 03C8                                 u1420 02D8  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                                 u1615 0265  
                               u1545 0439                                 u1555 043E  
                               u1580 023E                                 u1485 01DA  
                               _T6PR 0299                                 _TMR6 0298  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0227                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
        I2C2_MasterReadTRBBuild@ptrb 0026                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0020  
                               ttemp 007E                                 wtemp 007E  
                 EMC1001_Read@status 002B                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         _EMC1001_Read 0320  
                         _i2c2_state 004B                        ?_EUSART_Write 0077  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 04F0  
            _I2C2_MasterReadTRBBuild 03E7                                ?_main 0077  
                      __CFG_WDTE$OFF 0000                    __end_of_I2C2_Stop 0493  
                              _T6CON 029A                      __end_of___lwdiv 0391  
                              _T6HLT 029B       __size_of_I2C2_FunctionComplete 0012  
                              i1l320 009D                                i1l321 00A9  
                              i1l314 0072                                i1l331 00EB  
                              i1l315 007A                                i1l309 0047  
                              i1l245 0013                                i1l350 04A1  
                              i1l343 0150                                i1l335 010A  
                              i1l249 001B                      __end_of___lwmod 03BE  
                              i1l338 011D                                i1l339 012B  
                              _T6TMR 0298                                _T6RST 029D  
      __end_of_I2C2_FunctionComplete 04A5                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      __end_of_dpowers 03C8  
                              _putch 04F6                          ?_TMR6_Start 0077  
       I2C2_MasterReadTRBBuild@pdata 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                  ??_I2C2_Initialize 0020                      __initialization 0022  
                       __end_of_main 0294               ??_I2C2_MasterTRBInsert 0022  
                     ??_EUSART_Write 0020          ?_INTERRUPT_InterruptManager 0077  
   __end_of_I2C2_MasterWriteTRBBuild 042F                               ??_main 003E  
                        _i2c2_object 0043                      _TMR6_Initialize 04B4  
                             i1S2100 0463                               _ANSELA 0F38  
                             ?_putch 0077                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC1REG 0119  
                             _RC0PPS 0F20                               _RC1STA 011D  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
       __end_of_I2C2_BusCollisionISR 0500                               _ODCONA 0F3A  
                             _ODCONB 0F45                               _RC6PPS 0F26  
                             _ODCONC 0F50                               i1l1544 0490  
                             i1l1800 0156                               i1l1802 015A  
                             i1l1714 0097                               i1l1708 0086  
                             i1l1728 00C6                               i1l1808 0163  
                             i1l1770 0112                               i1l1762 00F9  
                             i1l1754 00E5                               i1l1748 00DA  
                             i1l1782 0132                               i1l1696 0065  
                             i1l1786 0139                               i1l1798 0153  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
   __size_of_TMR6_HasOverflowOccured 000E                       __CFG_PWRTE$OFF 0000  
                             ___wmul 042F                       _p_i2c2_current 0073  
                     __CFG_STVREN$ON 0000            ??_I2C2_MasterReadTRBBuild 0024  
                          ??___lwdiv 0024                            ??___lwmod 002C  
                          ?_I2C2_ISR 0077                  __size_of_TMR6_Start 0003  
           I2C2_Stop@completion_code 0078                               _printf 016F  
      I2C2_MasterReadTRBBuild@length 0021                    _SYSTEM_Initialize 04A5  
            __end_of__initialization 0030                   ?_SYSTEM_Initialize 0077  
                    EMC1001_Read@reg 002A                      EMC1001_Read@trb 004C  
                     __pcstackCOMMON 0077                  ??_SYSTEM_Initialize 0021  
                     _i2c2_trb_count 0072                        __end_of_putch 04FC  
                         ??_I2C2_ISR 0079              __end_of_TMR6_Initialize 04C3  
           _I2C2_MasterWriteTRBBuild 040F         I2C2_MasterWriteTRBBuild@ptrb 0026  
          __end_of_SYSTEM_Initialize 04B4                              ??_putch 0021  
                         __pbssBANK0 0043                 __end_of_EUSART_Write 04E7  
                         __pmaintext 0227                              ?___wmul 0020  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                     _SSP2DATPPSbits 0EC9                 _I2C2_BusCollisionISR 04FF  
                            ?_printf 002E                              _SP1BRGH 011C  
                            _SP1BRGL 011B    I2C2_ISR@i2c_10bit_address_restart 004A  
                            _OSCCON1 088D                              _OSCCON3 088F  
                          _I2C2_Stop 047B                       _SSP2CLKPPSbits 0EC8  
                            _OSCTUNE 0892                              _SSP2ADD 0197  
                            _PPSLOCK 0E8F                              _SSP2BUF 0196  
                       ??_TMR6_Start 0020                      _I2C2_Initialize 044B  
            _TMR6_HasOverflowOccured 04C3               I2C2_MasterRead@trBlock 0054  
                       _T6AINPPSbits 0E9E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              ___lwdiv 035C  
                            ___lwmod 0391                ?_I2C2_BusCollisionISR 0077  
                   ?_TMR6_Initialize 0077                   __end_of_TMR6_Start 04FF  
          I2C2_MasterTRBInsert@count 0023                              __ptext1 016F  
                            __ptext2 04F6                              __ptext3 04DD  
                            __ptext4 0391                              __ptext5 035C  
                            __ptext6 042F                              __ptext7 04C3  
                            __ptext8 04A5                              __ptext9 04B4  
          I2C2_MasterTRBInsert@pflag 0021                      __size_of_printf 00B8  
                            _dpowers 03BE                _OSCILLATOR_Initialize 04E7  
           ??_PIN_MANAGER_Initialize 0020                           ?_I2C2_Stop 0077  
              _I2C2_FunctionComplete 0493                            _T6CONbits 029A  
                          _T6HLTbits 029B           __size_of_SYSTEM_Initialize 000F  
                            clrloop0 04F1                 end_of_initialization 0030  
                          _T6RSTbits 029D                    _EUSART_Initialize 04D1  
                 ?_EUSART_Initialize 0077                   _p_i2c2_trb_current 0074  
                            printf@c 003D                              printf@f 002E  
             I2C2_ISR@i2c_bytes_left 0070                         __pstringtext 03BE  
      __size_of_I2C2_MasterTRBInsert 0046                __CFG_WDTCPS$WDTCPS_31 0000  
                ??_EUSART_Initialize 0020                    __size_of_I2C2_ISR 013B  
            __end_of_I2C2_Initialize 0463        TMR6_HasOverflowOccured@status 0020  
              __size_of_EUSART_Write 000A            ??_TMR6_HasOverflowOccured 0020  
                   __CFG_FEXTOSC$OFF 0000            __end_of_EUSART_Initialize 04DD  
                         main@templo 0042                           main@toggle 0040  
             ??_I2C2_BusCollisionISR 0077           ??_I2C2_MasterWriteTRBBuild 0024  
                     __end_of___wmul 044B                         _EUSART_Write 04DD  
             ?_OSCILLATOR_Initialize 0077                       __end_of_printf 0227  
             ?_I2C2_FunctionComplete 0077                  start_initialization 0022  
                        ??_I2C2_Stop 0077      __size_of_PIN_MANAGER_Initialize 0046  
                        putch@txData 0021      I2C2_MasterWriteTRBBuild@address 0022  
           ?_I2C2_MasterReadTRBBuild 0020                     __CFG_LPBOREN$OFF 0000  
                      ?_EMC1001_Read 0027                             ??___wmul 0024  
      I2C2_MasterWriteTRBBuild@pdata 0020                 I2C2_ISR@pi2c_buf_ptr 0071  
                           ??_printf 0034                          __pbssCOMMON 0070  
                   ?_I2C2_Initialize 0077                            ___latbits 0002  
                      __pcstackBANK0 0020                        _i2c2_tr_queue 005C  
         __size_of_EUSART_Initialize 000C                _TMR6_InterruptHandler 0048  
                   ___lwdiv@dividend 0022               _PIN_MANAGER_Initialize 0294  
                     ??_EMC1001_Read 0028                             ?___lwdiv 0020  
                           ?___lwmod 0028                             _I2C2_ISR 0034  
       ??_INTERRUPT_InterruptManager 007D                            __pswtext1 0463  
                           _BAUD1CON 011F                     ___lwdiv@quotient 0025  
               __CFG_RSTOSC$HFINTPLL 0000                       __size_of_putch 0006  
                           _T6CLKCON 029C      __end_of_I2C2_MasterReadTRBBuild 040F  
                     ___wmul@product 0024                             _LATAbits 0016  
                          clear_ram0 04F0                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR3bits 070F  
                           _PIR4bits 0710                             _SSP2CON1 019A  
                           _SSP2CON3 019C                             _SSP2STAT 0199  
      I2C2_MasterTRBInsert@ptrb_list 0020                    ___wmul@multiplier 0020  
                         printf@flag 0039                           printf@prec 003A  
           __size_of_TMR6_Initialize 000F         __end_of_I2C2_MasterTRBInsert 0320  
     I2C2_MasterWriteTRBBuild@length 0021              ??_OSCILLATOR_Initialize 0020  
                   __size_of___lwdiv 0035                     __size_of___lwmod 002D  
            ??_I2C2_FunctionComplete 0077                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0027                             __ptext10 04FC  
                           __ptext11 0294                             __ptext20 0034  
                           __ptext12 04E7                             __ptext21 047B  
                           __ptext13 044B                             __ptext22 0493  
                           __ptext14 04D1                             __ptext23 04FF  
                           __ptext15 0320                             __ptext16 040F  
                           __ptext17 02DA                             __ptext18 03E7  
               __end_of_EMC1001_Read 035C                         _SSP2CON1bits 019A  
                       _SSP2CON2bits 019B                        __size_of_main 006D  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0020  
         _INTERRUPT_InterruptManager 0004                            printf@val 003B  
            I2C2_MasterWrite@trBlock 0058                             main@temp 0041  
      __size_of_I2C2_BusCollisionISR 0001          PIN_MANAGER_Initialize@state 0020  
   __size_of_I2C2_MasterReadTRBBuild 0028             ?_TMR6_HasOverflowOccured 0077  
                         _INTCONbits 000B    __size_of_I2C2_MasterWriteTRBBuild 0020  
          ?_I2C2_MasterWriteTRBBuild 0020                             intlevel1 0000  
                   ___lwmod@dividend 002A                  I2C2_ISR@i2c_address 0075  
            ?_PIN_MANAGER_Initialize 0077                    ??_TMR6_Initialize 0020  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                           printf@ap 0038                 _I2C2_MasterTRBInsert 02DA  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                         _TMR6_Start 04FC                   EUSART_Write@txData 0020  
     __end_of_PIN_MANAGER_Initialize 02DA             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018  
